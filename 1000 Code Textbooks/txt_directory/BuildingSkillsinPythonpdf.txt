Building Skills in Python
Release 2.6.5
Steven F. Lott
April 20, 2010

CONTENTS
I F ront Matter 3
1 Preface 5
1.1 WhyReadThisBook? . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 5
1.2 Audience . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 6
1.3 OrganizationofThisBook . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 7
1.4 Limitations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 8
1.5 ProgrammingStyle . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 9
1.6 ConventionsUsedinThisBook . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 9
1.7 Acknowledgements . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 10
II Language Basics 11
2 BackgroundandHistory 15
2.1 History . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 15
2.2 FeaturesofPython . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 15
2.3 Comparisons . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 16
2.4 SomeJargon . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 19
3 PythonInstallation 21
3.1 WindowsInstallation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 21
3.2 MacintoshInstallation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 24
3.3 GNU/LinuxandUNIXOverview . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 25
3.4 “BuildfromScratch”Installation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 28
4 GettingStarted 31
4.1 Command-LineInteraction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 31
4.2 TheIDLEDevelopmentEnvironment . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 34
4.3 ScriptMode . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 36
4.4 GettingHelp . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 40
4.5 SyntaxFormalities . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 41
4.6 Exercises . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 42
4.7 OtherTools . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 44
4.8 StyleNotes: WiseChoiceofFileNames . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 45
5 SimpleNumericExpressionsandOutput 47
5.1 SeeingOutputwiththe print()Function(orprintStatement). . . . . . . . . . . . . . . . 47
5.2 NumericTypesandOperators . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 50
5.3 NumericConversion(or“Factory”)Functions . . . . . . . . . . . . . . . . . . . . . . . . . . 53
i
5.4 Built-InMathFunctions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 54
5.5 ExpressionExercises . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 56
5.6 ExpressionStyleNotes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 60
6 AdvancedExpressions 61
6.1 UsingModules . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 61
6.2 The mathModule. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 61
6.3 The randomModule. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 63
6.4 AdvancedExpressionExercises . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 64
6.5 BitManipulationOperators . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 66
6.6 DivisionOperators . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 68
7 Variables,AssignmentandInput 71
7.1 Variables . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 71
7.2 TheAssignmentStatement. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 73
7.3 InputFunctions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 75
7.4 MultipleAssignmentStatement . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 78
7.5 ThedelStatement. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 78
7.6 InteractiveModeRevisited . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 79
7.7 Variables,AssignmentandInputFunctionExercises . . . . . . . . . . . . . . . . . . . . . . . 80
7.8 VariablesandAssignmentStyleNotes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 81
8 Truth,ComparisonandConditionalProcessing 83
8.1 TruthandLogic . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 83
8.2 Comparisons . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 85
8.3 ConditionalProcessing: the ifStatement. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 88
8.4 ThepassStatement. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 90
8.5 TheassertStatement. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 91
8.6 Theif-elseOperator. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 92
8.7 ConditionExercises . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 93
8.8 ConditionStyleNotes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 94
9 LoopsandIterativeProcessing 95
9.1 IterativeProcessing: ForAllandThereExists . . . . . . . . . . . . . . . . . . . . . . . . . . 95
9.2 IterativeProcessing: The forStatement. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 96
9.3 IterativeProcessing: The whileStatement. . . . . . . . . . . . . . . . . . . . . . . . . . . . 97
9.4 MoreIterationControl: breakandcontinue. . . . . . . . . . . . . . . . . . . . . . . . . . 98
9.5 IterationExercises . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 100
9.6 ConditionandLoopsStyleNotes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 103
9.7 ADigression . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 104
10Functions 107
10.1 Semantics . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 107
10.2 FunctionDeﬁnition: The defandreturnStatements. . . . . . . . . . . . . . . . . . . . . . 109
10.3 FunctionUse . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 110
10.4 FunctionVarieties . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 111
10.5 SomeExamples . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 112
10.6 HackingMode . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 113
10.7 MoreFunctionDeﬁnitionFeatures . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 115
10.8 FunctionExercises . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 118
10.9 ObjectMethodFunctions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 121
10.10FunctionsStyleNotes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 122
11AdditionalNotesOnFunctions 125
11.1 FunctionsandNamespaces . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 125
ii
11.2 TheglobalStatement. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 127
11.3 CallByValueandCallByReference . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 127
11.4 FunctionObjects . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 129
III Data Structures 131
12Sequences: Strings,TuplesandLists 135
12.1 SequenceSemantics . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 135
12.2 OverviewofSequences . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 136
12.3 Exercises . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 139
12.4 StyleNotes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 139
13Strings 141
13.1 StringSemantics . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 141
13.2 StringLiteralValues . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 141
13.3 StringOperations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 143
13.4 StringComparisonOperations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 146
13.5 StringStatements . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 146
13.6 StringBuilt-inFunctions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 147
13.7 StringMethods . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 148
13.8 StringModules . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 151
13.9 StringExercises . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 152
13.10DigressiononImmutabilityofStrings . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 153
14Tuples 155
14.1 TupleSemantics . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 155
14.2 TupleLiteralValues . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 155
14.3 TupleOperations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 156
14.4 TupleComparisonOperations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 157
14.5 TupleStatements . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 157
14.6 TupleBuilt-inFunctions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 158
14.7 TupleExercises . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 160
14.8 DigressiononTheSigmaOperator . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 161
15Lists 163
15.1 ListSemantics . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 163
15.2 ListLiteralValues . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 163
15.3 ListOperations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 164
15.4 ListComparisonOperations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 164
15.5 ListStatements . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 165
15.6 ListBuilt-inFunctions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 166
15.7 ListMethods . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 167
15.8 UsingListsasFunctionParameterDefaults . . . . . . . . . . . . . . . . . . . . . . . . . . . . 169
15.9 ListExercises . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 170
16MappingsandDictionaries 175
16.1 DictionarySemantics . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 175
16.2 DictionaryLiteralValues . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 176
16.3 DictionaryOperations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 176
16.4 DictionaryComparisonOperations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 178
16.5 DictionaryStatements . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 178
16.6 DictionaryBuilt-inFunctions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 179
16.7 DictionaryMethods . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 180
16.8 UsingDictionariesasFunctionParameterDefaults . . . . . . . . . . . . . . . . . . . . . . . . 181
iii
16.9 DictionaryExercises . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 182
16.10AdvancedParameterHandlingForFunctions . . . . . . . . . . . . . . . . . . . . . . . . . . . 184
17Sets 187
17.1 SetSemantics . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 187
17.2 SetLiteralValues . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 187
17.3 SetOperations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 188
17.4 SetComparisonOperators . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 190
17.5 SetStatements . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 191
17.6 SetBuilt-inFunctions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 191
17.7 SetMethods . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 192
17.8 UsingSetsasFunctionParameterDefaults . . . . . . . . . . . . . . . . . . . . . . . . . . . . 194
17.9 SetExercises . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 195
18Exceptions 199
18.1 ExceptionSemantics . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 199
18.2 BasicExceptionHandling . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 200
18.3 RaisingExceptions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 203
18.4 AnExceptionalExample . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 204
18.5 CompleteExceptionHandlingandThe ﬁnallyClause. . . . . . . . . . . . . . . . . . . . . . 206
18.6 ExceptionFunctions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 206
18.7 ExceptionAttributes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 207
18.8 Built-inExceptions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 208
18.9 ExceptionExercises . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 210
18.10StyleNotes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 211
18.11ADigression . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 212
19IteratorsandGenerators 213
19.1 IteratorSemantics . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 213
19.2 GeneratorFunctionSemantics . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 214
19.3 DeﬁningaGeneratorFunction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 215
19.4 GeneratorFunctions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 216
19.5 GeneratorStatements . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 217
19.6 IteratorsEverywhere . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 217
19.7 GeneratorFunctionExample . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 218
19.8 GeneratorExercises . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 219
20Files 221
20.1 FileSemantics . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 221
20.2 FileOrganizationandStructure . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 222
20.3 AdditionalBackground . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 223
20.4 Built-inFunctions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 224
20.5 FileStatements . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 226
20.6 FileMethods . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 226
20.7 SeveralExamples . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 228
20.8 FileExercises . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 232
21FunctionalProgrammingwithCollections 235
21.1 ListsofTuples . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 235
21.2 ListComprehensions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 236
21.3 SequenceProcessingFunctions: map(),filter()andreduce(). . . . . . . . . . . . . . . . 239
21.4 AdvancedListSorting . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 242
21.5 TheLambda . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 244
21.6 Multi-DimensionalArraysorMatrices . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 246
21.7 Exercises . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 248
iv
22AdvancedMappingTechniques 251
22.1 DefaultDictionaries . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 251
22.2 InvertingaDictionary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 252
22.3 Exercises . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 253
IV Data + Processing = Objects 255
23Classes 259
23.1 Semantics . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 259
23.2 ClassDeﬁnition: the classStatement. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 262
23.3 CreatingandUsingObjects . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 263
23.4 SpecialMethodNames . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 264
23.5 SomeExamples . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 266
23.6 ObjectCollaboration . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 269
23.7 ClassDeﬁnitionExercises . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 271
24AdvancedClassDeﬁnition 287
24.1 Inheritance . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 287
24.2 Polymorphism . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 292
24.3 Built-inFunctions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 294
24.4 Collaboratingwith max(),min()andsort(). . . . . . . . . . . . . . . . . . . . . . . . . . . 296
24.5 InitializerTechniques . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 296
24.6 ClassVariables . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 297
24.7 StaticMethodsandClassMethod . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 299
24.8 DesignApproaches . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 299
24.9 AdvancedClassDeﬁnitionExercises . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 301
24.10StyleNotes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 303
25SomeDesignPatterns 307
25.1 Factory . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 307
25.2 State. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 310
25.3 Strategy . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 313
25.4 DesignPatternExercises . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 315
26CreatingorExtendingDataTypes 319
26.1 SemanticsofSpecialMethods . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 320
26.2 BasicSpecialMethods . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 321
26.3 SpecialAttributeNames . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 322
26.4 NumericTypeSpecialMethods . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 322
26.5 CollectionSpecialMethodNames . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 327
26.6 CollectionSpecialMethodNamesforIteratorsandIterable . . . . . . . . . . . . . . . . . . . 329
26.7 CollectionSpecialMethodNamesforSequences . . . . . . . . . . . . . . . . . . . . . . . . . 330
26.8 CollectionSpecialMethodNamesforSets . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 331
26.9 CollectionSpecialMethodNamesforMappings . . . . . . . . . . . . . . . . . . . . . . . . . 332
26.10MappingExample . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 333
26.11IteratorExamples . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 334
26.12ExtendingBuilt-InClasses . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 336
26.13SpecialMethodNameExercises . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 336
27Attributes,PropertiesandDescriptors 343
27.1 SemanticsofAttributes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 343
27.2 Properties . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 344
27.3 Descriptors . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 346
27.4 AttributeHandlingSpecialMethodNames . . . . . . . . . . . . . . . . . . . . . . . . . . . . 348
v
27.5 AttributeAccessExercises . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 349
28Decorators 351
28.1 SemanticsofDecorators . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 351
28.2 Built-inDecorators . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 352
28.3 DeﬁningDecorators . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 354
28.4 DeﬁningComplexDecorators . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 355
28.5 DecoratorExercises . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 356
29ManagingContexts: thewithStatement 357
29.1 SemanticsofaContext . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 357
29.2 UsingaContext . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 358
29.3 DeﬁningaContextManagerFunction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 358
29.4 DeﬁningaContextManagerClass . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 360
29.5 ContextManagerExercises . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 361
V Components, Modules and Packages 363
30Modules 367
30.1 ModuleSemantics . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 367
30.2 ModuleDeﬁnition . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 368
30.3 ModuleUse: The importStatement. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 370
30.4 FindingModules: ThePath . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 372
30.5 VariationsonAn importTheme. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 373
30.6 TheexecStatement. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 375
30.7 ModuleExercises . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 375
30.8 StyleNotes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 377
31Packages 379
31.1 PackageSemantics . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 379
31.2 PackageDeﬁnition . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 380
31.3 PackageUse . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 381
31.4 PackageExercises . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 381
31.5 StyleNotes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 381
32ThePythonLibrary 383
32.1 OverviewofthePythonLibrary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 383
32.2 MostUsefulLibrarySections . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 385
32.3 LibraryExercises . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 393
33ComplexStrings: the reModule 395
33.1 Semantics . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 395
33.2 CreatingaRegularExpression . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 396
33.3 UsingaRegularExpression . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 397
33.4 RegularExpressionExercises . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 399
34DatesandTimes: the timeanddatetimeModules 401
34.1 Semantics: WhatisTime? . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 401
34.2 SomeClassDeﬁnitions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 403
34.3 CreatingaDate-Time . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 404
34.4 Date-TimeCalculationsandManipulations . . . . . . . . . . . . . . . . . . . . . . . . . . . . 405
34.5 PresentingaDate-Time . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 407
34.6 FormattingSymbols . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 408
34.7 TimeExercises . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 409
vi
34.8 Additional timeModuleFeatures . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 410
35FileHandlingModules 411
35.1 The os.pathModule. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 413
35.2 The osModule. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 414
35.3 The fileinputModule. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 416
35.4 The globandfnmatchModules. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 417
35.5 The tempfileModule. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 418
35.6 The shutilModule. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 419
35.7 TheFileArchiveModules: tarfileandzipfile. . . . . . . . . . . . . . . . . . . . . . . . 419
35.8 The sysModule. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 423
35.9 AdditionalFile-ProcessingModules . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 424
35.10FileModuleExercises . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 425
36FileFormats: CSV,Tab,XML,LogsandOthers 427
36.1 Overview . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 427
36.2 Comma-SeparatedValues: The csvModule. . . . . . . . . . . . . . . . . . . . . . . . . . . . 428
36.3 TabFiles: NothingSpecial . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 431
36.4 PropertyFilesandConﬁguration(or .INI)Files: The ConfigParser Module. . . . . . . . 432
36.5 FixedFormatFiles,ACOBOLLegacy: The codecsModule. . . . . . . . . . . . . . . . . . 434
36.6 XMLFiles: The xml.etreeandxml.saxModules. . . . . . . . . . . . . . . . . . . . . . . . 436
36.7 LogFiles: The loggingModule. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 441
36.8 FileFormatExercises . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 446
36.9 TheDOMClassHierarchy . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 446
37Programs: StandingAlone 451
37.1 KindsofPrograms . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 451
37.2 Command-LinePrograms: ServersandBatchProcessing . . . . . . . . . . . . . . . . . . . . 453
37.3 The optparseModule. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 455
37.4 Command-LineExamples . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 458
37.5 OtherCommand-LineFeatures . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 459
37.6 Command-LineExercises . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 461
37.7 The getoptModule. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 461
38Architecture: Clients,Servers,theInternetandtheWorldWideWeb 465
38.1 AboutTCP/IP . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 465
38.2 TheWorldWideWebandtheHTTPprotocol . . . . . . . . . . . . . . . . . . . . . . . . . . 466
38.3 WritingWebClients: The urllib2Module. . . . . . . . . . . . . . . . . . . . . . . . . . . . 467
38.4 WritingWebApplications . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 469
38.5 SessionsandState . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 477
38.6 HandlingFormInputs . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 478
38.7 WebServices . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 480
38.8 Client-ServerExercises . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 485
38.9 SocketProgramming . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 491
VI Projects 499
39AreasoftheFlag 503
39.1 BasicRed,WhiteandBlue . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 503
39.2 TheStars . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 504
40BowlingScores 507
41MusicalPitches 509
vii
41.1 EqualTemperament . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 510
41.2 Overtones . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 511
41.3 CircleofFifths . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 511
41.4 PythagoreanTuning . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 512
41.5 Five-ToneTuning . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 513
42WhatCanbeComputed? 515
42.1 Background . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 515
42.2 TheTuringMachine . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 517
42.3 ExampleMachine . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 518
42.4 TuringMachineImplementation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 519
42.5 Exercise1 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 521
42.6 TestMachines . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 521
42.7 Exercise2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 522
42.8 BetterImplementations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 523
42.9 Exercise3 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 524
42.10Consequences . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 525
42.11OtherApplications . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 525
42.12AlternativeSpeciﬁcations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 526
42.13Exercise4 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 528
43MahJonggHands 529
43.1 TileClassHierarchy . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 529
43.2 WallClass . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 531
43.3 TileSetClassHierarchy . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 532
43.4 HandClass . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 534
43.5 SomeTestCases . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 535
43.6 HandScoring-Points . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 537
43.7 HandScoring-Doubles . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 539
43.8 LimitHands . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 542
44ChessGameNotation 545
44.1 AlgebraicNotation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 545
44.2 AlgorithmsforResolvingMoves . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 549
44.3 DescriptiveNotation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 552
44.4 GameState . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 552
44.5 PGNProcessingSpeciﬁcations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 553
VII Back Matter 555
45Bibliography 557
45.1 UseCases . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 557
45.2 ComputerScience . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 557
45.3 DesignPatterns . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 557
45.4 Languages . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 557
45.5 ProblemDomains . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 557
46IndicesandTables 559
47ProductionNotes 561
Bibliography 563
viii
Building Skills in Python, Release 2.6.5
A Programmer’s Introduction to Python
LegalNotice
 Thisworkislicensedundera CreativeCommonsLicense . Youarefree
tocopy,distribute,display,andperformtheworkunderthefollowingconditions:
•Attribution. Youmustgivetheoriginalauthor,StevenF.Lott,credit.
•Noncommercial . Youmaynotusethisworkforcommercialpurposes.
•NoDerivativeWorks . Youmaynotalter,transform,orbuilduponthiswork.
Foranyreuseordistribution,youmustmakecleartoothersthelicensetermsofthiswork.
CONTENTS 1
Building Skills in Python, Release 2.6.5
2 CONTENTS
Part I
F ront Matter
3

CHAPTER
ONE
PREF ACE
The Zen Of Python –TimPeters
Beautifulisbetterthanugly.
Explicitisbetterthanimplicit.
Simpleisbetterthancomplex.
Complexisbetterthancomplicated.
Flatisbetterthannested.
Sparseisbetterthandense.
Readabilitycounts.
Specialcasesaren’tspecialenoughtobreaktherules.
Althoughpracticalitybeatspurity.
Errorsshouldneverpasssilently.
Unlessexplicitlysilenced.
Inthefaceofambiguity,refusethetemptationtoguess.
Thereshouldbeone–andpreferablyonlyone–obviouswaytodoit.
Althoughthatwaymaynotbeobviousatﬁrstunlessyou’reDutch.
Nowisbetterthannever.
Althoughneverisoftenbetterthan rightnow.
Iftheimplementationishardtoexplain,it’sabadidea.
Iftheimplementationiseasytoexplain,itmaybeagoodidea.
Namespacesareonehonkinggreatidea–let’sdomoreofthose!
1.1 Why Read This Book?
YouneedthisbookbecauseyouneedtolearnPython. Hereareafewreasonswhyyoumightneedtolearn
Python
•Youneedaprogramminglanguagewhichiseasytoreadandhasavastlibraryofmodulesfocusedon
solvingtheproblemsyou’refacedwith.
•YousawanarticleaboutPythonspeciﬁcally,ordynamiclanguagesingeneral,andwanttolearnmore.
•You’restartingaprojectwherePythonwillbeusedorisinuse.
•AcolleaguehassuggestedthatyoulookintoPython.
•You’verunacrossaPythoncodesampleonthewebandneedtolearnmore.
Pythonreﬂectsanumberofgrowingtrendsinsoftwaredevelopment,puttingitatorneartheleadingedgeof
goodprogramminglanguages. Itisaverysimplelanguagesurroundedbyavastlibraryofadd-onmodules.
Itisanopensourceproject,supportedbymanyindividuals. Itisanobject-orientedlanguage,bindingdata
andprocessingintoclassdeﬁnitions. Itisaplatform-independent,scriptedlanguage,withcompleteaccess
5
Building Skills in Python, Release 2.6.5
tooperatingsystemAPI‘s. Itsupportsintegrationofcomplexsolutionsfrompre-builtcomponents. Itisa
dynamiclanguage,whichavoidsmanyofthecomplexitiesandoverheadsofcompiledlanguages.
Thisbookisaclose-to-completepresentationofthePythonlanguage. Itisorientedtowardlearning,which
involvesaccumulatingmanycloselyintertwinedconcepts. Inourexperienceteaching,coachinganddoing
programming,thereisanupperlimitonthe“clueabsorptionrate”. Inordertokeepwithinthislimit,we’ve
foundthatithelpstopresentalanguageasever-expandinglayers. We’llleadyoufromaverytiny,easyto
understandsubsetofstatementstotheentirePythonlanguageandallofthebuilt-indatastructures. We’ve
alsofoundthatdoinganumberofexerciseshelpsinternalizeeachlanguageconcept.
ThreeFacesofaLanguage . Therearethreefacetstoaprogramminglanguage: howyouwriteit,what
itmeans,andtheadditionalpracticalconsiderationsthatmakeaprogramuseful. Whilemanybookscover
thesyntaxandsemanticsofPython,inthisbookwe’llalsocoverthepragmaticconsiderations. Ourcore
objectiveistobuildenoughlanguageskillsthatgoodobject-orienteddesignwillbeaneasynextstep.
The syntaxofalanguageiscoveredinthelanguagereferencemanualavailableonline. Inthecaseofrelatively
simplelanguages,likePython,thesyntaxissimple. We’llprovideadditionalexamplesoflanguagesyntax.
The semanticsofthelanguagecanbeabitmoreslipperythanthesyntax. Somelanguagesinvolveobscure
oruniqueconceptsthatmakeitdiﬀiculttoseewhatastatementreallymeans. Inthecaseoflanguages
likePython, whichhaveextensiveadditional libraries, theburdenisdoubled. First, onehastolearnthe
language, then one has to learn the libraries. The number of open source packages made available by
thePythoncommunitycanincreasetheeﬀortrequiredtounderstandanentirearchitecture. Thereward,
however,ishigh-qualitysoftwarebasedonhigh-qualitycomponents,withaminimumofdevelopmentand
integrationeﬀort.
Manylanguagesoﬀeranumberoftoolsthatcanaccomplishthesamebasictask. Pythonisnoexception. It
isoftendiﬀiculttoknowwhichofmanyalternativesperformsbetteroriseasiertoadapt. We’lltrytofocus
onshowingthemosthelpfulapproach, emphasizingtechniquesthatapplyforlargerdevelopmenteﬀorts.
We’lltrytoavoid“quickanddirty”solutionsthatareonlyappropriatewhenlearningthelanguage.
1.2 Audience
ProfessionalprogrammerswhoneedtolearnPythonareourprimaryaudience. Weprovidespeciﬁchelpfor
youinanumberofways.
•Since Python is simple, we can address newbieprogrammers who don’t have deep experience in a
number of other languages. We will call out some details in speciﬁc newbie sections. Experienced
programmerscanskipthesesections.
•SincePythonhasalargenumberofsophisticatedbuilt-indatastructures,weaddresstheseseparately
andfully. Anunderstandingofthesestructurescansimplifycomplexprograms.
•Theobject-orientationofPythonprovidestremendousﬂexibilityandpower. Thisisadeepsubject,
and we will provide an introduction to object-oriented programming in this book. More advanced
designtechniquesareaddressedin Building Skil ls in Object-Oriented Design ,[Lott05].
•Theaccompanyinglibrariesmakeitinexpensivetodevelopcomplexandcompletesolutionswithmin-
imaleﬀort. This,however,requiressometimetounderstandthepackagedcomponentsthatareavail-
able,andhowtheycanbeintegratedtocreateusefulsoftware. Wecoversomeofthemostimportant
modulestospeciﬁcallypreventprogrammersfromreinventingthewheelwitheachproject.
Instructorsareasecondaryaudience. Ifyouarelookingforclassroomprojectsthatareengaging,compre-
hensible, andfocusonperfectinglanguageskills, thisbookcanhelp. Eachchapterinthisbookcontains
exercisesthathelpstudentsmastertheconceptspresentedinthechapter.
Thisbookassumesanbasiclevelofskillwithanyofthecommonly-availablecomputersystems.Thefollowing
skillswillberequired.
6 Chapter 1. Preface
Building Skills in Python, Release 2.6.5
•Downloadandinstallopen-sourceapplicationsoftware. Principally,thisisthePythondistributionkit
fromhttp://www.python.org . However,wewillprovidereferencestoadditionalsoftwarecomponents.
•Createtextﬁles. Wewilladdressdoingthisin IDLE,thePythonIntegratedDevelopmentEnviron-
ment(IDE).Wewillalsotalkaboutdoingthiswithagarden-varietytexteditorlikeKomodo, VIM,
EMACS,TEXTPADandBBEDIT.
•Runprogramsfromthecommand-line. ThisincludestheDOScommandshellinMicrosoft Windows,
ortheTerminaltoolinLinuxorApple’sMacintoshOSX .
•Befamiliarwithhigh-schoolalgebraandsometrigonometry. Someoftheexercisesmakeheavyuseof
basicalgebraandtrigonometry.
Whenyou’veﬁnishedwiththisbookyoushouldbeabletodothefollowing.
•Useofthecoreproceduralprogrammingconstructs: variables,statements,exceptions,functions. We
willnot,forexample,spendanytimeondesignofloopsthatterminateproperly.
•Createclassdeﬁnitionsandsubclasses. Thisincludesmanagingthebasicfeaturesofinheritance,as
wellasoverloadedmethodnames.
•UsethePythoncollectionclassesappropriately,thisincludesthevariouskindsofsequences,andthe
dictionary.
1.3 Organization of This Book
Thisbookfallsintoﬁvedistinctparts. Tomanagetheclueabsorptionrate,theﬁrstthreepartsareorganized
inawaythatbuildsupthelanguageinlayersfromcentralconceptstomoreadvancedfeatures. Eachlayer
introduces a few new concepts, and is presented in some depth. Programming exercises are provided to
encouragefurtherexplorationofeachlayer. Thelasttwopartscovertheextensionmodulesandprovide
speciﬁcationsforsomecomplexexercisesthatwillhelpsolidifyprogrammingskills.
Some of the chapters include digressions on more advanced topics. These can be skipped, as they cover
topicsrelatedtoprogrammingingeneral,ornotesabouttheimplementationofthePythonlanguage. These
arereferencematerialtohelpadvancedstudentsbuildskillsaboveandbeyondthebasiclanguage.
Theﬁrstpart, Language Basics introducesthebasicfearturesofthePythonlanguage,coveringmostofthe
statementsbutstickingwithbasicnumericdatatypes.
Background and History providessomehistoryandbackgroundonPython. Getting Started coversinstallation
ofPython,usingtheinterpreterinteractivelyandcreatingsimpleprogramﬁles.
Simple Numeric Expressions and Output coversthebasicexpressionsandcorenumerictypes. V ariables,
Assignment and Input introducesvariables,assignmentandsomesimpleinputconstructs. T ruth, Comparison
and Conditional Processing addstruthandconditionstothelanguage. Loops and Iterative Processing .
In F unctionswe’lladdbasicfunctiondeﬁnitionandfunctioncallconstructs; Additional Notes On F unctions
introducessomeadvancedfunctioncallfeatures.
Thesecondpart, Data Structures addsanumberofdatastructurestoenhancetheexpressivepowerofthe
language.
Inthispartwewilluseanumberofdiﬀerentkindsofobjects,priortodesigningourownobjects. Sequences:
Strings, T uples and Lists extendsthedatatypestoincludevariouskindsofsequences. Theseinclude Strings
,T uplesand Lists. Mappings and Dictionaries describes mappings and dictionaries. Exceptionscovers
exceptionobjects,andexceptioncreationandhandling.
Filescoversﬁlesandseveralcloselyrelatedoperatingsystem(OS)services. F unctional Programming with
Col lectionsdescribes more advanced sequence techniques, including multi-dimensional matrix processing.
Thispartattemptstodescribeareasonablycompletesetofbuilt-indatatypes.
1.3. Organization of This Book 7
Building Skills in Python, Release 2.6.5
The third part, Data + Processing = Objects , uniﬁes data and processing to deﬁne the object-oriented
programmingfeaturesofPython.
Classesintroducesbasicsofclassdeﬁnitionsandintroducessimpleinheritance. Advanced Class Deﬁnition
addssomefeaturestobasicclassdeﬁnitions. Some Design Patterns extendthisdiscussionfurthertoinclude
severalcommondesignpatternsthatusepolymorphism. Creating or Extending Data T ypes describesthe
mechanismforaddingtypestoPythonthatbehavelikethebuilt-intypes.
Partfour, Components, Modules and Packages , describesmodules, whichprovideahigher-levelgrouping
ofclassandfunctiondeﬁnitions. ItalsosummarizesselectedextensionmodulesprovidedwiththePython
environment.
Modulesprovidesbasicsemanticsandsyntaxforcreatingmodules. Wecovertheorganizationofpackages
ofmodulesin Packages. AnoverviewofthePythonlibraryisthesubjectof The Python Library .Complex
Strings: the re Module coversstringpatternmatchingandprocessingwiththe remodule. Dates and Times:
the time and datetime Modules coversthe timeanddatetimemodule. Programs: Standing Alone covers
thecreationofmainprograms. Wetouchjustthetipoftheclient-servericebergin Architecture: Clients,
Servers, the Internet and the W orld Wide W eb .
Someofthecommonly-usedmodulesarecoveredduringearlierchapters. Inparticularthe mathandrandom
modulesarecoveredin The math Module andthestringmoduleiscoveredin Strings.Filestoucheson
fileinput,os,os.path,glob,andfnmatch.
Finally, part ﬁve, Projects, presents several larger and more complex programming problems. These are
rankedfromrelativelysimpletoquitecomplex.
Areas of the Flag coverscomputingtheareaofthesymbolsontheAmericanﬂag. Bowling Scores covers
scoringinagameofbowling. Musical Pitches hasseveralalgorithmsfortheexactfrequenciesofmusical
pitches. What Can be Computed? hasseveralexercisesrelatedtocomputabilityandthebasicsofﬁnitestate
machines. Mah Jongg Hands describesalgorithmsforevaluatinghandsinthegameofMajJongg. Chess
Game Notation dealswithinterpretingthelogfromagameofchess.
1.4 Limitations
Thisbookcan’tcovereverythingPython. Thereareanumberofthingswhichwewillnotcoverindepth,
andsomethingswhichwecan’teventouchonlightly. Thislistwillprovideyoudirectionsforfurtherstudy.
•The rest of the Python library. The library is a large, sophisticated, rapidly-evolving collection of
softwarecomponents. Weselectedafewmodulesthatarewidely-used. Therearemanybookswhich
coverthelibraryingeneral,andbookswhichcoverspeciﬁcmodulesindepth.
•ThesubjectofObject-Oriented(OO)designisthelogicalnextstepinlearningPython. Thattopicis
coveredin Building Skil ls in Object-Oriented Design [Lott05].
•DatabasedesignandprogrammingrequiresaknowledgeofPythonandagriponOOdesign.Itrequires
adigressionintotherelationalmodelandtheSQLlanguage.
•GraphicalUserInterface(GUI)developmentrequiresaknowledgeofPython,OOdesignanddatabase
design. Therearetwocommonly-usedtoolkits: TkinterandpyGTK.
•Web application development, likewise, requires a knowledge of Python, OO design and database
design. Thistopicrequiresdigressionsintointernetworkingprotocols,speciﬁcallyHTTPandSOAP,
plusHTML,XMLandCSSlanguages. TherearenumerouswebdevelopmentframeworksforPython.
8 Chapter 1. Preface
Building Skills in Python, Release 2.6.5
1.5 Programming Style
Wehavetoadopta styleforpresentingPython. Wewon’tpresentacompletesetof coding standards ,instead
we’llpresentexamples. Thissectionhassomejustiﬁcationofthestyleweusefortheexamplesinthisbook.
Justtocontinunethisrant,weﬁndthatactualexamplesspeaklouderthananyofthegratuitouslydetailed
codingstandardswhicharesopopularinITshops. WeﬁndthatmanyITorganizationswasteconsiderable
timetryingtowritedescriptionsofapreferredstyle. Agoodexample, however, trumpsanydescription.
As consultants, we are often asked to provide standards to an inexperienced team of programmers. The
programmers only look at the examples (often cutting and pasting them). Why spend money on empty
verbiagethatisperipheraltotheusefulexample?
Oneimportantnote: wespeciﬁcallyrejectusingcomplexpreﬁxesforvariablenames. Preﬁxesarelittlemore
than“visualclutter”. Inmanyplaces,forexample,anintegerparameterwiththeamountofabetmightbe
calledpi_amountwherethepreﬁxindicatesthescope( pforaparameter)andtype( iforaninteger). We
rejectthe‘ pi_’aspotentiallymisleadingandthereforeuninformative.
Thisstyleofnameisonlyappropriateforprimitivetypes,anddoesn’taddresscomplexdatastructureswell
atall. Howdoesonenameaparameterthatisalistofdictionariesofclassinstances? ‘ pldc_’?
Insomecases,preﬁxesareusedtodenotethescopeofaninstancevariables. Variablenamesmightincludea
crypticone-letterpreﬁxlike‘ f’todenoteaninstancevariable;sometimesprogrammerswilluse‘ my’or‘the’
asanEnglish-likepreﬁx. Weprefertoreduceclutter. InPython,instancevariablesarealwaysqualiﬁedby
self.,makingthescopecrystalclear.
AllofthecodesamplesweretestedonPython2.6forMacOS,usinganiMacrunningMacOS10.5. Ad-
ditionaltestingofallcodewasdonewithWindows2000onaDellLatitudelaptopaswellasaVMWare
implementationofFedora11.
1.6 Conventions Used in This Book
HereisatypicalCodesample.
TypicalPythonExample
combo={ }
foriinrange(1,7):
forjinrange(1,7):
roll=i+j
combo.setdefault( roll, 0)
combo[roll] +=1
forninrange(2,13):
print"%d%.2f%%"%( n, combo[n] /36.0)
1.ThiscreatesaPythondictionary,amapfromkeytovalue. Ifweinitializeitwithsomethinglikethe
following: ‘ combo = dict( [ (n,0) for n in range(2,13) ] ) ’,wedon’tneedthe setdefault()
functioncallbelow.
2.Thisassuresthattherollednumberexistsinthedictionarywithadefaultfrequencycountof0.
3.Printeachmemberoftheresultingdictionary. Somethingmoreobscurelike‘ [ (n,combo[n]/36.0)
for n in range(2,13)] ’iscertainlypossible.
Theoutputfromtheaboveprogramwillbeshownasfollows:
1.5. Programming Style 9
Building Skills in Python, Release 2.6.5
2 0.03%
3 0.06%
4 0.08%
5 0.11%
6 0.14%
7 0.17%
8 0.14%
9 0.11%
10 0.08%
11 0.06%
12 0.03%
Tool completed successfully
Wewillusethefollowingtypestylesforreferencestoaspeciﬁc Class,method(),attribute,whichincludes
bothclassvariablesorinstancevariables.
Sidebars
Whenwedohaveasigniﬁcantdigression,itwillappearinasidebar,likethis.
Tip:tip
Therewillbedesigntips,andwarnings,inthematerialforeachexercise. Thesereﬂectconsiderationsand
lessonslearnedthataren’ttypicallycleartostartingOOdesigners.
1.7 Acknowledgements
I’dliketothankCarlFrederickforaskingmeifIwasusingPythontodevelopcomplexapplications. Atthe
time,IsaidI’dhavetolookintoit. Thisistheresultofthatinvestigation.
IamindebtedtoThomasPautler,JimBullock,MichaëlVanDorpe,MatthewCurry,IgorSakovich,Drew,
JohnLarsen,RobertLucente,LexHider,JohnNowlanandTomElliottforsupplyingmuch-neededcorrec-
tionstoerrorsinpreviouseditions.
JohnHayesprovidedparticularcompleteandmeticulouscopy-editing.
10 Chapter 1. Preface
Part II
Language Basics
11

Building Skills in Python, Release 2.6.5
The Processing View
A programming language involves two closely interleaved topics. On one hand, there are the procedural
constructsthatprocessinformationinsidethecomputer,withvisibleeﬀectsonthevariousexternaldevices.
Ontheotherhandarethevarioustypesofdatastructuresandrelationshipsfororganizingtheinformation
manipulatedbytheprogram.
Thispartdescribesthemostcommonly-usedPythonstatements, stickingwithbasicnumericdatatypes.
Data Structures willpresentareasonablycompletesetofbuilt-indatatypesandfeaturesforPython. While
thetwoaretightlyinterwoven,wepickthestatementsasmorefundamentalbecausewecan(andwill)add
newdatatypes. Indeed,theessentialthrustofobject-orientedprogramming(coveredin Data + Processing
= Objects)isthecreationofnewdatatypes.
Someoftheexamplesinthispartrefertotherulesofvariouscommoncasinogames. Knowledgeofcasino
gamblingisnotessentialtounderstandingthelanguageorthispartofthebook. Wedon’tendorsecasino
gambling. Indeed, many of the exercises reveal the magnitude of the house edge in most casino games.
However,casinogameshavejusttherightlevelofalgorithmiccomplexitytomakeforexcellentprogramming
exercises.
We’ll provide a little background on Python in Background and History . From there, we’ll move on to
installingPythonin Python Instal lation .
In Simple Numeric Expressions and Output we’llintroducethe printstatement(and print()function);we’ll
usethistoseetheresultsofarithmeticexpressionsincludingthenumericdatatypes,operators,conversions,
andsomebuilt-infunctions. We’llexpandonthisin Advanced Expressions .
We’llintroducevariables,theassignmentstatement,andinputin V ariables, Assignment and Input ,allowing
ustocreatesimpleinput-process-outputprograms. Whenweaddtruth,comparisons,conditionalprocessing
in T ruth, Comparison and Conditional Processing ,anditerationin Loops and Iterative Processing ,we’llhave
allthetoolsnecessaryforprogramming. In F unctionsand Additional Notes On F unctions ,we’llshowhow
todeﬁneandusefunctions,theﬁrstofmanytoolsfororganizingprogramstomakethemunderstandable.
13
Building Skills in Python, Release 2.6.5
14
CHAPTER
TWO
BACKGROUND AND HISTORY
History of Python and Comparison with Other Languages
This chapter describes the history of Python in History. The F eatures of Python is an overview of the
featuresofPython. Afterthat, ComparisonsisasubjectivecomparisonbetweenPythonandafewother
otherlanguages,usingsomequalitycriteriaharvestedfromtwosources: the Java Language Environment
White Paperand On the Design of Programming Languages . Thismaterialcanbeskippedbynewbies: it
doesn’thelpexplainPython,itputsitintoacontextamongotherprogramminglanguages.
2.1 History
Pythonisarelativelysimpleprogramminglanguagethatincludesarichsetofsupportinglibraries. This
approachkeepsthelanguagesimpleandreliable,whileprovidingspecializedfeaturesetsasseparateexten-
sions.
Pythonhasaneasy-to-usesyntax,focusedontheprogrammerwhomusttypeintheprogram,readwhat
wastyped, andprovideformaldocumentationforthe program. Manylanguageshavesyntaxfocusedon
developingasimple, fastcompiler; butthoselanguagesmaysacriﬁcereadabilityandwritability. Python
strikesagoodbalancebetweenfastcompilation,readabilityandwritability.
Python is implemented in C, and relies on the extensive, well understood, portable C libraries. It ﬁts
seamlesslywithUnix,LinuxandPOSIXenvironments. SincethesestandardClibrariesarewidelyavailable
forthevariousMS-Windowsvariants,andothernon-POSIXoperatingsystems,Pythonrunssimilarlyinall
environments.
The Python programming language was created in 1991 by Guido van Rossum based on lessons learned
doing language and operating system support. Python is built from concepts in the ABC language
and Modula-3. For information ABC, see The ABC Programmer’s Handbook [Geurts91], as well as
http://www.cwi.nl/~steven/abc/ . For information on Modula-3, see Modula-3[Harbison92], as well as
http://www.research.compaq.com/SRC/modula-3/html/home.html .
ThecurrentPythondevelopmentiscentralizedat http://www.python.org .
2.2 Features of Python
Pythonreﬂectsanumberofgrowingtrendsinsoftwaredevelopment. Itisaverysimplelanguagesurrounded
byavastlibraryofadd-onmodules. Itisanopensourceproject,supportedbydozensofindividuals. Itisan
object-orientedlanguage. Itisaplatform-independent,scriptedlanguage,withcompleteaccesstooperating
15
Building Skills in Python, Release 2.6.5
system API ‘s. It supports integration of complex solutions from pre-built components. It is a dynamic
language,allowingmorerun-timeﬂexibilitythanstaticallycompiledlanguages.
Additionally, Python is a scripting language with full access to Operating System (OS) services. Conse-
quently,Pythoncancreatehighlevelsolutionsbuiltupfromothercompleteprograms. Thisallowssomeone
to integrate applications seamlessly, creating high-powered, highly-focused meta-applications. This kind
of very-high-level programming ( programming in the large ) is often attempted with shell scripting tools.
However,theprogrammingpowerinmostshellscriptlanguagesisseverelylimited. Pythonisacomplete
programminglanguageinitsownright,allowingapowerfulmixtureofexistingapplicationprogramsand
uniqueprocessingtobecombined.
PythonincludesthebasictextmanipulationfacilitiesofAwkorPerl. ItextendsthesewithextensiveOS
servicesandotherusefulpackages. Italsoincludessomeadditionaldatatypesandaneasier-to-readsyntax
thaneitheroftheselanguages.
Pythonhasseverallayersofprogramorganization. ThePythonpackageisthebroadestorganizationalunit;
itiscollectionofmodules. ThePythonmodule,analogoustotheJavapackage,isthenextlevelofgrouping.
A module may have one or more classes and free functions. A class has a number of static (class-level)
variables,instancevariablesandmethods. We’lllooklattheselayersindetailinappropriatesections.
Somelanguages(likeCOBOL)havefeaturesthatarefoldedintothelanguageitself,leadingtoacomplicated
mixtureofcorefeatures,optionalextensions,operating-systemfeaturesandspecial-purposedatastructures
oralgorithms. Thesepoorlydesignedlanguagesmayhaveproblemswithportability. Thiscomplexitymakes
theselanguageshardtolearn. Onehintthatalanguagehastoomanyfeaturesisthatalanguagesubsetis
available. Pythonsuﬀersfromnoneofthesedefects: thelanguagehasonlyabout24statements(ofwhich
ﬁvearedeclaratoryinnature),thecompilerissimpleandportable. Thismakesthethelanguageiseasyto
learn,withnoneedtocreateasimpliﬁedlanguagesubset.
2.3 Comparisons
We’llmeasurePythonwithtwoyardsticks. First,we’lllookatayardstickoriginallyusedforJava. Then
we’lllookatyardstickbasedonexperiencedesigningModula-2.
2.3.1 The Java Y ardstick
The Java Language Environment White Paper [Gosling96]listsanumberofdesirablefeaturesofaprogram-
minglanguage:
•SimpleandFamiliar
•Object-Oriented
•Secure
•Interpreted
•Dynamic
•ArchitectureNeutral
•Portable
•Robust
•Multithreaded
•GarbageCollection
•Exceptions
16 Chapter 2. Background and History
Building Skills in Python, Release 2.6.5
•HighPerformance
Pythonmeetsandexceedsmostoftheseexpectations. We’lllookcloselyateachofthesetwelvedesireable
attributes.
SimpleandFamiliar . Bysimple,wemeanthatthereisnoGOTOstatement,wedon’tneedtoexplicitly
manage memory and pointers, there is no confusing preprocessor, we don’t have the aliasing problems
associatedwithunions. Wenotethatthislistsummarizesthemostconfusingandbug-inducingfeaturesof
theCprogramminglanguage.
Pythonissimple. Itreliesonafewcoredatastructuresandstatements. Therichsetoffeaturesisintroduced
byexplicitimportofextensionmodules. Pythonlackstheproblem-plaguedGOTOstatement,andincludes
themorereliable break,continueandexceptionraisestatements. Pythonconcealsthemechanicsofobject
referencesfromtheprogrammer,makingitimpossibletocorruptapointer.Thereisnolanguagepreprocessor
toobscurethesyntaxofthelanguage. ThereisnoC-styleunion(orCOBOL-styleREDEFINES)tocreate
problematicaliasesfordatainmemory.
Python uses an English-like syntax, making it reasonably familiar to people who read and write English
or related languages. There are few syntax rules, and ordinary, obvious indentation is used to make the
structureofthesoftwareveryclear.
Object-Oriented . Pythonisobjectoriented. Almostalllanguagefeaturesareﬁrstclassobjects,andcanbe
usedinavarietyofcontexts. ThisisdistinctfromJavaandC++whichcreateconfusionbyhavingobjects
aswellasprimitivedatatypesthatarenotobjects. Thebuilt-in type()functioncaninterrogatethetypesof
allobjects. Thelanguagepermitscreationofnewobjectclasses. Itsupportssingleandmultipleinheritance.
Polymorphismissupportedviarun-timeinterpretation,leadingtosomeadditionalimplementationfreedoms
notpermittedinJavaorC++.
Secure. The Python language environment is reasonably secure from tampering. Pre-compiled python
modulescanbedistributedtopreventalteringthesourcecode. Additionalsecuritycheckscanbeaddedby
supplementingthebuilt-in __import__() function.
Many security ﬂaws are problems with operating systems or framework software (for example, database
serversorwebservers). Thereis, however, oneprominentlanguage-relatedsecurityproblem: the“buﬀer
overﬂow”problem,whereaninputbuﬀer,ofﬁnitesize,isoverwrittenbyinputdatawhichislargerthanthe
availablebuﬀer. Pythondoesn’tsuﬀerfromthisproblem.
Pythonisadynamiclanguage,andabuseoffeatureslikethe execstatementorthe eval()functioncan
introducesecurityproblems. Thesemechanismsareeasytoidentifyandauditinalargeprogram.
Interpreted. An interpreted language, like Python allows for rapid, ﬂexible, exploratory software de-
velopment. Compiled languages require a sometimes lengthy edit-compile-link-execute cycle. Interpreted
languagespermitasimpleredit-executecycle. Interpretedlanguagescansupportacompletedebuggingand
diagnostic environment. The Python interpreter can be run interactively; which can help with program
developmentandtesting.
ThePythoninterpretercanbeextendedwithadditionalhigh-performancemodules. Also,thePythoninter-
pretercanbeembeddedintoanotherapplicationtoprovideahandyscriptingextensiontothatapplication.
Dynamic. Pythonexecutesdynamically. Pythonmodulescanbedistributedassource;theyarecompiled
(if necessary) at import time. Object messages are interpreted, and problems are reported at run time,
allowingforﬂexibledevelopmentofapplications.
InC++,anychangetocentrallyusedclassheaderswillleadtolengthyrecompilationofdependentmodules.
InJava, achangetothepublicinterfaceofaclasscaninvalidateanumberofothermodules, leadingto
recompilationinthebestcase,orruntimeerrorsintheworstcase.
Portable. SincePythonrests squarelyona portableC source, Pythonprogramsbehavethesame ona
variety of platforms. Subtle issues like memory management are completely hidden. Operating system
2.3. Comparisons 17
Building Skills in Python, Release 2.6.5
inconsistencymakesitimpossibletoprovideperfectportabilityofeveryfeature. PortableGUI’sarebuilt
usingthewidely-portedTkGUItools Tkinter,ortheGTK+toolsandthethe pyGTKbindings.
Robust. Programmers do not directly manipulate memory or pointers, making the language run-time
environmentveryrobust. Errorsareraisedasexceptions,allowingprogramstocatchandhandleavarietyof
conditions. AllPythonlanguagemistakesleadtosimple,easy-to-interpreterrormessagesfromexceptions.
Multithreaded . ThePython threadingmoduleisaPosix-compliantthreadinglibrary. Thisisnotcom-
pletelysupportedonallplatforms,butdoesprovidethenecessaryinterfaces. Beyondthreadmanagement,
OSprocessmanagementisalsoavailable,asareexecutionofshellscriptsandotherprogramsfromwithina
Pythonprogram.
Additionally,manyofthewebframeworksincludethreadmanagement. InproductslikeTurboGears,indi-
vidualwebrequestsimplicitlyspawnnewthreads.
GarbageCollection . Memory-managementcanbedonewithexplicitdeletesorautomatedgarbagecol-
lection. SincePythonusesgarbagecollection,theprogrammerdoesn’thavetoworryaboutmemoryleaks
(failuretodelete)ordanglingreferences(deletingtooearly).
ThePythonrun-timeenvironmenthandlesgarbagecollectionofallPythonobjects. Referencecountersare
usedtoassurethatnoliveobjectsareremoved. Whenobjectsgooutofscope,theyareeligibleforgarbage
collection.
Exceptions. Pythonhasexceptions, andasophisticated trystatementthathandlesexceptions. Unlike
thestandardClibrarywherestatuscodesarereturnedfromsomefunctions,invalidpointersreturnedfrom
othersandaglobalerrornumbervariableusedfordeterminingerrorconditions,Pythonsignalsalmostall
errorswithanexception. Evencommon,genericOSservicesare wrappedsothatexceptionsareraisedina
uniformway.
HighPerformance . ThePythoninterpreterisquitefast. However,wherenecessary,aclassormodule
thatisabottleneckcanberewritteninCorC++,creatinganextensiontotheruntimeenvironmentthat
improvesperformance.
2.3.2 The Modula-2 Y ardstick
One of the languages which strongly inﬂuenced the design of Python was Modula-2. In 1974, N. Wirth
(creatorofPascalanditssuccessor,Modula-2)wroteanarticle On the Design of Programming Languages
[Wirth74],whichdeﬁnedsometimelessconsiderationsindesigningaprogramminglanguage. Hesuggests
thefollowing:
•alanguagebeeasytolearnandeasytouse;
•safefrommisinterpretation;
•extensiblewithoutchangingexistingfeatures;
•machine[ platform]independent;
•thecompiler[ interpreter]mustbefastandcompact;
•theremustbereadyaccesstosystemservices,librariesandextensionswritteninotherlanguages;
•thewholepackagemustbeportable.
Pythonsyntaxisdesignedforreadability;thelanguageisquitesimple,makingiteasytolearnanduse. The
PythoncommunityisalwaysalerttowaystosimplifyPython. ThePython3.0projectisactivelyworking
toremoveafewpoorly-concievedfeaturesofPython. ThiswillmeanthatPython3.0willbesimplerand
easiertouse,butincompatiblewithPython2.xinafewareas.
MostPythonfeaturesarebroughtinviamodules,assuringthatextensionsdonotchangeorbreakexisting
features. Thisallowstremendousﬂexibilityandpermitsrapidgrowthinthelanguagelibraries.
18 Chapter 2. Background and History
Building Skills in Python, Release 2.6.5
ThePythoninterpreterisverysmall. Typically,itissmallerthantheJavaVirtualMachine. SincePython
is(ultimately)writteninC,ithasthesamekindofbroadaccesstoexternallibrariesandextensions. Also,
thismakesPythoncompletelyportable.
2.4 Some Jargon
Forfolksnewtodevelopingsoftware,itmighthelptounderstandafewdistinctionsmadeabove.
•Interperted
•NotInterpreted(i.e.,Compiled)
Python is a byte-code interpreter . A Python codeobject is a sequence of bytes that represent various
operationsandvalues. ThePythoninterpreterstepsthroughthebytes,performingtheoperations.
Acompiledlanguage(e.g.,C,C++,etc.) istranslatedfromsourceformtoexecutablebinaryspeciﬁcto
operatingsystemandhardwareplatform.
JavaissimilartoPython: it’scompiledandtheJavaVirtualMachineisabyte-codeinterpreter.
•Dynamic
•NotDynamic(i.e.,Static)
Pythonisadynamiclanguage. Variablesandfunctionsdonothavedeﬁneddatatypes. Instead,avariable
issimplyalabelattachedtoanobject. Afunctionisacallableobjectwithparameters, butnodeclared
resulttype. Eachobjecthasastrongly-deﬁnedpermanentclass.
There is no sophisticated compile-time type checking. Instead, any type mismatches will be detected at
run-time. Sincemanytypesarenearlyinterchangeable,thereisn’taneedforalotoftypechecking. For
examplesofinterchangeable(“polymorphic”)types,see Simple Numeric Expressions and Output .
LanguageslikeC,C++andJavahavestatically-declaredvariablesandfunctions.
•Scripting
•Non-Scripting
The“scripting” distinction is an operational feature of POSIX-compliantoperatingsystems. Files which
beginwiththe‘ #!/path/to/interpreter ’willbeusedasscriptsbytheOS.Theycanbeexecutedfrom
thecommand-linebecausetheinterpreterisnamedintheﬁrstlineoftheﬁle.
LanguageslikeJava,CandC++donothavethisfeature;theseﬁlesmustbecompiledbeforetheycanbe
executed.
2.4. Some Jargon 19
Building Skills in Python, Release 2.6.5
20 Chapter 2. Background and History
CHAPTER
THREE
PYTHON INST ALLA TION
Downloading, Installing and Upgrading Python
ThischapterisbecominglessandlessrelevantasPythoncomespre-installedwithmostLinux-basedoper-
atingsystems. Consequently,themostinterestingpartofthischapteristhe Windows Instal lation ,where
wedescribedownloadingandinstallingPythononWindows.
Pythonrunsonawide,widevarietyofplatforms. Ifyourparticularoperatingsystemisn’tdescribedhere,
refertohttp://www.python.org/community/ tolocateanimplementation.
MacOSdeveloperswillﬁnditsimplesttoupgradetoLeopard(MaxOS10.5)orSnowLeopard(MacOS
10.6),sinceithasPythonincluded. TheMacOSinstallationincludesthecompletesuiteoftools. We’lllook
atupgradingin Macintosh Instal lation .
ForotherGNU/Linuxdevelopers,you’llﬁndthatPythonisgenerallyincludedinmostdistributions.Further,
manyLinuxdistributionsautomaticallyupgradetheir Pythoninstallation. Forexample, FedoraCore11
includesPython2.6andinstallsupgradesastheybecomeavailable. Youcanﬁndinstallationguidelinesin
GNU/Linux and UNIX Overview .
TheGoal. ThegoalofinstallationistogetthePythoninterpreterandassociatedlibraries. Windowsusers
willgetaprogramcalled python.exe. LinuxandMacOSuserswillgetthePythoninterpreter,aprogram
namedpython.
Inadditiontothelibrariesandtheinterpreter, yourPythoninstallationcomeswithatutorialdocument
(alsoavailableat http://docs.python.org/tutorial/ )onPythonthatwillstepyouthroughanumberofquick
examples. Fornewbies,thisprovidesanadditionalpointofviewthatyoumayﬁndhelpful. Youmayalso
wanttorefertotheBeginner’sGuideWikiat http://wiki.python.org/moin/BeginnersGuide .
3.1 Windows Installation
In some circumstances, your Windows environment may require administrator privilege. The details are
beyondthescopeofthisbook. IfyoucaninstallsoftwareonyourPC,thenyouhaveadministratorprivileges.
Inacorporateoracademicenvironment,someoneelsemaybetheadministratorforyourPC.
TheWindowsinstallationofPythonhasthreebroadsteps.
1.Pre-installation: makebackupsanddownloadtheinstallationkit.
2.Installation: installPython.
3.Post-installation: checktobesureeverythingworked.
We’llgothrougheachoftheseindetail.
21
Building Skills in Python, Release 2.6.5
3.1.1 Windows Pre-Installation
Backup. Beforeinstallingsoftware,backupyourcomputer. Istronglyrecommendthatyougetatoollike
Norton’sGhost(http://www.symantec.com/norton/ghost )orclonezilla(http://clonezilla.org/ ).
ProductslikethesewillcreateaCDthatyoucanusetoreconstructtheoperatingsystemonyourPCin
casesomethinggoeswrong. ItisdiﬀiculttoundoaninstallationinWindows,andgetyourcomputerback
thewayitwasbeforeyoustarted.
I’ve never had a single problem installing Python. I’ve worked with a number of people, however, who
either have bad luck or don’t read carefully and have managed to corrupt their Windows installation by
downloadingandinstallingsoftware. WhilePythonissafe,stable,reliable,virus-free,andwell-respected,
youmaybesomeonewithbadluckwhohasaproblem. OftentheproblemalreadyexistedonyourPCand
installingPythonwasthestrawthatbrokethecamel’sback. Abackupischeapinsurance.
Youshouldalsohaveafolderforsavingyourdownloads. Youcancreateafolderin My Documents called
downloads. Isuggestthatyoukeepallofyourvariousdownloadedtoolsandutilitiesinthisfolderfortwo
reasons. Ifyouneedtoreinstallyoursoftware,youknowexactlywhatyoudownloaded. Whenyougeta
newcomputer(oranadditionalcomputer),youknowwhatneedstobeinstalledonthatcomputer.
Download. Aftermakingabackup,gotothe http://www.python.org websiteandlookfortheDownload
area. Inhere,you’relookingforthepre-builtWindowsinstaller. ThisbookwillemphasizePython2.6. In
thatcase,thekitwillhaveaﬁlenamelike python-2.6.x.msi . Whenyouclickontheﬁlename,yourbrowser
shouldstartdownloadingtheﬁle. Saveitinyour downloadsfolder.
Backup. Nowisagoodtimetomakeasecondbackup. Seriously. Thisbackupwillhaveyouruntouched
Windowssystem,plusthePythoninstallationkit. Itisstillcheapinsurance.
Ifyouhaveanti-virussoftware[ you do, don ’t you? ] youmayneedtodisablethisuntilyouaredoneinstalling
Python.
Atthispoint,youhaveeverythingyouneedtoinstallPython:
•Abackup
•ThePythoninstaller
3.1.2 Windows Installation
You’llneedtwothingstoinstallPython. Ifyoudon’thaveboth,seetheprevioussectiononpre-installation.
•Abackup
•ThePythoninstaller
Double-clickthePythoninstaller( python-2.6.x.msi ).
Theﬁrststepistoselectadestinationdirectory. Thedefaultdestinationshouldbe C:\Python26. Note
thatPythondoesnotexpecttoliveinthe C:\My Programs folder. Becausethe My Programsfolderhasa
spaceinthemiddleofthename–somethingthatisatypicalforalloperatingsystemsotherthanWindows–
subtleproblemscanarise. Consequently,PythonfolksprefertoputPythoninto C:\Python26onWindows
machines. Click Nexttocontinue.
Ifyouhaveapreviousinstallation,thenthenextstepistoconﬁrmthatyouwanttobackupreplacedﬁles.
Theoptiontomakebackupsisalreadyselectedandthefolderisusually C:\Python26\BACKUP .Thisisthe
wayitshouldbe. Click Nexttocontinue.
Thenextstepisthelistofcomponentstoinstall. Youhavealistofﬁvecomponents.
•Pythoninterpreterandlibraries. Youwantthis.
22 Chapter 3. Python Installation
Building Skills in Python, Release 2.6.5
•Tcl/Tk(Tkinter,IDLE,pydoc). Youwantthis,sothatyoucanuseIDLEtobuildprograms.
•PythonHTMLHelpﬁle. Thisissomereferencematerialthatyou’llprobablywanttohave.
•Pythonutilityscripts(Tools/). Wewon’tbemakinganyuseofthisinthisbook. Inthelongrun,
you’llwantit.
•Pythontestsuite(Lib/test/). Wewon’tmakeanyuseofthis,either. Itwon’thurtanythingifyou
installit.
ThereisanAdvancedOptions... buttonthatisnecessaryifyouareusingacompany-suppliedcomputer
forwhichyouarenottheadministrator. Ifyouarenottheadministrator,andyouhavepermissiontoinstall
additional software, you can click on this button to get the Advanced Options panel. There’s a button
labeledNon-Admininstall thatyou’llneedtoclickinordertoinstallPythononaPCwhereyoudon’t
haveadministratorprivileges.
ClickNexttocontinue.
YoucanpickaStartMenuGroupforthePythonprogram,IDLEandthehelpﬁles. Usually,itisplaced
inamenunamed Python 2.6. Ican’tseeanyreasonforchangingthis,sinceitonlyseemstomakethings
hardertoﬁnd. Click Nexttocontinue.
Theinstallerputsﬁlesintheselectedplaces. Thistakeslessthanaminute.
ClickFinish;youhavejustinstalled Pythononyourcomputer.
Tip:DebuggingWindowsInstallation
The only problem you are likely to encounter doing a Windows installation is a lack of administrative
privilegesonyourcomputer. Inthiscase,youwillneedhelpfromyoursupportdepartmenttoeitherdothe
installationforyou,orgiveyouadministrativeprivileges.
3.1.3 Windows Post-Installation
InyourStart...menu,underAllPrograms ,youwillnowhavea Python2.6groupthatlistsﬁvethings:
•IDLE(PythonGUI)
•ModuleDocs
•Python(commandline)
•PythonManuals
•UninstallPython
Important: Testing
Ifyouselectthe Python(commandline) menuitem,you’llseethe‘ Python (command line) ’window.
Thiswillcontainsomethinglikethefollowing.
Python 2.6.2 (r262:71605, Apr 14 2009, 22:40:02) [MSC v.1500 32 bit (Intel)] on
win32
Type "help", "copyright", "credits" or "license" for more information.
>>> ^Z
Ifyouhit Ctrl-Zandthen Enter,Pythonwillexit. Thebasic Pythonprogramworks. Youcanskipto
Getting Started tostartusingPython.
Ifyouselectthe PythonManuals menuitem,thiswillopenaMicrosoftHelpreaderthatwillshowthe
completePythondocumentationlibrary.
3.1. Windows Installation 23
Building Skills in Python, Release 2.6.5
3.2 Macintosh Installation
PythonispartoftheMacOSenvironment. Tiger(MacOS10.4)includesPython2.3.5andIDLE.Leopard
(MacOS10.5)includesPython2.5.1. SnowLeopard(MacOS10.6)includesPython2.6.
Generally, youdon’tneedtodomuchtogetstarted. You’lljustneedtolocatethevariousPythonﬁles.
Lookin/System/Library/Frameworks/Python.Framework/Versions fortherelevantﬁles.
InordertoupgradesoftwareintheMacintoshOS,youmustknowtheadministrator,or“owner”password.
If you are the person who installed or initially setup the computer, you had to pick an owner password
duringtheinstallation. Ifsomeoneelsedidtheinstallation,you’llneedtogetthepasswordfromthem.
AMacOSupgradeofPythonhasthreebroadsteps.
1.Pre-upgrade: makebackupsanddownloadtheinstallationkit.
2.Installation: upgradePython.
3.Post-installation: checktobesureeverythingworked.
We’llgothrougheachoftheseindetail.
3.2.1 Macintosh Pre-Installation
Beforeinstallingsoftware, backupyourcomputer. Whileyoucan’teasilyburnaDVDofeverythingon
yourcomputer,youcanusuallyburnaDVDofeverythinginyourpersonalMacOSXHomedirectory.
I’veneverhadasingleprobleminstallingPython. I’veworkedwithanumberofpeople,however,whoeither
havebadluckordon’treadcarefullyandhavemanagedtocorrupttheirMacOSinstallationbydownloading
andinstallingsoftware. WhilePythonissafe, stable, reliable, virus-free, andwell-respected, youmaybe
someonewithbadluckwhohasaproblem. Abackupischeapinsurance.
Download. Aftermakingabackup,gotothe http://www.python.org websiteandlookfortheDownload
area. Inhere,you’relookingforthepre-builtMacOSXinstaller. ThisbookwillemphasizePython2.6. In
thatcase,thekitﬁlenamewillstartwith python-2.6.2.macosx . Generally,theﬁlenamewillhaveadate
embeddedinitandlooklike python-2.6.2.macosx2009-04-16.dmg Whenyouclickontheﬁlename,your
browsershouldstartdownloadingtheﬁle. Saveitinyour Downloadsfolder.
Backup. Nowisagoodtimetomakeasecondbackup. Seriously. Itisstillcheapinsurance.
Atthispoint,youhaveeverythingyouneedtoinstallPython:
•Abackup
•ThePythoninstaller
3.2.2 Macintosh Installation
When you double-click the python-2.6.2-macosx2009-04-16.dmg , it will create a disk image named
Universal MacPython 2.6.x . Thisdiskimagehasyourlicense,aReadMeﬁle,andthe MacPython.mpkg .
Whenyoudouble-clickthe MacPython.mpkg ﬁe,itwilltakeallthenecessarystepstoinstallPythononyour
computer. Theinstallerwilltakeyouthroughsevensteps. Generally, you’llreadthemessagesandclick
Continue.
Introduction . Readthemessageandclick Continue.
ReadMe. ThisisthecontentsoftheReadMeﬁleontheinstallerdiskimage. Readthemessageandclick
Continue.
24 Chapter 3. Python Installation
Building Skills in Python, Release 2.6.5
License. YoucanreadthehistoryofPython,andthetermsandconditionsforusingit. ToinstallPython,
youmustagreewiththelicense. Whenyouclick Continue,youwillgetapop-upwindowthatasksifyou
agree. ClickAgreetoinstallPython.
SelectDestination . Generally,yourprimarydiskdrive,usuallynamed Macintosh HD willbehighlighted
withagreenarrow. Click Continue.
InstallationType . Ifyou’vedonethisbefore,you’llseethatthiswillbeanupgrade. Ifthisistheﬁrst
time,you’llbedoinganinstall. Clickthe InstallorUpgradebutton.
You’llbeaskedforyourpassword. If,forsomereason,youaren’ttheadministratorforthiscomputer,you
won’tbeabletoinstallsoftware. Otherwise,provideyourpasswordsothatyoucaninstallsoftware.
FinishUp. Themessageisusually“Thesoftwarewassuccessfullyinstalled”. Click Closetoﬁnish.
3.2.3 Macintosh Post-Installation
InyourApplicationsfolder,you’llﬁnda MacPython 2.6 folder,whichcontainsanumberofapplications.
•BuildApplet
•Extras
•IDLE
•PythonLauncher
•UpdateShellProﬁle.command
Look in/System/Library/Frameworks/Python.Framework/Versions for the relevant ﬁles. In the bin,
ExtrasandResourcesdirectoriesyou’llﬁndthevariousapplications. The bin/idleﬁlewilllaunchIDLE
forus.
Onceyou’veﬁnishedinstallation,youshouldchecktobesurethateverythingisworkingcorrectly.
Important: Testing
Fromtheterminalyoucanenterthe pythoncommand.
Youshouldseethefollowing
MacBook-5:~ slott$ python
Python 2.6.3 (r263:75184, Oct 2 2009, 07:56:03)
[GCC 4.0.1 (Apple Inc. build 5493)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
>>>
Enterend-of-ﬁle ctrl-DtoexitfromPython.
3.3 GNU/Linux and UNIX Overview
In Checking for Python we’llprovideaprocedureforexaminingyourcurrentconﬁgurationtoseeifyouhave
Pythonintheﬁrstplace. IfyouhavePython,andit’sversion2.6,you’realldone. Otherwise,you’llhave
todeterminewhattoolsyouhavefordoinganinstallationorupgrade.
•IfyouhaveYellowdogUpdaterModiﬁed( YUM)see YUM Instal lation .
•IfyouhaveoneoftheGNU/LinuxvariantsthatusestheRedHatPackageManager( RPM),see RPM
Instal lation.
3.3. GNU/Linux and UNIX Overview 25
Building Skills in Python, Release 2.6.5
•Thealternativetousethesourceinstallationprocedurein “Build from Scratch” Instal lation .
Root Access . In order to install software in GNU/Linux, you must know the administrator, or “root”
password. IfyouarethepersonwhoinstalledtheGNU/Linux,youhadtopickanadministratorpassword
duringtheinstallation. Ifsomeoneelsedidtheinstallation,you’llneedtogetthepasswordfromthem.
Normally, we never log in to GNU/Linux as rootexcept when we are installing software. In this case,
becausewearegoingtobeinstallingsoftware,weneedtologinas root,usingtheadministrativepassword.
IfyouareaGNU/Linuxnewbieandareinthehabitoflogginginas root,you’regoingtohavetogeta
goodGNU/Linuxbook,createanotherusernameforyourself,andstartusingaproperusername,not root.
Whenyouworkas root,yourunaterribleriskofdamagingorcorruptingsomething. Whenyouarelogged
onasanyoneotherthan root,youwillﬁndthatyoucan’tdeleteoralterimportantﬁles.
UnixisnotLinux . Fornon-LinuxcommercialUnixinstallations( Solaris,AIX,HP/UX,etc.),check
withyourvendor(Oracle/Sun,IBM,HP,etc.) Itisverylikelythattheyhaveanextensivecollectionofopen
sourceprojectslikePythonpre-builtforyourUNIXvariant. Gettingapre-builtkitfromyouroperating
systemvendorisaneasywaytoinstallPython.
3.3.1 Checking for Python
ManyGNU/LinuxandUnixsystemshavePythoninstalled. OnsomeolderLinuxes [Linuxi? Lini? Linen?]
theremaybeanolderversionofPythonthatneedstobeupgraded. Here’swhatyoudotoﬁndoutwhether
ornotyoualreadyhavePython.
Wecan’teasilycoverallvariations. We’lluseFedoraasatypicalLinuxdistribution.
RuntheTerminaltool.You’llgetawindowwhichpromptsyoubyshowingsomethinglike‘ [slott@linux01
slott]$’. Inresponsetothisprompt,enter‘ env python’,andseewhathappens.
Here’swhathappenswhenPythonisnotinstalled.
[slott@linux01 slott ]$env python
tcsh: python: not found
Here’swhatyouseewhenthereisaproperlyinstalled,butout-of-datePythononyourGNU/Linuxbox.
[slott@linux01 slott]$ env python
Python 2.3.5 (#1, Mar 20 2005, 20:38:20)
[GCC 3.3 20030304 (Apple Computer, Inc. build 1809)] on darwin
Type "help", "copyright", "credits" or "license" for more
information.
>>> ^D
Weusedanordinaryend-of-ﬁle( Control-D)toexitfromPython.
Inthiscase,theversionnumberis2.3.5,whichisgood,butweneedtoinstallanupgrade.
3.3.2 YUM Installation
IfyouareaRedHatorFedorauser,youlikelyhaveaprogramnamed Yum. Ifyoudon’thaveYum,you
shouldupgradetoFedoraCore11.
NotethatYumrepositoriesdonotcovereverycombinationofoperatingsystemandPythondistribution. In
thesecases,youshouldconsideranoperatingsystemupgradeinordertointroduceanewPythondistribution.
Ifyouhaveanout-of-datePython,you’llhavetoentertwocommandsintheTerminalwindow.
26 Chapter 3. Python Installation
Building Skills in Python, Release 2.6.5
yum upgrade python
yum install tkinter
The ﬁrst command will upgrade the Python 2.6 distribution. You can use the command ” ‘ install’ ”
insteadof”‘ upgrade’”intheunlikelyeventthatyousomehowhaveYum,butdon’thavePython.
Thesecondcommandwillassurethattheextensionpackagenamed tkinterispartofyourFedorainstal-
lation. Itisnot,typically,providedautomatically. You’llneedthistomakeuseofthe IDLEprogramused
extensivelyinlaterchapters.
Insomecases,youwillalsowantapackagedcalledthe“PythonDevelopmentTools”. Thisincludessome
partsthatareusedbyPythonadd-onpackages.
3.3.3 RPM Installation
Many variants of GNU/Linux use the Red Hat Package Manager (RPM). The rpmtool automates the
installation of software and the important dependencies among software components. If you don’t know
whether on not your GNU/Linux uses the Red Hat Package manager, you’ll have to ﬁnd a GNU/Linux
experttohelpyoumakethatdetermination.
RedHatLinux(andtherelatedFedoraCoredistributions)haveaversionofPythonpre-installed.Sometimes,
thepre-installedPythonisanolderreleaseandneedsanupgrade.
ThisbookwillfocusonFedoraCoreGNU/Linuxbecausethat’swhatIhaverunning. Speciﬁcally,Fedora
Core8. YoumayhaveadiﬀerentGNU/Linux,inwhichcase,thisprocedureisclose,butmaynotbeprecisely
whatyou’llhavetodo.
TheRedHatandFedoraGNU/LinuxinstallationofPythonhasthreebroadsteps.
1.Pre-installation: makebackups.
2.Installation: installPython. We’llfocusonthesimplestkindofinstallation.
3.Post-installation: checktobesureeverythingworked.
We’llgothrougheachoftheseindetail.
3.3.4 RPM Pre-Installation
Beforeinstallingsoftware,backupyourcomputer.
Youshouldalsohaveadirectoryforsavingyourdownloads. Irecommendthatyoucreatea /optdirectory
forthesekindsofoptionswhichareaboveandbeyondthebasicLinxinstallation. Youcankeepallofyour
variousdownloadedtoolsandutilitiesinthisdirectoryfortworeasons. Ifyouneedtoreinstallyoursoftware,
youknowexactlywhatyoudownloaded. Whenyougetanewcomputer(oranadditionalcomputer),you
knowwhatneedstobeinstalledonthatcomputer.
3.3.5 RPM Installation
AtypicalscenarioforinstallingPythonisacommandlikethefollowing. Thishasspeciﬁcﬁlenamesfor
FedoraCore9. You’llneedtolocateappropriateRPM’sforyourdistributionofLinux.
rpm -i http://download.fedora.redhat.com/pub/fedora/linux/development\
/i386/os/Packages/python-2.5.1-18.fc9.i386.rpm
3.3. GNU/Linux and UNIX Overview 27
Building Skills in Python, Release 2.6.5
Often, that’s all there is to it. In some cases, you’ll get warnings about the DSA signature. These are
expected,sincewedidn’ttellRPMthepublickeythatwasusedtosignthepackages.
3.3.6 RPM Post-Installation
Important: Testing
RuntheTerminaltool. Atthecommandlineprompt,enter‘ env python’,andseewhathappens.
[slott@localhost trunk ]$env python
Python 2.6 (r26:66714, Jun 8 2009, 16:07:26 )
[GCC 4.4.0 20090506 (Red Hat 4.4.0-4 )]on linux2
Type"help","copyright" ,"credits" or"license" formore information.
>>>
Ifyouhit Ctrl-D(theGNU/Linuxend-of-ﬁlecharacter),Pythonwillexit. ThebasicPythonprogramworks.
3.4 “Build from Scratch” Installation
TherearemanyGNU/Linuxvariants,andwecan’tevenbegintocovereachvariant. Youcanuseasimilar
installationonWindowsortheMacOS,ifyouhavetheGCCcompilerinstalled. Here’sanoverviewofhow
toinstallusingalargelymanualsequenceofsteps.
1.Pre-Installation . Makebackupsanddownloadthesourcekit. You’relookingfortheaﬁlenamed
python-2.5.x.tgz .
2.Installation. Theinstallationinvolvesafairlycommonsetofcommands. Ifyouareanexperienced
systemadministrator,butanoviceprogrammer,youmayrecognizethese.
Changetothe /opt/pythondirectorywiththefollowingcommand.
cd/opt/python
Unpackthearchiveﬁlewiththefollowingcommand.
tar -zxvf Python-2.6.x.tgz
DothefollowingfourcommandstoconﬁguretheinstallationscriptsandmakethePythonpackage.
andtheninstallPythononyourcomputer.
cdPython-2.6
./configure
make
Asroot,you’llneedtodothefollowingcommand. Eitheruse sudoorsutotemporarilyelevateyour
privileges.
make install
3.Post-installation . Checktobesureeverythingworked.
Important: Testing
RuntheTerminaltool. Atthecommandlineprompt,enter‘ env python’,andseewhathappens.
28 Chapter 3. Python Installation
Building Skills in Python, Release 2.6.5
[slott@localhost trunk ]$env python
Python 2.6 (r26:66714, Jun 8 2009, 16:07:26 )
[GCC 4.4.0 20090506 (Red Hat 4.4.0-4 )]on linux2
Type"help","copyright" ,"credits" or"license" formore information.
>>>
If you hit Ctrl-D(the GNU/Linux end-of-ﬁle character), Python will exit. The basic Python program
works.
Tip:DebuggingOtherUnixInstallation
Themostlikelyproblemyou’llencounterindoingagenericinstallationisnothavingtheappropriateGNU
GCCcompiler. Inthiscase,youwillseeerrormessagesfrom conﬁgurewhichidentiﬁesthelistofmissing
packages. InstallingtheGNUGCCcanbecomeacomplexundertaking.
3.4. “Build from Scratch” Installation 29
Building Skills in Python, Release 2.6.5
30 Chapter 3. Python Installation
CHAPTER
FOUR
GETTING ST ARTED
Interacting with Python
Pythonisaninterpreted,dynamiclanguage. ThePythoninterpretercanbeusedintwomodes: interactive
andscripted. In interactivemode,Pythonrespondstoeachstatementwhilewetype. In scriptmode,we
give Python a ﬁle of statements and turn it loose to interpret all of the statements in that script. Both
modesproduceidenticalresults. Whenwe’reproducingaﬁnishedapplicationprogram,wesetituptorun
asascript. Whenwe’reexperimentingorexploring,however,wemayusePythoninteractively.
We’lldescribetheinteractivecommand-linemodeforenteringsimplePythonstatementsin Command-Line
Interaction. In The IDLE Development Environment we’llcoverthebasicsofinteractivePythonintheIDLE
environment. We’lldescribesthescriptmodeforrunningPythonprogramﬁlesin Script Mode.
We’lllookatthehelpﬁunctionin Getting Help.
Oncewe’vestartedinteractingwithPython,wecanaddresssomesyntaxissuesin Syntax F ormalities . We’ll
mentionsomeotherdevelopmenttoolsin Other T ools. We’llalsoaddresssome“style”issuesin Style Notes:
Wise Choice of File Names .
4.1 Command-Line Interaction
We’lllookatinteractiononthecommandlineﬁrst,becauseitisthesimplestwaytointeractwithPython.
Itparallelsscriptedexecution,andhelpsusvisualizehowPythonapplicationprogramswork. Thisisthe
heartofIDLEaswellasthefoundationforanyapplicationprogramswebuild.
Thisisnottheonlyway–oreventhemostpopularway–torunPython. Itis,however,thesimplestand
servesasagoodplacetostart.
4.1.1 Starting and Stopping Command-Line Python
StartingandstoppingPythonvarieswithyouroperatingsystem. Generally,allofthevariationsarenearly
identical,anddiﬀeronlyinminordetails.
Windows. TherearetwowaystostartinteractivePythonunderWindows.
1.Youcanrunthecommandtool( cmd.exe)andenterthepythoncommand.
2.Youcanrunthe Python(CommandLine) programunderthe Python2.6menuitemonthe Start
menu.
31
Building Skills in Python, Release 2.6.5
ToexitfromPython,entertheend-of-ﬁlecharactersequence, Control-ZandReturn.
MacOS,GNU/LinuxandUnix . Youwillrunthe Terminaltool. Youcanenterthecommand python
tostartinteractivePython.
ToexitfromPython,entertheend-of-ﬁlecharacter, Control-D.
4.1.2 Entering Python Statements
WhenwerunthePythoninterpreter(called python,orPython.exeinWindows),weseeagreetinglike
thefollowing:
[slott@localhost trunk]$ env python
Python 2.6 (r26:66714, Jun 8 2009, 16:07:26)
[GCC 4.4.0 20090506 (Red Hat 4.4.0-4)] on linux2
Type "help", "copyright", "credits" or "license" for more information.
>>>
Whenwegetthe >>>prompt,thePythoninterpreterislookingforinput.WecantypeanyPythonstatements
wewant.
Eachcompletestatementisexecutedwhenitisentered.
Inthissectiononly,we’llemphasizethepromptsfromPython. Thiscanhelpnewbiesseethecompletecycle
ofinteractionbetweenthemselvesandthePythoninterpreter. Inthelongrunwe’llbewritingscriptsand
won’temphasizethislevelofinteraction.
We’llonlycoverafewkeyrules. Therestoftherulesarein Syntax F ormalities .
Rule1. TheessentialruleofPythonsyntaxisthatastatementmustbecompleteonasingleline. There
aresomeexceptions,whichwe’llgettobelow.
>>>2+3
5
ThisshowsPythondoingsimpleintegerarithmetic. Whenyouentered 2 + 3andthenhit Return, the
Pythoninterpreterevaluatedthisstatement. Sincethestatementwasonlyanexpression,Pythonprinted
theresults.
We’lldigintotothevariouskindsofnumbersin Simple Numeric Expressions and Output . Fornow, it’s
enoughtoknowthatyouhaveintegersandﬂoating-pointnumbersthatlookmuchlikeotherprogramming
languages. Asasidenote,integershavetwoslightlydiﬀerentﬂavors–fast(butsmall)andlong(butslow).
Pythonpreferstousethefastintegers(called int)untilyournumbersgetsohugethatithastoswitchto
long.
Arithmetic operators include the usual culprits: ‘ +’ , ‘-’ , ‘*’, ‘/’ , ‘%’ and ‘**’ standing for addition,
subtraction,multiplication,division,modulo(remainderafterdivision)andraisingtoapower. Theusual
mathematicalrulesofoperatorprecedence(multiplysanddividesdonebeforeaddsandsubtracts)areinfull
force,and‘ (’and‘)’areusedtogrouptermsagainstprecedencerules.
Forexample,converting65°FahrenheittoCelsiusisdoneasfollows:
>>>(65-32)*5/9
18
>>>(65.-32)*5/9
18.333333333333332
>>>
32 Chapter 4. Getting Started
Building Skills in Python, Release 2.6.5
Note that the ﬁrst example used all integer values, and the result was an integer result. In the second
example,thepresenceofaﬂoatcausedallthevaluestobecoercedtoﬂoat.
AlsonotethatPythonhasthestandard“binary-to-decimal”precisionissue. Theactualvaluecomputeddoes
nothaveaprecisebinaryrepresentation, andthedefaultdisplayofthedecimalequivalentlooksstrange.
We’llreturntothisin Numeric T ypes and Operators .
IncompleteStatements . Whathappenswhenanexpressionstatementisobviouslyincomplete?
>>>(65-32)*5/
File"<stdin>" , line1
(65-32)*5/
^
SyntaxError : invalid syntax
Parenthensis . Thereisanescapeclauseinthebasicruleof“onestatementoneline”. Whentheparenthesis
areincomplete,Pythonwillallowthestatementtorunontomultiplelines.
Pythonwillchangethepromptto ...toshowthatthestatementisincomplete,andmoreisexpected.
>>>(65-32
...)*5/9
18
Rule5. Itisalsopossibletocontinuealongstatementusinga‘ \’escapeattheendoftheline.
>>>5+6*\
...7
47
This escapeallowsyoutobreakupanextremelylongstatementforeasyreading.
Indentation. Pythonreliesheavilyonindendentationtomakeaprogramreadable. Wheninteractingwith
Python, weareoftentypingsimpleexpressionstatements, whicharenotindented. Later, whenwestart
typingcompoundstatements,indentationwillbegintomatter.
Here’swhathappensifwetrytoindentasimpleexpressionstatement.
>>> 5+6
SyntaxError: invalid syntax
Notethatsomestatementsarecalled compound statements –theycontainanindentedsuiteofstatements.
Pythonwillchangethepromptto ...andwaituntiltheentirecompoundstatementisenteredbeforeit
doesdoestheevaluation.
We’llreturntothesewhenit’sappropriatein T ruth, Comparison and Conditional Processing .
History. Whenwetypeanexpressionstatement,Pythonevaluatesitanddisplaystheresult. Whenwe
typeallotherkindsofstatements,Pythonexecutesitsilently. We’llseemoreofthis,startingin V ariables,
Assignment and Input .
Small mistakes can be frustrating when typing a long or complex statement. Python has a reasonable
commandhistorycapability,soyoucanusethe up-arrowkeytorecoverapreviousstatement. Generally,
you’llprefertocreatescriptﬁlesandrunthescripts. Whendebuggingaproblem,however,interactivemode
canbehandyforexperimenting.
Oneofthedesirablefeaturesofwell-writtenPythonisthatmostthingscanbetestedanddemonstratedin
smallcodefragments.Oftenasinglelineofeasy-to-entercodeisthedesiredstyleforinterestingprogramming
4.1. Command-Line Interaction 33
Building Skills in Python, Release 2.6.5
features. ManyexamplesinreferencemanualsandunittestscriptsaresimplycapturesofinteractivePython
sessions.
4.2 The IDLE Development Environment
Thereareanumberofpossibleintegrateddevelopmentenvironments(IDE)forPython. Pythonincludes
theIDLEtool,whichwe’llemphasize. Additionally,youcandownloadorpurchaseanumberofIDE’sthat
supportPython. In Other T oolswe’lllookatotherdevelopmenttools.
Startingandstopping IDLEvarieswithyouroperatingsystem. Generally,allofthevariationsarenearly
identical,anddiﬀeronlyinminordetails.
4.2.1 IDLE On Windows
Thereareseveralwaystostart IDLEinWindows.
1.YoucanuseIDLE(PythonGUI) fromthePython2.6menuontheStartmenu.
2.You can also run IDLEfrom the command prompt. This requires two conﬁguration settings in
Windows.
•Assurethat C:Python26\Lib\idlelib onyoursystemPATH.Thisdirectorycontains IDLE.BAT
.
•Assure that .pywﬁles are associated with C:\Python26\pythonw.exe . In order to suppress
creationofaconsolewindowforaGUIapplication,Windowsoﬀers pythonw.exe.
YoucanquitIDLEbyusingtheQuitmenuitemunderthe Filemenu.
4.2.2 IDLE On Mac OS X
IntheMacOS,ifyou’vedoneanupgrade,youmayﬁndthe IDLEprograminthe Python 2.6folderin
yourApplications folder. Youcandouble-clickthisicontorun IDLE.
If you have the baseline application, you’ll have to ﬁnd IDLE in the directory
/System/Library/Frameworks/Python.framework/Versions/Current/bin . Generally, this is direc-
torypartofyour PATHsetting, andyoucantypethecommand idle&inaTerminalwindowtostart
IDLE.
WhenyourunIDLEbydouble-clickingthe idleicon,you’llnoticethattwowindowsareopened:a Python
ShellwindowandaConsolewindow. TheConsolewindowisn’tusedformuch.
WhenyourunIDLEfromtheTerminalwindow,noconsolewindowisopened. TheTerminalwindowis
thePythonconsole.
YoucanquitIDLEbyusingtheQuitmenuitemunderthe Filemenu. Youcanalsoquitbyusingthe
QuitIdlemenuitemunderthe Idlemenu.
SincetheMacintoshkeyboardhasacommandkey, ￿,aswellasacontrolkey, ctrl,therearetwokeyboard
mappingsforIDLE.Youcanusethe ConﬁgureIDLE... itemundertheOptionsmenutoselectanyof
thebuilt-inKeySets. Selectingthe IDLEClassicMac settingsmaybemorecomfortableforMacOS
users.
34 Chapter 4. Getting Started
Building Skills in Python, Release 2.6.5
4.2.3 IDLE on GNU/Linux
We’llavoidtheGNOMEandKDEsubtleties. Instead,we’llfocusonrunning IDLEfromtheTerminal
tool. Sincetheﬁlepathisratherlong,you’llwanttoedityour .profile(or.bash_profile )toinclude
thefollowingaliasdeﬁnition.
alias idle='env python /usr/lib/python2.5/idlelib/idle.py &'
Thisallowsyoutorun IDLEbyenteringthecommand idleinaTerminalwindow.
YoucanquitIDLEbyusingtheExitmenuitemunderthe Filemenu.
4.2.4 Basic IDLE Operations
Initially,you’llseethefollowinggreetingfrom IDLE.
Python 2.6.3 (r263:75184, Oct 2 2009, 07:56:03)
[GCC 4.0.1 (Apple Inc. build 5493)] on darwin
Type "copyright", "credits" or "license()" for more information.
****************************************************************
Personal firewall software may warn about the connection IDLE
makes to its subprocess using this computer's internal loopback
interface. This connection is not visible on any external
interface and no data is sent to or received from the Internet.
****************************************************************
IDLE 2.6.3
>>>
Youmaynoticea Helpmenu. Thishasthe PythonDocs menuitem,whichyoucanaccessthroughthe
menuorbyhitting F1. Thiswilllaunch SafaritoshowyouthePythondocumentsavailableontheInternet.
Thepersonalﬁrewallnotiﬁcationisareminderthat IDLEusesInternetworkingProtocols(IP)aspartofits
debugger. Ifyouhaveasoftwareﬁrewallonyoudevelopmentcomputer,andtheﬁrewallsoftwarecomplains,
youcanallowtheconnection.
IDLEhasasimpleandrelativelystandardtexteditor,whichdoesPythonsyntaxhighlighting. Italsohasa
PythonShell windowwhichmanagesaninteractivePythonsession. Youwillseethatthe PythonShell
windowhasaShellandaDebugmenu.
Whenyouusethe Newmenuiteminthe Filemenu,you’llseeaﬁlewindow,whichhasaslightlydiﬀerent
menubar. Aﬁlewindowhasnamewhichisaﬁlename(or untitled),andtwouniquemenus,a Runanda
Formatmenu.
Generally,you’lluse IDLEintwoways:
•You’llenterPythonstatementsinthe PythonShell window.
•You’llcreateﬁles,andrunthosemoduleﬁlesusingthe RunModule itemintheRunmenu. This
optionisusually F5.
4.2.5 The Shell Window
ThePython Shell window inIDLEpresents a >>>prompt. At this prompt, you can enter Python
expressionsorstatementsforevaluation. Thiswindowhasacompletecommandhistory,soyoucanusethe
up arrowtoselectapreviousstatementandmakechanges.
4.2. The IDLE Development Environment 35
Building Skills in Python, Release 2.6.5
Youcanreferbackto Command-Line Interaction ;thoseinteractionswilllookandbehavethesamein IDLE
astheydoonthecommandline.
TheShellWindow isessentiallythecommand-lineinterfacewrappedinascrollingwindow. The IDLEin-
terface,however,providesaconsistentworkingenvironment,whichisindependentofeachoperatingsystem’s
command-lineinterface.
TheShellandDebugmenusprovidesfunctionsyou’llusewhendevelopinglargerprograms. Forourﬁrst
stepswithPython,wewon’tneedeitherofthesemenus. We’lltalkbrieﬂyaboutthefunctions,butcan’t
reallymakeuseofthemuntilwe’velearnedmoreofthelanguage.
TheShellMenu . TheShellmenuisusedtorestartthePythoninterpreter,orscrollbackthroughthe
shell’slogtolocatethemostrecentrestart. Thisisimportantwhenyouaredevelopingamodulethatis
usedasalibrary. Whenyouchangethatmodule,youneedtoresettheshellsothatthepreviousversionis
forgottenandthenewversioncanbeimportedintoafresh,emptyinterpreter.
Generally,beingabletoworkinteractivelyisthebestwaytodevelopworkingprograms. Itencouragesyou
tocreatetidy,simple-lookingcomponentswhichyoucanexercisedirectly.
TheDebugMenu . TheDebugmenuprovidessomehandytoolsforwatchinghowPythonexecutesa
program.
•TheGotoFile/Line itemisusedtolocatethesourceﬁlewhereanexceptionwasraised. Youclick
ontheexceptionmessagewhichcontainstheﬁlenameandselectthe GotoFile/Line menuitem,
andIDLEwillopentheﬁleandhighlighttheselectedline.
•TheDebuggeritemopensaninteractivedebuggerwindowthatallowsyoutostepthroughtheexe-
cutingPythonprogram.
•TheStack Viewer item opens a window that displays the current Python stack. This shows the
argumentsandworkingvariablesin thePythoninterpereter. Thestackisorganized intolocal and
global namespaces,aconceotweneedtodelveintoin V ariables, Assignment and Input .
•TheAuto-openStackViewer optionwillopenthe StackViewer automaticallywhenaprogram
raisesanunhandledexception. Howexceptionsareraisedandhandledisaconceptwe’lldelveintoin
Exceptions.
4.2.6 The File Windows
Eachﬁle windowin IDLEisa simple texteditor withtwoadditional menus. The Formatmenuhas a
seriesofitemsforfairlycommonsourcetextmanipulations. Theformattingoperationsincludeindenting,
commenting,handlingtabsandformattingtextparagraphs.
TheRunmenumakesiteasytoexecutetheﬁleyouareediting.
•ThePythonShell menuitembringsupthe PythonShell window.
•TheCheckModule itemchecksthesyntaxforyourﬁle. Ifthereareanyerrors, IDLEwillhighlight
theoﬀendinglinesoyoucanmakechanges. Additionally,thisoptionwillcheckforinconsistentuseof
tabsandspacesforindentation.
•TheRunModule ,F5,runstheentireﬁle. You’llseetheoutputinthe PythonShell window.
4.3 Script Mode
Ininteractivemode,Pythondisplaystheresultsofexpressions. Inscriptmode,however,Pythondoesn’t
automaticallydisplayresults.
36 Chapter 4. Getting Started
Building Skills in Python, Release 2.6.5
InordertoseeoutputfromaPythonscript,we’llintroducethe printstatementandthe print()function.
TheprintstatementisthePython2.6legacyconstruct.
Theprint()functionisanewPython3constructthatwillreplacethe printstatement. We’llvisitthis
topicindepthin Seeing Output with the print() F unction (or print Statement) .
Fornow,youcanuseeitherone. We’llshowboth. Inthefuture,the printstatementwillberemovedfrom
thelanguage.
4.3.1 The print Statement
Theprintstatementtakesalistofvaluesandprintstheirstringrepresentationonthestandardoutputﬁle.
Thestandardoutputistypicallydirectedtothe Terminalwindow.
print"PI =",355.0/113.0
WecanhavethePythoninterpreterexecuteourscriptﬁles. Applicationprogramscriptscanbeofanysize
orcomplexity. Forthefollowingexamples,we’llcreateasimple,two-linescript,called example1.py.
example1.py
print65,"F"
print(65-32)*5/9,"C"
4.3.2 Theprint() function
Theprint()functionstakesalistofvaluesandprintstheirstringrepresentationonthestandardoutput
ﬁle. Thestandardoutputistypicallydirectedtothe Terminalwindow.
Until Python 3, we have to request the print()function with a special introductory statement: ‘ from
__future__ import print_function ’.
from__future__ importprint_function
print("PI =",355.0/113.0)
WecanhavethePythoninterpreterexecuteourscriptﬁles. Applicationprogramscriptscanbeofanysize
orcomplexity. Forthefollowingexamples,we’llcreateasimple,two-linescript,called example1.py.
example1.py
from__future__ importprint_function
print(65,"F")
print( (65-32)*5/9,"C")
4.3.3 Running a Script
ThereareseveralwayswecanstartthePythoninterpreterandhaveitevaluateourscriptﬁle.
4.3. Script Mode 37
Building Skills in Python, Release 2.6.5
•Explicitlyfromthecommandline. Inthiscasewe’llberunningPythonandprovidingthenameofthe
scriptasanargument.
We’lllookatthisindetailbelow.
•Implicitlyfromthecommandline. Inthiscase,we’lleitherusetheGNU/Linuxshellcomment(sharp-
bangmarker)orwe’lldependontheﬁleassociationinWindows.
Thisisslightlymorecomplex,andwe’lllookatthisindetailbelow.
•Manuallyfromwithin IDLE.It’simportantfornewbiestorememberthat IDLEshouldn’tbepart
oftheﬁnaldeliveryofaworkingapplication. However,thisisagreatwaytostartdevelopmentofan
applicationprogram.
Wewon’tlookatthisindetailbecauseit’ssoeasy. Hit F5. MacBookusersmayhavetohit fnand
F5.
RunningPythonscriptsfromthecommand-lineappliestoalloperatingsystems. Itisthecoreofdelivering
ﬁnalapplications. Wemayaddaniconforlaunchingtheapplication,butunderthehood,anapplication
programisessentiallyacommand-linestartofthePythoninterpreter.
4.3.4 Explicit Command Line Execution
The simplest way to execute a script is to provide the script ﬁle name as a parameter to the python
interpreter. Inthisstyle,weexplicitlynameboththeinterpreterandtheinputscript. Here’sanexample.
python example1.py
Thiswillprovidethe example1.pyﬁletothePythoninterpreterforexecution.
4.3.5 Implicit Command-Line Execution
We can streamline the command that starts our application. For POSIX-standard operating systems
(GNU/Linux, UNIX and MacOS), we make the script ﬁle itself executable and directing the shell to lo-
catethePythoninterpreterforus. ForWindowsusers, weassociateourscriptﬁlewiththe python.exe
interpreter. Thereareoneortwostepstothis.
1.AssociateyourﬁlewiththePythoninterpreter. ExceptforWindows,youmakesuretheﬁrstlineis
thefollowing: ‘ #!/usr/bin/env python ’. ForWindows,youmustassurethat .pyﬁlesareassociated
withpython.exeand.pywﬁlesareassociatedwith pythonw.exe.
Thewholeﬁlewilllooklikethis:
#!/usr/bin/env python
print65,"F"
print(65-32)*5/9,"C"
2.ForPOSIX-standardoperatingsystems,doa chmod+xexample1.py tomaketheﬁle example1.py
executable. Youonlydothisonce,typicallytheﬁrsttimeyoutrytoruntheﬁle. ForWindows,you
don’tneedtodothis.
NowyoucanrunascriptinmostGNU/Linuxenvironmentsbysaying:
./example1.py
38 Chapter 4. Getting Started
Building Skills in Python, Release 2.6.5
4.3.6 Windows Conﬁguration
Windows users will need to be sure that python.exeis on theirPATH. This is done with the System
controlpanel. Clickonthe Advancedtab. Clickonthe EnvironmentVariables... button. Clickonthe
Systemvariables Pathline,andclickthe Edit...button. Thiswilloftenhavealonglistofitems,sometimes
startingwith‘ %SystemRoot% ’. Attheendofthislist,add‘ ";"’andthedirectionlocationof Python.exe.
Onmymachine,Iputitin C:\Python26.
For Windows programmers, the windows command interpreter uses the last letters of the ﬁle name to
associate a ﬁle with an interpreter. You can have Windows run the python.exeprogram whenever you
double-clicka .pyﬁle. Thisisdonewiththe FolderOptions controlpanel. The FileTypestaballows
youtopairaﬁletypewithaprogramthatprocessestheﬁle.
4.3.7 GNU/Linux Conﬁguration
We have to be sure that the Python interpreter is in value of the PATHthat our shell uses. We can’t
delveintothedetailsofeachoftheavailableUNIXShells. However,thegeneralruleisthatthepersonwho
administersyourPOSIXcomputershouldhaveinstalledPythonandupdatedthe /etc/profile tomake
Pythonavailabletoallusers. If,forsomereasonthatdidn’tgetdone,youcanupdateyourown .profile
toaddPythontoyour PATHvariable.
TheSharp-Bang(“shebang”)Comment
The‘#!’ techniquedependsonthewayallofthePOSIXshellshandlescriptinglanguages. Whenyou
enteracommandthatisthenameofaﬁle, theshellmustﬁrstchecktheﬁleforthe“x”(execute)
mode;thiswasthemodeyouaddedwith chmod+x.
Whenexecutemodeistrue,theshellmustthenchecktheﬁrstfewbytestoseewhatkindofﬁleitis.
Theﬁrstfewbytesaretermedthe magic number;deepinthebowelsofGNU/Linuxthereisadatabase
thatshowswhatthemagicnumbermeans,andhowtoworkwiththevariouskindsofﬁles. Someﬁles
arebinaryexecutables,andtheoperatingsystemhandlesthesedirectly.
Whenanexecutableﬁle’scontentbeginswith‘ #!’,itisascriptﬁle. Therestoftheﬁrstlinenames
theprogramthatwillinterpretthescript. Inthiscase,weaskedthe envprogramtoﬁndthe python
interpreter. Theshellﬁndsthenamedprogramandrunsitautomatically,passingthenameofscript
ﬁleasthelastargumenttotheinterpreteritfound.
Theverycoolpartofthistrickisthat‘ #!’ isa commenttoPython. Thisﬁrstlineis,ineﬀect,directed
attheshell,andignoredbyPython. Theshellglancesatittoseewhatthelanguageis,andPython
studiouslyignoresit,sinceitwasintendedfortheshell.
4.3.8 Another Script Example
Throughouttherestofthisbook,we’regoingtousethisscriptprocessingmodeasthestandardwaytorun
Pythonprograms. Manyoftheexampleswillbeshownasthoughaﬁlewassenttotheinterpreter.
Fordebuggingandtesting,itissometimesusefulto importtheprogramdeﬁnitions,anddosomemanipu-
lationsinteractively. We’lltouchonthisin Hacking Mode.
Here’s a second example. We’ll create a new ﬁle and write another small Python program. We’ll call it
example2.py.
4.3. Script Mode 39
Building Skills in Python, Release 2.6.5
example2.py
#!/usr/bin/env python
"""Compute the odds of spinning red (or black) six times in a row
on an American roulette wheel. """
print(18.0/38.0)**6
Thisisaone-linePythonprogramwithatwolinemoduledocumentstring. That’sagoodratiotostrive
for.
Afterweﬁnishediting,wemarkthisasexecutableusing‘ chmod +x example2.py ’. Sincethisisaproperty
oftheﬁle,thisremainstruenomatterhowmanytimesweedit,copyorrenametheﬁle.
Whenwerunthis,weseethefollowing.
$./example2.py
0.0112962280375
Whichsaysthatspinningsixredsinarowisaboutaoneineighty-nineprobability.
4.4 Getting Help
Pythonhastwoclosely-relatedhelpmodes. Oneisthegeneral“help”utility,theotherisahelpfunction
thatprovidesthedocumentationonaspeciﬁcobject,module,functionorclass.
4.4.1 Thehelp() Utility
Helpisavailablethroughthe help()function.
Ifyouenterjust‘ help()’youwillentertheonlinehelputility. Thishelputilityallowsyoutoexplorethe
Pythondocumentation.
Theinteractionlookslikethis:
>>>help
Type help() for interactive help, or help(object) for help about object.
>>>help()
Welcome to Python 2.5! This is the online help utility.
If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://www.python.org/doc/tut/.
Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules. To quit this help utility and
return to the interpreter, just type "quit".
To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics". Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".
help>
40 Chapter 4. Getting Started
Building Skills in Python, Release 2.6.5
NotethatthepromptchangesfromPython’sstandard‘ >>>’toaspecialhelp-modepromptof‘ help>’.
Whenyouenter‘ quit’,youexitthehelpsystemandgobacktoPython’sordinaryprompt.
Tostart,enter:samp:’modules’,:samp:’keywords’or:samp:’topics’toseethevarietyofinformationavailable.
4.4.2 Help on a speciﬁc topic
Ifyouenter‘ help( object ) ’forsomeobject,youwillbegivenhelponthatspeciﬁcobject. Thishelpis
displayedusinga“helpviewer”.
You’llentersomethinglikethis:
>>>help("EXPRESSIONS ")
You’llgetapageofoutput,endingwithaspecialpromptfromtheprogramthat’shelpingtodisplaythe
helpmessages. Thepromptvaries: MacOS andGNU/Linuxwill showoneprompt, Windowswillshow
another.
Mac OS and GNU/Linux . In standard OS’s, you’re interacting with a program named less; it will
promptyouwith :forallbutthelastpageofyourdocument. Forthelastpageitwillpromptyouwith
(END).
Thisprogramisverysophisticated. Thefourmostimportantcommandsyouneedtoknowarethefollowing.
qQuitthelesshelpviewer.
hGethelponallthecommandswhichareavailable.
␣Enteraspacetoseethenextpage.
bGobackonepage.
Windows. InWindows,you’reinteractingwithaprogramnamed more;itwillpromptyouwith -- More
--. Thefourimportantcommandsyou’llneedtoknowarethefollowing.
qQuitthemorehelpviewer.
hGethelponallthecommandswhichareavailable.
␣Enteraspacetoseethenextpage.
4.5 Syntax Formalities
What is a Statement?
Informally,we’veseenthatsimplePythonstatementsmustbecompleteonasingleline. Aswewillseein
followingchapters,compoundstatementsarebuiltfromsimpleandcompoundstatements.
Fundamentally,Pythonhasasimpleequivalencebetweenthelexicallinestructureandthestatementsina
Pythonprogram. Thisforcesustowritereadableprogramswithonestatementperline. Therearenine
formalrulesforthelexicalstructureofPython.
1.Simple statements must be complete on a single Logical Line. Starting in T ruth, Comparison and
Conditional Processing we’lllookatcompoundstatements,whichhaveindentedsuitesofstatements,
andwhichspanmultipleLogicalLines. TherestoftheseruleswilldeﬁnehowLogicalLinesarebuilt
fromPhysicalLinesthroughafewLineJoiningrules.
4.5. Syntax Formalities 41
Building Skills in Python, Release 2.6.5
2.PhysicalLinesaredeﬁnedbytheplatform;they’llendinstandard‘ n’ortheWindowsASCII‘ CR’‘LF’
sequence(‘ \r\n’).
3.Commentsstartwiththe‘ #’characteroutsideaquotedstring;commentsendattheendofthephysical
line. Thesearenotpartofastatement; theymayoccuronalinebythemselvesorattheendofa
statement.
4.Coding-SchemeComments. SpecialcommentsthatarebyVIMorEMACScanbeincludedintheﬁrst
orsecondlineofaPythonﬁle. Forexample,‘ # -*- coding: latin1 -*- ’
5.ExplicitLineJoining. A‘ \’attheendofaphysicallinejoinsittothenextphysicallinetomake
alogicalline. This escapestheusualmeaningofthelineendsequence. Thetwoorthree-character
sequences(‘ \n’or‘\r\n’)aretreatedasasinglespace.
6.ImplicitLineJoining. Expressionswith‘ ()’‘s,‘[]’‘sor‘{}’‘scanbesplitintomultiplephysicallines.
7.BlankLines. Whenenteringstatementsinteractively,anextrablanklineistreatedastheendofan
indentedblockinacompoundstatement. Otherwise,blanklineshavenosignﬁcance.
8.Indentation. The embedded suite of statements in a compound statement must be indented by a
consistentnumberofspacesortabs. Whenenteringstatementsinteractivelyorinaneditorthatknows
Pythonsyntax(like IDLE),theindentationwillhappenautomatically;youwilloutdentbytypinga
singlebackspace. Whenusinganothertexteditor,youwillbemostsuccessfulifyouconﬁgureyour
editortousefourspacesinplaceofatab. Thisgivesyourprogramsaconsisentlookandmakesthem
portableamongawidevarietyofeditors.
9.Whitespaceatthebeginningofalineispartofindentation,andissigniﬁcant. Whitespaceelsewhere
withinalineisnotsigniﬁcant. FeelfreetospacethingsoutsothattheyreadmorelikeEnglishand
lesslikecomputer-ese.
4.6 Exercises
4.6.1 Command-Line Exercises
1. Simple Commands . Enterthefollowingone-linecommandstoPython:
•copyright
•license
•credits
•help
2. Simple Expressions . Enterone-linecommandstoPythontocomputethefollowing:
•12345+23456
•98765-12345
•128*256
•22/7
•355/113
•(18-32)*5/9
•-10*9/5+32
42 Chapter 4. Getting Started
Building Skills in Python, Release 2.6.5
4.6.2 IDLE Exercises
1.CreateanExercisesDirectory . Createadirectory(orfolder)forkeepingyourvariousexercise
scripts. BesureitisnotinthesamedirectoryinwhichyouinstalledPython.
2.UseIDLE’sShellWindow . StartIDLE.Referbacktotheexercisesin Command-Line Interaction
. Runtheseexercisesusing IDLE.
3.UsetheIDLEFileWindow . StartIDLE.Notetheversionnumber. Use NewWindow under
theFilemenutocreateasimpleﬁle. Theﬁleshouldhavethefollowingcontent.
""" My First File """
print__doc__
Savethisﬁleinyourexercisesdirectory;besurethenameendswith .py. Runyourﬁlewiththe Run
Modulemenuiteminthe Runmenu,usually F5.
4.6.3 Script Exercises
1.PrintScript. CreateandrunPythonﬁlewithcommandslikethefollowingexamples:
print12345+23456
print98765-12345
print128*256
print22/7
Or,usetheprintfunctionasfollows.
from__future__ importprint_function
print(12345+23456)
print(98765-12345)
print(128*256)
print(22/7)
2.Another Simple Print Script . Create and run a Python ﬁle with commands like the following
examples:
print"one red",18.0/38.0
print"two reds in a row ", (18.0/38.0)**2
Or,usetheprintfunctionasfollows.
from__future__ importprint_function
print("one red",18.0/38.0)
print("two reds in a row ", (18.0/38.0)**2)
3.InteractiveDiﬀerences . First,runIDLE(orPython)interactivelyandenterthefollowing“com-
mands”: copyright,license,credits. Thesearespecialglobalobjectsthatprintinterestingthings
ontheinteractivePythonconsole.
Create a Python ﬁle with the three commands, each one on a separate line: copyright,license,
credits. Whenyourunthis,itdoesn’tproduceanyoutput,nordoesitproduceanerror.
Now create a Python ﬁle with three commands, each on a separate line: print copyright ,print
license,printcredits.
4.6. Exercises 43
Building Skills in Python, Release 2.6.5
Interestingly,thesethreeglobalvariableshavediﬀerentbehaviorwhenusedinascript. Thisisrare.
Bydefault,therearejustthreemorevariableswiththiskindofbehavior: quit,exitandhelp.
4.NumericTypes . Comparetheresultsof22/7and22.0/7. Explainthediﬀerencesintheoutput.
4.7 Other T ools
This section lists some additional tools which are popular ways to create, maintain and execute Python
programs. While IDLE is suitable for many purposes, you may prefer an IDE with a diﬀerent level of
sophistication.
4.7.1 Any Platform
The Komodo Edit is an IDE that is considerably more sophisticated than IDLE. It is - in a way - too
sophisticatedforthisbook. Ourfocusisonthelanguage,nothigh-poweredIDE’s. AswithIDLE,thisisa
toolthatrunseverywhere,soyoucanmoveseamlesslyfromGNU/LinuxtoWiundowstotheMacOSwith
asingle,powerfultool.
Seehttp://www.komodo.com formoreinformationonorderinganddownloading.
4.7.2 Windows
Windows programmers might want to use a tool like Textpad. Seehttp://www.textpad.com for
information on ordering and downloading. Be sure to also download the python.synﬁle from
http://www.textpad.com/add-ons whichhasanumberofPythonsyntaxcoloringconﬁgurations.
TouseTextpad,youhavetwosetupsteps. First,you’llneedtoaddthePythondocumentclass. Second
you’llneedtotell TextpadaboutthePythontool.
ThePythonDocumentClass . Youneedtotell TextpadaboutthePythondocumentclass. Usethe
Conﬁguremenu;theNewDocumentClass... menuitemletsyouaddPythondocumentsto Textpad.
Nameyournewdocumentclass PythonandclickNext. Giveyourclassmembersnamed *.pyandclick
Next. Locateyour python.synﬁleandclickNext. CheckthenewPythondocumentclass,andclick Next
ifeverythinglooksrighttocreateanew Textpaddocumentclass.
ThePythonTool . You’llwanttoaddthePythoninterpreterasa Textpadtool. UsetheConﬁgure
menuagain,thistimeselectingthe Preferences? item. Scrolldownthelistofpreferencesontheleftand
clickonTools. Ontheright,you’llgetapanelwiththecurrentsetoftoolsandaprominent Addbutton
onthetopright-handside. Click Add,andselectProgram...fromthemenuthatappears. You’llgeta
dialogforlocatingaﬁle;ﬁndthe Python.exeﬁle. ClickOkaytosavethisprogramasa Textpadtool.
Youcancheckthisbyusing ConﬁguremenuandPreferences... itemagain. Scrolldownthelisttoﬁnd
Tools. Clickthe+signandopenthelistoftools. Clickthe Pythontoolandcheckthefollowing:
•TheCommandistheexactpathtoyourcopyof Python.exe
•TheParameterscontains $File
•TheInitialFoldercontains $FileDir
•The“captureoutput”optionshouldbechecked
YoumightalsowanttoturnoﬀtheSoundAlertoption;thiswillbeepwhenaprogramﬁnishesrunning. I
ﬁndthismakesthingsalittletoonoisyformostprograms.
44 Chapter 4. Getting Started
Building Skills in Python, Release 2.6.5
4.7.3 Macintosh
Macintoshprogrammersmightwanttouseatoollike BBEdit.BBEditcanalsoruntheprograms,saving
theoutputforyou. See http://www.barebones.com formoreinformationon BBEdit.
TouseBBEdit,youhavetwoconsiderationswhenwritingPythonprograms.
You must be sure to decorate each Python ﬁle with the following line: ‘ #!/usr/bin/env python ’. This
tellsBBEditthat the ﬁle should be interpreted by Python. We’ll mention this again, when we get to
script-writingexericses.
Thesecondthingistobesureyousetthe chdirtoScript’sFolder optionwhenyouusethethe run...
iteminthe#!(“shebang”)menu. Withoutthis,scriptsarerunintherootdirectory,notinthedirectory
thatcontainsyourscriptﬁle.
4.8 Style Notes: Wise Choice of File Names
Thereisconsiderableﬂexibilityinthelanguage;twopeoplecanarriveatdiﬀerentpresentationsofPython
source. Throughoutthisbookwewillpresenttheguidelinesforformatting,takenfromthePythonEnhance-
mentProposal(PEP)8,postedon http://python.org/dev/peps/pep-0008/ .
We’ll include guidelines that will make your programming consistent with the Python modules that are
alreadypartofyourPythonenvironment. Theseguidelinesshouldalsoalsomakeyourprogramminglook
likeotherthird-partyprogramsavailablefromvendorsandpostedontheInternet.
Pythonprogramsaremeanttobereadable.Thelanguageborrowsalotfromcommonmathematicalnotation
andfromotherprogramminglanguages. Manylanguages(C++andJava)forinstance,don’trequireany
particularformatting;linebreaksandindendentationbecomemerelyconventions;bad-looking,hard-to-read
programs are common. On the other hand, Python makes the line breaks and indentations part of the
language,forcingyoutocreateprogramsthatareeasierontheeyes.
GeneralNotes . We’lltouchonmanyaspectsofgoodPythonstyleasweintroduceeachpieceofPython
programming. We haven’t seen much Python yet, but we do need some guidance to prevent a few tiny
problemsthatcouldcropup.
First,Python(likeallofLinux)iscasesensitive. Somelanguagesthatareeitheralluppercase,orinsensitive
tocase. WehaveworkedwithprogrammerswhoactuallyﬁndithelpfultousetheCapsLockkeyontheir
keyboard to expedite working in an all-upper-case world. Please don’t do this. Python should look like
English,wherelower-caseletterspredominate.
Second, Python makes use of indentation. Most programmers indent very nicely, and the compiler or
interpreterignoresthis. Pythondoesn’tignoreit. Indentationisusefulforwriteclear,meaningdocuments
andprogramsarenodiﬀerent.
Finally,youroperatingsystemallowsafairlylargenumberofcharacterstoappearinaﬁlename. Untilwe
startwritingmodulesandpackages,wecancallourﬁlesanythingthattheoperatingsystemwilltolerate.
Startingin Components, Modules and Packages ,however,we’llhavetolimitourselvestoﬁlenamesthatuse
onlyletters,digitsand‘ _’‘s. Therecanbejustoneendingfortheﬁlename: .py.
Aﬁlenamelike exercise_1.py isbetterthanthename execise-1.py . Wecanrunbothprogramsequally
well from the command line, but the name with the hyphen limits our ability to write larger and more
sophisticatedprograms.
4.8. Style Notes: Wise Choice of File Names 45
Building Skills in Python, Release 2.6.5
46 Chapter 4. Getting Started
CHAPTER
FIVE
SIMPLE NUMERIC EXPRESSIONS
AND OUTPUT
The print Statement and Numeric Operations
Basic expressionsarethemostcentralandusefulfeatureofmodernprogramminglanguages. Toseethe
resultsofexpressions,we’llusethe printstatement.
Thischapterstartsoutwith Seeing Output with the print() F unction (or print Statement) ,whichcoversthe
printstatement. Numeric T ypes and Operators coversthebasicnumericdatatypesandoperatorsthatare
integraltowritingexpressionsPython. Numeric Conversion (or “F actory”) F unctions coversconversions
between the various numeric types. Built-In Math F unctions covers some of the built-in functions that
Pythonprovides.
5.1 Seeing Output with the print() Function (or print Statement)
Beforedelvingintoexpressionsandnumbers,we’lllookatthe printstatement. We’llcoverjusttheessential
syntaxoftheprintstatement;ithassomeoddsyntaxquirksthatarepainfultoexplain.
Note:Python3.0
Python 3.0 will replace the irregular printstatement with a built-in print()function that is perfectly
regular,makingitsimplertoexplainanduse.
Inordertousethe print()functioninsteadofthe printstatement,yourscript(or IDLEsession)must
startoﬀwiththefollowing.
from__future__ importprint_function
Thisreplacesthe printstatement,withit’sirregularsyntaxwiththe print()function.
5.1.1 print Statement Syntax Overview
Theprintstatementtakesalistofvaluesand,well,printsthem. Speakingstrictly,itdoestwothings:
1.itconvertstheobjectstostringsand
2.putsthecharactersofthosestringson standard output .
47
Building Skills in Python, Release 2.6.5
Generally, standardoutputistheconsolewindowwherePythonwasstarted, althoughtherearewaysto
changethisthatarebeyondthescopeofthisbook.
Here’saquicksummaryofthemoreimportantfeaturesof printstatementsyntax. Inshort,thekeyword,
‘print’,isfollowedbyacomma-separatedlistofexpressions.
print expression 〈 , ... 〉
Note:SyntaxSummary
Thissyntaxsummaryisn’tcompletelycorrectbecauseitimpliesthatthelistofexpressionsis terminated
withacomma. Ratherthanfussaroundwithcomplexsyntaxdiagrams(that’swhatthePythonreference
manualisfor)we’veshownanapproximationthatiscloseenough.
The‘,’inaprintstatementisusedto separatethevariousexpressions.
A‘,’canalsobeusedattheendofthe printstatementtochangetheformatting;thisisanodd-but-true
featurethatisuniqueto printstatementsyntax.
It’shardtocapturethissubletyinasinglesyntaxdiagram. Further,thisiscompletelysolvedbyusingthe
print()function.
Oneofthesimplestkindofexpressionsisaquotedstring. Youcanuseeitherapostrophes(‘ '’)orquotes
(‘"’)tosurroundstrings. Thisgivesyousomeﬂexibilityinyourstrings. Youcanputanapostropheinto
aquotedstring,andyoucanputquotesintoanapostrophe’dstringwithoutthespecial escapesthatsome
otherlanguagesrequire. Thefullsetofquotingrulesandalternatives,however,willhavetowaitfor Strings.
Forexample,thefollowingtrivialprogramprintsthreestringsandtwonumbers.
print"Hi, Mom","Isn't it lovely? ",'I said, "Hi".',42,91056
Multi-LineOutput . Ordinarily,each printstatementproducesonelineofoutput. Youcanendthe print
statementwithatrailing ,tocombinetheresultsofmultiple printstatementsintoasingleline. Hereare
twoexamples.
print"335/113= ",
print335.0/113.0
print"Hi, Mom","Isn't it lovely? ",
print'I said, "Hi".',42,91056
Sincetheﬁrstprintstatementendswitha ,itdoesnotproduceacompletelineofoutput. Thesecond
printstatementﬁnishesthelineofoutput.
RedirectingOutput . Theprintstatement’soutputgoestotheoperatingsystem’sstandardoutputﬁle.
Howdowesendoutputtothesystem’sstandarderrorﬁle? Thisinvolvessomemoreadvancedconcepts,so
we’llintroduceitwithatwo-partrecipethatweneedtolookatinmoredepth. We’llrevisitthesetopicsin
Components, Modules and Packages .
First,you’llneedaccesstothestandarderrorobject;yougetthisviathefollowingstatement.
importsys
Second,thereisanunusualpieceofsyntaxcalleda“chevronprint”whichcanbeusedtoredirectoutputto
standarderror. ‘ >>’
print file , 〈 expression , ... 〉
48 Chapter 5. Simple Numeric Expressions and Output
Building Skills in Python, Release 2.6.5
Twocommonﬁlesare sys.stdoutandsys.stderr. We’llreturntoﬁlesin Files.
Hereisanexampleofasmallscriptwhichproducesmessagesonbothstderrandstdout.
mixedout.py
#!/usr/bin/env python
"""Mixed output in stdout and stderr."""
importsys
print>>sys.stderr, "This is an error message "
print"This is stdout "
print>>sys.stdout, "This is also stdout "
Whenyourunthisinside IDLE,you’llnoticethatthestderriscoloredred, wherethestdoutiscolored
black. You’llalsonoticethattheorderoftheoutputin IDLEdoesn’tmatchtheorderinourprogram.
MostPOSIXoperatingsystemsbuﬀerstdout,butdonotbuﬀerstderr. Consequently,stdoutmessagesdon’t
appearuntilthebuﬀerisfull,ortheprogramexits.
5.1.2 Theprint() Function
Python3replacestherelativelycomplexandirregular printstatementwithasimpleandregular print()
function.
InPython2.6wecanusethisnewfunctionbydoingthefollowing:
from__future__ importprint_function
Thisstatementmustbeoneoftheﬁrstexecutablestatementsinyourscriptﬁle. Itmakesasmall–but
profuound–changetoPythonsyntax. ThePythonprocessormustbenotiﬁedofthisintendedchangeup
front.
Thisprovidesuswiththefollowing:
print([object, ...], [sep=’ ’], [end=’n ’], [ﬁle=sys.stdout] )
Thiswillconverteachobjecttoastring,andthenwritethecharactersonthegivenﬁle.
Theseparatorbetweenobjectsis–bydefault–asinglespace. Settingavaluefor sepwillsetadiﬀerent
separator.
Theend-of-linecharacteris–bydefault–asinglenewline. Settingavaluefor endwillsetadiﬀerent
end-of-linecharacter.
Tochangeoutputﬁles,provideavaluefor ﬁle.
MultilineOutput . Tocreatemultilineoutput,dothefollowing:
from__future__ importprint_function
print("335/113= ", end="")
print(335.0/113.0)
print("Hi, Mom","Isn't it lovely? ", end="")
print('I said, "Hi".',42,91056)
RedirectingOutput . Theprintstatement’soutputgoestotheoperatingsystem’sstandardoutputﬁle.
Howdowesendoutputtothesystem’sstandarderrorﬁle? Thisinvolvessomemoreadvancedconcepts,so
5.1. Seeing Output with the print() Function (or print Statement) 49
Building Skills in Python, Release 2.6.5
we’llintroduceitwithatwo-partrecipethatweneedtolookatinmoredepth. We’llrevisitthesetopicsin
Components, Modules and Packages .
First,you’llneedaccesstothestandarderrorobject.
Second,you’llprovidethe ﬁleoptiontothe print()function.
from__future__ importprint_function
importsys
print("This is an error message ",file=sys.stderr )
print("This is stdout ")
print("This is also stdout ",file=sys.stdout )
AddingFeatures . Youcan–withsomecare–addfeaturestothe print()function.
Whenwelookatfunctiondeﬁnitions,we’lllookathowwecanoverridethebuilt-in print()functiontoadd
ourownuniquefeatures.
5.1.3 print Notes and Hints
Aprogramproducesanumberofkindsofoutput. The print()function(orprintstatement)isahandy
jumping-oﬀpoint. Generally,we’llreplacethiswithmoreadvancedtechiques.
•FinalReports. Ourdesktopapplicationsmayproducetext-basedreportﬁles. Theseareoftendone
withprintstatements.
•PDForotherformatoutputﬁles. AdesktopapplicationwhichproducesPDForotherformatﬁleswill
needtouseadditionallibrariestoproducePDFﬁles. Forexample, ReportLaboﬀersPDF-production
libraries. Theseapplicationswon’tmakeextensiveuseof printstatements.
•Errormessagesandprocessinglogs. Logsanderrorsareoftendirectedtothestandarderrorﬁle. You
won’toftenusethe printstatementforthis,butusethe logginglibrary.
•Debuggingmessages. Debuggingmessagesareoftenhandledbythe logginglibrary.
Theprintstatement(or print()function)isaverybasictoolfordebuggingacomplexPythonprogram.
Feel free to use printstatements heavily to create a clear picture of what a program is actually doing.
Ultimately,youarelikelytoreplace printstatementswithother,moresophisticatedmethods.
5.2 Numeric T ypes and Operators
Pythonprovidesfourbuilt-intypesofnumbers: plainintegers, longintegers, ﬂoatingpointnumbersand
complexnumbers.
Numbersallhaveseveralthingsincommon. Principally,thestandardarithmeticoperatorsof‘ +’,‘-’,‘*’,
‘/’, ‘%’ and ‘**’ are all available for all of these numeric types. Additionally, numbers can be compared,
usingcomparisonoperatorsthatwe’lllookatin Comparisons. Also,numberscanbecoercedfromonetype
toanother.
More sophisticated math is separated into the mathmodule, which we will cover later. However, a few
advancedmathfunctionsareanintegralpartofPython,including abs()andpow().
5.2.1 Integers
Plainintegersareatleast32bitslong. Therangeisatleast-2,147,483,648to2,147,483,647(approximately
±2billion).
50 Chapter 5. Simple Numeric Expressions and Output
Building Skills in Python, Release 2.6.5
Pythonrepresentsintegersasstringsofdecimaldigits. Anumberdoesnotincludeanypunctuation,and
cannotbeginwithaleadingzero(0). Leadingzerosareusedforbase8andbase16numbers. We’lllookat
thisbelow.
>>>255+100
355
>>>397-42
355
>>>71*5
355
>>>355/113
3
WhilemostfeaturesofPythoncorrespondwithcommonexpectationsfrommathematicsandotherprogram-
minglanguages,thedivisionoperator,‘ /’,posescertainproblems. Speciﬁcally,thedistinctionbetweenthe
algorithmandthedatarepresentationneedtobemadeexplicit. Divisioncanmeaneitherexactﬂoating-
pointresultsorintegerresults. Mathematicianshaveevolvedanumberofwaysofdescribingpreciselywhat
theymeanwhendiscussingdivision. WeneedsimilarexpressivepowerinPython.We’lllookatmoredetails
ofdivisionoperatorsin Division Operators .
Binary, Octal and Hexadecimal . For historical reasons, Python supports programming in octal and
hexadecimal. Iliketothinkthattheearlydaysofcomputingweredominatedbypeoplewith8or16ﬁngers.
Anumberwithaleading‘ 0’(zero)isoctal,base8,andusesthedigits0to7. 0123isoctalandequalto83
decimal.
Anumberwithaleading 0xor0Xishexadecimal,base16,andusesthedigits0through9,plus‘ a’,‘A’,‘b’,
‘B’,‘c’,‘C’,‘d’,‘D’,‘e’,‘E’,‘f’,and‘F’.0x2BC8ishexadecimalandequalto11208.
Anumberwithaleading 0bor0Bisbinary,base2,andusesdigits0and1.
Important: LeadingZeroes
WhenusingPython2.6,watchforleadingzerosinnumbers. Ifyousimplytranscribeprogramsfromother
languages,theymayuseleadingzerosondecimalnumbers.
Important: Python3
In Python 3, the octal syntax will change. Octal constants will begin with ‘ 0o’ to match hexadecimal
constantswhichbeginwith‘ 0x’.
0o123willbeoctalandequalto83decimal.
5.2.2 Long Integers
OneoftheusefuldatatypesthatPythonoﬀersarelongintegers. Unlikeordinaryintegerswithalimited
range,longintegershavearbitrarylength;theycanhaveasmanydigitsasnecessarytorepresentanexact
answer. However,thesewilloperatemoreslowlythanplainintegers.
Longintegersendin‘ L’or‘l’. Uppercase‘ L’ispreferred,sincethelower-case‘ l’lookstoomuchlikethe
digit‘1’. Pythonisgracefulaboutconvertingtolongintegerswhenitisnecessary.
Important: Python3
Python3willnotrequirethetrailing‘ L’.Itwillsilentlydeduceifyouneedanintegeroralonginteger.
Howmanydiﬀerentcombinationsof32bitsarethere? Theansweristhereare 232;‘2**32’inPython. The
answeristoolargeforordinaryintegers,andwegettheresultasalonginteger.
5.2. Numeric T ypes and Operators 51
Building Skills in Python, Release 2.6.5
>>>2**32
4294967296L
>>>2**64
18446744073709551616L
Thereareabout4billionwaystoarrange32bits. Howmanybitsin1Kofmemory? 1024×8bits. How
manycombinationsofbitsarepossiblein1Kofmemory? 210248.
print2L**(1024*8)
I won’t attempt to reproduce the output from Python. It has 2,467 digits. There are a lot of diﬀerent
combinationsofbitsinonly1Kofmemory. ThecomputerI’musinghas 512×1024Kbytesofmemory;
therearealotofcombinationsofbitsavailableinthatmemory.
Pythonwillsilentlyconvertbetweenultra-fastintegersandslow-but-largelongintegers. Youcanforcea
conversionusingthe int()orlong()factoryfunctions.
5.2.3 Floating-Point Numbers
Pythonoﬀersﬂoating-pointnumbers,oftenimplementedas“double-precision”numbers,typicallyusing64
bits. Floating-point numbers are written in two forms: a simple string of digits that includes a decimal
point,andamorecomplexformthatincludesanexplicitexponent.
.0625
0.0625
6.25E-2
625E-4
Thelasttwoexamplesarebasedon scientiﬁc notation ,wherenumbersarewrittenasa mantissaandan
exponent. The‘E’(orcode: e),powersof10areusedwiththeexponent,givingusnumbersthatlooklike
this: 6.25×10 2and 625×10 4.
Thelastexampleisn’tproperlynormalized,sincethemantissaisn’tbetween0and10.
Generally,anumber, n,issomemantissa, g,andanexponentof c. Forhumanconsumption,weuseabase
of10.
Internally,mostcomputersuseabaseof2,not10.
n=g×10c
n=h×2d
Thisdiﬀereceinthemantissaleadstoslighterrorsinconvertingcertainvalues,whichareexactinbase10,
toapproximationsinbase2.
Forexample,1/5thdoesn’thaveapreciserepresentation. Thisisn’tgenerallyaproblembecausewehave
stringformattingoperationswhichcanmakethistinyrepresentationerrorinvisibletousers.
>>>1./5.
0.20000000000000001
>>>.2
0.20000000000000001
52 Chapter 5. Simple Numeric Expressions and Output
Building Skills in Python, Release 2.6.5
5.2.4 Complex Numbers
Besides plain integers, long integers and ﬂoating point numbers, Python also provides for imaginary and
complex numbers. These use the European convention of ending with ‘ J’ or ‘j’. People who don’t use
complexnumbersshouldskipthissection.
‘3.14J’isanimaginarynumber= 3.14×√−1.
Acomplexnumberiscreatedbyaddingarealandanimaginarynumber: ‘ 2 + 14j’. NotethatPython
alwaysprintsthesein()’s;forexample (2+14j).
Theusualrulesofcomplexmathworkperfectlywiththesenumbers.
>>>(2+3j)*(4+5j)
(-7+22j)
Pythonevenincludesthecomplexconjugateoperationonacomplexnumber. Thisoperationfollowsthe
complexnumberseparatedbyadot(‘ .’).Thisnotationisusedbecausetheconjugateistreatedlikeamethod
functionofacomplexnumberobject(we’llreturntothismethodandobjectterminologyin Classes).
Forexample:
>>>3+2j.conjugate()
(3-2j)
5.3 Numeric Conversion (or “Factory”) Functions
Wecanconvertanumberfromonetypetoanother. Aconversionmayinvolvealossofprecisionbecause
we’vereducedthenumberofbitsavailable. Aconversionmayalsoaddafalsesenseofprecisionbyadding
bitswhichdon’thaveanyrealmeaning.
We’llcallthese factory functions becausetheyareafactoryforcreatingnewobjectsfromotherobjects. The
ideaoffactoryfunctionisaverygeneralone,andthesearejusttheﬁrstofmanyexamplesofthispattern.
5.3.1 Numeric Factory Function Deﬁnitions
Thereareanumberofconversionsfromonenumerictypetoanother.
int(x)
Generatesanintegerfromtheobject x. If xisaﬂoatingpointnumber,digitstotherightofthedecimal
pointaretruncatedaspartofcreatinganinteger. Iftheﬂoatingpointnumberismorethanabout10
digits,alongintegerobjectiscreatedtoretaintheprecision. If xisalongintegerthatistoolarge
toberepresentedasaninteger,there’snoconversion. Complexvaluescan’tbeturnedintointegers
directly.
If xisastring,thestringisparsedtocreateanintegervalue. Itmustbeastringofdigitswithan
optionalsign(‘ +’or‘-’).
>>>int("1243")
1243
>>>int(3.14159)
3
5.3. Numeric Conversion (or “Factory”) Functions 53
Building Skills in Python, Release 2.6.5
float(x)
Generatesaﬂoatfromobject x. If xisanintegerorlonginteger,aﬂoatingpointnumberiscreated.
Note that long integers can have a large number of digits, but ﬂoating point numbers only have
approximately 16 digits; there can be some loss of precision. Complex values can’t be turned into
ﬂoatingpointnumbersdirectly.
If xis a string, the string is parsed to create an ﬂoat value. It must be a string of digits with an
optionalsign(‘ +’or‘-’). Thedigitscanhaveasingledecimalpoint(‘ .’).
Also,astringcanbeinscientiﬁcnotationandinclude‘ e’or‘E’followedbytheexponentasasimple
signedintegervalue.
>>>float(23)
23.0
>>>float("6.02E24")
6.0200000000000004e+24
>>>float(22)/7
3.14285714286
long(x)
Generatesalongintegerfrom x. If xisaﬂoatingpointnumber,digitstotherightofthedecimalpoint
aretruncatedaspartofcreatingalonginteger.
>>>long(2)
2L
>>>long(6.02E23)
601999999999999995805696L
>>>long(2)**64
18446744073709551616L
complex(real, [imag] )
Generatesacomplexnumberfrom realand imag. Iftheimaginarypartisomitted,itis0.0.
Complexisnotassimpleastheothers. Acomplexnumberhastwoparts,realandimaginary. Con-
versiontocomplextypicallyinvolvestwoparameters.
>>>complex(3,2)
(3+2j)
>>>complex(4)
(4+0j)
>>>complex("3+4j")
(3+4j)
Notethatthesecondparameter,withtheimaginarypartofthenumber,isoptional. Thisleadstoa
numberofdiﬀerentwaystocallthisfunction. Intheexampleabove,weusedthreevariations: two
numericparameters,onenumericparameterandonestringparameter.
5.4 Built-In Math Functions
Pythonhasanumberof built-infunctions,whichareanintegralpartofthePythoninterpreter. Wecan’t
lookatallofthembecausemanyarerelatedtofeaturesofthelanguagethatwehaven’taddressedyet.
Oneofthebuilt-inmathematicalfunctionswillhavetowaitforcompletecoverageuntilwe’veintroduced
themorecomplexdatatypes,speciﬁcally tuples,in T uples. Thedivmod()functionreturnsatupleobject
withthequotientandremainderindivision.
54 Chapter 5. Simple Numeric Expressions and Output
Building Skills in Python, Release 2.6.5
5.4.1 Built-In Math Functions
The bulk of the math functions are in a separate module, called math, which we will cover in The math
Module. Theformaldeﬁnitionsofmathematicalbuilt-infunctionsareprovidedbelow.
abs(number)
Returntheabsolutevalueoftheargument, |x|.
pow(x, y, [z])
Raise xtothe ypower, xy. If zispresent,thisisdonemodulo z,xymod z.
round(number, [digits] )
Round numberto ndigitsbeyondthedecimalpoint.
Ifthe ndigitsparameterisgiven,thisisthenumberofdecimalplacestoroundto. If ndigitsispositive,
thisisdecimalplacestotherightofthedecimalpoint. If ndigitsisnegative,thisisthenumberof
placestotheleftofthedecimalpoint.
Examples:
>>>printround(678.456,2)
678.46
>>>printround(678.456,-1)
680.0
5.4.2 String Conversion Functions
Thestringconversionfunctionsprovidealternaterepresentationsfornumericvalues. Thislistexpandson
thefunctiondeﬁnitionsin Numeric Conversion (or “F actory”) F unctions .
hex(number)
Create a hexadecimal string representation of number. A leading ‘0x’ is placed on the string as a
reminderthatthisishexadecimal.
>>>hex(684)
'0x2ac'
oct(number)
Createaoctalstringrepresentationof number. Aleading‘0’isplacedonthestringasareminderthat
thisisoctalnotdecimal.
>>>oct(509)
'0775'
bin(number)
Createabinaryrepresentationof number. Aleading‘0b’isplacedonthestringasareminderthat
thisisbinaryandnotdecimal.
>>>bin(509)
'0b111111101'
int(string, [base] )
Generatesanintegerfromthestring x. If baseissupplied, xmustbeastringinthegivenbase. If base
isomitted,thestring xmustbedecimal.
5.4. Built-In Math Functions 55
Building Skills in Python, Release 2.6.5
>>>int('0775',8)
509
>>>int('0x2ac',16)
684
>>>int('101101101101 ',2)
2925
Theint()functionhastwoforms. The‘ int(x)’formconvertsadecimalstring, x,toaninteger. For
example,‘ int('25')’is25.
The‘int(x,b)’formconvertsastring, x,inbase btoaninteger. Forexample,‘ int('25',8)’is21.
str(object)
Generateastringrepresentationofthegivenobject. Thisisthea“readable”versionofthevalue.
repr(object)
Generateastringrepresentationofthegivenobject. Generally,thisistheaPythonexpressionthat
canreconstructthevalue;itmayberatherlongandcomplex.
Forthenumericexampleswe’veseensofar,thevalueof repr()isgenerallythesameasthevalueof
str().
Thestr()andrepr()functions convert any Python object to a string. The str()version is typically
morereadable,wherethe repr()versionisaninternalizedrepresentation. Formostgarden-varietynumeric
values,thereisnodiﬀerence. Forthemorecomplexdatatypes,however,theresultsof repr()andstr()
canbeverydiﬀerent. Forclassesyouwrite(see Classes), yourclassdeﬁnitionmustprovidethesestring
representationfunctions.
5.4.3 Collection Functions
Theseareseveralbuilt-infunctionswhichoperateonsimplecollectionsofdataelements.
max(value, ...)
Returnthelargest value.
>>>max(1,2,3)
3
min(value, ...)
Returnthesmallest value.
>>>min(1,2,3)
1
Additionally,thereareseveralothercollection-handlingfunctions,including any(),all()andsum(). These
willhavetowaituntilwecanlookatcollectionobjectsin Data Structures .
5.5 Expression Exercises
Therearetwosetsofexercises. Theﬁrstsection, Basic Output and F unctions ,coverssimplerexercisesto
reinforcePythonbasics. Thesecondsection, Numeric T ypes and Expressions ,coversmorecomplexnumeric
expressions.
56 Chapter 5. Simple Numeric Expressions and Output
Building Skills in Python, Release 2.6.5
5.5.1 Basic Output and Functions
1.PrintExpressionResults . In Command-Line Exercises ,weenteredsomesimpleexpressionsinto
thePythoninterpreter. Changethesesimpleexpressionsintoprintstatements.
Besuretoprintalabeloridentiﬁerwitheachanswer. Here’sasample.
print"9-1's * 9-1's =",111111111 *111111111
Here’sanexampleusingthe print()function.
from__future__ importprint_function
print("9-1's * 9-1's =",111111111 *111111111 )
2.EvaluateandPrintExpressions .Writeshortscriptstoprinttheresultsofthefollowingexpressions.
Inmostplaces,changingintegerstoﬂoatingpointproducesanotablydiﬀerentresult. Forexample
‘(296/167)**2 ’and‘(296.0/167.0)**2 ’. Uselongaswellascomplextypestoseethediﬀerences.
•‘355/113 * ( 1 - 0.0003/3522 ) ’
•‘22/17 + 37/47 + 88/83 ’
•‘(553/312)**2 ’
3.NumericConversion . Writeaprintstatementtoprintthemixedfraction 35
8asaﬂoatingpoint
numberandasaninteger.
4.NumericTruncation . Writeaprintstatementtocompute‘ (22.0/7.0)-int(22.0/7.0) ’. Whatis
thisvalue? Compareitwith‘ 22.0/7.0’. Whatgeneralprincipaldoesthisillustrate?
5.IllegalConversions . Tryillegalconversionslike‘ int('A')’or‘int( 3+4j )’. Whyareexceptions
raised? Whycan’tasimpledefaultvaluelikezeroor Nonebeusedinstead?
6.Evaluate and Print Built-in Math Functions . Write short scripts to print the results of the
followingexpressions.
•‘pow( 2143/22, 0.25 ) ’
•‘pow(553/312,2) ’
•‘pow( long(3), 64 ) ’
•‘long( pow(float(3), 64) ) ’
Whydothelasttwoproducediﬀerentresults? Whatdoesthediﬀerencebetweenthetworesultstell
usaboutthenumberofdigitsofprecisioninﬂoating-pointnumbers?
7.EvaluateandPrintBuilt-inConversionFunctions . Herearesomemoreexpressionsforwhich
youcanprinttheresults.
•hex(1234)
•int(hex(1234),16)
•long(‘0xab’)
•int(‘0xab’)
•int(‘0xab’,16)
•int(‘ab’,16)
•cmp(2,3)
5.5. Expression Exercises 57
Building Skills in Python, Release 2.6.5
5.5.2 Numeric T ypes and Expressions
1.StockValue. Computevaluefromnumberofshares ×purchasepriceforastock.
Onceuponatime,stockpriceswerequotedinfractionsofadollar,insteadofdollarsandcents. Create
asimpleprintstatementfor125sharespurchasedat 33
8. Createasecondsimpleprintstatementfor
150sharespurchasedat 21
4plusanadditional75sharespurchasedat 17
8.
Don’tmanuallyconvert1
4to0.25. Useacompleteexpressionoftheform‘ 2+1/4.0’,justtogetmore
practicewritingexpressions.
2.ConvertBetween|deg|Cand|deg|F .Converttemperaturesfromonesystemtoanother.
ConversionConstants: 32°F=0°C,212°F=100°C.
Thefollowingtwoformulaeconvertsbetween°C(Celsius)and°F(Fahrenheit).
F= 32 +212−32
100×C
C= (F−32)×100
212−32
Createaprintstatementtoconvert18°Cto°F.
Createaprintstatementtoconvert-4°Fto°C.
3.PeriodicPaymentonaLoan . Howmuchdoesaloanreallycost?
Herearethreeversionsofthestandardmortgagepaymentcalculation,with m=payment, p=principal
due, r=interestrate, n=numberofpayments.
Don’tbesurprisedbythesignoftheresults;they’reoppositethesignoftheprinciple. Withapositive
principle,yougetnegativenumbers;youarepaying downaprinciple.
m=p×(r
1−(1 +r) n)
Mortgagewithpaymentsdueattheendofeachperiod:
m=−rp(r+ 1)n
(r+ 1)n−1
Mortgagewothpaymentsdueatthebeginningofeachperiod:
m=−rp(r+ 1)n
[(r+ 1)n−1](r+ 1)
Useanyoftheseformstocomputethemortgagepayment, m, duewithaprincipal, p, of$110,000,
aninterestrate, r,of7.25%annually,andpayments, n,of30years. Notethatbanksactuallyprocess
thingsmonthly. Soyou’llhavetodividetheinterestrateby12andmultiplythenumberofpayments
by12.
4.SurfaceAirConsumptionRate . SACRisusedbySCUBAdiverstopredictairusedataparticular
depth.For each dive, we convert our air consumption at that dive’s depth to a normalized air
consumption at the surface. Given depth (in feet), d, starting tank pressure (psi), s, ﬁnal tank
pressure(psi), f,andtime(inminutes)of t,theSACR, c,isgivenbythefollowingformula.
c=33(s−f)
t(d+ 33)
Typicalvaluesforpressureareastartingpressureof3000,ﬁnalpressureof500.
58 Chapter 5. Simple Numeric Expressions and Output
Building Skills in Python, Release 2.6.5
Amediumdivemighthaveadepthof60feet,timeof60minutes.
Adeeperdivemightbeto100feetfor15minutes.
Ashallowerdivemightbe30feetfor60minutes,buttheendingpressuremightbe1500. Atypical c
(consumption)valuemightbe12to18formostpeople.
Writeprintstatementsforeachofthethreediveproﬁlesgivenabove: medium,deepandshallow.
GiventheSACR, c,andatankstartingpressure, s,andﬁnalpressure, f,wecanplanadivetodepth
(infeet), d,fortime(inminutes), t,usingthefollowingformula. Usuallythe 33(s−f)/cisaconstant,
basedonyourSACRandtanks.
33(s−f)
c=t(d+ 33)
Forexample,tanksyouownmighthaveastartingpressureof2500andandendingpressureof500,
youmighthavea c(SACR)of15.2. Youcanthenﬁndpossiblecombinationsoftimeanddepthwhich
youcancomfortablydive.
Writetwoprintstatementsthatshowshowlongonecandiveat60feetand70feet.
5.ForceonaSail . Howmuchforceisonasail?
Asailmovesaboatbytransferringforcetoitsmountings. Thesailinthefront(thejib)ofatypical
fore-and-aftriggedsailboathangsfromastay. Thesailintheback(themain)hangsfromthemast.
Theforcesonthestay(ormast)andsheetsmovetheboat. Thesheetsareattachedtotheclewofthe
sail.
Theforceonasail, f,isbasedonsailarea, a(insquarefeet)andwindspeed,v‘w‘(inmilesperhour).
f=w2×0.004×a
Forasmallracingdinghy,thesmallersailinthefrontmighthave61squarefeetofsurface. Thelarger,
mailsail,mighthave114squarefeet.
Writeaprintstatementtoﬁguretheforcegeneratedbya61squarefootsailin15milesanhourof
wind.
6.CrapsOdds. Whataretheoddsofwinningontheﬁrstthrowofthedice? Thereare36possible
rollson2dicethatadduptovaluesfrom2to12. Thereisjust1waytorolla2,6waystorolla7,
and1waytorolla12. We’lltakethisasgivenuntilalaterexercisewherewehaveenoughPythonto
generatethisinformation.
Without spending a lot of time on probability theory, there are two basic rules we’ll use time and
again. Ifanyoneofmultiplealternateconditionsneedstobetrue,usuallyexpressedas“or”,weadd
theprobabilities. Whenthereareseveralconditionsthatmustallbetrue,usuallyexpressedas“and”,
wemultiplytheprobabilities.
Rollinga3, forinstance, isrollinga1-2 orrollinga2-1. Weaddtheprobabilities: 1/36 + 1/36 =
2/36 = 1/18.
Onacomeoutroll,wewinimmediatelyif7or11isrolled. Therearetwowaystoroll11(2/36)or6
waystoroll7(6/36).
Writeaprintstatementtoprinttheoddsofwinningonthecomeoutroll. Thismeansrolling7or
rolling11. Expressthisasafraction,notasadecimalnumber;thatmeansaddingupthenumerator
ofeachnumberandleavingthedenominatoras36.
7.RouletteOdds . Howclosearepayoutsandtheodds?
AnAmerican(doublezero)roulettewheelhasnumbers1-36,0and00. 18ofthe36numbersarered,
18areblackandthezeroesaregreen. Theoddsofspinningred,thenare18/38. Theoddsofzeroor
doublezeroare2/36.
5.5. Expression Exercises 59
Building Skills in Python, Release 2.6.5
Redpays2to1,therealoddsare38/18.
Writeaprintstatementthatshowsthediﬀerencebetweenthepayoutandtherealodds.
Youcanplaceabeton0,00,1,2and3. Thisbetpays6to1. Therealoddsare5/36.
Writeaprintstatementthatshowsthediﬀerencebetweenthepayoutandtherealodds.
5.6 Expression Style Notes
Spacesareusedsparinglyinexpressions. Spacesareneverusedbetweenafunctionnameandthe()’sthat
surroundthearguments. Itisconsideredpoorformtowrite:
int(22.0/7)
Thepreferredformisthefollowing:
int(22.0/7)
Alongexpressionmaybebrokenupwithspacestoenhancereadability. Forexample,thefollowingseparates
themultiplicationpartoftheexpressionfromtheadditionpartwithafewwisely-chosenspaces.
b**2-4*a*c
60 Chapter 5. Simple Numeric Expressions and Output
CHAPTER
SIX
ADV ANCED EXPRESSIONS
Themath andrandom Modules, Bit-Level Operations, Division
Thischaptercoverssomemoreadvancedtopics. The math Module coverthe mathmodule. The The random
Modulecoverselementsofthe randommodule.
Division Operators coverstheimportantdistinctionbetweenthedivisionoperators. Wealsoprovidesome
supplementalinformationthatismorespecialized. Bit Manipulation Operators coverssomeadditionalbit-
ﬁddlingoperatorsthatworkonthebasicnumerictypes. Expression Style Notes hassomenotesonstyle.
6.1 Using Modules
APython moduleextendsthePythonexecutionenvironmentbyaddingnewclasses,functionsandhelpful
constants. We tell the Python interpreter to fetch a module with a variation on the importstatement.
Thereareseveralvariationson import,whichwe’llcoverindepthin Components, Modules and Packages .
Fornow,we’llusethesimple import:
importm
Thiswillimportmodule m. Onlythemodule’sname, mismadeavailable. Everynameinsidethemodule m
mustbe qualiﬁedbyprependingthemodulenameanda‘ .’. Soifmodule mhadafunctioncalled spam(),
we’drefertoitas m.spam().
TherearedozensofstandardPythonmodules. We’llgettothemostimportantonesin Components, Modules
and Packages. Fornow,we’llfocusonextendingthemathcapabilitiesofthebasicexpressionswe’velooked
sofar.
6.2 Themath Module
Themathmoduleismadeavailabletoyourprogramswith:
importmath
Themathmodulecontainsanumberofcommontrigonometricfunctions.
acos(x)
Arccosineof x;resultinradians.
61
Building Skills in Python, Release 2.6.5
asin(x)
arcsineof x;resultinradians.
atan(x)
arctangentof x;resultinradians.
atan2(y, x)
arctangentof y÷x:arctan (y
x);resultinradians.
cos(x)
cosineof xinradians.
cosh(x)
hyperboliccosineof xinradians.
exp(x)
ex,inverseof log(x).
hypot(x, y)
Euclideandistance,√
x2+y2;thelengthofthehypotenuseofarighttrianglewithheightof:replace-
able:y‘andlengthof x.
log(x)
Naturallogarithm(basee)of x. Inverseof exp().n=elnn.
log10(x)
naturallogarithm(base10)of x,inverseof10** x.n= 10logn.
pow(x, y)
xy.
sin(x)
sineof xinradians.
sinh(x)
hyperbolicsineof xinradians.
sqrt(x)
squarerootof x. Thisversionreturnsanerrorifyouaskfor‘ sqrt(-1)’,eventhoughPythonunder-
standscomplexandimaginarynumbers. Asecondmodule, cmath,includesaversionof sqrt()which
correctlycreatesimaginarynumbers.
tan(x)
tangentof xinradians.
tanh(x)
hyperbolictangentof xinradians.
Additionally,thefollowingconstantsarealsoprovided.
math.pithevalueof π,3.1415926535897931
math.ethevalueof e,2.7182818284590451,usedforthe exp()andlog()functions.
Conversionbetweenradians, r,anddegrees, d,isbasedonthefollowingdeﬁnition:
360degrees = 2×πradians
Fromthat,wegetthefollowingrelationships:
d×π=r×180
d=r×180
π, r=π×d
180
Themathmodulecontainsthefollowingotherfunctionsfordealingwithﬂoatingpointnumbers.
62 Chapter 6. Advanced Expressions
Building Skills in Python, Release 2.6.5
ceil(x)
Nextlargerwholenumber.
>>>importmath
>>>math.ceil(5.1)
6.0
>>>math.ceil(-5.1)
-5.0
fabs(x)
Absolutevalueofthereal x.
floor(x)
Nextsmallerwholenumber.
>>>importmath
>>>math.floor(5.9)
5.0
>>>math.floor(-5.9)
-6.0
fmod(x, y)
Floatingpointremainderafterdivisionof ⌊x÷y⌋. ThisdependsontheplatformClibraryandmay
handlethesignsdiﬀerentlythanthePython‘ x % y’.
>>>math.fmod(-22,7)
-1.0
>>>-22%7
6
modf(x)
Createsatuplewiththefractionalandintegerpartsof x. Bothresultscarrythesignof xsothat x
canbereconstructedbyaddingthem. We’llreturntotuplesin T uples.
>>>math.modf(123.456 )
(0.45600000000000307, 123.0)
frexp(x)
Thisfunctionunwindstheusualbase-2ﬂoatingpointrepresentation.Aﬂoatingpointnumberis m×2e,
where misalwaysafraction1
2≤m≤1,and eisaninteger. Thisfunctionreturnsatuplewith mand
e. Theinverseis‘ ldexp(m,e)’.
ldexp(m, e)
Calculat m×2e,theinverseof‘ frexp(x)’.
6.3 Therandom Module
Therandommodulecontainsalargenumberoffunctionsforworkingwithdistributionsofrandomnumbers.
Therearenumerousfunctionsavailable,butthelaterexerciseswillonlyusethesefunctions.
Therandommoduleismadeavailabletoyourprogramwith:
importrandom
Herearethedeﬁnitionsofsomecommonly-usedfunctions.
6.3. The random Module 63
Building Skills in Python, Release 2.6.5
choice(sequence)
Choosesarandomvaluefromthesequence sequence.
>>>importrandom
>>>random.choice( [ 'red','black','green'] )
'red'
random()
Arandomﬂoatingpointnumber, r,suchthat 0≤r <1.0.
randrange ([start], stop, [step] )
Choosearandomelementfrom‘ range( start, stop, step ) ’.
•‘randrange(6) ’returnsanumber, r,suchthat 0≤r <6. Thereare6valuesbetween0and5.
•‘randrange(1,7) ’returnsanumber, r,suchthat 1≤r <7. Thereare6valuesbetween1and6.
•‘randrange(10,100,5) ’returnsanumber,suchthat 10≤5k < 100. forsomeintegervalueof k.
Thesearevalues 10,15,20, ...,95.
randint(a, b)
Choosearandomnumber, r,suchthat a≤r≤b. Unlike randrange(),thisfunctionincludesboth
end-pointvalues.
uniform(a, b)
Returnsarandomﬂoatingpointnumber, r,suchthat a≤r < b.
Therandrange()hastwooptionalvalues,makingitparticularlyﬂexible. Here’sanexampleofsomeofthe
alternatives.
demorandom.py
#!/usr/bin/env python
importrandom
# Simple Range 0 <= r < 6
printrandom.randrange( 6), random .randrange( 6)
# More complex range 1 <= r < 7
printrandom.randrange( 1,7), random .randrange( 1,7)
# Really complex range of even numbers between 2 and 36
printrandom.randrange( 2,37,2)
# Odd numbers from 1 to 35
printrandom.randrange( 1,36,2)
Thisdemonstratesanumberofwaysofgeneratingrandomnumbers. Itusesthebasic random.randrange()
withavarietyofdiﬀerentkindsofarguments.
6.4 Advanced Expression Exercises
1.Evaluate These Expressions . The following expressions are somewhat more complex, and use
functionsfromthemathmodule.
‘math.sqrt( 40.0/3.0 - math.sqrt(12.0) ) ’
‘6.0/5.0*( (math.sqrt(5)+1) / 2 )**2 ’
‘math.log( 2198 ) / math.sqrt( 6 ) ’
64 Chapter 6. Advanced Expressions
Building Skills in Python, Release 2.6.5
2.Rundemorandom.py . Runthe demorandom.py scriptseveraltimesandsavetheresults. Thenadd
thefollowingstatementtothescriptandrunitagainseveraltimes. Whathappenswhenwesetan
explicitseed?
#!/usr/bin/env python
importrandom
random.seed(1)
...everything elsethe same
Trythefollowingvariation,andseewhatitdoes.
#!/usr/bin/env python
importrandom,time
random.seed(time .clock())
...everything elsethe same
3.WindChill. Windchillisusedbymeteorologiststodescribetheeﬀectofcoldandwindcombined.
Giventhewindspeedinmilesperhour, V,andthetemperaturein°F, T,theWindChill, w,isgiven
bytheformulabelow.
WindChill,newmodel
35.74 + 0 .6215×T−35.75×(V0:16) + 0.4275×T×(V0:16)
WindChill,oldmodel
0.081×(3.71×√
V+ 5.81−0.25×V)×(T−91.4) + 91 .4
Windspeedsarefor0to40mph,above40,thediﬀerenceinwindspeeddoesn’thavemuchpractical
impactonhowcoldyoufeel.
Writeaprintstatementtocomputethewindchillfeltwhenitis-2°Fandthewindisblowing15
milesperhour.
4.HowMuchDoesTheAtmosphereWeigh? Part1 From Slicing Pizzas, Racing T urtles, and
F urther Adventures in Applied Mathematics ,[Banks02].PressureismeasuredinNewtons, N,kg ·
m/sec2. AirPressureisismeasuredinNewtonsofforcepersquaremeter,N /m2.
AirPressure(atsealevel) P0. Thisisthelong-termaverage.
P0= 1.01325×105
Accelerationismeasuredinm /sec2. Gravityacceleration(atsealevel) g.
g= 9.82
Wecanuse gtogetthekgofmassfromtheforceofairpressure P0. Applytheaccelerationofgravity
(inm/sec2)totheairpressure(inkg ·m/sec2). Thisresultismassoftheatmosphereinkilogramsper
squaremeter(kg /m2).
Mm2=P0×g
Giventhemassofairpersquaremeter,weneedtoknowhowmanysquaremetersofsurfacetoapply
thismassto.
RadiusofEarth Rinmeters,m. Thisisanaverageradius;ourplanetisn’taperfectsphere.
R= 6.37×106
6.4. Advanced Expression Exercises 65
Building Skills in Python, Release 2.6.5
TheareaofaSphere.
A= 4πr2
Massofatmosphere(inKg)istheweightpersquaremeter,timesthenumberofsquaremeters.
Ma=P0×g×A
Check: somewherearound 1018kg.
5.HowMuchDoesTheAtmosphereWeigh? Part2 . From Slicing Pizzas, Racing T urtles, and
F urther Adventures in Applied Mathematics ,[Banks02].
Theexercise How Much Does the Atmosphere W eigh, Part 1 assumestheearthtobeanentirelyﬂat
sphere. Theavergeheightofthelandisactually840m. Wecanusetheidealgaslawtocomputethe
pressureatthiselevationandreﬁnethenumberalittlefurther.
Pressureatagivenelevation
P=P0×emg
RTz
Molecularweightofair m= 28.96×10 3kg/mol.
m= 28.96×10 3
Gasconstant R,injoule /(K·mol).
R= 8.314
Gravity g,inm /sec2.
g= 9.82
Temperature T,in°KbasedontemperatureC,in°C.We’lljustassumethatCis15°C.
T= 273 + C
Elevation z,inmeters,m.
z= 840
Thispressurecanbeusedfortheairoverland, andthepressurecomputedin How Much Does the
Atmosphere W eigh, Part 1 canbeusedfortheairovertheoceans. Howmuchlandhasthisreduced
pressure? Referencematerialgivesthefollowingareasin m2,squaremeters.
oceanarea:Ao= 3.61×1014
landarea:Al= 1.49×1014
WeightofAtmosphere,adjustedforlandelevation
Ml=P0×g×A0+P×g×Al
6.5 Bit Manipulation Operators
We’ve already seen the usual math operators: ‘ +’, ‘-’, ‘*’, ‘/’, ‘%’, ‘**’; as well as the abs()andpow()
functions. There are several other operators available to us. Principally, these are for manipulating the
individualbitsofanintegervalue.
We’lllookat‘ ~’,‘&’,‘^’,‘|’,‘<<’and‘>>’.
Theunary‘ ~’operatorﬂopsallthebitsinaplainorlonginteger. 1’sbecome0’sand0’sbecome1’s. Since
mosthardwareusesatechniquecalled2’scomplement,thisismathematicallyequivalenttoadding1and
switchingthenumber’ssign.
66 Chapter 6. Advanced Expressions
Building Skills in Python, Release 2.6.5
>>>print~0x12345678
-305419897
Therearebinarybitmanipulationoperators,also. TheseperformsimpleBooleanoperationsonallbitsof
theintegeratonce.
Thebinary‘ &’operatorreturnsa1-bitifthetwoinputbitsareboth1.
>>>print0&0,1&0,1&1,0&1
0 0 1 0
Here’sthesamekindofexample,combiningsequencesofbits. Thistakesabitofconversiontobase2to
understandwhat’sgoingon.
>>>print3&5
1
Thenumber3,inbase2,is 0011. Thenumber5is 0101. Let’smatchupthebitsfromlefttoright:
0 0 1 1
& 0 1 0 1
-------
0 0 0 1
Thebinary‘ ^’operatorreturnsa1-bitifoneofthetwoinputsare1butnotboth. Thisissometimescalled
theexclusiveor.
>>>print3^5
6
Let’slookattheindividualbits
0 0 1 1
^ 0 1 0 1
-------
0 1 1 0
Whichisthebinaryrepresentationofthenumber6.
Thebinary‘ |’operatorreturnsa1-bitifeitherofthetwoinputsis1. Thisissometimescalledtheinclusive
or. Sometimesthisiswritten and/or.
>>>print3|5
7
Let’slookattheindividualbits.
0 0 1 1
| 0 1 0 1
-------
0 1 1 1
Whichisthebinaryrepresentationofthenumber7.
Therearealsobitshiftingoperations. Thesearemathematicallyequivalenttomultiplyinganddividingby
powersoftwo. Often,machinehardwarecanexecutetheseoperationsfasterthantheequivalentmultiplyor
divide.
6.5. Bit Manipulation Operators 67
Building Skills in Python, Release 2.6.5
The‘<<’istheleft-shiftoperator. Theleftargumentisthebitpatterntobeshifted,therightargumentis
thenumberofbits.
>>>print0xA<<2
40
0xAishexadecimal;thebitsare1-0-1-0. Thisis10indecimal. Whenweshiftthistwobitstotheleft,it’s
likemultiplyingby4. Wegetbitsof1-0-1-0-0-0. Thisis40indecimal.
The‘>>’istheright-shiftoperator. Theleftargumentisthebitpatterntobeshifted,therightargument
isthenumberofbits. Pythonalwaysbehavesasthoughitisrunningona2’scomplementcomputer. The
left-mostbitisalwaysthesignbit,sosignbitsareshiftedin.
>>>print80>>3
10
Thenumber80,withbitsof1-0-1-0-0-0-0,shiftedright3bits,yieldsbitsof1-0-1-0,whichis10indecimal.
Therearesomeotheroperatorsavailable,but,strictlyspeaking,they’renotarithmeticoperators,they’re
logicoperations. We’llreturntothemin T ruth, Comparison and Conditional Processing .
6.6 Division Operators
In general, the data type of an expresion depends on the types of the arguments. This rule meets our
expectations for most operators: when we add two integers, the result should be an integer. However,
thisdoesn’tworkoutwellfordivisionbecausetherearetwodiﬀerentexpectations. Sometimesweexpect
divisiontocreatepreciseanswers,usuallytheﬂoating-pointequivalentsoffractions. Othertimes,wewant
arounded-downintegerresult.
TheclassicalPythondeﬁnitionof‘ /’followedthepatternforotheroperators: theresultsdependentirely
on the arguments. ‘ 685/252’ was 2 because both arguments where integers. However, ‘ 685./252.’ was
2.7182539682539684becausetheargumentswereﬂoatingpoint.
Thisdeﬁnitionoftencausedproblemsforapplicationswheredatatypeswereusedthattheauthorhadn’t
expected. For example, a simple program doing Celsius to Fahrenheit conversions will produce diﬀerent
answersdependingontheinput. Ifoneuserprovides‘ 18’andanotherprovides‘ 18.0’,theanswerswere
diﬀerent,eventhoughalloftheinputsallhadtheequalnumericvalues.
>>>18*9/5+32
64
>>>18.0*9/5+32
64.400000000000006
>>>18==18.0
True
Thisunexpectedinaccuracywasgenerallyduetothecasualuseofintegerswhereﬂoating-pointnumbers
weremoreappropriate. (Thiscanalsooccurusingintegerswherecomplexnumberswereimplictlyexpected.)
Anexplicitconversionfunction(like float())canhelppreventthis. Theidea,however,isforPythonbea
simpleandsparselanguage,withoutadenseclutterofconversionstocovertherarecaseofanunexpected
datatype.
Starting with Python 2.2, a new division operator was added to clarify what is required. There are two
divisionoperators: ‘ /’and‘//’. The‘/’operatorshouldreturnﬂoating-pointresults;the‘ //’operatorwill
alwaysreturnrounded-downresults.
68 Chapter 6. Advanced Expressions
Building Skills in Python, Release 2.6.5
InPython2.5and2.6,the‘ /’operatorcaneitheruse“classical”or“old”rules(resultsdependonthevalues)
oritcanusethe“new”rule(resultisﬂoating-point.) InPython3.x,thistransitionalmeaningof‘ /’goes
awayanditalwaysproducesaﬂoating-pointresult.
Important: Python3
InPython3,the‘ /’operatorwillalwaysproducesaﬂoating-pointresult. The‘ //’operatorwillcontinueto
produceanintegerresult.
Tohelpwiththetransition, twotoolsweremadeavailable. Thisgivesprogrammersawaytokeepolder
applicationsrunning;italsogivesthemawaytoexplicitlydeclarethattheirprogramusestheneweroperator
deﬁnition. Therearetwopartstothis: aprogramstatememtthatcanbeplacedinaprogram,aswellas
command-lineoptionsthatcanbeusedwhenstartingthePythoninterpreter.
ProgramStatements . Toeasethetransitionfromoldertonewerlanguagefeatures,thereisa __future__
moduleavailable. Thismoduleincludesa divisiondeﬁnitionthatchangesthedeﬁnitionofthe‘ /’operator
fromclassicaltofuture. Youcanincludethefollowing importstatementtostatethatyourprogramdepends
onthefuturedeﬁnitionofdivision. We’lllookatthe importstatementindepthin Components, Modules
and Packages.
from__future__ importdivision
print18*9/5+32
print18*9//5+32
Thisproducesthefollowingoutput. Theﬁrstlineshowsthenewuseofthe‘ /’operatortoproduceﬂoating
pointresults,evenifbothargumentsareintegers. Thesecondlineshowsthe‘ //’operator,whichproduces
rounded-downresults.
64.4
64
Thefrom__future__ statementwillsettheexpectationthatyourscriptusesthenew-styleﬂoating-
pointdivisionoperator. Thisallowsyoutostartwritingprogramswithversion2.6thatwillworkcorrectly
withallfutureversions. Byversion3.0,this importstatementwillnolongerbenecessary,andthesewill
havetoberemovedfromthefewmodulesthatusedthem.
CommandLineOptions .Anothertooltoeasethetransitionarecommand-lineoptionsusedwhenrunning
thePythoninterpreter. Thiscanforceold-styleinterpretationofthe‘ /’operatorortowarnaboutold-style
useofthe‘ /’operatorbetweenintegers. Itcanalsoforcenew-styleuseofthe‘ /’operatorandreportonall
potentiallyincorrectusesofthe‘ /’operator.
The Python interpreter command-line option of ‘ -Q’ will force the ‘ /’ operator to be treated classically
(“old”), orwiththefuture(“new”)semantics. IfyourunPythonwith‘ -Qold’, the‘/’operator’sresult
dependsonthearguments. IfyourunPythonwith‘ -Qnew’,the‘/’operator’sresultwillbeﬂoatingpoint.
Ineithercase,the‘ //’operatorreturnsarounded-downintegerresult.
Youcanuse‘ -Qold’toforceoldmodulesandprogramstoworkwithversion2.2andhigher. WhenPython
3.0isreleased,however,thistransitionwillnolongerbesupported;bythattimeyoushouldhaveﬁxedyour
programsandmodules.
Tomakeﬁxingeasier,the‘ -Q’command-lineoptioncantaketwoothervalues: ‘ warn’and‘warnall’. If
youuse‘-Qwarn’,thenthe‘ /’operatorappliedtointegerargumentswillgeneratearun-timewarning. This
will allow you to ﬁnd and ﬁx situations where the ‘ //’ operator might be more appropriate. If you use
‘-Qwarnall’,thenallinstancesofthe‘ /’operatorgenerateawarning;thiswillgiveyouacloselookatyour
programs.
You can include the command line option when you run the Python interpreter. For Linux and MacOS
users,youcanalsoputthisonthe‘ #!’ lineatthebeginningofyourscriptﬁle.
6.6. Division Operators 69
Building Skills in Python, Release 2.6.5
#!/usr/local/bin/python -Qnew
70 Chapter 6. Advanced Expressions
CHAPTER
SEVEN
V ARIABLES, ASSIGNMENT AND
INPUT
The = , augmented = and del Statements
Variables hold the state of our program. In V ariableswe’ll introduce variables, then in The Assignment
Statementwe’llcoverthebasic assignmentstatementforchangingthevalueofavariable. Thisisfollowed
byanexercisesectionthatrefersbacktoexercisesfrom Simple Numeric Expressions and Output . In Input
F unctionswe introduce some primitive interactive input functions that are built-in. This is followed by
somesimpleexercisesthatbuildonthosefromsection The Assignment Statement . We’llcoverthemultiple
assignmentstatementin Multiple Assignment Statement . We’llroundonthissectionwiththe delstatement,
forremovingvariablesin The del Statement .
7.1 Variables
Asaproceduralprogrammakesprogressthroughthestepsfromlaunchtocompletion,itdoessobyunder-
goingchangesofstate. Thestateofourprogramasawholeisthestateofalloftheprogram’svariables.
Whenonevariablechanges,theoverallstatehaschanged.
Variablesarethenamesyourprogramassignstotheresultsofanexpression. Everyvariableiscreatedwith
aninitialvalue. Variableswillchangetoidentifynewobjectsandtheobjectsidentiﬁedbyavariablecan
changetheirinternalstate. Thesethreekindsofstatechanges(variablecreation,objectassignment,object
change)happenasinputsareacceptedandourprogramevaluatesexpressions. Eventuallythestateofthe
variablesindicatesthatwearedone,andourprogramcanexit.
A Python variable name must be at least one letter, and can have a string of numbers, letters and ‘ _’‘s
toanylength. Namesthatstartwith‘ _’or‘__’havespecialsigniﬁcance. Namesthatbeginwith‘ _’are
typicallyprivatetoamoduleorclass. We’llreturntothisnotionofprivacyin Classesand Modules. Names
thatbeginwith‘ __’arepartofthewaythePythoninterpreterisbuilt.
Examplevariablenames:
a
pi
aVeryLongName
a_name
__str__
_hidden
Tip:TracingExecution
71
Building Skills in Python, Release 2.6.5
Wecantracetheexecutionofaprogrambysimplyfollowingthechangesofvalueofallthevariablesinthe
program. Forprogrammingnewbies,ithelpstocreatealistofvariablesandwritedowntheirchangeswhen
studyingaprogram. We’llshowanexampleinthenextsection.
Pythoncreatesnewobjectsastheresultofevaluatinganexpression. Pythonassignstheseobjectstonew
variableswithan assignmentstatement. Pythonremovesvariableswitha delstatement. Theunderlying
objectislatergarbage-collectedwhentherearenomorevariablesreferringtotheobject.
SomeConsequences . APythonvariableislittlemorethananamewhichreferstoanobject. Thecentral
issueistorecognizethattheunderlyingobjectistheessentialpartofourprogram;avariablenameisjust
ameaningfullabel. Thishasanumberofimportantconsequences.
Oneconsequenceofavariablebeingsimplyalabelisthatanynumberofvariablescanrefertothesame
object. Inotherlanguages(C,C++,Java)therearetwokindsofvalues: primitiveandobjects,andthere
aredistinctrulesforhandlingthetwokindsofvalues. InPython, everyvariableisasimplereferenceto
anunderlyingobject. Whentalkingaboutsimpleimmutableobjects,likethenumber3,multiplevariables
referringtoacommonobjectisfunctionallyequivalenttohavingadistinctcopyofaprimitivevalue. When
talking about mutable objects, like lists, mappings, or complex objects, distinct variable references can
changethestateofthecommonobject.
AnotherconsequencesisthatthePythonobjectfullydeﬁnesit’sown type. Theobject’stypedeﬁnesthe
representation,therangeofvaluesandtheallowedoperationsontheobject.Thetypeisestablishedwhenthe
objectiscreated. Forexample,ﬂoatingpointadditionandlongintegerobjectshavediﬀerentrepresentations,
operationsofaddingthesekindsofnumbersarediﬀerent,theobjectscreatedbyadditionareofdistincttypes.
Pythonusesthetypeinformationtochoosewhichadditionoperationtoperformontwovalues. Inthecaseof
anexpressionwithmixedtypesPythonusesthetypeinformationtocoerceoneorbothvaluestoacommon
type.
Thisalsomeansthe“casting”anobjecttomatchthedeclaredtypeofavariableisn’tmeaningfulinPython.
Youdon’tuseC++orJava-stylecasting.
We’vealreadyworkedwiththefournumerictypes: plainintegers,longintegers,ﬂoatingpointnumbersand
complexnumbers. We’vetouchedonthestringtype,also. Thereareseveralotherbuilt-intypesthatwe
willlookatindetailin Data Structures . Plus,wecanuseclassdeﬁnitionstodeﬁnenewtypestoPython,
somethingwe’lllookatin Data + Processing = Objects .
Wecommonlysaythata staticlanguageassociatesthetypeinformationwiththevariable. Onlyvaluesof
acertaintypecanbeassignedtoagivenvariable. Python,incontrast,isa dynamiclanguage;avariableis
justalabelortagattachedtotheobject. Anyvariablecanbeassociatedwithanobjectofanytype.
Theﬁnalconsequenceofvariablesreferringtoobjectsisthatavariable’sscopecanbeindependentofthe
objectitself. Thismeansthatvariableswhichareindistinctnamespacescanrefertothesameobject. When
afunctioncompletesexecutionandthenamespaceisdeleted,thevariablesaredeleted,andthenumberof
variablesreferringtoanobjectisreduced. Additionalvariablesmaystillrefertoanobject,meaningthat
theobjectwillcontinuetoexist. Whenonlyonevariablereferstoanobject,thenremovingthelastvariable
removesthelastreferencetotheobject,andtheobjectcanberemovedfrommemory.
Alsonotethatexpressionsgenerallycreatenewobjects; ifanobjectisnotsavedinavariable,itsilently
vanishes. Wecansafelyignoretheresultsofafunction.
Scope and Namespaces . A Python variable is a name which refers to an object. To be useful, each
variablemusthavea scopeofvisibility. Thescopeisdeﬁnedasthesetofstatementsthatcanmakeuseof
thisvariable. Avariablewith global scopecanbereferencedanywhere. Ontheotherhand,avariablewith
local scopecanonlybereferencedinalimitedsuiteofstatements.
Thisnotionofscopeisessentialtobeingabletokeepaintellectualgriponaprogram. Programsofeven
moderatecomplexityneedtokeeppoolsofvariableswithseparatescopes. Thisallowsyoutoreusevariable
names without risk of confusion from inadvertantly changing the value of a variable used elsewhere in a
program.
72 Chapter 7. Variables, Assignment and Input
Building Skills in Python, Release 2.6.5
Pythoncollectsvariablesintopoolscalled namespaces. Anewnamespaceiscreatedaspartofevaluating
thebodyofafunctionormodule,orcreatinganewobject. Additionally,thereisoneglobalnamespace.
Thismeansthateachvariable(andthestatethatitimplies)isisolatedtotheexecutionofasinglefunction
ormodule. Byseparatingalllocallyscopedvariablesintoseparatenamespaces,wedon’thaveanendless
clutterofglobalvariables.
Intherarecasethatyouneedaglobalvariable,the globalstatementisavailabletoassignavariabletothe
globalnamespace.
When we introduce functions in F unctions, classes in Classesand modules in Components, Modules and
Packages, we’ll revisit this namespace technique for managing scope. In particular, see F unctions and
Namespacesforadigressiononthis.
7.2 The Assignment Statement
AssignmentisfundamentaltoPython;itishowtheobjectscreatedbyanexpressionarepreserved.We’lllook
atthebasicassignmentstatement,plustheaugmentedassignmentstatement. Later,in Multiple Assignment
Statement,we’lllookatmultipleassignment.
7.2.1 Basic Assignment
We create and change variables primarily with the assignmentstatement. This statement provides an
expressionandavariablenamewhichwillbeusedtolabelthevalueoftheexpression.
variable =expression
Here’sashortscriptthatcontainssomeexamplesofassignmentstatements.
example3.py
#!/usr/bin/env python
# Computer the value of a block of stock
shares=150
price=3+5.0/8.0
value=shares*price
printvalue
1.Wehaveanobject,thenumber 150,whichweassigntothevariable shares.
2.We have an expression ‘ 3+5.0/8.0’, which creates a ﬂoating-point number, which we save in the
variableprice.
3.Wehaveanotherexpression,‘ shares * price ’,whichcreatesaﬂoating-pointnumber;wesavethisin
valuesothatwecanprintit. Thisscriptcreatedthreenewvariables.
Sincethisﬁleisnew,we’llneedtodothe chmod+xexample3.py once,afterwecreatethisﬁle. Then,
whenwerunthisprogam,weseethefollowing.
$ ./example3.py
543.75
7.2. The Assignment Statement 73
Building Skills in Python, Release 2.6.5
7.2.2 Augmented Assignment
Anyoftheusualarithmeticoperationscanbecombinedwithassignmenttocreatean augmented assignment
statement.
Forexample,lookatthisaugmentedassignmentstatement:
a+=v
Thisstatementisashorthandthatmeansthesamethingasthefollowing:
a=a+v
Here’salargerexample
portfolio.py
#!/usr/bin/env python
# Total value of a portfolio made up of two blocks of stock
portfolio =0
portfolio +=150*2+1/4.0
portfolio +=75*1+7/8.0
printportfolio
First, we’ll do the chmod +x portfolio.py on this ﬁle. Then, when we run this progam, we see the
following.
$ ./portfolio.py
376.125
Theotherbasicmathoperationscanbeusedsimilarly,althoughthepurposegetsobscureforsomeoperations.
Theseinclude‘ -=’,‘*=’,‘/=’,‘%=’,‘&=’,‘^=’,‘|=’,‘<<=’and‘>>=’.
Here’salengthyexample. Thisisanextensionof Craps Oddsin Numeric T ypes and Expressions .
In craps, the ﬁrst roll of the dice is called the “come out roll”. This roll can be won immediately if the
numberis7or11. Itcanbelostimmediatelyifthenumberis2,3or12. Alloftheremainingnumberswill
establishapointandthegamecontinues.
craps.py
#!/usr/bin/env python
# Compute the odds of winning on the first roll
win=0
win+=6/36.0# ways to roll a 7
win+=2/36.0# ways to roll an 11
print"first roll win ", win
# Compute the odds of losing on the first roll
lose=0
lose+=1/36.0# ways to roll 2
lose+=2/36.0# ways to roll 3
lose+=1/36.0# ways to roll 12
print"first roll lose ", lose
# Compute the odds of rolling a point number (4, 5, 6, 8, 9 or 10)
74 Chapter 7. Variables, Assignment and Input
Building Skills in Python, Release 2.6.5
point=1# odds must total to 1
point-=win# remove odds of winning
point-=lose# remove odds of losting
print"first roll establishes a point ", point
There’sa22.2%chanceofwinning,anda11.1%chanceoflosing. What’sthechanceofestablishingapoint?
Onewayistoﬁgurethatit’swhat’sleftafterwinningorloosing. Thetotalofallprobabilitiesalwaysadd
to1. Subtracttheoddsofwinningandtheoddsoflosingandwhat’sleftistheoddsofsettingapoint.
Here’sanotherwaytoﬁguretheoddsofrolling4,5,6,8,9or10.
point=0
point+=2*3/36.0# ways to roll 4 or 10
point+=2*4/36.0# ways to roll 5 or 9
point+=2*5/36.0# ways to roll 6 or 8
printpoint
Bytheway,youcanaddthestatement‘ print win + lose + point ’toconﬁrmthattheseoddsalladdto
1. Thismeansthatwehavedeﬁnedallpossibleoutcomesforthecomeoutrollincraps.
Tip:TracingExecution
Wecantracetheexecutionofaprogrambysimplyfollowingthechangesofvalueofallthevariablesinthe
program.
WecanstepthroughtheplannedexecutionofourPythonsourcestatements, writingdownthevariables
andtheirvaluesonasheetofpaper. Fromthis,wecanseethestateofourcalculationevolve.
Whenweencounteranassignmentstatement,welookonourpaperforthevariable. Ifweﬁndthevariable,
weputalinethroughtheoldvalueandwritedownthenewvalue. Ifwedon’tﬁndthevariable,weaddit
toourpagewiththeinitialvalue.
Here’sourexamplefrom craps.py script throughtheﬁrstpartofthescript. The winvariablewascreated
andsetto‘ 0’,thenthevaluewasreplacedwith‘ 0.16’,andthenreplacedwith‘ 0.22’. Thelosevariable
wasthencreatedandsetto‘ 0’. Thisiswhatourtracelookslikesofar.
win:0.00.160.22
lose:0
Here’sourexamplewhen craps.py script isﬁnished. Wechangedthevariable loseseveraltimes. Wealso
addedandchangedthevariable point.
win:0.00.160.22
lose:0.00.0270.0830.111
point:1.00.770.66
Wecanusethistracetechniquetounderstandwhataprogrammeansandhowitproceedsfromitsinitial
statetoitsﬁnalstate.
AswithmanythingsPython,thereissomeadditionalsubtletytoassignment,butwe’llcoverthosetopics
later. Forexample, multiple-assignment statementissomethingwe’lllookintoinmoredeeplyin T uples.
7.3 Input Functions
Pythonprovidestwosimplisticbuilt-infunctionstoacceptinputandsetthevalueofvariables. Theseare
notreallysuitableforacompleteapplication,butwilldoforourinitialexplorations.
7.3. Input Functions 75
Building Skills in Python, Release 2.6.5
Typically,interactiveprogramswhichrunonadesktopuseacomplete graphic user interface (GUI),often
writtenwiththe Tkintermoduleorthe pyGTKmodule. InteractiveprogramswhichrunovertheInternet
useHTMLforms.
Theprimitiveinteractionswe’reshowingwith input()andraw_input()areonlysuitableforverysimple
programs.
Important: Python3.x
InPython3,the raw_input()functionwillberenamedto input().
ThePython2 input()functionwillberemoved. It’sthatuseless.
Note that some IDE’s buﬀer the program’s output, making these functions appear to misbehave. For
example, ifyouuseKomodo, you’llneedtousethe“RuninaNewConsole”option. IfyouuseBBEdit,
you’llhavetousethe“RuninTerminal”option.
Youcanenhancethesefunctionssomewhatbyincludingthestatement‘ import readline ’. Thismodule
silentlyandautomaticallyenhancestheseinputfunctionstogivetheusertheabilitytoscrollbackwardsand
reusepreviousinputs.
Youcanalso‘ import rlcompleter ’.Thismoduleallowsyoutodeﬁnesophisticatedkeywordauto-completion
forthesefunctions.
7.3.1 Theraw_input() Function
Theﬁrstwaytogetinteractiveinputisthe raw_input()function. Thisfunctionacceptsastringparameter,
whichistheuser’sprompt,writtentostandardoutput. Thenextlineavailableonstandardinputisreturned
asthevalueofthefunction.
raw_input ([prompt])
Ifapromptispresent,itiswrittento sys.stdout.
Inputisreadfrom sys.stdinandreturnedasastring.
Theraw_input()functionreadsfromaﬁleoftencalled sys.stdin. Whenrunningfromthecommand-line,
thiswillbethekeyboard,andwhatyoutypewillbeechoedinthecommandwindowor Terminalwindow.
Ifyoutry,however,toruntheseexamplesfromTextpad,you’llseethatTextpaddoesn’thaveanyplacefor
youtotypeanyinput. InBBEdit,you’llneedtousethe RunInTerminal iteminthe#!menu.
Here’sanexamplescriptthatuses raw_input().
rawdemo.py
#!/usr/bin/env python
# show how raw_input works
a=raw_input ("yes?")
print"you said ", a
Whenwerunthisscriptfromtheshellprompt,itlookslikethefollowing.
MacBook-3:Examples slott$ python rawdemo.py
yes?why not?
you said why not?
1.Thisprogrambeginsbyevaluatingthe raw_input()function. When raw_input()isappliedtothe
parameterof "yes?",itwritesthepromptonstandardoutput,andwaitsforalineofinput.
76 Chapter 7. Variables, Assignment and Input
Building Skills in Python, Release 2.6.5
(a)Weentered why not?.
(b)Oncethatlinewascomplete,theinputstringisreturnedasthevalueofthefunction.
(c)Theraw_input()function’svaluewasassignedtothevariable a.
2.Thesecondstatementprintedthatvariablealongwithsometext.
Ifwewantnumericinput,wemustconverttheresultingstringtoanumber.
stock.py
#!/usr/bin/env python
# Compute the value of a block of stock
shares=int(raw_input ("shares: ") )
price=float(raw_input ("dollars: ") )
price+=float(raw_input ("eights: ") )/8.0
print"value", shares *price
We’llchmod+xstock.py thisprogram;thenwecanrunitasmanytimesasweliketogetresults.
MacBook-3:Examples slott$ ./stock.py
shares: 150
dollars: 24
eights: 3
value 3656.25
Theraw_input()mechanismisverylimited. Ifthestringreturnedby raw_input()isnotsuitableforuse
byint(),anexceptionisraisedandtheprogramstopsrunning. We’llcoverexceptionhandlingindetailin
Exceptions.
Asateaser,here’swhatitlookslike.
MacBook-5:Examples slott$ python stock.py
shares: a bunch
Traceback (most recent call last):
File "stock.py", line 3, in <module>
shares = int( raw_input("shares: ") )
ValueError: invalid literal for int() with base 10: 'a bunch'
7.3.2 Theinput() Function
Inadditiontothe raw_input()function,whichreturnstheexactstringofcharacters,thereisthe input()
function. Thisappliesthe eval()functiontotheinput,whichwilltypicallyconvertnumericinputtothe
appropriateobjects.
Important: Python3
Thisfunctionwillberemoved. It’sbestnottomakeuseofit.
Thevalueofthe input()functionis‘ eval( raw_input( prompt ) ) ’.
7.3. Input Functions 77
Building Skills in Python, Release 2.6.5
7.4 Multiple Assignment Statement
Thebasicassignmentstatementcandomorethanassigntheresultofasingleexpressiontoasinglevariable.
Theassignmentsatementcanalsoassignmultiplevariablesatonetime.
Theessentialruleisthattheleftandrightsidemusthavethesamenumberofelements.
Forexample,thefollowingscripthasseveralexamplesofmultipleassignment.
line.py
#!/usr/bin/env python
# Compute line between two points.
x1,y1=2,3# point one
x2,y2=6,8# point two
m,b=float(y1-y2)/(x1-x2), y1-float(y1-y2)/(x1-x2)*x1
print"y=",m,"*x+",b
Whenwerunthisprogram,wegetthefollowingoutput
MacBook-3:Examples slott$ ./line.py
y = 1.25 *x+ 0.5
Wesetvariables x1,y1,x2andy2. Thenwecomputed mandbfromthosefourvariables. Thenweprinted
themandb.
The basic rule is that Python evaluates the entire right-hand side of the =statement. Then it matches
valueswithdestinationsontheleft-handside. Ifthelistsarediﬀerentlengths,anexceptionisraisedand
theprogramstops.
Becauseofthecompleteevaluationoftheright-handside,thefollowingconstructworksnicelytoswapto
variables. Thisisoftenquiteabitmorecomplicatedinotherlanguages.
a,b=1,4
b,a=a,b
printa,b
We’llreturntothisin T uples,wherewe’llseeadditionalusesforthisfeature.
7.5 The del Statement
Anassignmentstatement creates or locates a variable and then assigns a new object to the variable.
Thischangeinstateishowourprogramadvancesfrombeginningtotermination. Pythonalsoprovidesa
mechanismforremovingvariables,the delstatement.
Thedelstatementlookslikethis:
del object 〈 , ... 〉
Each objectisanykindofPythonobject. Usuallythesearevariables,buttheycanbefunctions,modules
orclasses.
78 Chapter 7. Variables, Assignment and Input
Building Skills in Python, Release 2.6.5
Thedelstatementworksby unbindingthename,removingitfromthesetofnamesknowntothePython
interpreter. Ifthisvariablewasthelastremainingreferencetoanobject,theobjectwillberemovedfrom
memory. If,ontheotherhand,othervariablesstillrefertothisobject,theobjectwon’tbedeleted.
C++Comparison
ProgrammersfamiliarwithC++willbepleasedtonotethatmemorymanagementissilentandau-
tomatic,makingprogramsmuchmorereliablewithmuchlesseﬀort. Thisremovalofobjectsiscalled
garbage col lection , something that can be rather diﬀicult to manage in larger applications. When
garbagecollectionisdoneincorrectly,itcanleadto dangling references : avariablethatreferstoan
objectthatwasdeletedprematurely. Poorlydesignedgarbagecollectioncanalsoleadto memory leaks,
whereunreferencedobjectsarenotproperlyremovedfrommemory. Becauseoftheautomatedgarbage
collectioninPython,itsuﬀersfromnoneofthesememorymanagementproblems.
Thedelstatementistypicallyusedonlyinrare,specializedcases. Ordinarynamespacemanagementand
garbagecollectionaregenerallysuﬀicientformostpurposes.
7.6 Interactive Mode Revisited
WhenweﬁrstlookedatinteractivePythonin Command-Line Interaction wenotedthatPythonexecutes
assignment statements silently, but prints the results of an expression statement. Consider the following
example.
>>>pi=355/113.0
>>>area=pi*2.2**2
>>>area
15.205309734513278
Theﬁrsttwoinputsarecompletestatements,sothereisnoresponse. Thethirdinputisjustanexpression,
sothereisaresponse.
Itisn’tobvious,butthevalueassignedto piisn’tcorrect. Becausewedidn’tseeanythingdisplayed,we
didn’tgetanyfeedbackfromourcomputationof pi.
Python,however,hasahandywaytohelpus. WhenwetypeasimpleexpressionininteractivePython,it
secretlyassignstheresulttoatemporaryvariablenamed _. Thisisn’tapartofscripting,butisahandy
featureofaninteractivesession.
This comes in handy when exploring something rather complex. Consider this interactive session. We
evaluateacoupleofexpressions,eachofwhichisimplicitlyassignedto _. Wecanthensavethevalueof _
inasecondvariablewithaneasier-to-remembername,like piorarea.
>>>335/113.0
2.9646017699115044
>>>355/113.0
3.1415929203539825
>>>pi=_
>>>pi*2.2**2
15.205309734513278
>>>area=_
>>>area
15.205309734513278
7.6. Interactive Mode Revisited 79
Building Skills in Python, Release 2.6.5
Notethatwecreatedaﬂoatingpointobject(2.964...),andPythonsecretlyassignedthisobjectto _. Then,
wecomputedanewﬂoatingpointobject(3.141...),whichPythonassignedto _.
Whathappenedtotheﬁrstﬂoat,2.964...? Pythongarbage-collectedthisobject,removingitfrommemory.
Thesecondﬂoatthatwecreated(3.141)wasassignedto _. Wethenassigneditto pi,also,givingustwo
referencestotheobject. Whenwecomputedanotherﬂoating-pointvalue(15.205...),thiswasassignedto _.
Doesthismeanoursecondﬂoat,3.141... wasgarbagecollected? No,itwasn’tgarbagecollected;itwasstill
referencedbythevariable pi.
7.7 Variables, Assignment and Input Function Exercises
7.7.1 Variables and Assignment
1.ExtendPreviousExercises . Reworktheexercisesin Numeric T ypes and Expressions .
Each of the previous exercises can be rewritten to use variables instead of expressions using only
constants. For example, if you want to tackle the Fahrenheit to Celsius problem, you might write
somethinglikethis:
#!/usr/bib/env python
# Convert 8 C to F
C=8
F=32+C*(9./5.)
print"celsius",C,"fahrenheit ",F
You’llwanttorewritetheseexercisesusingvariablestogetreadytoaddinputfunctions.
2.StateChange . Isittruethatallprogramssimplyestablishastate?
Itcanarguedthatacontrollerforadevice(likeatoasteroracruisecontrol)simply maintainsasteady
state. Thenotionofstatechangeasaprogrammovestowardcompletiondoesn’tapplybecausethe
softwareisalwayson. Isthisthecase, ordoesthesoftwarecontrollingadevicehaveinternalstate
changes?
Forexample,consideratoasterwithathermostat,a“browness”sensorandasingleheatingelement.
Whataretheinputs? Whataretheoutputs? Arethereinternalstateswhilethetoasterismaking
toast?
7.7.2 Input Functions
Referbacktotheexercisesin Numeric T ypes and Expressions forformulasandotherdetails. Eachofthese
canberewrittentousevariablesandaninputconversion. Forexample,ifyouwanttotackletheFahrenheit
toCelsiusproblem,youmightwritesomethinglikethis:
C=raw_input ('Celsius: ')
F=32+C*(9./5.)
print"celsius",C,"fahrenheit ",F
1.StockValue. Inputthenumberofshares,dollarpriceandnumberof8th’s. Fromthesethreeinputs,
computethetotaldollarvalueoftheblockofstock.
2.Convertfrom|deg|Cto|deg|F .Writeashortprogramthatwillinput°Candoutput°F.Asecond
programwillinput°Fandoutput°C.
80 Chapter 7. Variables, Assignment and Input
Building Skills in Python, Release 2.6.5
3.PeriodicPayment . Inputtheprincipal,annualpercentagerateandnumberofpayments. Compute
themonthlypayment. Besuretodividerateby12andmultiplepaymentsby12.
4.Surface Air Consumption Rate . Write a short program will input the starting pressure, ﬁnal
pressure,timeandmaximumdepth. ComputeandprinttheSACR.
AsecondprogramwillinputaSACR,startingpressure, ﬁnalpressureanddepth. Itwillprintthe
timeatthatdepth,andthetimeat10feetmoredepth.
5.WindChill. Inputatemperatureandawindspeed. Outputthewindchill.
6.ForcefromaSail . Inputtheheightofthesailandthelength. Thesurfaceareais1/2 ×h×l. For
awindspeedof25MPH,computetheforceonthesail. Smallboatsailsare25-35feethighand6-10
feetlong.
7.8 Variables and Assignment Style Notes
Spaces are used sparingly in Python. It is common to put spaces around the assignment operator. The
recommendedstyleis
c=(f-32)*5/9
Donottakegreatpainstolineupassignmentoperatorsvertically. Thefollowinghastoomuchspace,and
ishardtoread,eventhoughitisfussilyaligned.
a =12
b =a*math.log(a)
aVeryLongVariable =26
d =13
ThisisconsideredpoorformbecausePythontakesalotofitslookfromnaturallanguagesandmathematics.
Thiskindofhorizontalwhitespaceishardtofollow: itcangetdiﬀiculttobesurewhichexpressionlines
upwithwhichvariable. Pythonprogramsaremeanttobereasonablycompact,morelikereadingashort
narrativeparagraphorshortmathematicalformulathanreadingapage-sizedUMLdiagram.
Variablenamesareoftengivenas mixedCase;variablenamestypicallybeginwithlower-caseletters. The
lower_case_with_underscores styleisalsoused,butislesspopular.
Inaddition,thefollowingspecialformsusingleadingortrailingunderscoresarerecognized:
•single_trailing_underscore_ :usedtoavoidconﬂictswithPythonkeywords. Forexample:‘ print_
= 42’
•__double_leading_and_trailing_underscore__ : used for special objects or attributes, e.g.
__init__,__dict__or__file__. These names are reserved; do not use names like these in your
programsunlessyouspeciﬁcallymeanaparticularbuilt-infeatureofPython.
•_single_underscore : meansthatthevariableis“private”.
7.8. Variables and Assignment Style Notes 81
Building Skills in Python, Release 2.6.5
82 Chapter 7. Variables, Assignment and Input
CHAPTER
EIGHT
TRUTH, COMP ARISON AND
CONDITIONAL PROCESSING
T ruth, Comparison and the if Statement, pass and assert Statements.
Thissectionleadinguptothe forandwhilestatements,aswellasthe breakandcontinuestatements.
TheelementsofPythonwe’veseensofargiveussomepowerfulcapabilities. Wecanwriteprogramsthat
implementawidevarietyofrequirements. Statechangeisnotalwaysassimpleastheexampleswe’veseenin
V ariables, Assignment and Input . Whenwerunascript,allofthestatementsareexecutedunconditionally.
Ourprogramscan’thandlealternativesorconditions.
Pythonprovidesdecision-makingmechanismssimilartootherprogramminglanguages. In T ruth and Logic
we’ll look at truth, logic and the logic operators. The exercises that follow examine some subtleties of
Python’s evaluation rules. In Comparisonswe’ll look at the comparison operators. Then, Conditional
Processing: the if Statement describestheifstatement. In The assert Statement we’llintroduceahandy
diagnostictool,the assertstatement.
Inthenextchapter, Loops and Iterative Processing ,we’lllookatloopingconstructs.
8.1 T ruth and Logic
Manytimestheexactchangeinstatethatourprogramneedstomakedependsonacondition. Acondition
isaBooleanexpression;anexpressionthatiseither TrueorFalse. Generallyconditionsareoncomparisons
amongvariablesusingthecomparisonoperations.
We’lllookattheessentialdeﬁnitionsoftruth,thelogicoperationsandthecomparisonoperations. Thiswill
allowustobuildconditions.
8.1.1 T ruth
Pythonrepresentstruthandfalsityinavarietyofways.
•False. Also0,thespecialvalue None,zero-lengthstrings "",zero-lengthlists [],zero-lengthtuples
(),emptymappings {}arealltreatedas False.
•True. Anythingelsethatisnotequivalentto False.
Wetrytoavoiddependingonrelativelyobscurerulesfordetermining Truevs.False. Weprefertouse
thetwoexplicitkeywords, TrueandFalse. NotethatapreviousversionofPythondidn’thavetheboolean
literals,andsomeolderopen-sourceprogramswilldeﬁnethesevalues.
83
Building Skills in Python, Release 2.6.5
Python provides a factory function to collapse these various forms of truth into one of the two explicit
booleanobjects.
bool(object)
ReturnsTruewhentheargument objectisonethevaluesequivalenttotruth, Falseotherwise.
8.1.2 Logic
Python provides three basic logic operators that work on this Boolean domain. Note that this Boolean
domain,withjusttwovalues, TrueandFalse,andthesethreeoperatorsformacompletealgebraicsystem,
sometimes called Boolean algebra, after the mathemetician George Boole. The operators supported by
Pythonarenot,andandor. Wecanfullydeﬁnetheseoperatorswithrulestatementsortruthtables.
Thistruthtableshowstheevaluationof not x.
print"x","not x"
printTrue,notTrue
printFalse,notFalse
xnotx
TrueFalse
FalseTrue
Thistableshowstheevaluationof xand yforallcombinationof TrueandFalse.
print"x","y","x and y"
printTrue,True,TrueandTrue
printTrue,False,TrueandFalse
printFalse,True,FalseandTrue
printFalse,False,FalseandFalse
xyxandy
TrueTrueTrue
TrueFalseFalse
FalseTrueFalse
FalseFalseFalse
Animportantfeatureof andisthatitdoesnotevaluateallofitsparametersbeforeitisapplied. Ifthe
left-handsideis Falseoroneoftheequivalentvalues,theright-handsideisnotevaluated,andtheleft-hand
valueisreturned. We’lllookatsomeexamplesofthislater.
Fornow,youcantrythingslikethefollowing.
printFalseand0
print0andFalse
ThiswillshowyouthattheﬁrstfalsevalueiswhatPythonreturnsfor and.
Thistableshowstheevaluationof xor yforallcombinationof TrueandFalse.
xyxory
TrueTrueTrue
TrueFalseTrue
FalseTrueTrue
FalseFalseFalse
Parallelwiththe andoperator,ordoesnotevaluatetheright-handparameteriftheleft-handsideis True
oroneoftheequivalentvalues.
84 Chapter 8. T ruth, Comparison and Conditional Processing
Building Skills in Python, Release 2.6.5
As a ﬁnal note, andis a high priority operator (analogous to multiplication) and oris lower priority
(analogoustoaddition). Whenevaluatingexpressionslike‘ a or b and c ’,theandoperationisevaluated
ﬁrst,followedbythe oroperation.
8.1.3 Exercises
1.LogicShort-Cuts . Wehaveseveralversionsoffalse: False,0,None,'',(),[]and{}. We’llcover
allofthemoreadvancedversionsoffalsein Data Structures . Foreachofthefollowing,workoutthe
valueaccordingtothetruthtablesandtheevaluationrules. Sinceeachtruthorfalsevalueisunique,
wecanseewhichpartoftheexpressionwasevaluated.
•‘False and None ’
•‘0 and None or () and [] ’
•‘True and None or () and [] ’
•‘0 or None and () or [] ’
•‘True or None and () or [] ’
•‘1 or None and 'a' or 'b' ’
8.2 Comparisons
We’ll look at the basic comparison operators. We’ll also look at the partial evaluation rules of the logic
operatorstoshowhowwecanbuildmoreusefulexpressions. Finally,we’lllookatﬂoating-pointequality
tests,whicharesometimesdoneincorrectly.
8.2.1 Basic Comparisons
Wecomparevalueswiththecomparisonoperators. Thesecorrespondtothemathematicalfunctionsof <,
≤,>,≥,=and̸=. ConditionalexpressionsareoftenbuiltusingthePythoncomparisonoperators: ‘ <’,‘<=’,
‘>’,‘>=’,‘==’and‘!=’forlessthan,lessthanorequalto,greaterthan,greaterthanorequalto,equalto
andnotequalto.
>>>p1=22./7.
>>>p2=355/113.
>>>p1
3.1428571428571428
>>>p2
3.1415929203539825
>>>p1<p2
False
>>>p2>=p2
True
Whenapplyingacomparisonoperator,weseeanumberofsteps.
1.Evaluatebothargumentvalues.
2.Applythecomparisontocreateabooleanresult.
(a)Convertbothparameterstothesametype. Numbersareconvertedtoprogressivelylongertypes:
plainintegertolongintegertoﬂoattocomplex.
8.2. Comparisons 85
Building Skills in Python, Release 2.6.5
(b)Dothecomparison.
(c)ReturnTrueorFalse.
Wecalloutthesethreestepsexplicitlybecausetherearesomesubtletiesincomparisonamongunliketypesof
data;we’llcometothislaterwhenwecoversequences,mappingsandclassesin Data Structures . Generally,
itdoesn’tmakesensetocompareunliketypesofdata. Afterall,youcan’task“Whichislarger,theEmpire
StateBuildingorthecolorgreen?”
ComparisonscanbecombinedinPython,unlikemostotherprogramminglanguages. Wecanask: ‘ 0 <= a
< 6’whichhastheusualmathematicalmeaning. We’renotforcedtousethelongerform: ‘ 0 <= a and a
< 6’.
Thisisusefulwhen aisactuallysomecomplexexpressionthatwe’drathernotrepeat.
Hereisanexample.
>>>3<p1<3.2
True
>>>3<p1andp1<3.2
True
Notethattheprecedingexamplehadamixtureofintegersandﬂoating-pointnumbers. Theintegerswere
coercedtoﬂoating-pointinordertoevaluatetheexpressions.
8.2.2 Partial Evaluation
Wecancombinethelogicoperators,comparisonsandmath. Thisallowsustousecomparisonsandlogicto
preventcommonmathematicalblunderslikeattemptingtodividebyzero,orattemptingtotakethesquare
rootofanegativenumber.
Forexample,let’sstartwiththisprogramthatwillﬁguretheaverageof95,125and132.
sum=95+125+132
count=3
average =float(sum)/count
printaverage
Initially,wesetthevariables sumandcount. Thenwecomputethe averageusingsumandcount.
Assume that the statement that computes the average (‘ average=...’) is part of a long and complex
program. Sometimesthatlongprogramwilltrytocomputetheaverageofnonumbersatall. Thishasthe
sameeﬀectasthefollowingshortexample.
sum, count =0,0
average =float(sum)/count
printaverage
Intherarecasethatwehavenonumberstoaveragewedon’twanttocrashwhenwefoolishlyattemptto
dividebyzero. We’dprefertohavesomemoregracefulbehavior.
Recallfrom T ruth and Logic thattheandoperatordoesn’tevaluatetheright-handsideunlesstheleft-hand
sideisTrue. Statedtheotherway,the andoperator onlyevaluatestherightsideiftheleftsideis True.
Wecanguardthedivisionlikethis:
average =count!=0andsum/count
printaverage
86 Chapter 8. T ruth, Comparison and Conditional Processing
Building Skills in Python, Release 2.6.5
Thisisanexamplethatcansimplifycertainkindsofcomplexprocessing. Ifthecountisnon-zero,theleft
sideistrueandtherightsidemustbechecked. Ifthecountiszero,theleftsideis False,theresultofthe
completeandoperationis False.
Thisisaconsequenceofthemeaningoftheword and. Theexpression a and bmeansthat aistrueaswell
asbistrue. If aisfalse, thevalueof bdoesn’treallymatter,sincethewholeexpressionisclearlyfalse.
Asimilaranalysisholdsfortheword or. Theexpression a or bmeansthatoneofthetwoistrue;italso
meansthatneitherofthetwoisfalse. If aistrue,thenthevalueof bdoesn’tchangethetruthofthewhole
expression.
Thestatement“It’scoldandrainy”iscompletelyfalsewhenitiswarm; raindoesn’tmattertofalsifying
thewholestatement. Similarly,“I’mstoppingforcoﬀeeoranewspaper”istrueifI’vestoppedforcoﬀee,
irrespectiveofwhetherornotIgotanewspaper.
8.2.3 Floating-Point Comparisons
Exactequalitybetweenﬂoating-pointnumbersisadangerousconcept. Afteralengthycomputation,round-
oﬀerrorsinﬂoatingpointnumbersmayhaveinﬁnitesimallysmalldiﬀerences. Theanswersarecloseenough
toequalforallpracticalpurposes,buteverysingleoneofthe64bitsmaynotbeidentical.
Thefollowingtechniqueistheappropriatewaytodoﬂoatingpointcomparisons.
abs(a-b)<0.0001
Ratherthanaskifthetwoﬂoatingpointvaluesarethesame,weaskifthey’recloseenoughtobeconsidered
thesame. Forexample,runthefollowingtinyprogram.
ﬂoatequal.py
#!/usr/bin/env python
# Are two floating point values really completely equal?
a,b=1/3.0,.1/.3
printa,b,a==b
printabs(a-b)<0.00001
Whenwerunthisprogram,wegetthefollowingoutput
$ python floatequal.py
0.333333333333 0.333333333333 False
True
Thetwovaluesappearthesamewhenprinted. Yet,onmostplatforms,the ==testreturns False. They
arenotpreciselythesame. Thisisaconsequenceofrepresentingrealnumberswithonlyaﬁniteamountof
binaryprecision. Certainrepeatingdecimalsgettruncated,andthesetruncationerrorsaccumulateinour
calculations.
Therearewaystoavoidthisproblem;onepartofthisavoidanceistodothealgebranecessarytopostpone
doingdivisionoperations. Divisionintroducesthelargestnumbererroneousbitsontothetrailingedgeof
ournumbers. Theotherpartofavoidingtheproblemisnevertocompareﬂoatingpointnumbersforexact
equality.
8.2. Comparisons 87
Building Skills in Python, Release 2.6.5
8.3 Conditional Processing: the if Statement
Manytimestheprogram’sexactchangeinstatedependsonacondition. Conditionalprocessingisdoneby
settingstatementsapartinsuiteswithconditionsattachedtothesuites. ThePythonsyntaxforthisisan
ifstatement.
8.3.1 The if Statement
Thebasicformofan ifstatementprovidesaconditionandasuiteofstatementsthatareexecutedwhenthe
conditionistrue. Itlookslikethis:
ifexpression :
suite
The suiteisanindentedblockofstatements. Anystatementisallowedintheblock,includingindented if
statements. Youcanuseeithertabsorspacesforindentation. Theusualstyleisfourspaces.
Thisisourﬁrst compound statement . See Python Syntax Rules forsomeadditionalguidanceonsyntaxfor
compoundstatements.
Theifstatementevaluatesthecondition expressionﬁrst. Whentheresultis True,the suiteofstatements
isexecuted. Otherwisethesuiteisskipped.
Forexample,iftwodiceshowatotalof7or11,thethrowisawinner. Inthefollowingsnippet, d1andd2
aretwodicevaluesthatrangefrom1to6.
ifd1+d2==7ord1+d2==11:
print"winner", d1+d2
Herewehaveatypicallycomplexexpression. The oroperatorevaluatestheleftsideﬁrst. Pythonevaluates
andappliesthehigh-precendencearithmeticoperatorbeforethelower-precendencecomparisonoperator. If
theleftsideistrue( d1+d2is7),theorexpressionistrue,andthesuiteisexecuted. Iftheleftsideis
false,thentherightsideisevaluated. Ifitistrue( d1+d2is11),theorexpressionistrue,andthesuiteis
executed. Otherwise,thesuiteisskipped.
88 Chapter 8. T ruth, Comparison and Conditional Processing
Building Skills in Python, Release 2.6.5
PythonSyntaxRules
Pythonsyntaxisverysimple. We’vealreadyseenhowbasicexpressionsandsomesimplestatements
areformatted. Herearesomesyntaxrulesandexamples. Lookat Syntax F ormalities foranoverview
ofthelexicalrules.
Compound statements, including if,while,for, have an indented suite of statements. You have a
number of choices for indentation; you can use tab characters or spaces. While there is a lot of
ﬂexibility,themostimportantthingistobeconsistent.
Further,therecommendationistousespaces. That’swhatwe’llshow. Thegenerallyacceptedwayto
formatPythoncodeistosetyoureditortoreplacetabswith4spaces.
We’llshowanexamplewithspaces,shownvia␣.
a=0
if␣a==0:
␣␣␣␣print␣"a␣is␣zero"
else:
␣␣␣␣print␣"a␣is␣not␣zero"
if␣a%2==0:
␣␣␣␣print␣"a␣is␣even"
else:
␣␣␣␣print␣"a␣is␣odd"
IDLEusesfourspacesforindentationautomatically. Ifyou’reusinganothereditor,youcansetitto
usefourspaces,also.
8.3.2 The elif Clause
Oftenthereareseveralconditionsthatneedtobehandled. Thisisdonebyadding elifclauses. Thisisshort
for“else-if”. Wecanaddanunlimitednumberof elifclauses. Theelifclausehasalmostthesamesyntax
astheifclause.
elif expression :
suite
Hereisasomewhatmorecompleteruleforthecomeoutrollinagameofcraps:
result=None
ifd1+d2==7ord1+d2==11:
result="winner"
elifd1+d2==2ord1+d2==3ord1+d2==12:
result="loser"
printresult
First,wecheckedtheconditionforwinning;iftheﬁrstconditionistrue,theﬁrstsuiteisexecutedandthe
entireifstatementiscomplete. Iftheﬁrstconditionisfalse,thenthesecondconditionistested. Ifthat
conditionistrue,thesecondsuiteisexecuted,andtheentire ifstatementiscomplete. Ifneithercondition
istrue,theifstatementhasnoeﬀect.
8.3.3 The else Clause
Pythonalsogivesusthecapabilitytoputa“catch-all”suiteattheendforallotherconditions. Thisisdone
byaddinganelseclause. Theelseclausehasthefollowingsyntax.
8.3. Conditional Processing: the if Statement 89
Building Skills in Python, Release 2.6.5
else:
suite
Here’sthecompletecome-outrollrule,assumingtwovalues d1andd2.
point=None
ifd1+d2==7ord1+d2==11:
print"winner"
elifd1+d2==2ord1+d2==3ord1+d2==12:
print"loser"
else:
point=d1+d2
print"point is ", point
Here,weusethe else:suitetohandlealloftheotherpossiblerolls. Therearesixdiﬀerentvalues(4,5,6,
8,9,or10),atedioustypingexerciseifdoneusing or. Wesummarizethiswiththe else:clause.
Whilehandyinonerespect,this else:clauseisalsodangerous. Bynotexplicitlystatingthecondition,itis
possibletooverlooksimplelogicerrors.
Considerthefollowingcomplete ifstatementthatchecksforawinneronaﬁeldbet. Aﬁeldbetwinson2,
3,4,9,10,11or12. Thepayoutoddsarediﬀerenton2and12.
outcome=0
ifd1+d2==2ord1+d2==12:
outcome=2
print"field pays 2:1 "
elifd1+d2==4ord1+d2==9ord1+d2==10ord1+d2==11:
outcome=1
print"field pays even money "
else:
outcome=-1
print"field loses "
Herewetestfor2and12intheﬁrstclause;wetestfor4,9,10and11inthesecond. It’snotobviousthat
arollof3ismissingfromtheevenmoneypayout. Thisfragmentincorrectlytreats3,5,6,7and8alikein
theelse:. Whiletheelse:clauseisusedcommonlyasacatch-all,amoreproperusefor else:istoraisean
exceptionbecauseaconditionwasnotmatchedbyanyofthe iforelifclauses.
8.4 The pass Statement
Thepassstatementdoesnothing. Sometimesweneedaplaceholdertoﬁllthesyntacticrequirementsofa
compoundstatement. Weusethe passstatementtoﬁllintherequiredsuiteofstatements.
Thesyntaxistrivial.
pass
Here’sanexampleofusingthepassstatement.
ifn%2==0:
pass# Ignore even values
else:
count+=1# Count the odd values
90 Chapter 8. T ruth, Comparison and Conditional Processing
Building Skills in Python, Release 2.6.5
Yes,technically,wecaninvertthelogicintheif-clause. However,sometimesitismorecleartoprovidethe
explicit“donothing”thantodeterminetheinverseoftheconditioninthe ifstatement.
Asprogramsgrowandevolve,havinga passstatementcanbeahandyreminderofplaceswhereaprogram
canbeexpanded.
Also,whenwecometoclassdeclarationsin Data + Processing = Objects ,we’llseeoneotheruseforthe
passstatement.
8.5 The assert Statement
An assertion is a condition that we’re claiming should be true at this point in the program. Typically,
it summarizes the state of the program’s variables. Assertions can help explain the relationships among
variables,reviewwhathashappenedsofarintheprogram,andshowthat ifstatementsandfororwhile
loopshavethedesiredeﬀect.
When a program is correct, all of the assertions are true no matter what inputs are provided. When a
programhasanerror,atleastoneassertionwindsupfalseforsomecombinationofinputs.
Pythondirectlysupportsassertionsthroughan assertstatement. Therearetwoforms:
assertcondition
assertcondition , expression
Ifthe conditionisFalse,theprogramisinerror;thisstatementraisesan AssertionError exception.
Ifthe conditionisTrue,theprogramiscorrect,thisstatementdoesnothingmore.
Ifthesecondformofthestatementisused,andan expressionisgiven,anexceptionisraisedusingthevalue
oftheexpression. We’llcoverexceptionsindetailin Exceptions. Iftheexpressionisastring,itbecomesan
thevalueassociatedwiththe AssertionError exception.
Note:AdditionalFeatures
Thereisanevenmoreadvancedfeatureofthe assertstatement. Iftheexpressionevaluatestoaclass,that
classisusedinsteadof AssertionError . Thisisnotwidelyused,anddependsonelementsofthelanguage
wehaven’tcoveredyet.
Here’satypicalexample:
max=0
ifa<b:max=b
ifb<a:max=a
assert(max==aormax==b)andmax>=aandmax>=b
Ifthe assertion condition is true, the program continues. If the assertion condition isfalse, the program
raisesan AssertionError exceptionandstops,showingthelinewheretheproblemwasfound.
Run this program with aequal to band not equal to zero; it will raise the AssertionError exception.
Clearly,theifstatementsdon’tset maxtothelargestof aandbwhena=b. Thereisaprobleminthe if
statements,andthepresenceoftheproblemisrevealedbytheassertion.
8.5. The assert Statement 91
Building Skills in Python, Release 2.6.5
8.6 The if-else Operator
Therearesituationswhereanexpressioninvolvesasimpleconditionandafull-sized ifstatementisdistracting
syntaticoverkill. Pythonhasahandylogicoperatorthatevalutesacondition,thenreturnseitheroftwo
valuesdependingonthatcondition.
“TernaryOperator”
Mostarithmeticandlogicoperatorshaveeitheroneortwovalues. Anoperationthatappliestoasingle
valueiscalled unary. Forexample‘ -a’and‘abs(b)’areexamplesofunaryoperations: unarynegation
andunaryabsolutevalue. Anoperationthatappliestotwovaluesiscalledbinary. Forexample,‘ a*b’
showsthebinarymultiplicationoperator.
The if-else operator trinary (or “ternary”) It involves a conditional expression and two alternative
expressions. Consequently,itdoesn’tuseasinglespecialcharacter,butusestwokeywords: ‘ if’and
‘else’.
Somefolkswillmistakenlycallit theternaryoperatorasifthisistheonlypossibleternaryoperator.
Thebasicformoftheoperatoris
expression ifcondition elseexpression
Pythonevaluatesthecondition–inthemiddle–ﬁrst. Iftheconditionis True,thentheleft-handexpression
isevaluated,andthat’sthevalueoftheoperation. Iftheconditionis False,thentheright-handexpression
isevaluated,andthat’sthevalueoftheoperation.
Notethattheconditionisalwaysevaluated. Onlyoneoftheothertwoexpressionsisevaluated,makingthis
akindofshort-cutoperatorlike andandor.
Hereareacoupleofexamples.
average =sum/countifcount!=0elseNone
oddSum=oddSum+( nifn%2==1else0)
TheintentistohaveanEnglish-likereadingofthestatement. “Theaverageisthesumdividedbythecount
ifthecountisnon-zero;elsetheaverageisNone”.
Thewordyalterativetotheﬁrstexampleisthefollowing.
ifcount!=0:
average=sum/count
else:
average=None
Thisseemslikethreeextralinesofcodetopreventanerrorintheraresituationoftherebeingnovaluesto
average.
Similarly,thewordyversionofthesecondexampleisthefollowing:
ifn%2==0:
pass
else:
oddSum=oddSum+n
92 Chapter 8. T ruth, Comparison and Conditional Processing
Building Skills in Python, Release 2.6.5
Forthis second example, the original statementregisteredour intentveryclearly: weweresumming the
oddvalues. Thelong-windedif-statementtendstoobscureourgoalbymakingitjustonebranchofthe
if-statement.
8.7 Condition Exercises
1.Developan“or-guard” . Intheexampleaboveweshowedthe“and-guard”pattern:
average =count!=0andfloat(sum)/count
Developasimilartechniqueusing or.
Comparethiswiththe if-elseoperator.
2.ComeOutWin . Assume d1andd2havethenumbersontwodice. Assumethisisthecomeout
rollinCraps. Writetheexpressionforwinning(7or11). Writetheexpressionforlosing(2,3or12).
Writetheexpressionforapoint(4,5,6,8,9or10).
3.FieldWin. Assume d1andd2havethenumberson2dice. Theﬁeldpayson2,3,4,9,10,11or12.
Actuallytherearetwoconditions: 2and12payatonesetofodds(2:1)andtheother5numberspay
atevenmoney. Writetwotwoconditionsunderwhichtheﬁeldpays.
4.Hardways. Assume d1andd2havethenumberson2dice. Ahardwayspropositionis4,6,8,or10
withbothdicehavingthesamevalue. It’sthehardwaytogetthenumber. Ahard4,forinstanceis
‘d1+d2 == 4 and d1 == d2 ’. Aneasy4is‘ d1+d2 == 4 and d1 != d2 ’.
Youwinahardwaysbetifyougetthenumberthehardway. Youloseifyougetthenumbertheeasy
wayoryougetaseven. Writethewinningandlosingconditionforoneofthefourhardwaysbets.
5.SortThreeNumbers . Thisisanexerciseinconstructingif-statements. Usingonlysimplevariables
andifstatements,youshouldbeabletogetthistowork;aloopisnotneeded.
Given3numbers( X,Y,Z),assignvariables x,y,zsothat x≤y≤zandx,y,andzarefrom X,Y,
and Z.Useonlyaseriesofif-statementsandassignmentstatements.
Hint. Youmustdeﬁnetheconditionsunderwhichyouchoosebetween x← X,x← Yorx← Z.You
willdoasimilaranalysisforassigningvaluesto yandz. Notethatyouranalysisforsetting ywill
dependonthevaluesetfor x;similarly,youranalysisforsetting zwilldependonvaluessetfor xand
y.
6.ComeOutRoll . Accept d1andd2asinput. First,checktoseethattheyareintheproperrange
fordice. Ifnot,printamessage.
Otherwise,determinetheoutcomeifthisisthecomeoutroll. Ifthesumis7or11,printwinner. If
thesumis2,3or12,printloser. Otherwiseprintthepoint.
7.FieldRoll. Accept d1andd2asinput. First,checktoseethattheyareintheproperrangefordice.
Ifnot,printamessage.
Otherwise,checkforanyﬁeldbetpayout. Arollof2or12pays2:1,print“pays2”;3,4,9,10and
11pays1:1,print“payseven”;everythingelseloses,print“loses”
8.HardwaysRoll . Accept d1andd2asinput. First,checktoseethattheyareintheproperrangefor
dice. Ifnot,printamessage.
Otherwise,checkforahardwaysbetpayout. Hard4and10pays7:1;Hard6and8pay9:1,easy4,
6,8or10,orany7loses. Everythingelse,thebetstillstands.
8.7. Condition Exercises 93
Building Skills in Python, Release 2.6.5
9.Partial Evaluation . This partial evaluation of the andandoroperators appears to violate the
evaluate-applyprincipleespousedin The Evaluate-Apply Cycle . Insteadofevaluatingallparameters,
theseoperatorsseemtoevaluateonlytheleft-handparameterbeforetheyareapplied. Isthisspecial
caseaproblem? Cantheseoperatorsberemovedfromthelanguage,andreplacedwiththesimple if
-statement? Whataretheconsequencesofremovingtheshort-circuitlogicoperators?
8.8 Condition Style Notes
Nowthatwehaveintroducedcompoundstatements,youmayneedtomakeanadjustmenttoyoureditor.
Setyoureditortousespacesinsteadoftabs. MostPythonistypedusingfourspacesinsteadoftheASCII
tabcharacter( ^I).Mosteditorscanbesetsothatwhenyouhitthe Tabkeyonyourkeyboard,theeditor
insertsfourspaces. IDLEissetupthiswaybydefault. Agoodeditorwillfollowtheindentssothatonce
youindent,thenextlineisautomaticallyindented.
We’llshowthespacesexplicitlyas␣inthefollowingfragment.
if␣a␣>=␣b:
␣␣␣␣m␣=␣a
if␣b␣>=␣a:
␣␣␣␣m␣=␣b
ThisishastypicalspacingforapieceofPythonprogramming.
Notethatthecolon(‘ :’) immediatelyfollowsthecondition. Thisistheusualformat,andisconsistentwith
thewaynaturallanguages(likeEnglish)areformatted.
Theseifstatementscanbecollapsedtoone-liners,inwhichcasetheywouldlooklikethis:
if␣a␣>=␣b:␣m␣=␣a
if␣b␣>=␣a:␣m␣=␣b
Ithelpstolimityourlinesto80positionsorless. Youmayneedtobreaklongstatementswitha \\at
theendofaline. Also,parenthesizedexpressionscanbecontinuedontothenextlinewithouta \\. Some
programmerswillputinextra()’sjusttomakelinebreaksneat.
Whilespacesareusedsparingly,theyarealwaysusedtosetoﬀcomparisonoperatorsandbooleanoperators.
Othermathematicaloperatorsmayormaynotbesetoﬀwithspaces. Thismakesthecomparisonsstand
outinanifstatementorwhilestatement.
if␣b**2-4*a*c␣<␣0:
␣␣␣␣print␣"no␣root"
Thisshowsthespacearoundthecomparison,butnottheotherarithmeticoperators.
94 Chapter 8. T ruth, Comparison and Conditional Processing
CHAPTER
NINE
LOOPS AND ITERA TIVE
PROCESSING
The for, while, break, continue Statements
TheelementsofPythonwe’veseensofargiveussomepowerfulcapabilities. Wecanwriteprogramsthat
implementawidevarietyofrequirements. Statechangeisnotalwaysassimpleastheexampleswe’veseen
in V ariables, Assignment and Input .
In T ruth, Comparison and Conditional Processing wesawhowtomakeourprogramshandlehandlealter-
nativesorconditions. Inthissection,we’llseehowtowriteprogramswhichdotheirprocessing“forall”
piecesofdata. Forexample,whenwecomputeanaverage,wecomputeasum for al lofthevalues.
Pythonprovidesiteration(sometimescalledlooping)similartootherprogramminglanguages. In Iterative
Processing: F or Al l and There Exists we’ll describe the semantics of iterative statements in general. In
Iterative Processing: The for Statement we’lldescribethe forstatement. We’llcoverthe whilestatements
in Iterative Processing: The while Statement .
This is followed by some of the most interesting and challenging short exercises in this book. We’ll add
someiterationcontrolin More Iteration Control: break and continue ,describingthebreakandcontinue
statements. We’ll conclude this chapter with a digression on the correct ways to develop iterative and
conditionalstatementsin A Digression.
9.1 Iterative Processing: For All and There Exists
Therearetwocommonqualiﬁersusedforlogicalconditions. Thesearesometimescalledtheuniversaland
existentialqualiﬁers. Wecancallthe“forall”and“thereexists”. Wecanalsocallthemthe“all”and“any”
qualiﬁers.
Aprogrammayinvolveastatethatisbestdescribedasa“forall”state,whereanumberofrepetitionsof
sometaskarerequired. Forexample,ifweweretowriteaprogramtosimulate100rollsoftwodice,the
terminatingconditionforourprogramwouldbethatwehaddonethesimulation for al l100rolls.
Similary, wemayhaveaconditionthatlooksforexistenceofasingleexample. Wemightwanttoknow
ifaﬁlecontainsalinewith“ERROR”init. Inthiscase,wewanttowriteaprogramwithaterminating
conditionwouldbethat there existsanerrorlineinthelogﬁle.
It turns out that All and Any are logical inverses. We can always rework a “for any” condition to be a
“forall”condition. Aprogramthatdeterminesifthereexistsanerrorlineisthesameasaprogramthat
determinesthatalllinesarenoterrorlines.
95
Building Skills in Python, Release 2.6.5
Anytimewehavea“forall”or“forany”condition,wehaveaniteration:wewillbeiteratingthroughtheset
ofvalues,evaluatingthecondition. WehaveachoiceoftwoPythonstatementsforexpressingthisiteration.
Oneistheforstatementandtheotheristhe whilestatement.
9.2 Iterative Processing: The for Statement
Thesimplestforstatementlookslikethis:
forvariable initerable :
suite
The suiteisanindentedblockofstatements. Anystatementisallowedintheblock,includingindented for
statements.
The variableisavariablename. The suitewillbeexecutediterativelywiththevariablesettoeachofthe
valuesinthegiven iterable. Typically,the suitewillusethe variable,expectingittohaveadistinctvalue
oneachpass.
Thereareanumberofwaysofcreatingthenecessary iterablecollectionofvalues. Themostcommonisto
usetherange()functiontogenerateasuitablelist. Wecanalsocreatethelistmanually,usingasequence
display;we’llshowsomeexampleshere. We’llreturntothedetailsofsequencesin Sequences: Strings, T uples
and Lists.
Therange()functionhas3forms:
•‘range(x)’generates xdistinctvalues,from0to x-1,incrementingby1.
Mathematiciansdescribethisasa“half-openinterval”andwriteit [0, x).
•‘range(x, y)’generates y−xdistinctvaluesfrom xto y-1,incrementingby1. [x, y).
•‘range(x, y, z) ’generatesvaluesfrom xto y-1,incrementingby z:[x, x+z, x+ 2z, ..., x +kz < y ],
forsomeinteger k.
Asequencedisplaylookslikethis: ‘ [’‘]’
expression 〈 , ... 〉
It’salistofexpressions,usuallysimplynumbers,separatedbycommas. Thesquarebracketsareessential
formarkingasequence.
Herearesomeexamples.
foriinrange(6):
printi+1
Thisﬁrstexampleuses range()tocreateasequenceof6valuesfrom0tojustbefore6. The forstatement
iterates through the sequence, assigning each value to the local variable i. Theprintstatement has an
expressionthataddsoneto iandprintstheresultingvalue.
forjinrange(1,7):
printj
Thissecondexampleusesthe range()tocreateasequenceof6valuesfrom1tojustbefore7. The for
statementiteratesthroughthesequence,assigningeachvaluetothelocalvariable j. Theprintstatement
printsthevalue.
96 Chapter 9. Loops and Iterative Processing
Building Skills in Python, Release 2.6.5
foroinrange(1,36,2):
printo
Thisexampleuses range()tocreateasequenceof36/2=18valuesfrom1tojustbefore36steppingby2.
Thiswillbealistofoddvaluesfrom1to35. The forstatementiteratesthroughthesequence,assigning
eachvaluetothelocalvariable o. Theprintstatementprintsall18values.
forrin[1,3,5,7,9,12,14,16,18,19,21,23,25,27,30,32,34,36]:
printr,"red"
Thisexampleusesanexplicitsequenceofvalues. Thesearealloftherednumbersonastandardroulette
wheel. It then iterates through the sequence, assigning each value to the local variable r. Theprint
statementprintsall18valuesfollowedbytheword“red”.
Here’samorecomplexexample, showingnested forstatements. Thisenumeratesallthe36outcomesof
rollingtwodice.
ford1inrange(6):
ford2inrange(6):
printd1+1,d2+1,'=',d1+d2+2
1.The outerforstatement uses range()to create a sequence of 6 values, and iterates through the
sequence,assigningeachvaluetothelocalvariable d1.
2.Foreachvalueof d1,theinnerloopcreatesasequenceof6values,anditeratesthroughthatsequence,
assigningeachvalueto d2.
3.Theprintstatementwillbeexecuted36times.
Here’stheexamplealludedtoearlier,whichdoes100simulationsofrollingtwodice.
importrandom
foriinrange(100):
d1=random.randrange( 6)+1
d2=random.randrange( 6)+1
printd1+d2
1.Theforstatementuses range()tocreateasequenceof100values, assignseachvaluetothelocal
variablei.
Notethatthesuiteofstatementsneveractuallyusesthevalueof i. Thevalueof imarksthestate
changesuntiltheloopiscomplete,butisn’tusedforanythingelse.
2.Foreachvalueof i,twovaluesarecreated, d1andd2.
3.Thesumof d1andd2isprinted.
There are a number of more advanced forms of the forstatement, which we’ll cover in the section on
sequencesin Sequences: Strings, T uples and Lists .
9.3 Iterative Processing: The while Statement
Thewhilestatementlookslikethis:
whileexpression :
suite
9.3. Iterative Processing: The while Statement 97
Building Skills in Python, Release 2.6.5
The suiteis an indented block of statements. Any statement is allowed in the block, including indented
whilestatements.
As long as the expressionis true, the suiteis executed. This allows us to construct a suite that steps
throughallofthenecessarytaskstoreachaterminatingcondition. Itisimportanttonotethatthesuite
ofstatementsmustincludeachangetoatleastoneofthevariablesinthe while expression. Whenitis
possibletoexecutethesuiteofstatementswithoutchanginganyofthevariablesinthe while expression,
theloopwillnotterminate.
Let’slookatsomeexamples.
t, s=1,1
whilet!=9:
t, s=t+2, s+t
1.Theloopisinitializedwith tandseachsetto1.
2.Wespecifythattheloopcontinueswhile t̸= 9.
3.Inthebodyoftheloop,weincrement tby2,sothatitwillbeanoddvalue;weincrement sbyt,
summingasequenceofoddvalues.
Whenthisloopisdone, tis9,and sisthesumofoddnumberslessthan9: 1+3+5+7. Alsonotethatthe
whileconditiondependson t,sochanging tisabsolutelycriticalinthebodyoftheloop.
Here’samorecomplexexample. Thissums100dicerollstocomputeanaverage.
s, r=0,0
whiler!=100:
d1,d2=random.randrange( 6)+1,random.randrange( 6)+1
s,r=s+d1+d2, r+1
prints/r
1.Weinitializetheloopwith sandrbothsettozero.
2.Thewhilestatementspeciﬁesthatduringtheloop rwillnotbe100;whentheloopisdone, rwillbe
100.
3.Thebodyoftheloopsets d1andd2torandomnumbers;itincrements sbythesumofthosedice,
anditincrements rby1.
Whentheloopisover, swillbethesumof100rollsoftwodice. Whenweprint,‘ s/r’weprinttheaverage
rolledontwodice. Theloopconditiondependson r,soeachtripthroughtheloopmustupdate r.
9.4 More Iteration Control: break and continue
Pythonoﬀersseveralstatementsformoresubtleloopcontrol. Thepointofthesestatementsistopermit
twocommonsimpliﬁcationsofaloop. Ineachcase,thesestatementscanbereplacedwith ifstatements;
however,thoseifstatementversionsmightbeconsideredrathercomplexforexpressingsomefairlycommon
situations.
Thebreakstatementterminatesaloopprematurely.
Thesyntaxistrivial:
break
98 Chapter 9. Loops and Iterative Processing
Building Skills in Python, Release 2.6.5
Abreakstatementisalwaysfoundwithinan ifstatementwithinthebodyofa fororwhileloop. Abreak
statementistypicallyusedwhentheterminatingconditionistoocomplextowriteasanexpressioninthe
whileclauseofaloop. A breakstatementisalsousedwhena forloopmustbeabandonedbeforetheend
ofthesequencehasbeenreached.
Theconinuestatementskipstherestofaloop’sindentedsuite.
Thesyntaxistrivial:
continue
Acontinuestatementsisalwaysfoundwithinan ifstatementwithina fororwhileloop. Thecontinue
statementisusedinsteadofdeeplynested elseclauses.
Here’sanexamplethathasacomplex breakcondition. Wearegoingtoseeifwegetsixoddnumbersina
row,orspintheroulettewheel100times.
We’lllookatthisinsomedepthbecauseitpullsanumberoffeaturestogetherinoneprogram. Thisprogram
showsbothbreakandcontinueconstructs. Mostprogramscanactuallybesimpliﬁedbyeliminatingthe
breakandcontinuestatements. Inthiscase,wedidn’tsimplify,justtoshowhowthestatementsareused.
Notethatwehaveatwopartterminatingcondition: 100spins orsixoddnumbersinarow. Thehundred
spinsisrelativelyeasytodeﬁneusingthe range()function. Thesixoddnumbersinarowrequirestesting
andcountingandthen,possibly,endingtheloop. Theoverallendingconditionfortheloop, then,isthe
numberofspinsis100orthecountofoddnumbersinarowissix.
sixodd.py
from__future__ importprint_function
importrandom
oddCount =0
forsinrange(100):
spinCount =s
n=random.randrange( 38)
# Zero
ifn==0orn==37:# treat 37 as 00
oddCount =0
continue
# Odd
ifn%2==1:
oddCount +=1
ifoddCount ==6:break
continue
# Even
assertn%2==0and0<n<=36
oddCount =0
print( oddCount, spinCount )
1.We import the print_function module to allow use of the print()function intead of the print
statement.
2.Weimportthe randommodule,sothatwecangeneratearandomsequenceofspinsofaroulettewheel.
3.Weinitialize oddCount,ourcountofoddnumbersseeninarow. Itstartsatzero,becausewehaven’t
seenanyaddnumbersyet.
4.Theforstatementwillassign100diﬀerentvaluesto s,suchthat 0≤s < 100. Thiswillcontrolour
experimenttodo100spinsofthewheel.
9.4. More Iteration Control: break and continue 99
Building Skills in Python, Release 2.6.5
5.Wesavethecurrentvalueof sinavariablecalled spinCount,settinguppartofourpostcondition
forthisloop. Weneedtoknowhowmanyspinsweredone,sinceoneoftheexitconditionsisthatwe
did100spinsandneversawsixoddvaluesinarow. This“neversawsixinarow”exitconditionis
handledbytheforstatementitself.
6.We’lltreat37asifitwere00,whichislikezero. InRoulette,thesetwonumbersareneitherevennor
odd. The oddCountissettozero,andtheloopiscontinued. This continuestatementresumesloop
withthenextvalueof s. Itrestartsprocessingatthetopofthe forstatementsuite.
7.Wecheckthevalueof oddCounttoseeifithasreachedsix. Ifithas, oneoftheexitconditionsis
satisﬁed,andwecanbreakoutoftheloopentirely. Weusethe breakstatementwillstopexecuting
statementsinthesuiteofthe forstatement. If oddCountisnotsix,wedon’tbreakoutoftheloop,
weusethecontinuestatementtorestartthe forstatementstatementsuitefromthetopwithanew
valuefor s.
8.Wethrewinanassertstatement(seethenextsection, The assert Statement formoreinformation)to
claimthatthespin, n,isevenandnot0or37. Thisiskindofasafetynet. Ifeitherofthepreceding if
statementswereincorrect,ora continuestatementwasomitted,thisstatementwoulduncoverthat
fact. Wecoulddothiswithanother ifstatement,butwewantedtointroducethe assertstatement.
Attheendoftheloop, spinCountisthenumberofspinsand oddCountisthemostrecentcountofodd
numbersinarow. Either oddCountissixorspinCountis99. When spinCountis99,thatmeansthatspins
0through99wereexamined;thereare100diﬀerentnumbersbetween0and99.
9.5 Iteration Exercises
1.GreatestCommonDivisor . Thegreatestcommondivisoristhelargestnumberwhichwillevenly
dividetwoothernumbers. Examples: GCD(5, 10)=5, thelargestnumberthatevenlydivides5
and10. GCD(21,28)=7,thelargestnumberthatdivides21and28. GCD’sareusedtoreduce
fractions. OnceyouhavetheGCDofthenumeratoranddenominator,theycanbothbedividedby
theGCDtoreducethefractiontosimplestform. 21/28reducesto3/4.
Greatest Common Divisor of two integers, pand q
Loop. Loopuntil p=q.
Swap. Ifp < qthenswap pand q,pq.
Subtract. Ifp > qthensubtract qfrom p,p←p−q.
Result. Print p
2.ExtractingtheSquareRoot . Thisisaprocedureforapproximatingthesquareroot. Itworksby
dividingtheintervalwhichcontainsthesquarerootinhalf. Initially,weknowthesquarerootofthe
numberissomewherebetween0andthenumber. Welocateavalueinthemiddleofthisintervaland
determineofthesquarerootismoreorlessthanthismidpoint. Wecontinuallydividetheintervalsin
halfuntilwearriveatanintervalwhichissmallenoughandcontainsthesquareroot. Iftheinterval
isonly0.001inwidth,thenwehavethesquarerootaccurateto0.001
Square Root of a number, n
TwoInitialGuesses .
100 Chapter 9. Loops and Iterative Processing
Building Skills in Python, Release 2.6.5
g1←0
g2←n
Atthispoint, g1×g1−n≤0≤g2×g2−n.
Loop. Loopuntil|g1×g1−n|÷n < 0.001.
Midpoint.mid←(g1+g2)÷2
MidpointSquaredvs. Number .cmp←mid×mid−n
WhichInterval?
ifcmp≤0then g1←mid.
ifcmp≥0then g2←mid.
ifcmp = 0,midistheexactanswer!
Result. Print g1
3.SortFourNumbers . Thisisachallengingexerciseinif-statementconstruction. Forsomeadditional
insight,see[Dijkstra76],page61.
Given4numbers( W,X,Y,Z)
Assignvariables w,x,y,zsothat w≤x≤y≤zandw,x,y,zarefrom W,X,Y,and Z.
Donotuseanarray. Onewaytoguaranteethesecondpartoftheaboveistoinitialize w,x,y,zto
W,X,Y,Z,andthenuseswappingtorearrangethevariables.
Hint: Thereareonlyalimitedcombinationofout-of-orderconditionsamongfourvariables. Youcan
designasequenceofifstatements,eachofwhichﬁxesoneoftheout-of-orderconditions. Thissequence
ofifstatementscanbeputintoaloop. Oncealloftheout-of-orderconditionsareﬁxed,thenumbers
areinorder,theloopcanend.
4.Highest Power of 2 . This can be used to determine how many bits are required to represent a
number. We want the highest power of 2 which is less than or equal to our target number. For
example 64≤100<128. Thehighestpowerof 25≤100<26.
Givenanumber n,ﬁndanumber psuchthat 2p≤n < 2p+1.
Thiscanbedonewithonlyadditionandmultiplicationby2. Multiplicationby2,buttheway,canbe
donewiththe‘ <<’shiftoperator. Donotusethe pow()function,oreventhe‘ **’operator,asthese
aretooslowforourpurposes.
Considerusingavariable c,whichyoukeepequalto 2p. Aninitializationmightbe‘ p = 1’,‘c = 2’.
Whenyouincrement pby1,youalsodouble c.
Developyourownloop. Thisisactuallyquitechallenging,eventhoughtheresultingprogramistiny.
Foradditionalinsight,see [Gries81],page147.
5.HowMuchEﬀorttoProduceSoftware? ThefollowingequationsarethebasicCOCOMOesti-
matingmodel,describedin [Boehm81]. Theinput, K,isthenumberof1000’soflinesofsource;that
istotalsourcelinesdividedby1000. DevelopmentEﬀort,where Kisthenumberof1000’soflinesof
source. Eiseﬀortinstaﬀ-months.
E= 2.4×K1:05
Development Cost, where Eis eﬀort in staﬀ-months, Ris the billing rate. Cis the cost in dollars
(assuming152workinghoursperstaﬀ-month)
C=E×R×152
9.5. Iteration Exercises 101
Building Skills in Python, Release 2.6.5
ProjectDuration,where Eiseﬀortinstaﬀ-months. Disdurationincalendarmonths.
D= 2.5×E0:38
Staﬀing,where Eiseﬀortinstaﬀ-months, Disdurationincalendarmonths. Sistheaveragestaﬀ
size.
S=E
D
Evaluatethesefunctionsforprojectswhichrangeinsizefrom8,000lines( K=8)to64,000lines( K
=64)instepsof8. Produceatablewithlinesofsource,Eﬀort,Duration,CostandStaﬀsize.
6.Wind Chill Table . Wind chill is used by meteorologists to describe the eﬀect of cold and wind
combined. Given the wind speed in miles per hour, V, and the temperature in °F, T, the Wind
Chill, w,isgivenbytheformulabelow. See Wind Chil lin Numeric T ypes and Expressions formore
information.
35.74 + 0 .6215×T−35.75×(V0:16) + 0.4275×T×(V0:16)
Windspeedsarefor0to40mph,above40,thediﬀerenceinwindspeeddoesn’thavemuchpractical
impactonhowcoldyoufeel.
Evaluate this for all values of V(wind speed) from 0 to 40 mph in steps of 5, and all values of T
(temperature)from-10to40instepsof5.
7.Celsius to Fahrenheit Conversion Tables . We’ll make two slightly diﬀerent conversion tables.
ForvaluesofCelsiusfrom-20to+30instepsof5,producetheequivalentFahrenheittemperature.
ThefollowingformulaconvertsC(Celsius)toF(Fahrenheit).
F= 32 +212−32
100×C
ForvaluesofFahrenheitfrom-10to100instepsof5,producetheequivalentCelsiustemperatures.
ThefollowingformulaconvertsF(Fahrenheit)toC(Celsius).
C= (F−32)×100
212−32
8.Dive Planning Table . Given a surface air consumption rate, c, and the starting, s, and ﬁnal, f,
pressure in the air tank, a diver can determine maximum depths and times for a dive. For more
information,see Surface Air Consumption Rate in Numeric T ypes and Expressions .Accept c,sand
ffrominput,thenevaluatethefollowingfor dfrom30to120instepsof10. Printatableof tand d.
Foreachdiver, cisprettyconstant,andcanbeanywherefrom10to20,use15forthisexample. Also,
sand fdependonthetankused,typicalvaluesare s=2500and f=500.
t=33(s−f)
c(d+ 33)
9.Computing π. Eachofthefollowingseriescomputeincreasinglyaccuratevaluesof π(3.1415926...)
•π
4= 1−1
3+1
5−1
7+1
9−1
11+···
•π2
6= 1 +1
22+1
32+1
42+···
•π=∑
0k<1(1
16)k(4
8k+ 1−2
8k+ 4−1
8k+ 5−1
8k+ 6)
102 Chapter 9. Loops and Iterative Processing
Building Skills in Python, Release 2.6.5
•π= 1 +1
3+1·2
3·5+1·2·3
3·5·7+···
10.Computing e. A logarithm is a powerof somebase. When weuse logarithms, wecaneﬀectively
multiplynumbersusingaddition,andraisetopowersusingmultiplication. TwoPythonbuilt-infunc-
tionsarerelatedtothis: math.log()andmath.exp(). Bothofthesecomputewhatarecallednatural
logarithms,thatis,logarithmswherethebaseis e. Thisconstant, e,isavailableinthe mathmodule,
andithasthefollowingformaldeﬁnition: Deﬁnitionof e.
e=∑
0k<11
k!
Formoreinformationonthe( )operator,see Digression on The Sigma Operator .
The n! operatoris“factorial”. Interestingly,it’sapost-ﬁxoperator,itcomes afterthevalueitapplies
to.
n! =n×(n−1)×(n−2)×···× 1.
Forexample, 4! = 4×3×2×1 = 24. Bydeﬁnition, 0! = 1.
Ifweaddupthevalues1
0!+1
1!+1
2!+1
3!+···wegetthevalueofe. Clearly,whenwegettoabout
1/10!,thefractionissosmallitdoesn’tcontributemuchtothetotal.
Wecandothiswithtwoloops,anouterlooptosumupthe1
k!terms,andaninnerlooptocompute
thek!.
However,ifwehaveatemporaryvalueof k!,theneachtimethroughtheloopwecanmultiplythis
temporaryby k,andthenadd 1/temptothesum.
Youcantestbycomparingyourresultsagainst math.e,e≈2.71828or‘math.exp(1.0) ’.
11. Hailstone Numbers . Foradditionalinformation,see [Banks02].
Startwithasmallnumber, n,1≤n < 30.
Therearetwotransformationrulesthatwewilluse:
•Ifnisodd,multipleby3andadd1tocreateanewvaluefor n.
•Ifniseven,divideby2tocreateanewvaluefor n.
Performaloopwiththesetwotransformationrulesuntilyougetto n=1. You’llnotethatwhen n=
1,yougetarepeatingsequenceof1,4,2,1,4,2,...
Youcantestforoddnessusingthe%(remainder)operation. If‘ n % 2 == 1’,thenumberisodd,
otherwiseitiseven.
The two interesting facts are the “path length”, the number of steps until you get to 1, and the
maximumvaluefoundduringtheprocess.
Tabulate the path lengths and maximum values for numbers 1..30. You’ll need an outer loop that
rangesfrom1to30. You’llneedaninnerlooptoperformthetwostepsforcomputinganew nuntil
n==1;thisinnerloopwillalsocountthenumberofstepsandaccumulatethemaximumvalueseen
duringtheprocess.
Check: for27,thepathlengthis111,andthemaximumvalueis9232.
9.6 Condition and Loops Style Notes
Asadditionalsyntax,the forandwhilestatementspermitsan elseclause. Thisisasuiteofstatements
thatareexecutedwhentheloopterminatesnormally. Thissuiteisskippediftheloopisterminatedbya
9.6. Condition and Loops Style Notes 103
Building Skills in Python, Release 2.6.5
breakstatement. The elseclauseonaloopmightbeusedforsomepost-loopcleanup. Thisissounlike
otherprogramminglanguages,thatitishardtojustifyusingit.
Anelseclausealwaysraisesasmallproblemwhenitisused. It’sneverperfectlyclearwhatconditionslead
toexecutionofan elseclause. Theconditionthatapplieshastobeworkedoutfromcontext. Forinstance,
inifstatements,oneexplicitlystatestheexactconditionforallofthe ifandelifclauses. Thelogicalinverse
ofthisconditionisassumedasthe elsecondition. Itis,unfortunately,lefttothepersonreadingtheprogram
toworkoutwhatthisconditionactuallyis.
Similarly, theelseclause of awhilestatement is the basic loop termination condition, with all of the
conditionsonany breakstatementsremoved. Thefollowingkindofanalysiscanbeusedtoworkoutthe
conditionunderwhichtheelseclauseisexecuted.
whilenotBB:
ifC1:break
ifC2:break
else:
assertBBandnotC1andnotC2
assertBBorC1orC2
Becausethisanalysiscanbediﬀicult,itisbesttoavoidtheuseof elseclausesinloopconstructs.
9.7 A Digression
Forthosenewtoprogramming,here’sashortdigression,adaptedfromchapter8ofEdsgerDijkstra’sbook,
A Discipline of Programming [Dijkstra76].
Let’ssayweneedtosetavariable, m, tothelargeroftwoinputvalues, aandb. Westartwithastate
wecouldcall“ mundeﬁned”. Thenwewanttoexecuteastatementafterwhichweareinastateof (m=
aorm=b)andm≤aandm≤b.
Clearly,weneedtochoosecorrectlybetweentwodiﬀerent assignmentstatements. Weneedtodoeither
‘m=a’or‘m=b’. Howdowemakethischoice? Withalittlelogic,wecanderivetheconditionbytakingeach
ofthesestatement’seﬀectsoutofthedesiredend-state.
Forthestatement‘ m=a’tobetherightstatementtouse,weshowtheeﬀectofthestatementbyreplacing m
withthevalue a,andexaminingtheendstate: (a=aora=b)anda≤aanda≤b. Removingtheparts
thatareobviouslytrue,we’releftwith a≤b. Therefore,theassignment‘ m=a’isonlyusefulwhen‘ a <= b’.
For the statement m=bto be the right statement to establish the necessary condition, we do a similar
replacementof bformandexaminetheendstate: (b=aorb=b)andb≤aandb≤b. Again,weremove
thepartsthatareobviouslytrueandwe’releftwith b≤a. Therefore,theassignment‘ m=b’isonlyuseful
when‘b <= a’.
Eachassignmentstatementcanbe“guarded”byanappropriatecondition.
ifa>=b: m=a
elifb>=a: m=b
Isthecorrectstatementtoset mtothelargerof aorb.
Notethatthehardpartisestablishingthepostcondition. Oncewehavethatstatedcorrectly,it’srelatively
easytoﬁgurethebasickindofstatementthatmightmakesomeorallofthepostconditiontrue. Thenwe
doalittlealgebratoﬁllinanyguardsorloopconditionstomakesurethatonlythecorrectstatementis
executed.
SuccessfulLoopDesign . Thereareseveralconsiderationswhenusingthe whilestatement. Thislistis
takenfromDavidGries’, The Science of Programming [Gries81].
104 Chapter 9. Loops and Iterative Processing
Building Skills in Python, Release 2.6.5
1.Thebodyconditionmustbeinitializedproperly.
2.Attheendofthesuite,thebodyconditionisjustastrueasitwasafterinitialization. Thisiscalled
the invariant,becauseitisalwaystrueduringtheloop.
3.Whenthisbodyconditionistrueandthewhileconditionisfalse,theloopwillhavecompletedproperly.
4.Whenthewhileconditionistrue,therearemoreiterationslefttodo. Ifwewantedto,wecoulddeﬁne
amathematicalfunctionbasedonthecurrentstatethatcomputeshowmanyiterationsarelefttodo;
thisfunctionmusthaveavaluegreaterthanzerowhenthewhileconditionistrue.
5.Eachtimethroughtheloopwechangethestateofourvariablessothatwearegettingclosertomaking
thewhileconditionfalse;wereducethenumberofiterationslefttodo.
Whiletheseconditionsseemoverlycomplexforsomethingsosimpleasaloop,manyprogrammingproblems
arisefrommissingoneofthem.
Griesrecommendsputtingcommentsaroundaloopshowingtheconditionsbeforeandaftertheloop. Since
Python provides the assertstatement; this formalizes these comments into actual tests to be sure the
programiscorrect.
DesigningaLoop . Let’sputaparticularloopunderthemicroscope. Thisisasmallexample,butshows
allofthestepstoloopconstruction. Wewanttoﬁndtheleastpowerof2greaterthanorequaltosome
numbergreaterthan1,callit x. Thispowerof2willtellushowmanybitsarerequiredtorepresent x,for
example.
Wecanstatethismathematicallyaslookingforsomenumber, n,suchthat 2n 1< x≤2n. Ifxisapower
of2,forexample64,we’dﬁnd 26. Ifxisanothernumber,forexample66,we’dﬁnd 26<66≤27,whichis
64<66≤128.
Wecanstarttosketchourloopalready.
assertx>1
...initialize ...
...some loop ...
assert2**(n-1)<x<=2**n
Weworkouttheinitializationtomakesurethattheinvariantconditionoftheloopisinitiallytrue. Since x
mustbegreaterthanorequalto1,wecanset nto1. 21 1= 20= 1< x. Thiswillsetthingsuptosatisfy
rule1and2.
assertx>1
n=1
...some loop ...
assert2**(n-1)<x<=2**n
Inloops,theremustbeaconditiononthebodythatisinvariant,andaterminatingconditionthatchanges.
The terminating condition is written in the whileclause. In this case, it is invariant (always true) that
2n 1< x. Thatmeansthattheotherpartofourﬁnalconditionisthepartthatchanges.
assertx>1
n=1
whilenot( x<=2**n ):
n=n+1
9.7. A Digression 105
Building Skills in Python, Release 2.6.5
assert2**(n-1)<x
assert2**(n-1)<x<=2**n
Thenexttolaststepistoshowthatwhenthe whileconditionistrue,therearemorethanzerotripsthrough
thelooppossible. Weknowthat xisﬁniteandsomepowerof2willsatisfythiscondition. There’ssome n
suchthat n−1< log 2x≤n,whichlimitsthetripsthroughtheloop.
The ﬁnal step is to show that each cycle through the loop reduces the trip count. We can argue that
increasing ngetsusclosertotheupperboundof log2x.
Weshouldaddthisinformationonsuccessfulterminationascommentsinourloop.
106 Chapter 9. Loops and Iterative Processing
CHAPTER
TEN
FUNCTIONS
Theheartofprogrammingisthe evaluate-apply cycle,wherefunctionargumentsareevaluatedandthenthe
functionisappliedtothoseargumentvalues. We’llreviewthisin Semantics.
In F unction Deﬁnition: The def and return Statements weintroducethesyntaxfordeﬁningafunction. In
F unction Use,we’lldescribeusingafunctionwe’vedeﬁned.
Some languages make distinctions between varieties of functions, separating them into “functions” and
“subroutines”. We’llvisitthisfromaPythonperspectivein F unction V arieties .
We’lllookatsomeexamplesin Some Examples . We’lllookatwaystouse IDLEin Hacking Mode.
Weintroducesomeofthealternateargumentformsavailableforhandlingoptionalandkeywordparameters
in More F unction Deﬁnition F eatures .
FurthersophisticationinhowPythonhandlesparametershastobedeferredto Advanced Parameter Handling
F or F unctions,asitdependsonaknowledgeofdictionaries,introducedin Mappings and Dictionaries .
In Object Method F unctions wewilldescribehowtouse method functions asapreludeto Data Structures ;
realdetailsonmethodfunctionsaredeferreduntil Classes.
We’llalsodeferexaminationofthe yieldstatementuntil Iterators and Generators . Theyieldstatement
createsaspecialkindoffunction,onethatismostusefulwhenprocessingcomplexdatastructures,something
we’lllookatin Data Structures .
10.1 Semantics
Afunction,inamathematicalsense,isoftendescribedasamappingfromdomainvaluestorangevalues.
Givenadomainvalue,thefunctionreturnsthematchingrangevalue.
Ifwethinkofthesquarerootfunction,itmapsapositivenumber, n,toanothernumber, s,suchthat s2=n.
Ifwethinkofmultplicationasafunction,itmapsapairofvalues, aand b,toanewvalue, c,suchthat
c=a×b. Whenwememorizemultiplicationtables,wearememorizingthesemappings.
InPython,thisnarrowdeﬁnitionissomewhatrelaxed. Pythonletsuscreatefunctionswhichdonotneed
adomainvalue,butcreatenewobjects. Italsoallowsustohavefunctionsthatdon’treturnvalues,but
insteadhavesomeothereﬀect,likereadinguserinput,orcreatingadirectory,orremovingaﬁle.
WhatWeProvide . InPython,wecreateanewfunctionbyprovidingthreepiecesofinformation: the
nameofthefunction,alistofzeroormorevariables,called parameters,withthedomainofinputvalues,
andasuiteofstatementsthatcreatestheoutputvalues. Thisdeﬁnitionissavedforlateruse. We’llshow
thisﬁrstin F unction Deﬁnition: The def and return Statements .
107
Building Skills in Python, Release 2.6.5
Typically,wecreatefunctiondeﬁnitionsinscriptﬁlesbecausewedon’twanttotypethemmorethanonce.
Almostuniversally,we importaﬁlewithourfunctiondeﬁnitionssowecanusethem.
We use a function in an expression by following the function’s name with ‘ ()’. The Python interpreter
evaluatestheargumentvaluesinthe‘ ()’,thenappliesthefunction. We’llshowthissecondin F unction Use.
Applyingafunctionmeansthattheinterpreterﬁrstevaluatesalloftheargumentvalues,thenassignsthe
argumentvaluestothefunctionparametervariables,andﬁnallyevaluatesthesuiteofstatementsthatare
thefunction’sbody. Inthisbody,any returnstatementsdeﬁnetheresultingrangevalueforthefunction.
Formoreinformationonthisevaluate-applycycle,see The Evaluate-Apply Cycle .
Namespaces and Privacy . Note that the parameter variables used in the function deﬁnition, as well
asanyvariablesinafunctionareprivatetothatfunction’ssuiteofstatements. Thisisaconsequenceof
thewayPythonputsallvariablesinanamespace. Whenafunctionisbeingevaluated,Pythoncreatesa
temporarynamespace.Thisnamespaceisdeletedwhenthefunction’sprocessingiscomplete.Thenamespace
associatedwithapplicationofafunctionisdiﬀerentfromtheglobalnamespace,anddiﬀerentfromallother
function-bodynamespaces.
Whileyoucanchangethestandardnamespacepolicy(see The global Statement )itgenerallywilldoyou
moreharmthangood. Afunction’sinterfaceiseasiesttounderstandifitisonlytheparametersandreturn
valuesandnothingmore. Ifallothervariablesarelocal,theycanbesafelyignored.
Terminology:argumentandparameter .Wehavetomakeaﬁrmdistinctionbetweenanargument value,
anobjectthatiscreatedorupdatedduringexecution,andthedeﬁnedparameter variableofafunction. The
argumentistheobjectusedinparticularapplicationofafunction;itmaybereferencedbyothervariables
orobjects. Theparameterisavariablenamethatispartofthefunction,andisalocalvariablewithinthe
functionbody.
108 Chapter 10. Functions
Building Skills in Python, Release 2.6.5
TheEvaluate-ApplyCycle
Theevaluate-applycycleshowshowanyprogramminglanguagecomputesthevalueofanexpression.
Considerthefollowingexpression:
math.sqrt(abs( b*b-4*a*c ) )
WhatdoesPythondo?
For the purposes of analysis, we can restructure this from the various mathematical notation styles
toasingle,uniformnotation. Wecallthis preﬁxnotation,becausealloftheoperationspreﬁxtheir
operands. Whileusefulforanalysis,thisiscumbersometowriteforrealprograms.
math.sqrt(abs( sub( mul(b,b), mul(mul( 4,a),c) ) ) )
We’vereplaced‘ x*y’with‘mul(x,y)’,andreplaced‘ x-y’with‘sub(x,y)’. Thisallowsustomore
clearlyseehowevaluate-applyworks. Eachpartoftheexpressionisnowwrittenasafunctionwithone
ortwoarguments. Firsttheargumentsareevaluated,thenthefunctionisappliedtothosearguments.
In order for Python to evaluate this ‘ math.sqrt(...) ’ expression, it evaluates the argument,
‘abs(...)’,andthenapplies math.sqrt()toit. ThisleadsPythontoanestedevaluate-applyprocess
forthe‘abs(...)’ expression. We’llshowthewholeprocess,withindentationtomakeitclearer.
We’regoingtoshowthisasalistofsteps,with‘ >’toshowhowthevariousoperationsnestinsideeach
other.
Evaluate the arg to math.sqrt:
> Evaluate the args to sub:
> > Evaluate the args to mul:
> > > Get the value of b
> > Apply mul to b and b, creating r3=mul( b, b ).
> > Evaluate the args to mul:
> > > Evaluate the args to mul:
> > > > Get the value of a
> > > Apply mul to 4 and a, creating r5=mul( 4, a ).
> > > Get the value of c
> > Apply mul to r5 and c, creating r4=mul( mul( 4, a ), c ).
> Apply sub to r3 and r4, creating r2=sub( mul( b, b ), mul( mul( 4, a ), c ) ).
Apply math.sqrt to r2, creating r1=math.sqrt( sub( mul( b, b ), mul( mul( 4, a ), c ) ) ).
Noticethatanumberofintermediateresultswerecreatedaspartofthisevaluation. Ifweweredoing
thisbyhand,we’dwritethesedownasstepstowardtheﬁnalresult.
Theapplypartoftheevalute-applycycleissometimestermedafunction cal l. Theideaisthatthe
main procedure “calls” the body of a function; the function does its work and returns to the main
procedure. Thisisalsocalledafunction invocation.
10.2 Function Deﬁnition: The def and return Statements
Wecreateafunctionwitha defstatement. Thisprovidesthename,parametersandthesuiteofstatements
thatcreatesthefunction’sresult.
def name ( parameter 〈 , ... 〉 ):
suite
The nameisthenamebywhichthefunctionisknown. The parametersisalistofvariablenames; these
namesarethelocalvariablestowhichactualargumentvalueswillbeassignedwhenthefunctionisapplied.
The suite(whichmustbeindented)isablockofstatementsthatcomputesthevalueforthefunction.
10.2. Function Deﬁnition: The def and return Statements 109
Building Skills in Python, Release 2.6.5
The ﬁrst line of a function’s suite is expected to be a document string (generally a triple-quoted string)
thatprovidesbasicdocumentationforthefunction. Thisistraditionallydividedintwosections,asummary
sectionofexactlyonelineandthedetailsection. We’llreturntothisstyleguidein F unctions Style Notes .
Thereturnstatementspeciﬁestheresultvalueofthefunction. Thisvaluewillbecometheresultofapplying
thefunctiontotheargumentvalues. Thisvalueissometimescalledtheeﬀectofthefunction.
returnexpression
Theyieldstatementspeciﬁesoneoftheresultvaluesofaniterablefunction. We’llreturntothisin Iterators
and Generators .
Let’slookatacompleteexample.
defodd( spin ):
"""Return true if this spin is odd."""
ifspin%2==1:
returnTrue
returnFalse
1.Wenamethisfunction odd(),anddeﬁneittoacceptasingleparameter,named spin.
2.Weprovideadocstringwithashortdescriptionofthefunction.
3.Inthebodyofthefunction,wetesttoseeiftheremainderof spin/2is1;ifso,wereturn True.
4.Otherwise,wereturn False.
10.3 Function Use
WhenPythonevaluates‘ odd(n)’,thefollowingthingswillhappen.
1.It evaluates n. For a simple variable, the value is the object to which the variable refers. For an
expression,theexpressionisevaluatedtoresultinanobject.
2.Itassignsthisargumentvaluetothelocalparameterof odd()(namedspin).
3.Itapplies odd(): thesuiteofstatementsisexecuted,endingwitha returnstatement.
4.This value on the returnstatement is returned to the calling statement so that it can ﬁnish it’s
execution.
Wewouldusethis odd()functionlikethis.
s=random.randrange( 37)
# 0 <= s <= 36, single-0 roulette
ifs==0:
print"zero"
elifodd(s):
prints,"odd"
else:
prints,"even"
1.Weevaluateafunctionnamedrandom.randrangetocreatearandomnumber, s.
2.Theifclausehandlesthecasewhere siszero.
110 Chapter 10. Functions
Building Skills in Python, Release 2.6.5
3.Theﬁrstelifclauseevaluatesour odd()function. Todothisevaluation,Pythonmustset spintothe
valueofsandexecutethesuiteofstatementsthatarethebodyof odd(). Thesuiteofstatements
willreturneither TrueorFalse.
4.Sincetheifandelifclauseshandlezeroandoddcases,allthatisleftisfor stobeeven.
10.4 Function Varieties
Someprogramminglanguagesmakeadistinctionbetweenvarioustypesoffunctionsor“subprograms”.There
canbe“functions”or“subroutines”or“procedurefunctions”. Python(likeJavaandC++)doesn’tenforce
thiskindofdistinction.
Instead,Pythonimposessomedistinctionbasedonwhetherthefunctionusesparametersandreturnsavalue
oryieldsacollectionofvalues.
“Ordinary”Functions . Functionswhichfollowtheclassicmathematicaldeﬁnitionswillmapinputargu-
mentvaluestoaresultingvalue. Theseare,perhaps,acommonkindoffunction. Theyincludea return
statementtoexpresstheresultingvalue.
ProcedureFunctions . Onecommonkindoffunctionisonethatdoesn’treturnaresult,butinsteadcarries
outsomeprocedure. Thisfunctionwouldomitany returnstatement. Or,ifa returnstatementisusedto
exitfromthefunction,thestatementwouldhavenovaluetoreturn.
Carryingoutanactionissometimestermedaside-eﬀectofthefunction. Theprimaryeﬀectisalwaysthe
valuereturned.
Here’sanexampleofafunctionthatdoesn’treturnavalue,butcarriesoutaprocedure.
from__future__ importprint_function
defreport( spin ):
"""Report the current spin."""
ifspin==0:
print("zero")
return
ifodd(spin):
print( spin, "odd")
return
print( spin, "even")
This function, report(), has a parameter named spin, but doesn’t return a value. Here, the return
statementsexitthefunctionbutdon’treturnvalues.
ThiskindoffunctionwouldbeusedasifitwasanewPythonlanguagestatement,forexample:
foriinrange(10):
report( random .randrange( 37) )
Hereweexecutethe report()functionasifitwasanewkindofstatement. Wedon’tevaluateitaspartof
anexpression.
There’sactuallynorealsubtletytothisdistinction. AnyexpressioncanbeusedasaPythonstatement. A
functioncallisanexpression,andanexpressionisastatement. ThisgreatlysimpliﬁesPythonsyntax. The
docstringforafunctionwillexplainwhatkindofvaluethefunctionreturns,orifthefunctiondoesn’treturn
anythinguseful.
Thesimplereturnstatement,bytheway,returnsthespecialvalue None. Thisdefaultvaluemeansthatyou
candeﬁneyourfunctionlike report(),above,useitinanexpression,andeverythingworksnicelybecause
thefunctiondoesreturnavalue.
10.4. Function Varieties 111
Building Skills in Python, Release 2.6.5
foriinrange(10):
t=report( random .randrange( 37) )
printt
You’llseethat tisNone.
FactoryFunctions . Anothercommonformisafunctionthatdoesn’ttakeaparameter. Thisfunctionis
afactorywhichgeneratesavalue.
Somefactoryfunctionsworkbyaccessingsomeobjectencapsulatedinamodule. Inthefollowingexample,
we’llaccesstherandomnumbergeneratorencapsulatedinthe randommodule.
defspinWheel ():
"""Return a string result from a roulette wheel spin."""
t=random.randrange( 38)
ift==37:
return"00"
returnstr(t)
Thisfunction’sevaluate-applycycleissimpliﬁedtojusttheapplyphase. Tomake 0(zero)distinctfrom 00
(doublezero),itreturnsastringinsteadofanumber.
Generators. Ageneratorfunctioncontainsthe yieldstatement. Thesefunctionslooklikeconventional
functions, but they have a diﬀerent purpose in Python. We will examine this in detail in Iterators and
Generators.
Thesefunctionshaveapersistentinternalprocessingstate;ordinaryfunctionscan’tkeepdataaroundfrom
any previous calls without resorting to global variables. Further, these functions interact with the for
statement. Finally,thesefunctionsdon’tmakealotofsenseuntilwe’veworkedwithsequencesin Sequences:
Strings, T uples and Lists .
10.5 Some Examples
Here’sabigexampleofusingthe odd(),spinWheel()andreport()functions.
functions.py
#!/usr/bin/env python
importrandom
defodd( spin ):
"""odd(number) -&gt; boolean."""
returnspin%2==1
defreport( spin ):
"""Reports the current spin on standard output. Spin is a String"""
ifint(spin)==0:
print"zero"
return
ifodd(int(spin)):
printspin,"odd"
return
printspin,"even"
112 Chapter 10. Functions
Building Skills in Python, Release 2.6.5
defspinWheel ():
"""Returns a string result from a roulette wheel spin."""
t=random.randrange( 38)
ift==37:
return"00"
returnstr(t)
foriinrange(12):
n=spinWheel()
report( n )
1.We’vedeﬁnedafunctionnamed odd(). Thisfunctionevaluatesasimpleexpression;itreturns Trueif
thevalueofit’sparameter, spin,isodd.
2.Thefunctioncalled report()usestheodd()functiontoprintalinethatdescribesthevalueofthe
parameter, spin. Notethattheparameterisprivatetothefunction,sothisuseofthevariablename
spinistechnicallydistinctfromtheuseinthe odd()function. However,sincethe report()function
providesthevalueof spintotheodd()function,theirtwovariablesoftenhappentohavethesame
value.
3.ThespinWheel()functioncreatesarandomnumberandreturnsthevalueasastring.
4.The“main”partofthisprogramistheforloopatthebottom,whichcalls spinWheel(),andthen
report(). ThespinWheel()function uses random.randrange() ; thereport()function uses the
odd()function. Thisgeneratesandreportsonadozenspinsofthewheel.
For most of our exercises, this free-ﬂoating main script is acceptable. When we cover modules, in
Components, Modules and Packages ,we’llneedtochangeourapproachslightlytosomethinglikethe
following.
defmain():
foriinrange(12):
n=spinWheel()
report( n )
main()
This makes the main operation of the script clear by packaging it as a function. Then the only
free-ﬂoatingstatementinthescriptisthecallto main().
10.6 Hacking Mode
On one hand we have interactive use of the Python interpreter: we type something and the interpreter
respondsimmediately. Wecandosimplethings,butwhenourstatementsgettoolong,thisinteractioncan
becomeaniusance. Weintroducedthisﬁrst,in Command-Line Interaction .
Ontheotherhand,wehavescripteduseoftheinterpreter:wepresentaﬁleasaﬁnishedprogramtoexecute.
Whilehandyforgettingusefulresults,thisisn’ttheeasiestwaytogetaprogramtoworkintheﬁrstplace.
Wedescribedthisin Script Mode.
Inbetweentheinteractivemodeandscriptedmode, wehaveathirdoperatingmode, thatwemightcall
hacking mode. Theideaistowritemostofourscriptandthenexerciseportionsofourscriptinteractively.
Inthismode,we’lldevelopscriptﬁles,butwe’llexercisetheminaninteractiveenvironment. Thisishandy
fordevelopinganddebuggingfunctiondeﬁnitions.
Thebasicprocedureisasfollows.
10.6. Hacking Mode 113
Building Skills in Python, Release 2.6.5
1.Inourfavoriteeditor,writeascriptwithourfunctiondeﬁnitions. Weoftenleavethiseditorwindow
open.IDLE,forexample,leavesthiswindowopenforustolookat.
2.OpenaPythonshell. IDLE,forexample,alwaysdoesthisforus.
3.InthePythonShell, importthescriptﬁle. In IDLE,thisiseﬀectivelywhathappenswhenwerun
themodulewith F5.
Thiswillexecutethevarious defstatements,creatingourfunctionsinourinteractiveshell.
4.InthePythonShell,testthefunctioninteractively. Ifitworks,we’redone.
5.Ifthefunctionsinourmoduledidn’twork,wereturntooureditorwindow,makeanychangesand
savetheﬁle.
6.InthePythonShell,clearouttheolddeﬁnitionbyrestartingtheshell. In IDLE,wecanforcethis
withF6. Thishappensautomaticallywhenwerunthemoduleusing F5
7.Gobacktostep3,toimportandtestourdeﬁnitions.
The interactive test results can be copied and pasted into the docstring for the ﬁle with our function
deﬁnitions. We usually copy the contents of the Python Shell window and paste it into our module’s or
function’sdocstring. Thisrecordofthetestingcanbevalidatedusingthe doctestmodule.
Example. Here’s the sample function we’re developing. If you look carefully, you might see a serious
problem. Ifyoudon’tseetheproblem,don’tworry,we’llﬁnditbydoingsomedebugging.
InIDLE,wecreatedthefollowingﬁle.
function1.py Initial Version
defodd( number ):
"""odd(number) -> boolean
Returns True if the given number is odd.
"""
returnnumber%2=="1"
Wehavetwowindowsopen: function1.py andPythonShell .
Here’sourinteractivetestingsession. Inour function1.py window, wehit F5torunthemodule. Note
thelinethatshowsthatthePythoninterpreterwasrestarted;forgettinganypreviousdeﬁnitions. Thenwe
exercisedourfunctionwithtwoexamples.
Python 2.5.1 (r251:54863, Oct 5 2007, 21:08:09)
[GCC 4.0.1 (Apple Inc. build 5465)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
************************************************************
Personal firewall software may warn about the connection IDLE
makes to its subprocess using this computer's internal loopback
interface. This connection is not visible on any external
interface and no data is sent to or received from the Internet.
************************************************************
IDLE 1.1.4
>>> ================================ RESTART ================================
>>>
>>> odd(2)
False
114 Chapter 10. Functions
Building Skills in Python, Release 2.6.5
>>> odd(3)
False
Clearly,itdoesn’twork,since3isodd. Whenwelookattheoriginalfunction,wecanseetheproblem.
Theexpression‘ number % 2 == "1" ’shouldbe‘ number % 2 == 1 ’.
Weneedtoﬁx function1.py . Oncetheﬁleisﬁxed,weneedtoremovetheoldstuﬀfromPython,re-import
ourfunctionandrerunourtest. IDLEdoesthisforuswhenwehit F5torerunthemodule. Itshowsthis
withtheprominentrestartmessage.
Ifyouarenotusing IDLE,youwillneedtorestartPythontoclearouttheolddeﬁnitions. Pythonoptimizes
importoperations;ifit’sseenthemoduleonce,itdoesn’timportitasecondtime. Toremovethismemory
ofwhichmoduleshavebeenimported,youwillneedtorestartPython.
10.7 More Function Deﬁnition Features
Pythonprovidesamechanismforoptionalparameters. Thisallowsustocreateasinglefunctionwhichhas
severalalternativeforms. Inotherlanguages,likeC++orJava,thesearecalledoverloadedfunctions;they
areactuallyseparatefunctiondeﬁnitionswiththesamenamebutdiﬀerentparameterforms. InPython,we
canwriteasinglefunctionthatacceptsseveralparameterforms.
Pythonhasthreemechanismsfordealingwithoptionalparametersandavariablenumberofparameters.
We’llcoverthebasicsofoptionalparametersinthissection. Theothermechanismsfordealingwithvariable
numbersofparameterswillbedeferreduntil Advanced Parameter Handling F or F unctions becausethese
mechanismsusesomemoreadvanceddatastructures.
Pythonfunctionscanreturnmultiplevalues. We’lllookatthis,also.
10.7.1 Default Values for Parameters
Themostcommonwaytoimplementoptionalparametersisbyprovidingadefaultvaluefortheoptional
parameters. Ifnoargumentissuppliedfortheparameter,thedefaultvalueisused.
defreport( spin, count =1):
printspin, count, "times in a row "
Thissillyfunctioncanbeusedintwoways:
report( n )
report( n, 2)
Theﬁrstformprovidesadefaultargumentof1forthe countparameter. Thesecondformhasanexplicit
argumentvalueof2forthe countparameter.
Ifaparameterhasnodefaultvalue,itisnotoptional. Ifaparameterhasadefaultvalue,itisoptional. In
ordertodisambiguatetheassignmentofargumentstoparameters,Pythonusesasimplerule: allrequired
parametersmustbeﬁrst,alloptionalparametersmustcomeaftertherequiredparameters.
Theint()functiondoesthis. Wecansay‘ int("23")’tododecimalconversionand‘ int("23",16) ’todo
hexadecimalconversion. Clearly,thesecondargumentto int()hasadefaultvalueof10.
Important: RedAlert
It’svery,veryimportanttonotethatdefaultvaluesmustbeimmutableobjects. We’llreturntothisconcept
ofmutabilityin Data Structures .
10.7. More Function Deﬁnition Features 115
Building Skills in Python, Release 2.6.5
Fornow,beawarethatnumbers,strings, None,andtupleobjectsareimmutable.
Aswelookatvariousdatatype,we’llﬁndthatlists,setsanddictionariesaremutable,andcannotbeused
asdefaultvaluesforfunctionparameters.
FancyDefaults . WhenwelookatthePython range()function,weseeamoresophisticatedversionof
this.
‘range(x)’isthesameas‘ range(0,x,1) ’.
‘range(x,y)’isthesameas‘ range(x,y,1) ’.
Itappearsfromtheseexamplesthatthe ﬁrstparameterisoptional. TheauthorsofPythonuseapretty
slicktrickforthisthatyoucanusealso. The range()functionbehavesasthoughthefollowingfunctionis
deﬁned.
def range(x, y=None, z=None):
if y==None:
start, stop, step = 0, x, 1
elif z==None:
start, stop, step = x, y, 1
else:
start, stop, step = x, y, z
Real work is done with start, stop and step
By providing a default value of None, the function can determine whether a value was supplied or not
supplied. Thisallowsforcomplexdefaulthandlingwithinthebodyofthefunction.
Conclusion. Python mustﬁndavalueforallparameters. Thebasicruleisthatthevaluesofparametersare
setintheorderinwhichtheyaredeclared. Anymissingparameterswillhavetheirdefaultvaluesassigned.
Thesearecalledpositionalparameters,sincethepositionistheruleusedforassigningargumentvalueswhen
thefunctionisapplied.
Ifamandatoryparameter(aparameterwithoutadefaultvalue)ismissing,thisisabasic TypeError.
Forexample:
badcall.py
#!/usr/bin/env python
defhack(a,b):
printa+b
hack(3)
Whenwerunthisexample,weseethefollowing.
MacBook-5:Examples slott$ python badcall.py
Traceback (most recent call last):
File "badcall.py", line 4, in <module>
hack(3)
TypeError: hack() takes exactly 2 arguments (1 given)
10.7.2 Providing Argument Values by Keyword
Inadditiontosupplyingargumentvaluesbyposition,Pythonalsopermitsargumentvaluestobespeciﬁed
byname. Usingexplicitkeywordscanmakeprogramsmucheasiertoread.
116 Chapter 10. Functions
Building Skills in Python, Release 2.6.5
First,we’lldeﬁneafunctionwithasimpleparameterlist:
importrandom
defaverageDice ( samples =100):
"""Return the average of a number of throws of 2 dice."""
s=0
foriinrange(samples):
d1,d2=random.randrange( 6)+1,random.randrange( 6)+1
s+=d1+d2
returnfloat(s)/float(samples)
Next,we’llshowthreediﬀerentkindsofarguments: keyword,positional,anddefault.
test1=averageDice( samples =200)
test2=averageDice( 300)
test3=averageDice()
Whenthe averageDice() functionisevaluatedtoset test1,thekeywordformisused. Thesecondcallof
theaverageDice() functionusesthepositionalform.Theﬁnalexamplereliesonadefaultfortheparameter.
Conclusion. Thisgivesusanumberofvariationsincludingpositionalparametersandkeywordparameters,
bothwithandwithoutdefaults. Positionalparametersworkwellwhentherearefewparametersandtheir
meaningisobvious. Keywordparametersworkbestwhentherearealotofparameters, especiallywhen
thereareoptionalparameters.
Gooduseofkeywordparametersmandatesgoodselectionofkeywords. Single-letterparameternamesor
obscureabbreviationsdonotmakekeywordparametershelpfullyinformative.
Herearetheruleswe’veseensofar:
1.Supplyvaluesforallparametersgivenbyname,irrespectiveofposition.
2.Supplyvaluesforallremainingparametersbyposition;intheeventofduplicates,raisea TypeError.
3.Supplydefaultsforanyparametersthathavedefaultsdeﬁned;ifanyparametersstilllackvalues,raise
aTypeError.
Therearestillmoreoptionsavailableforhandlingvariablenumbersofparameters.It’spossibleforadditional
positionalparameterstobecollectedintoasequenceobject. Further,additionalkeywordparameterscan
becollectedintoadictionaryobject. We’llgettothemwhenwecoverdictionariesin Advanced Parameter
Handling F or F unctions .
10.7.3 Returning Multiple Values
Onecommondesireamongprogrammersisafeaturethatallowsafunctiontoreturnmultiplevalues. Python
hassomebuilt-infunctionsthathavethisproperty.Forexample, divmod()returnsthedivisorandremainder
indivision. Wecouldimagineafunction, rollDice()thatwouldreturntwovaluesshowingthefacesoftwo
dice.
InPython,itisdonebyreturninga tuple. We’llwaitfor T uplesforcompleteinformationon tuples. The
followingisaquickexampleofhowmultipleassignmentworkswithfunctionsthatreturnmultiplevalues.
rolldice.py
10.7. More Function Deﬁnition Features 117
Building Skills in Python, Release 2.6.5
importrandom
defrollDice ():
return(1+random.randrange( 6),1+random.randrange( 6) )
d1,d2=rollDice()
printd1,d2
Thisshowsafunctionthatcreatesatwo-valued tuple. You’llrecallfrom Multiple Assignment Statement
thatPythonisperfectlyhappywithmultipleexpressionsontherightsideof =,andmultipledestination
variablesontheleftside. Thisisonereasonwhymultipleassignmentissohandy.
10.8 Function Exercises
1.Fastexponentiation . Thisisafastwaytoraiseanumbertoanintegerpower. Itrequiresthefewest
multiplies,anddoesnotuselogarithms.
Fast Exponentiation of integers, raises nto the ppower
(a)BaseCase. Ifp= 0: return1.0.
(b)Odd. If pisodd: return n×fastexp (n, p−1).
(c)Even. If piseven:
compute t←fastexp (n,p
2);
return t×t.
2.GreatestCommonDivisor . Thegreatestcommondivisoristhelargestnumberwhichwillevenly
dividetwoothernumbers. Youusethiswhenyoureducefractions. See Greatest Common Divisor
foranalternateexampleofthisexercise’salgorithm. Thisversioncanbeslightlyfasterthantheloop
welookedatearlier.
Greatest Common Divisor of two integers, pand q
(a)BaseCase. Ifp=q: return p.
(b)p<q. Ifp < q: returnGCD (q, p).
(c)p>q. Ifp > q: returnGCD (p, p−q).
3.FactorialFunction . Factorialofanumber nisthenumberofpossiblearrangementsof0through n
things. Itiscomputedastheproductofthenumbers1through n. Thatis, 1×2×3×···× n.
Theformaldeﬁnitionis
n! =n×(n−1)×(n−2)×···× 1
0! = 1
Wetouchedonthisin Computing e. Thisfunctiondeﬁnitioncansimplifytheprogramwewrotefor
thatexercise.
118 Chapter 10. Functions
Building Skills in Python, Release 2.6.5
Factorial of an integer, n
(a)BaseCase. Ifn= 0,return1.
(b)Multiply. Ifn > 0: return n×factorial (n−1).
4.FibonacciSeries . Fibonaccinumbershaveanumberofinterestingmathematicalproperties. The
ratioofadjacentFibonaccinumbersapproximatesthegoldenratio( (1 +√
5)/2, about1.618), used
widelyinartandarchitecture.
The nth Fibonacci Number, Fn.
(a)F(0)Case. Ifn= 0: return0.
(b)F(1)Case. Ifn= 1: return1.
(c)F(n)Case. Ifn > 1: returnF (n−1) +F(n−2).
5.Ackermann’sFunction .Anespeciallycomplexalgorithmthatcomputessomereallybigresults.This
isafunctionwhichisspeciﬁcallydesignedtobecomplex. Itcannoteasilyberewrittenasasimple
loop. Further,itproducesextremelylargeresultsbecauseitdescribesextremelylargeexponents.
Ackermann’s Function of two numbers, m and n
(a)BaseCase. Ifm= 0: return n+ 1.
(b)NZeroCase . Ifm̸= 0and n= 0: returnackermann (m−1,1).
(c)NNon-ZeroCase . Ifm̸= 0and n̸= 0: returnackermann (m−1,ackermann (m, n−1)).
Yes, this requires you to compute ackermann (m, n−1)before you can compute ackermann (m−
1,ackermann (m, n−1)).
6.MaximumValueofaFunction . Givensomeinteger-valuedfunction f(),wewanttoknowwhat
valueof xhasthelargestvaluefor f()insomeintervalofvalues.Foradditionalinsight,see [Dijkstra76].
Imaginewehaveanintegerfunctionofaninteger,callit f(). Herearesomeexamplesofthiskindof
function.
•‘def f1(x): return x ’
•‘def f2(x): return -5/3*x-3 ’
•‘def f3(x): return -5*x*x+2*x-3 ’
Thequestionwewanttoansweriswhatvalueof xinsomeﬁxedintervalreturnsthelargestvaluefor
thegivenfunction? Inthecaseoftheﬁrstexample,‘ def f1(x): return x ’,thelargestvalueof f1()
intheinterval 0≤x < 10occurswhen xis9.
Whatabout f3()intherange−10≤x < 10?
Max of a Function, F, in the interval low to high
(a)Initialize.
x←low;
max←x;
10.8. Function Exercises 119
Building Skills in Python, Release 2.6.5
max F←F(max ).
(b)Loop. While low≤x < high.
i.NewMax?IfF(x)> max F:
max←x;
max F←F(max ).
ii.NextX.Increment xby1.
(c)Return. Return maxasthevalueatwhichF (x)hadthelargestvalue.
7.Integration. Thisisasimplerectangularruleforﬁndingtheareaunderacurvewhichiscontinuous
onsomeclosedinterval.
Wewilldeﬁnesomefunctionwhichwewillintegrate,callit f(x)(). Herearesomeexamples.
•‘def f1(x): return x*x ’
•‘def f2(x): return 0.5 * x * x ’
•‘def f3(x): return exp( x ) ’
•‘def f4(x): return 5 * sin( x ) ’
Whenwespecify y=f(x),wearespecifyingtwodimensions. The yisgivenbythefunction’svalues.
The xdimensionisgivenbysomeinterval. Ifyoudrawthefunction’scurve,youputtwolimitsonthe
xaxis,thisisonesetofboundaries. Thespacebetweenthecurveandthe yaxisistheotherboundary.
The xaxislimitsare aand b. Wesubdividethisintervalinto srectangles,thewidthofeachis h=b a
s.
Wetakethefunction’svalueatthecornerastheaverageheightofthecurveoverthatinterval. Ifthe
intervalissmallenough,thisisreasonablyaccurate.
Integrate a Function, F, in the interval ato bin ssteps
(a)Initialize.
x←a
h←b−a
s
sum←0.0
(b)Loop. While a≤x < b.
i.UpdateSum. Increment sumbyF(x)×h.
ii.NextX.Increment xby h.
(c)Return.Return sumastheareaunderthecurve F()fora≤x < b.
8.FieldBetResults . InthedicegameofCraps,theFieldbetincrapsisawinnerwhenanyofthe
numbers2,3,4,9,10,11or12arerolled. On2and12itpays2:1,onanyoftheothernumbers,it
pays1:1.
Deﬁneafunction‘ win( dice, num, pays) ’. Ifthevalueof diceequalsnum,thenthevalueof paysis
returned,otherwise0isreturned. Makethedefaultfor paysa1,sowedon’thavetorepeatthisvalue
overandoveragain.
Deﬁneafunction‘ field( dice ) ’. Thiswillcall win()7times: oncewitheachofthevaluesforwhich
theﬁeldpays. Ifthevalueofdiceisa7,itreturns-1becausethebetisaloss. Otherwiseitreturns0
becausethebetisunresolved.
120 Chapter 10. Functions
Building Skills in Python, Release 2.6.5
Itwouldstartwith
def field( dice ):
win( dice, 2, pays=2 )
win( dice, 3, pays=1 )
...
Createafunction‘ roll()’thatcreatestwodicevaluesfrom1to6andreturnstheirsum. Thesumof
twodicewillbeavaluefrom2to12.
Createamainprogramthatcalls roll()togetadicevalue,thencalls field()withthevaluethat
isrolledtogetthepayoutamount. Computetheaverageofseveralhundredexperiments.
9.range()Function Keywords . Does the range function permit keywords for supplying argument
values? Whatarethekeywords?
10.OptionalFirstArgument . Optionalparametersmustcomelast,yetrangefakesthisoutbyappear-
ingtohaveanoptionalparameterthatcomesﬁrst. Themostcommonsituationis‘ range(5)’,and
havingtotype‘ range(0,5)’seemsrathersilly. Inthiscase,conveniencetrumpsstrictadherencetothe
rules. Isthisagoodthing? Isstrictadherencetotherulesmoreorlessimportantthanconvenience?
10.9 Object Method Functions
We’veseenhowwecancreatefunctionsandusethosefunctionsinprogramsandotherfunctions. Python
hasarelatedtechniquecalled methodsor method functions . Thefunctionswe’veusedsofarareglobally
available. A method function, on the other hand, belongs to an object. The object’s class deﬁnes what
methodsandwhatpropertiestheobjecthas.
We’llcovermethodfunctionsindetail,startingin Classes. Fornow,however,someofthePythondatatypes
we’regoingtointroducein Data Structures willusemethodfunctions. Ratherthancovertoomanydetails,
we’llfocusongeneralprinciplesofhowyouusemethodfunctionsinthissection.
Thesyntaxforcallingamethodfunctionlookslikethis:
someObject.aMethod( argument list )
Asingle‘ .’ separatestheowningobject( someObject)fromthemethodname( aMethod()).
Weglancedatasimpleexamplewhenweﬁrstlookedatcomplexnumbers. Thecomplexconjugatefunction
isactuallyamethodfunctionofthecomplexnumberobject. Theexampleisin Complex Numbers .
Inthenextchapter,we’lllookatvariouskindsofsequences. Pythondeﬁnessomegenericmethodfunctions
thatapplytoanyofthevariousclassesofsequences. The stringandlistclasses,bothofwhicharespecial
kindsofsequences,haveseveralmethodsfunctionsthatareuniquetostringsorlists.
Forexample:
>>>"Hi Mom".lower()
'hi mom'
Here,wecallthe lower()methodfunction,whichbelongstothestringobject "Hi Mom".
Whenwedescribemodulesin Components, Modules and Packages ,we’llcovermodulefunctions. Theseare
functionsthatareimportedwiththemodule. The arraymodule, forexample, hasan array()function
thatcreates arrayobjects. An arrayobjecthasseveralmethodfunctions. Additionally,an arrayobjectis
akindofsequence,soithasallofthemethodscommontosequences,also.
10.9. Object Method Functions 121
Building Skills in Python, Release 2.6.5
fileobjectshaveaninterestinglifecycle,also. A fileobjectiscreatedwithabuilt-infunction, file().
Aﬁleobjecthasnumerousmethodfunctions,manyofwhichhaveside-eﬀectsofreadingfromandwriting
toexternalﬁlesordevices. We’llcoverﬁlesin Files,listingmostofthemethodsuniquetoﬁleobjects.
10.10 Functions Style Notes
Thesuitewithinacompoundstatementistypicallyindentedfourspaces. Itisoftenbesttosetyourtext
editorwithtabstopseveryfourspaces. Thiswillusuallyyieldtherightkindoflayout.
We’llshowthespacesexplicitlyas␣inthefollowingfragment.
def␣max(a,␣b):
␣␣␣␣if␣a␣>=␣b:
␣␣␣␣␣␣␣␣m␣=␣a
␣␣␣␣if␣b␣>=␣a:
␣␣␣␣␣␣␣␣m␣=␣b
␣␣␣␣return␣m
ThisishastypicalspacingforapieceofPythonprogramming.
Also,limityourlinesto80positionsorless. Youmayneedtobreaklongstatementswitha‘ \’attheendof
aline. Also,parenthesizedexpressionscanbecontinuedontothenextlinewithouta‘ \’. Someprogrammers
willputinextra‘ ()’justtomakelinebreaksneat.
Names. Function names are typically mixedCase(). However, a few important functions were done in
CapWords()style with a leading upper case letter. This can cause confusion with class names, and the
recommendedstyleisaleadinglowercaseletterforfunctionnames.
In some languages, many related functions will all be given a common preﬁx. Functions may be called
inet_addr(),inet_network() ,inet_makeaddr() ,inet_lnaof() ,inet_netof() ,inet_ntoa(),etc. Be-
causePythonhasclasses(coveredin Data + Processing = Objects )andmodules(coveredin Components,
Modules and Packages ), this kind of function-name preﬁx is not used in Python programs. The class or
modulenameisthepreﬁx. Lookattheexampleof mathandrandomforguidanceonthis.
Parameternamesarealsotypically mixedCase. Intheeventthataparameterorvariablenameconﬂicts
withaPythonkeyword,thenameisextendedwithan‘ _’. Inthefollowingexample,wewantourparameter
tobenamed range,butthisconﬂictswiththebuiltinfunction range(). Weuseatrailing‘ _’tosortthis
out.
def integrate( aFunction, range_ ):
"""Integrate a function over a range."""
...
BlanklinesareusedsparinglyinaPythonﬁle,generallytoseparateunrelatedmaterial. Typicaly,function
deﬁnitionsareseparatedbysingleblanklines. Alongorcomplexfunctionmighthaveblanklineswithinthe
body. Whenthisisthecase,itmightbeworthconsideringbreakingthefunctionintoseparatepieces.
Docstrings. The ﬁrst line of the body of a function is called a docstring. The recommended forms for
docstringsaredescribedinPythonExtensionProposal(PEP)257.
Typically,theﬁrstlineofthedocstringisapithysummaryofthefunction. Thismaybefollowedbyablank
lineandmoredetailedinformation. Theone-linesummaryshouldbeacompletesentence.
deffact( n ):
"""fact( number ) -> number
Returns the number of permutations of n things."""
122 Chapter 10. Functions
Building Skills in Python, Release 2.6.5
ifn==0:return1L
returnn*fact(n-1L)
defbico( n, r ):
"""bico( number, number ) -> number
Returns the number of combinations of n things
taken in subsets of size r.
Arguments:
n -- size of domain
r -- size of subset
"""
returnfact(n)/(fact(r) *fact(n-r))
Thedocstingcanberetrievedwiththe help()function.
help(object)
Provideshelpaboutthegivenobject.
Here’sanexample,basedonour fact()shownabove.
>>>help(fact)
Help on function fact in module __main__:
fact(n)
fact( number ) -> number
Returns the number of permutations of n things.
Notethatyouwillbeinthehelpreader,withapromptof (END).Hitqtoquitthehelpreader. Formore
information,see Getting Help.
10.10. Functions Style Notes 123
Building Skills in Python, Release 2.6.5
124 Chapter 10. Functions
CHAPTER
ELEVEN
ADDITIONAL NOTES ON
FUNCTIONS
The global Statement
In F unctions and Namespaces we’lldescribesomeoftheinternalmechanismsPythonusesforstoringvari-
ables. We’llintroducethe globalstatementin The global Statement .
We’ll include a digression on the two common argument binding mechanisms: call by value and call by
reference in Cal l By V alue and Cal l By Reference . Note that this is a distinction that doesn’t apply to
Python, butifyouhaveexperienceinlanguageslikeCorC++, youmaywanderwhereandhowthisis
implemented.
Finally,we’llcoversomeaspectsoffunctionsasﬁrst-classobjectsin F unction Objects .
11.1 Functions and Namespaces
ThisisanoverviewofhowPythondeterminesthemeaningofaname. We’llomitsomedetailstohitthe
moreimportantpoints. Formoreinformation,seesection4.1ofthe Python Language Reference .
The important issue is that we want variables created in the body of a function to be private to that
function. Ifallvariablesareglobal,theneachfunctionrunsariskofaccidentallydisturbingthevalueofa
globalvariable. IntheCOBOLprogramminglanguage(withoutusingseparatecompilationoranyofthe
modern extensions) all variables are globally declared in the data division, and great care is required to
preventaccidentalorunintendeduseofavariable.
Toachieveprivacyandseparation, Pythonmaintainsseveraldictionariesofvariables. Thesedictionaries
deﬁnethecontextinwhichavariablenameisunderstood. Becausethesedictionariesareusedforresolution
ofvariables,whichnameobjects,theyarecalled namespaces. Aglobalnamespaceisavailabletoallmodules
thatarepartofthecurrentlyexecutingPythonscript. Eachmodule,class,function,lambda,oranonymous
blockofcodegiventothe execcommandhasitsownprivatenamespace.
Namesareresolvedusingthenestedcollectionofnamespacesthatdeﬁneanexecutionenvironment. Python
alwayschecksthemost-localdictionaryﬁrst,endingwiththeglobaldictionary.
Considerthefollowingscript.
defdeep( a, b ):
print"a=", a
print"b=", b
125
Building Skills in Python, Release 2.6.5
defshallow( hows, things ):
deep( hows, 1)
deep( things, coffee )
hows=1
coffee=2
shallow( "word",3.1415926 )
shallow( hows, coffee )
1.Thedeep()functionhasalocalnamespace,wheretwovariablesaredeﬁned: aandb. Whendeep()is
calledfrom shallow(),therearethreenestedscopesthatdeﬁnetheenvironment:thelocalnamespace
fordeep(): thelocalnamespacefor shallow(),andtheglobalnamespaceforthemainscript.
2.Theshallow()functionhasalocalnamespace,wheretwovariablesaredeﬁned: howsandthings.
Whenshallow()iscalledfromthemainscript,thelocal howsisresolvedinthelocalnamespace. It
hidestheglobalvariablewiththesamename.
Thereferenceto coffeeisnotresolvedinthelocalnamespace,butisresolvedintheglobalnamespace.
Thisiscalleda freevariable,andissometimesasymptomofpoorsoftwaredesign.
3.Themainscript–bydeﬁnition–executesintheglobalnamespace, wheretwovariables( howsand
coffee)aredeﬁned,alongwithtwofunctions, deep()andshallow().
Built-inFunctions . Ifyouevaluatethefunction globals(),you’llseethemappingthatcontainsallof
theglobalvariablesPythonknowsabout. Fortheseearlyprograms,allofourvariablesareglobal.
Ifyousimplyevaluate locals(),you’llseethesamething. However,ifyoucall locals()fromwithinthe
bodyofafunction,you’llbeabletoseethediﬀerencebetweenlocalandglobalvariables.
Thefollowingexampleshowsthecreationofagobalvariable a,andaglobalfunction, q. Itshowsthelocal
namespaceineﬀectwhilethefunctionisexecuting. Inthislocalnamespacewealsohaveavariablenamed
a.
>>>a=22.0
>>>globals()
{'__builtins__': <module '__builtin__' (built-in)>, '__name__': '__main__',
'__doc__': None, 'a': 22.0}
>>>defq( x, y ):
... a=x/y
... printlocals()
...
>>>locals()
{'__builtins__': <module '__builtin__' (built-in)>, '__name__': '__main__',
'q': <function q at 0x76830>, '__doc__': None, 'a': 22.0}
>>>globals()
{'__builtins__': <module '__builtin__' (built-in)>, '__name__': '__main__',
'q': <function q at 0x76830>, '__doc__': None, 'a': 22.0}
>>>q(22.0,7.0)
{'a': 3.1428571428571428, 'y': 7.0, 'x': 22.0}
Thefunction vars()acceptsaparameterwhichisthenameofaspeciﬁclocalcontext: amodule,class,or
object. Itreturnsthelocalvariablesforthatspeciﬁccontext. Thelocalvariablesarekeptinalocalvariable
named__dict__. Thevars()functionretrievesthis.
Thedir()functionexaminesthe __dict__ofaspeciﬁcobjecttolocatealllocalvariablesaswellasother
featuresoftheobject.
Assignmentstatements,aswellas defandclassstatements,createnamesinthelocaldictionary. The del
statementremovesanamefromthelocaldictionary.
126 Chapter 11. Additional Notes On Functions
Building Skills in Python, Release 2.6.5
SomeConsequences . Sinceeachimportedmoduleexistsinit’sownnamespace,allfunctionsandclasses
withinthatmodulemusthavetheirnamesqualiﬁedbythemodulename. Wesawthiswhenweimported
mathandrandom. Tousethe sqrt()function,wemustsay‘ math.sqrt’,providingthemodulenamethat
isusedtoresolvethename sqrt().
Thismodulenamespaceassuresthateverythinginamoduleiskeptseparatefromothermodules. Itmakes
ourprogramsclearbyqualifyingthenamewiththemodulethatdeﬁnedthename.
Themodulenamespacealsoallowamoduletohaverelativelyglobalvariables. Amodule,forexample,can
havevariablesthatarecreatedwhenthemoduleisimported. Inasensetheseareglobaltoallthefunctions
and classes in the module. However, because they are only known within the module’s namespace, they
won’tconﬂictwithvariablesinourprogramorothermodules.
Havingtoqualifynameswithinamodulecanbecomeannoyingwhenwearemakingheavyuseofamodule.
Pythonhaswaystoputelementsofamoduleintotheglobalnamespace. We’lllookatthesein Components,
Modules and Packages .
11.2 The global Statement
Thesuiteofstatementsinafunctiondeﬁnitionexecuteswithalocalnamespacethatisdiﬀerentfromthe
globalnamespace. Thismeansthatallvariablescreatedwithinafunctionarelocaltothatfunction. When
thesuiteﬁnishes,theseworkingvariablesarediscarded.
TheoverallPythonsessionworksintheglobalnamespace. Everyothercontext(e.g. withinafunction’s
suite)isadistinctlocalnamespace. Pythonoﬀersusthe globalstatementtochangethenamespacesearch
rule.
globalname
TheglobalstatementtellsPythonthatthefollowingnamesarepartoftheglobalnamespace,notthelocal
namespace.
Thefollowingexampleshowstwofunctionsthatshareaglobalvariable.
ratePerHour =45.50
defcost( hours ):
globalratePerHour
returnhours*ratePerHour
deflaborMaterials ( hours, materials ):
returncost(hours) +materials
Warning:GlobalWarning
Theglobalstatementhasaconsequenceoftightlycouplingpiecesofsoftware. Thiscanleadtodiﬀiculty
inmaintenanceandenhancementoftheprogram. Classesandmodulesprovidebetterwaystoassemble
complexprograms.
Asageneralpolicy,wediscourageuseofthe globalstatement.
11.3 Call By Value and Call By Reference
Beginningprogrammerscanskipthissection. ThisisadigressionforexperiencedCandC++programmers.
Mostprogramminglanguageshaveaformalmechanismfordeterminingifaparameterreceivesacopyofthe
argument( cal l by value)orareferencetotheargumentobject( cal l by nameor cal l by reference .)
11.2. The global Statement 127
Building Skills in Python, Release 2.6.5
Thedistinctionisimportantinlanguageswith“primitive”types: datawhichisnotaformalobject. These
primitive types can be eﬀiciently passed by value, where ordinary objects are more eﬀiciently passed by
reference.
Additionally,thisallowsalangugelikeCorC++touseareferencetoavariableasinputtoafunctionand
havethefunctionupdatethevariablewithoutanobviousassignmentstatement.
BadNews. ThefollowingscenarioisentirelyhypotheticalforPythonprogrammers,butaveryrealproblem
forCandC++programmers. Imaginewehaveafunction to2(),withthiskindofdeﬁnitioninC.
intto2(int*a ) {
/* set parameter a's value to 2 */
*a=2;
return0;
}
Thisfunctionchangesthevalueofthevariable ato2. Thiswouldbetermeda side-eﬀectbecauseitisin
additiontoanyvaluethefunctionmightreturnnormally.
WhenwedothefollowinginC
intx=27;
intz=to2(&x );
printf( "x=%i, z=%i ", x, z );
Wegettheunpleasantside-eﬀectthatourfunction to2()haschangedtheargumentvariable, x,andthe
variablewasn’tinan assignmentstatement! Wemerelycalledafunction,using xasanargument.
InC,the&operatorisahintthatavariablemightbechanged. Further, thefunctiondeﬁnition should
containthekeyword constwhenthereferenceisproperlyread-only. However,theseareburdensplacedon
theprogrammertoassurethattheprogramcompilescorrectly.
PythonRules . InPython,theargumentstoafunctionarealwaysobjects,neverreferencestovariables.
ConsiderthisPythonversionofthe to2()function:
def to2( a )
a = 2
return 0
x = 27
z = to2( x )
print "x=%d, z=%d" % ( x, z )
Thevariable xisareferencetoanintegerobjectwithavalueof27. Theparametervariable( a)intheto2()
functionisareferencetothesameobject,and aislocaltothefunction’sscope. Theoriginalvariable, x,
cannotbechangedbythefunction,andtheoriginalargumentobject,theinteger27,isimmutable,andcan’t
bechangedeither.
Ifanargumentvalueisamutableobject,theparameterisareferencetothatobject,andthefunctionhas
accesstomethodsofthatobject. Themethodsoftheobjectcanbecalled,buttheoriginalobjectcannot
bereplacedwithanewobject.
We’lllookatmutableobjectsin Data Structures . Fornow,alltheobjectswe’veused(stringsandnumbers)
areimmutableandcannotbechanged.
ThePythonrulesalsomeanthat,ingeneral,allvariableupdatesmustbedoneexplicitlyviaan assignment
statement. Thismakesvariablechangesperfectlyclear.
128 Chapter 11. Additional Notes On Functions
Building Skills in Python, Release 2.6.5
11.4 Function Objects
OneinterestingconsequenceofthePythonworld-viewisthatafunctionisanobjectoftheclass function,
asubclassof callable. Thecommonfeaturethatall callableobjectsshareisthattheyhaveaverysimple
interface: theycanbecalled. Other callableobjectsincludethebuilt-infunctions, generatorfunctions
(whichhavethe yieldstatementinsteadofthe returnstatement)andthingscalled lambdas.
Sometimeswedon’twanttocallandevaluateafunction. Sometimeswewanttodootherthingstoorwith
afunction. Forexample,thevariousfactoryfunctions( int(),long(),float(),complex())canbeused
withthe isinstance() functioninsteadofbeingcalledtocreateanewobject.
Forexample,‘ isinstance(2,int) ’hasavalueof True. Itusesthe int()function,butdoesn’tapplythe
int()function.
Afunctionobjectiscreatedwiththe defstatement. Primarily,wewanttoevaluatethefunctionobjectswe
create. However,becauseafunctionisanobject,ithasattributes,anditcanbemanipulatedtoalimited
extent.
Fromasyntaxpointofview,anamefollowedby‘ ()’isafunctioncall. Youcanthinkofthe‘ ()’asthe
“call”operator: theyrequireevaluationofthearguments,thentheyapplythefunction.
name ( arguments )
Thereareanumberofmanipulationsthatyoumightwanttodowithafunctionobject.
CallTheFunction . Byfar,themostcommonuseforafunctionobjectistocallit. Whenwefollowa
functionnamewith‘ ()’,wearecallingthefunction: evaluatingthearguments,andapplyingthefunction.
Callingthefunctionisthemostcommonmanipulation.
AliasTheFunction . Thisisdangerous, becauseitcanmakeaprogramobscure. However, itcanalso
simplifytheevoluationandenhancementofsoftware. Here’sascenario.
Imaginethattheﬁrstversionofourprogramhadtwofunctionsnamed rollDie()androllDice(). The
deﬁnitionsmightlooklikethefollowing.
defrollDie():
returnrandom.randrange( 1,7)
defrollDice ():
returnrandom.randrange( 1,7)+random.randrange( 1,7)
When we wanted to expand our program to handle ﬁve-dice games, we realized we could generalize the
rollDice()functiontocoverbothcases.
defrollNDice ( n=2):
t=0
fordinrange(n):
t+=random.randrange( 1,7)
returnt
Itisimportanttoremovetheduplicatedalgorithminallthreeversionsofourdicerollingfunction. Since
rollDie()androllDice()arejustspecialcasesof rollNDice().
Wecanreplaceouroriginaltwofunctionswithsomethinglikethefollowing.
defrollDie():
returnrollNDice( 1)
defrollDice ():
returnrollNDice()
11.4. Function Objects 129
Building Skills in Python, Release 2.6.5
However,wehaveanalternative.
Thisreviseddeﬁnitionof rollDice()isreallyjustananothernameforthe rollNDice().Becauseafunction
isanobjectassignedtoavariable,wecanhavemultiplevariablesassignedtothefunction. Here’showwe
createanaliastoafunction.
defrollDie():
returnrollNDice( 1)
rollDice =rollNDice
Warning:FunctionAliasConfusion
Functionaliasdeﬁnitionshelpsmaintainingcompatibilitybetweenoldandnewreleasesofsoftware. Itis
notsomethingthatshouldbedoneasageneralpractice;weneedtobecarefulprovidingmultiplenames
foragivenfunction. Thiscanbeasimpliﬁcation. Itcanalsobeabigperformanceimprovementfor
certaintypesoffunctionsthatareheavilyuseddeepwithinnestedloops.
FunctionAttributes . Afunctionobjecthasanumberofattributes. Wecaninterrogatethoseattributes,
andtoalimitedextend,wecanchangesomeoftheseattributes. Formoreinformation,seesection3.2of
the Python Language Reference andsection2.3.9.3ofthe Python Library Reference .
func_doc
__doc__Docstringfromtheﬁrstlineofthefunction’sbody.
func_name
__name__ Functionnamefromthe defstatement.
__module__ Nameofthemoduleinwhichthefunctionnamewasdeﬁned.
func_defaults Tuplewithdefaultvaluestobeassignedtoeachargumentthathasadefault
value. Thisisasubsetoftheparameters,startingwiththeﬁrstparameterthathasadefault
value.
func_codeTheactualcodeobjectthatisthesuiteofstatementsinthebodyofthisfunction.
func_globals Thedictionarythatdeﬁnestheglobalnamespaceforthemodulethatdeﬁnesthis
function. Thisis m.__dict__ofthemodulewhichdeﬁnedthisfunction.
func_dict
__dict__Thedictionarythatdeﬁnesthelocalnamespacefortheattributesofthisfunction.
Youcansetandgetyourownfunctionattributes,also. Here’sanexample
defrollDie():
returnrandom.randrange( 1,7)
rollDie.version="1.0"
rollDie.authoor="sfl"
130 Chapter 11. Additional Notes On Functions
Part III
Data Structures
131

Building Skills in Python, Release 2.6.5
The Data View
Computerprogramsarebuiltwithtwoessentialfeatures: dataandprocessing. Westartedwithprocessing
elementsofPython. We’reabouttostartlookingatdatastructures.
In Language Basics ,weintroducedalmostalloftheproceduralelementsofthePythonlanguage. Westarted
withexpressions,lookingatthevariousoperatorsanddatatypesavailable. Wedescribedfourteenofthe
approximately24statementsthatmakeupthePythonlanguage.
•ExpressionStatement . Forexample,afunctionevaluationwherethereisnoreturnvalue. Examples
includethe print()function.
•import. Usedtoincludeamoduleintoanothermoduleorprogram.
•print. Usedtoprovidevisibleoutput. Thisisbeingreplacedbythe print()function.
•assignment. Thisincludesthesimpleandaugmentedassignmentstatements. Thisishowyoucreate
variables.
•del. Used(rarely)toremoveavariable,function,moduleorotherobject.
•if. Usedtoconditionallyperformsuitesofstatements. Thisincludes elifandelsestatements.
•pass. Thisdoesnothing,butisanecessarysyntacticplaceholderforan iforwhilesuitethatisempty.
•assert. Usedtoconﬁrmtheprogramisintheexpectedstate.
•forandwhile. Performsuitesofstatementsusingasequenceofvaluesorwhileaconditionisheld
true.
•breakandcontinue. Helpfulstatementsforshort-cuttingloopexecution.
•def. Usedtodeﬁneanewfunction.
•return. Usedtoexitafunction. Providesthereturnvaluefromthefunction.
•global. Usedadjustthescopingrules,allowinglocalaccesstoglobalnames. Wediscourageitsusein
The global Statement .
TheOtherSideoftheCoin . ThenextchaptersfocusonaddingvariousdatatypestothebasicPython
language. The subject of data representation and data structures is possibly the most profound part of
computerprogramming. Mostofthe kil ler applications –email,theworldwideweb,relationaldatabases–
arebasicallyprogramstocreate,readandtransmitcomplexdatastructures.
Wewillmakeextensiveuseoftheobjectclassesthatarebuilt-intoPython. Thisexperiencewillhelpus
designourownobjectclassesin Data + Processing = Objects .
We’llworkourwaythroughthefollowingdatastructures.
•Sequences. In Sequences: Strings, T uples and Lists we’ll extend our knowledge of data types to
includeanoverviewvariouskindsofsequences: strings,tuplesandlists. Sequencesarecollectionsof
objectsaccessedbytheirnumericpositionwithinthecollection.
–In Stringswedescribethe stringsubclassofsequence. Theexercisesincludesomechallenging
stringmanipulations.
–Wedescribeﬁxed-lengthsequences,called‘ tuple’sin T uples.
–In Listswedescribethevariable-lengthsequence,calleda‘ list’. This‘list’sequenceisoneof
thepowerfulfeaturesthatsetsPythonapartfromotherprogramminglanguages. Theexercises
attheendofthe‘ list’sectionincludebothsimpleandrelativelysophisticatedproblems.
•Mappings. In Mappings and Dictionaries wedescribemappingsanddictionaryobjects,called dict.
We’llshowhowdictionariesarepartofsomeadvancedtechniquesforhandlingargumentstofunctions.
Mappingsarecollectionsofvalueobjectsthatareaccessedbykeyobjects.
133
Building Skills in Python, Release 2.6.5
•Sets. We’llcover setobjectsin Sets. Setsaresimplecollectionsofuniqueobjectswithnoadditional
kindofaccess.
•Exceptions. We’llcover exceptionobjectsin Exceptions. We’llalsoshowtheexceptionhandling
statements, including try,except,ﬁnallyandraisestatements. Exceptionsarebothsimpledata
objectsandeventsthatcontroltheexecutionofourprograms.
•Iterables. Theyieldstatementisavariationon returnthatsimpliﬁescertainkindsofgenerator
algorithmsthatprocessorcreatecreate iterabledatastructures. Wecaniteratethroughalmostany
kindofdatacollection. Wecanalsodeﬁneourownuniqueorspecializediterations. We’llcoverthis
in Iterators and Generators .
•Files. Thesubjectofﬁlesissovast,thatwe’llintroduceﬁleobjectsin Files. Thewithstatementis
particularlyhelpfulwhenworkingwithﬁles.
Filesaresocentrallyimportantthatwe’llreturnﬁlesin Components, Modules and Packages . We’ll
lookatseveraloftheﬁle-relatedmodulesin File Handling Modules aswellas File F ormats: CSV, T ab,
XML, Logs and Others ..
In F unctional Programming with Col lections we describe more advanced sequence techniques, including
multi-dimensionalprocessing,additionalsequence-processingfunctions,andsorting.
DeferredTopics . Thereareafewtopicsthatneedtobedeferreduntillater.
•try.We’lllookatexceptionsin Exceptions.Thiswillincludethe except,ﬁnallyandraisestatements,
also.
•yield. We’lllookatGeneratorFunctionsin Iterators and Generators .
•class. We’llcoverthisinit’sownpart, Classes.
•with. We’lllookatContextManagersin Managing Contexts: the with Statement .
•import. We’llrevisitimportindetailin Components, Modules and Packages .
•exec. Additionally,we’llcoverthe execstatementin The exec Statement .
134
CHAPTER
TWEL VE
SEQUENCES: STRINGS, TUPLES AND
LISTS
The Common Features of Sequences
Before digging into the details, we’ll introduce the common features of three of the data types that are
containersforsequencesofvalues.
In Sequence Semantics wewillprovideanoverviewofthesemanticsofsequences. Wedescribesthecommon
featuresofthesequencesin Overview of Sequences .
ThesequenceiscentraltoprogrammingandcentraltoPython. Anumberofstatementsandfunctionswe
havecoveredhavesequence-relatedfeaturesthatwehaveglossedover,dancedaround,andgenerallyavoided.
We’llrevisitanumberoffunctionsandstatementswecoveredinprevioussections,andaddthepowerof
sequencestothem. Inparticular, the forstatementissomethingweglossedoverin Iterative Processing:
F or Al l and There Exists .
Inthechaptersthatfollowwe’lllookat Strings,T uplesand Listsindetail. In Mappings and Dictionaries ,
we’llintroduceanotherstructureddatatypeformanipulatingmappingsbetweenkeysandvalues.
12.1 Sequence Semantics
Asequenceisacontainerofobjectswhicharekeptinaspeciﬁcorder. Wecanidentifytheindividualobjects
inasequencebytheirpositionorindex. PositionsarenumberedfromzeroinPython;theelementatindex
zeroistheﬁrstelement.
Wecallthese containersbecausetheyareasingleobjectwhichcontains(orcollects)anynumberofother
objects. The“anynumber”clausemeansthattheycancontainzerootherobjects,meaningthatanempty
containerisjustasvalidasacontainerwithoneorthousandsofobjects.
Important: OtherLanguages
Insomeprogramminglanguages,theyusewordslike“vector”or“array”torefertosequentialcontainers.
Forexample, inCorJava, theprimitivearrayhasastaticallyallocatednumberofpositions. InJava, a
referenceoutsidethatspeciﬁcnumberofpositionsraisesanexception. InC,however,areferenceoutside
thedeﬁnedpositionsofanarrayisanerrorthatmayneverbedetected. Really.
Therearefourcommonly-usedsubspeciesofsequencecontainers.
•String,called str. Acontainerofsingle-byteASCIIcharacters.
•UnicodeString, unicode. Acontainerofmulti-byteUnicode(orUniversalCharacterSet)characters.
135
Building Skills in Python, Release 2.6.5
•tuple. Acontainerofanythingwithaﬁxednumberofelements.
•list. Acontainerofanythingwithadynamicnumberofelements.
Important: Python3
Thismixoftypeswillchangeslightly.
TheStringandUnicodetypeswillmergeintothe strtype. Thiswillrepresenttext.
Anewcontainer,the“bytearray”willbeintroduced,named bytes. Thiswillrepresentbinarydata.
tupleandlistwon’tchange.
Whenwecreatea tupleorstring, we’vecreatedan immutable, orstaticobject. Wecanexaminethe
object,lookingatspeciﬁccharactersoritems. Wecan’tchangetheobject. Thismeansthatwecan’tput
additional data on the end of a string. What we can do, however, is create a new stringthat is the
concatenationofthetwooriginal stringobjects.
Whenwecreatea list, ontheotherhand, we’vecreateda mutableobject. A listcanhaveadditional
objectsappendedtoitorinsertedinit. Objectscanberemovedfroma list,also. A listcangrowand
shrink;theorderoftheobjectsinthe listcanbechangedwithoutcreatinganew listobject.
Oneothernoteon string. Whilestringaresequencesofcharacters,thereisnoseparatecharacterdata
type. Acharacterissimplya stringoflengthone. ThisrelievesprogrammersfromtheCorJavaburden
ofrememberingwhichquotestouseforsinglecharactersasdistinctfrommulti-character string. Italso
eliminatesanyproblemswhendealingwithUnicodemulti-bytecharacters.
12.2 Overview of Sequences
Allthevarietiesofsequences( string,tupleandlist)havesomecommoncharacteristics. We’llidentify
thecommonfeaturesﬁrst,andthenmoveontocovertheseindetailforeachindividualtypeofsequence.
Thissectionisaroad-mapforthefollowingthreesectionsthatcover string,tupleand‘list’indetail.
LiteralValues . Eachsequencetypehasaliteralrepresentation. Thedetailswillbecoveredinseparate
sections,butthebasicsarethese:
•stringusesquotes: "string".
•tupleuses‘()’:(1,'b',3.1).
•listuses‘[]’:[1,'b',3.1].
Operations. Sequences have three common operations: ‘ +’ will concatenate sequences to make longer
sequences. ‘ *’isusedwithanumberandasequencetorepeatthesequenceseveraltimes. Finally,the‘ [ ]’
operatorisusedtoselectelementsfromasequence.
The‘[ ]’operatorcanextractasingleitem,orasubsetofitemsbyslicing. Therearetwoformsof‘ []’.
•Thesingleitemformatis sequence[index]. Itemsarenumberedfrom0.
•Thesliceformatis sequence[start:end]. Itemsfrom startto end-1arechosentocreateanew
sequence;itwillbeasliceoftheoriginalsequence. Therewillbe end−startitemsintheresulting
sequence.
Positionscanbenumberedfromtheendofthe stringaswellasthebeginning. Position-1isthelastitem
ofthesequence,-2isthenext-to-lastitem.
Here’showitworks: eachitemhasapositivenumberpositionthatidentiﬁestheiteminthesequence. We’ll
alsoshowthenegativepositionnumbersforeachiteminthesequence. Forthisexample,we’relookingata
four-elementsequencelikethe tuple‘(3.14159,"two words",2048,(1+2j)) ’.
136 Chapter 12. Sequences: Strings, T uples and Lists
Building Skills in Python, Release 2.6.5
forwardposition 01 23
reverseposition -4-3 -2-1
item 3.14159“twowords” 2048(1+2j)
Whydowehavetwodiﬀerentwaysofidentifyingeachpositioninthesequence? Ifyouwant,youcanthink
ofitasahandyshort-hand. Thelastiteminanysequence, Scanbeidentiﬁedbytheformula‘ S[ len(S)-1
]’. Forexample,ifwehaveasequencewith4elements,thelastitemisinposition3. Ratherthanwrite
‘S[ len(S)-1 ] ’,Pythonletsussimplifythisto‘ S[-1]’.
Youcanseehowthisworkswiththefollowingexample.
>>>a=(3.14159,"two words ",2048,(1+2j))
>>>a[0]
3.1415899999999999
>>>a[-3]
'two words'
>>>a[2]
2048
>>>a[-1]
(1+2j)
Built-inFunctions .len(),max()andmin()applytoallvarietiesofsequences. We’llprovidethedeﬁni-
tionshereandrefertotheminvariousclassdeﬁnitions.
len(sized_col lection )
Returnthenumberofitemsofthecollection. Thiscanbeanykindofsizedcollection. Allsequences
andmappingsaresubclassesof collections.Sized andprovidealength.
Herearesomeexamples.
>>>len("Wednesday ")
9
>>>len( (1,1,2,3) )
4
max(iterable_col lection )
Returns the largest value in the iterable collection. All sequences and mappings are subclasses of
collections.Iterable ;themax()functioncaniterateoverelementsandlocatethelargest.
>>>max( (1,2,3) )
3
>>>max('abstractly ')
'y'
Note that max()can also work with a number of individual arguments instead of a single iterable
collectionargumentvalue. Welookedathisin Col lection F unctions .
min(iterable_col lection )
Returns the smallest value in the iterable collection. All sequences and mappings are subclasses of
collections.Iterable ;themax()functioncaniterateoverelementsandlocatethesmallest.
>>>min( (10,11,2) )
2
>>>min( ('10','11','2') )
'10'
Notethatstringsarecomparedalphabetically. The min()(andmax()functioncan’tdeterminethat
thesearesupposedtobeevaluatedasnumbers.)
12.2. Overview of Sequences 137
Building Skills in Python, Release 2.6.5
sum(iterable_col lection, [start=0] )
Returnthesumoftheitemsintheiterablecollection. Allsequencesandmappingsaresubclassesof
collections.Iterable .
Ifstartisprovided,thisistheinitialvalueforthesum,otherwise 0isused.
Ifthevaluesbeingsummedarenotallnumericvalues,thiswillraisea TypeErrorexception.
>>>sum( (1,1,2,3,5,8) )
20
>>>sum( (),3)
3
>>>sum( (1,2,'not good ') )
Traceback (most recent call last):
File"<stdin>" , line1, in <module>
TypeError: unsupported operand type(s) for + : 'int' and 'str'
any(iterable_col lection )
ReturnTrueifthereexistsanitemintheiterablecollectionwhichis True. Allsequencesandmappings
aresubclassesof collections.Iterable .
all(iterable_col lection )
ReturnTrueifallitemsintheiterablecollectionare True. Allsequencesandmappingsaresubclasses
ofcollections.Iterable .
enumerate (iterable_col lection )
Iteratesthroughtheiterablecollectionreturning2-tuplesof‘ ( index, item ) ’.
>>>forposition, item inenumerate ( ('word',3.1415629 ,(2+3j) ) ):
... printposition, item
...
0 word
1 3.1415629
2 (2+3j)
sorted(sequence, [key=None], [reverse=F alse] )
Thisreturnsaniteratorthatstepsthroughtheelementsoftheiterablecontainerinascendingorder.
Ifthereversekeywordparameterisprovidedandsetto True,thecontainerisiteratedindescending
order.
Thekeyparameter is used when the items in the container aren’t simply sorted using the default
comparison operators. The keyfunction must return the ﬁelds to be compared selected from the
underlyingobjectsinthetuple.
We’lllookatthisindetailin F unctional Programming with Col lections .
reversed (sequence)
Thisreturnsaniteratorthatstepsthroughtheelementsintheiterablecontainerinreverseorder.
>>>tuple(reversed ( (9,1,8,2,7,3) ) )
(3, 7, 2, 8, 1, 9)
Comparisons . Thestandardcomparisons(‘ <’,‘<=’,‘>’,‘<=’,‘==’,‘!=’)applytosequences. Theseallwork
bydoingitem-by-itemcomparisonwithinthetwosequences. Theitem-by-itemruleresultsin stringsbeing
sortedalphabetically,and tuplesand‘list’ssortedinawaythatissimilarto strings.
Therearetwoadditionalcomparisons: inandnotin. Thesechecktoseeifasinglevalueoccursinthe
sequence. Theinoperatorreturnsa Trueiftheitemisfound, Falseiftheitemisnotfound. The notin
operatorreturns Trueiftheitemisnotfoundinthesequence.
138 Chapter 12. Sequences: Strings, T uples and Lists
Building Skills in Python, Release 2.6.5
Methods. Thestringandlistclasseshavemethodfunctionsthatoperateontheobject’svalue. For
instance‘ "abc".upper() ’executesthe upper()methodbelongingtothe stringliteral"abc". Theresult
isanewstring, 'ABC'.Theexactdictionaryofmethodsisuniquetoeachclassofsequences.
Statements. ThetupleandlistclassesarecentraltocertainPythonstatements,likethe assignment
statementandthe forstatement. Theseweredetailsthatweskippedoverin The Assignment Statement
and Iterative Processing: F or Al l and There Exists .
Modules. Thereisa stringmodulewithseveral stringspeciﬁcfunctions. Mostofthesefunctionsare
nowmemberfunctionsofthe stringtype. Additionally,thismodulehasanumberofconstantstodeﬁne
varioussubsetsoftheASCIIcharacterset,includingdigits,printablecharacters,whitespacecharactersand
others.
Factory Functions . There are also built-in factory (or conversion) functions for the sequence objects.
We’velookedatsomeofthesealready,whenwelookedat str()andrepr().
12.3 Exercises
1.Tuples and Lists . What is the value in having both immutable sequences ( tuple) and mutable
sequences ( list)? What are the circumstances under which you would want to change a string?
Whataretheproblemsassociatedwitha stringthatgrowsinlength? Howcanstorageforvariable
lengthstringbemanaged?
2.Unicode Strings . What is the value in making a distinction between Unicode strings and ASCII
strings? Doesitimproveperformancetorestricta stringtosingle-bytecharacters? Shouldallstrings
simplybeUnicodestringstomakeprogramssimpler? Howshouldﬁlereadingandwritingbehandled?
3.StatementsandDataStructures . Inordertointroducethe forstatementin Iterative Processing:
F or Al l and There Exists , we had to dance around the sequence issue. Would it make more sense
tointroducethevarioussequencedatastructuresﬁrst,andthendescribestatementsthatprocessthe
datastructurelater?
Something has to be covered ﬁrst, and is therefore more fundamental. Is the processing statement
morefundamentaltoprogramming,oristhedatastructure?
12.4 Style Notes
Trytoavoidextraneousspacesin listandtupledisplays. Pythonprogramsshouldberelativelycompact.
Prosewritingtypicallykeeps()’sclosetotheircontents,andputsspacesaftercommas,neverbeforethem.
ThisshouldholdtrueforPython,also.
Thepreferredformattingfora listortuple,then,is‘ [1,2,3]’or‘(1, 2, 3)’. Spacesarenotputafter
theinitial‘ [’or‘(’. Spacesarenotputbefore‘ ,’.
12.3. Exercises 139
Building Skills in Python, Release 2.6.5
140 Chapter 12. Sequences: Strings, T uples and Lists
CHAPTER
THIRTEEN
STRINGS
We’ll look at the two stringclasses from a number of viewpoints: semantics, literal values, operations,
comparisonoperators,built-infunctions,methodsandmodules. Additionally,wehaveadigressiononthe
immutabilityof stringobjects.
13.1 String Semantics
AString(theformalclassnameis str)isanimmutablesequenceofASCIIcharacters.
AUnicodeString( unicode)isanimmutablesequenceofUnicodecharacters.
Sinceastring(either strorunicode)isasequence,allofthecommonoperationsonsequencesapply. We
canconcatenatestringobjectstogetherandselectcharactersfromastring. Whenweselectaslicefroma
string,we’veextractedasubstring.
Anindividualcharacterissimplyastringoflengthone.
Important: Python3.0
The Python 2 strclass, which is limited to single-byte ASCII characters does two separate things: it
representstextaswellasacollectionofbytes.
Thetextfeaturesof strgainthefeaturesfromtheUnicodeStringclass, unicode. Thenew strclasswill
representstringsoftext,irrespectiveoftheunderlyingencoding. ItcanbeASCII,UTF-8,UTF-16orany
otherencoding.
The“arrayofbytes”featuresofthePython2 strclasswillbemovedintoanewclass, bytes. Thisnew
classwillimplementsimplesequencesofbytesandwillsupportconversionbetweenbytesandstringsusing
encodinganddecodingfunctions.
13.2 String Literal Values
AstrisasequenceofASCIIcharacters. Theliteralvaluefora striswrittenbysurroundingthevalue
withquotesorapostrophes. Thereareseveralvariationstoprovidesomeadditionalfeatures.
BasicString Stringsareenclosedinmatchingquotes(‘ "’)orapostrophes(‘ '’). Astringen-
closedinquotes(‘ "’)cancontainapostrophes(‘ '’);similarly,astringenclosedinapostro-
phes (‘'’) can contains quotes (‘ "’). A basic strmust be completed on a single line, or
continuedwitha‘ \’astheverylastcharacterofaline.
Examples:
141
Building Skills in Python, Release 2.6.5
"consultive "
'syncopated '
"don't do that "
'"Okay,"he said. '
Multi-LineString Alsocalled“Triple-QuotedString”.
Amulti-line strisenclosedintriplequotes(‘ """’)ortripleapostrophes(‘ '''’).Itcontinues
onacrosslineboundariesuntiltheconcludingtriple-quoteortriple-apostrophe.
Examples:
"""A very long
string"""
'''SELECT *
FROM THIS, THAT
WHERE THIS.KEY = THAT.FK
AND THIS.CODE = 'Active'
'''
UnicodeString AUnicodeStringusestheabovequotingrules, butprefacesthequotewith
(‘u"’),(‘u'’),(‘u"""’)or(‘u'''’).
UnicodeistheUniversalCharacterSet;eachcharacterrequiresfrom1to4bytesofstorage.
ASCIIisasingle-bytecharacterset;eachofthe256ASCIIcharactersrequiresasinglebyte
ofstorage. Unicodepermitsanycharacterinanyofthelanguagesincommonusearound
theworld.
A special ‘ \uxxxx’ escape sequence is used for Unicode characters that don’t happen to
occuronyourASCIIkeyboard.
Examples:
u'\u65e5\u672c'
u"All ASCII "
RawStringA Raw String uses the above quoting rules, but prefaces the quote with (‘ r"’),
(‘r'’),(‘r"""’)or(‘r'''’).
The backslash characters (‘ \’) are notinterpreted as escapes by Python, but are left as
is. This is handy for Windows ﬁles names that contain ‘ \’. It is also handy for regular
expressionsthatmakeextensiveuseofbackslashes.
Examples:
newline_literal =r'\n'
filename ="C:\mumbo\jumbo"
pattern="(\*\S+\*)"
Thenewline_literal isatwocharacterstring,notthenewlinecharacter.
Outsideofrawstrings,non-printingcharactersandUnicodecharactersthataren’tfoundonyourkeyboard
are created using escapes. A table of escapes is provided below. These are Python representations for
unprintableASCIIcharacters. They’recalledescapesbecausethe‘ \’isanescapefromtheusualmeaning
ofthefollowingcharacter.
142 Chapter 13. Strings
Building Skills in Python, Release 2.6.5
Es-
capeMeaning
\\Backslash( \)
\'Apostrophe( ')
\"Quote(")
\aAudibleSignal;theASCIIcodecalledBEL.SomeOS’stranslatethistoascreenﬂashorignore
itcompletely.
\bBackspace(ASCIIBS)
\fFormfeed(ASCIIFF).Onapaper-basedprinter,thiswouldmovetothetopofthenextpage.
\nLinefeed(ASCIILF),alsoknownasnewline. Thiswouldmovethepaperuponeline.
\rCarriageReturn(ASCIICR).Onapaperbasedprinter,thisreturnedtheprintcarriagetothe
startoftheline.
\tHorizontalTab(ASCIITAB)
\oooAnASCIIcharacterwiththegivenoctalvalue. The oooisanyoctalnumber.
\xhhAnASCIIcharacterwiththegivenhexadecimalvalue. The‘ x’isrequired. The hhisanyhex
number.
AdjacentStrings . Notethatadjacent stringobjectsareautomaticallyconcatenatedtomakeasingle
string.
‘"ab" "cd" "ef" ’isthesameas‘ "abcdef"’.
Themostcommonuseforthisisthefollowing:
msg="A very long "\
"message, which didn 't fit on "\
"one line. "
Unicode Characters . For Unicode, a special ‘ \uxxxx’ escape is provided. This requires the four digit
Unicodecharacteridentiﬁcation.
Forexample,“ 日本”ismadeupofUnicodecharacters‘ U+65e5’and‘U+672c’. InPython,wewritethisstring
as‘u'\u65e5\u672c' ’.
ThereareavarietyofUnicodeencodingschemes,forexample,UTF-8,UTF-16andLATIN-1. The codecs
moduleprovidesmechanismsforencodinganddecodingUnicodeStrings.
13.3 String Operations
Thereareanumberofoperationson strobjects,operationswhichcreate strsandoperationswhichcreate
otherobjectsfrom strs.
There are three operations (‘ +’ , ‘*’ , ‘[ ]’) that work with all sequences (including strs) and a unique
operation,‘ %’,thatcanbeperformedonlywith strobjects.
The‘+’operatorcreatesanew stringastheconcatenationofthearguments.
>>>"hi"+'mom'
'hi mom'
The‘*’operatorbetween strandnumbers(number‘ *’strorstr‘*’number)createsanew strthatisa
numberofrepetitionsoftheinput str.
>>>print3*"cool!"
cool!cool!cool!
13.3. String Operations 143
Building Skills in Python, Release 2.6.5
The ‘[ ]’ operator can extract a single character or a slice from the string. There are two forms: the
single-itemformandthesliceform.
•Thesingleitemformatis string[index].Charactersarenumberedfrom0to‘ len(string)’.Characters
arealsonumberedinreversefrom-‘ len(string)’to-1.
•Thesliceformatis string[start:end]. Charactersfrom startto end-1arechosentocreateanew
strasasliceoftheoriginal str;therewillbe end−startcharactersintheresulting str.
Ifstartisomitteditisthebeginningofthe string(position0).
Ifendisomitteditistheendofthe string(position-1).
Yes,youcanomitboth(‘ someString[:] ’) tomakeacopyofastring.
>>>s="adenosine "
>>>s[2]
'e'
>>>s[:5]
'adeno'
>>>s[5:]
'sine'
>>>s[-5:]
'osine'
>>>s[:-5]
'aden'
TheStringFormattingOperation ,%. The%operatorissometimescalled string interpolation ,since
itinterpolatesliteraltextandconvertedvalues. Weprefertocallitstringformatting,sincethatisamore
aptdescription. MuchoftheformattingistakenstraightfromtheClibrary’s printf()function.
Thisoperatorhasthreeforms. Youcanuse %withastrandvalue, strandatupleaswellas strand
classname: dict. We’llcover tupleanddictindetaillater.
Thestringontheleft-handsideof %containsamixtureof literal textplus conversion speciﬁcations . A
conversion speciﬁcation begins with ‘ %’. For example, integers are converted with ‘ %i’. Each conversion
speciﬁcationwilluseacorrespondingvaluefromthe tuple. Theﬁrstconversionusestheﬁrstvalueofthe
tuple,thesecondconversionusesthesecondvaluefromthe tuple.
Forexample:
importrandom
d1, d2=random.randrange( 1,6), random .randrange( 1,6)
r="die 1 shows %i, and die 2 shows %i"%( d1, d2 )
Theﬁrst‘ %i’willconvertthevaluefor d1toastringandinsertthevalue,thesecond‘ %i’willconvertthe
valuefor d2toastring. The%operatorreturnsthenew stringbasedontheformat,witheachconversion
speciﬁcationreplacedwiththeappropriatevalues.
ConversionSpeciﬁcations . Eachconversionspeciﬁcationhasfromonetofourelements,followingthis
pattern: ‘ %’‘.’
[ flags ][ width [ precision ]] code
The‘%’andtheﬁnal codeineachconversionspeciﬁcationarerequired. Theotherelementsareoptional.
Theoptional ﬂagselementcanhaveanycombinationofthefollowingvalues:
‘-’Leftadjusttheconvertedvalueinaﬁeldthathasalengthgivenbythe widthelement. Thedefaultis
rightadjustment.
144 Chapter 13. Strings
Building Skills in Python, Release 2.6.5
‘+’Showpositivesigns(signwillbe‘ +’or‘-’). Thedefaultistoshownegativesignsonly.
␣(a space)Showpositivesignswithaspace(signwillbe␣or‘ -’). Thedefaultisnegativesignsonly.
‘#’UsethePythonliteralrules(0foroctal,0xforhexadecimal,etc.) Thedefaultisdecoration-freenotation.
‘0’Zero-ﬁllthetheﬁeldthathasalengthgivenbythe widthelement. Thedefaultistospace-ﬁlltheﬁeld.
Thisdoesn’tmakealotofsensewiththe-(left-adjust)ﬂag.
Theoptional widthelementisanumberthatspeciﬁesthetotalnumberofcharactersfortheﬁeld,including
signsanddecimalpoints. Ifomitted,thewidthisjustbigenoughtoholdtheoutputnumber. Ifa‘ *’isused
insteadofanumber,anitemfromthe tupleofvaluesisusedasthewidthoftheﬁeld. Forexample,‘ "%*i"
% ( 3, d1 )’usesthevalue3fromthe tupleastheﬁeldwidthand d1asthevaluetoconverttoa string.
Theoptional precisionelement(whichmustbeprecededbyadot,‘ .’ ifitispresent)hasafewdiﬀerent
purposes. Fornumericconversions,thisisthenumberofdigitstotherightofthedecimalpoint. For string
conversions,thisisthemaximumnumberofcharacterstobeprinted,longer stringswillbetruncated. If
a‘*’isusedinsteadofanumber,anitemfromthe tupleofvaluesisusedastheprecisionoftheconversion.
Forexample,‘ "%*.*f" % ( 6, 2, avg ) ’usesthevalue6fromthe tupleastheﬁeldwidth,thevalue2
fromthe tupleastheprecisionand avgasthevalue.
Thestandardconversionrulesalsopermitalongorshortindicator: ‘ l’or‘h’. ThesearetoleratedbyPython
sothattheseformatswillbecompatiblewithC,buttheyhavenoeﬀect. Theyreﬂectinternalrepresentation
considerationsforCprogramming,notexternalformattingofthedata.
Therequiredone-letter codeelementspeciﬁestheconversiontoperform. Thecodesarelistedbelow.
‘%’Notaconversion,thiscreatesa‘ %’intheresulting str. Use‘%%’toputa‘ %’intheoutput str.
‘c’Convert a single-character str. This will also convert an integer value to the corresponding ASCII
character. Forexample,‘ "%c" % ( 65, ) ’resultsin‘ "A"’.
‘s’Converta str. Thiswillconvertnon- strobjectsbyimplicitlycallingthe str()function.
‘r’Calltherepr()function,andinsertthatvalue.
‘i’‘d’Convertanumericvalue,showingordinarydecimaloutput. Thecodeistandsforinteger,dstands
fordecimal. Theymeanthesamething;butit’shardtoreachaconsensusonwhichis“correct”.
‘u’Convertan unsignednumber. WhilerelevanttoCprogramming,thisisthesameasthe‘ i’or‘d’format
conversion.
‘o’Convert a numeric value, showing the octal representation. ‘ %#0’ gets the Python-style value with a
leadingzero. Thisissimilartothe oct()function.
‘x’‘X’Convertanumericvalue,showingthehexadecimalrepresentation. ‘ %#X’getsthePython-stylevalue
withaleading‘ 0X’;‘%#x’getsthePython-stylevaluewithaleading‘ 0x’. Thisissimilartothe hex()
function.
‘e’‘E’Convertanumericvalue,showingscientiﬁcnotation. ‘ %e’produces±d.ddd‘e’±xx,‘%E’produces
±d.ddd‘E’±xx.
‘f’‘F’Convertanumericvalue,usingordinarydecimalnotation. Incasethenumberisgigantic,thiswill
switchto‘ %g’or‘%G’notation.
‘g’‘G’“Generic”ﬂoating-pointconversion. Forvalueswithanexponentlargerthan-4,andsmallerthan
the precisionelement,the‘ %f’formatwillbeused. Forvalueswithanexponentsmallerthan-4,or
valueslargerthanthe precisionelement,the‘ %e’or‘%E’formatwillbeused.
Herearesomeexamples.
"%i:%iwin,%iloss,%6.3f"%(count,win,loss, float(win)/loss)
13.3. String Operations 145
Building Skills in Python, Release 2.6.5
Thisexampledoesfourconversions: threesimpleintegerandoneﬂoatingpointthatprovidesawidthof6
and3digitsofprecision. -0.000istheexpectedformat. Therestofthe stringisliterallyincludedinthe
output.
"Spin%3i:%2i,%s"%(spin,number,color)
This example does three conversions: one number is converted into a ﬁeld with a width of 3, another
convertedwithawidthof2,anda stringisconverted,usingasmuchspaceasthe stringrequires.
>>>a=6.02E23
>>>"%e"%a
'6.020000e+23'
>>>"%E"%a
'6.020000E+23'
>>>
Thisexampleshowssimpleconversionofaﬂoating-pointnumbertothedefaultscientiﬁcnotationwhichhas
awitdthof12andaprecisionof6.
13.4 String Comparison Operations
Thestandardcomparisons(‘ <’,‘<=’,‘>’,‘>=’,‘==’,‘!=’)applyto strobjects. Thesecomparisonsusethe
standardcharacter-by-charactercomparisonrulesforASCIIorUnicode.
Therearetwoadditionalcomparisons: inandnotin. Thesechecktoseeifasubstringoccursinalonger
string. Theinoperatorreturnsa Truewhenthesubstringisfound, Falseifthesubstringisnotfound. The
notinoperatorreturns Trueifthesubstringisnotfound.
>>>'a'in'xyzzyabcxyzzy '
True
>>>'abc'in'xyzzyabc '
True
Don’tbefooledbythefactthatstringrepresentationsofintegersdon’tseemtosortproperly. Stringcompar-
isondoesnotmagicallyrecornizethatthestringsarerepresentationsofnumbers. It’ssimple“alphabetical
order”rulesappliedtodigits.
>>>'100'<'25'
True
Thisistruebecause‘ '1' < '2'’.
13.5 String Statements
Theforstatementwillstepthoughallelementsofasequence. Inthecaseofastring,itwillstepthrough
eachcharacterofthestring.
Forexample:
forletterin"forestland ":
printletter
Thiswillprinteachletterofthegivenstring.
146 Chapter 13. Strings
Building Skills in Python, Release 2.6.5
13.6 String Built-in Functions
Thefollowingbuilt-infunctionsarerelevantto strmanipulation
chr(i)
Returna strofonecharacterwithordinal i. Notethat 0≤i <256tobeaproperASCIIcharacter.
unichr(u)
ReturnaUnicodeString( unicode)ofonecharacterwithordinal u.0≤u < 65536.
ord(c)
Returntheintegerordinalofaonecharacter str. Thisworksforanycharacter,includingUnicode
characters.
unicode(string, [encoding], [errors] )
CreatesanewUnicodeobjectfromthegivenencoded string.encodingdefaultstothecurrentdefault
stringencoding. errorsdeﬁnestheerrorhandling,defaultsto‘strict’.
Theunicode()functionconvertsthe stringtoaspeciﬁcUnicodeexternalrepresentation. Thedefault
encodingis‘UTF-8’with‘strict’errorhandling.
Choices for errorsare ‘strict’, ‘replace’ and ‘ignore’. Strict raises an exception for unrecognized
characters,replacesubstitutestheUnicodereplacementcharacter(‘ \uFFFD’)andignoreskipsover
invalidcharacters.
ThecodecsandunicodedatamodulesprovidemorefunctionsforworkingwithUnicode.
>>>unicode("hi mom","UTF-16")
u'\u6968\u6d20\u6d6f'
>>>unicode("hi mom","UTF-8")
u'hi mom'
Important: Python3
Theord(),chr(),unichr()andunicode()functionswillbesimpliﬁedinPython3.
Python 3 no longer separates ASCII from Unicode strings. These functions will all implicitly work with
Unicodestrings. NotethattheUTF-8encodingofUnicodeoverlapswithASCII,sothissimpliﬁcationto
useUnicodewillnotsigniﬁcantlydisruptprogramsthatworkASCIIﬁles.
Severalimportantfunctionsweredeﬁnedearlierin String Conversion F unctions .
•repr(). Returns a canonical stringrepresentation of the object. For most object types,
‘eval(repr(object)) == object ’.
Forsimplenumerictypes,theresultof repr()isn’tveryinteresting.Formorecomplex,types,however,
itoftenrevealsdetailsoftheirstructure.
>>>a="""a very
...long string
...in multiple lines
..."""
>>>repr(a)
"'a very \\nlong string \\nin multiple lines\\n'"
Thisrepresentationshowsthenewlinecharacters(‘ \n’)embeddedwithinthetriple-quotedstring.
Important: Python3
The“reversequotes”(‘ `a`’)worklike‘ repr(a)’. Thereversequotesyntaxisrarelyused,andwillbe
droppedinPython3.
13.6. String Built-in Functions 147
Building Skills in Python, Release 2.6.5
•str(). Returnanice stringrepresentationoftheobject. Iftheargumentisa string,thereturn
valueisthesameobject.
>>>a=str(355.0/113.0)
>>>a
'3.14159292035'
>>>len(a)
13
Someotherfunctionswhichapplytostringsaswellasothersequenceobjects.
•len(). Forstrings,thisfunctionreturnsthenumberofcharacters.
>>>len("abcdefg")
7
>>>len(r"\n")
2
>>>len("\n")
1
•max(). Forstrings,thisfunctionreturnsthemaximumcharacter.
•min(). Forstrings,thisfunctionreturnstheminimumcharacter.
•sorted(). Iterate through the string’s characters in sorted order. This expands the string into an
explicitlistofindividualcharacters.
>>>sorted("malapertly ")
['a', 'a', 'e', 'l', 'l', 'm', 'p', 'r', 't', 'y']
>>>"".join(sorted("malapertly ") )
'aaellmprty'
•reversed(). Iteratethroughthestring’scharactersinreverseorder. Thiscreatesaniterator. The
iteratorcanbeusedwithavarietyoffunctionsorstatements.
>>>reversed ("malapertly ")
<reversed object at 0x600230>
>>>"".join(reversed ("malapertly ") )
'yltrepalam'
13.7 String Methods
Astringobjecthasanumberofmethodfunctions. Thesecanbegroupedarbitrarilyintotransformations,
whichcreatenew stringsfromold,andinformation,whichreturnsafactabouta string.
Thefollowing stringtransformationfunctionscreateanew stringobjectfromanexisting string.
capitalize ()
Createacopyofthe stringwithonlyitsﬁrstcharactercapitalized.
center(width)
Createacopyofthe stringcenteredinastringoflength width. Paddingisdoneusingspaces.
encode(encoding, [errors] )
Returnanencodedversionof string. Default encodingisthecurrentdefaultstringencoding. errors
maybegiventosetadiﬀerenterrorhandlingscheme. Defaultis‘strict’meaningthatencodingerrors
raiseaValueError. Otherpossiblevaluesare‘ignore’and‘replace’.
148 Chapter 13. Strings
Building Skills in Python, Release 2.6.5
expandtabs ([tabsize])
Returnacopyof stringwherealltabcharactersareexpandedusingspaces. If tabsizeisnotgiven,
atabsizeof8charactersisassumed.
join(sequence)
Returnastringwhichistheconcatenationofthe stringsinthesequence. Eachseparatorbetween
elementsisacopyofthegiven stringobject.
ljust(width)
Returnacopyof stringleftjustiﬁedinastringoflength width. Paddingisdoneusingspaces.
lower()
Returnacopyof stringconvertedtolowercase.
lstrip()
Returnacopyof stringwithleadingwhitespaceremoved.
replace(old, new, [maxsplit] )
Returnacopyof stringwithalloccurrencesofsubstring oldreplacedby new. Iftheoptionalargument
maxsplitisgiven,onlytheﬁrst maxsplitoccurrencesarereplaced.
rjust(width)
Returnacopyof stringrightjustiﬁedinastringoflength width. Paddingisdoneusingspaces.
rstrip()
Returnacopyof stringwithtrailingwhitespaceremoved.
strip()
Returnacopyof stringwithleadingandtrailingwhitespaceremoved.
swapcase ()
Returnacopyof stringwithuppercasecharactersconvertedtolowercaseandviceversa.
title()
Return a copy of stringwith words starting with uppercase characters, all remaining characters in
lowercase.
translate (table, [deletechars] )
Returnacopyofthe string,whereallcharactersoccurringintheoptionalargument deletecharsare
removed,andtheremainingcharactershavebeenmappedthroughthegiventranslation table. The
tablemustbea stringoflength256,providingatranslationforeach1-byteASCIIcharacter.
Thetranslationtablesarebuiltusingthe string.maketrans() functioninthe stringmodule.
upper()
Returnacopyof stringconvertedtouppercase.
Thefollowingaccessormethodsprovideinformationabouta string.
count(sub, [start], [end] )
Returnthenumberofoccurrencesofsubstring subin string. Ifstartorendarepresent,thesehave
thesamemeaningsasaslice‘ string[start:end] ’.
endswith (suﬀix, [start], [end] )
ReturnTrueifstringendswiththespeciﬁed suffix, otherwisereturn False. Thesuﬀixcanbea
single string or a sequence of individual strings. If startorendare present, these have the same
meaningsasaslice‘ string[start:end] ’.
find(sub, [start], [end] )
Returnthelowestindexin stringwheresubstring subisfound. Return-1ifthesubstringisnotfound.
Ifstartorendarepresent,thesehavethesamemeaningsasaslice‘ string[start:end] ’.
13.7. String Methods 149
Building Skills in Python, Release 2.6.5
index(sub, [start], [end] )
Returnthelowestindexin stringwheresubstring subisfound. Raise ValueErrorifthesubstringis
notfound. If startorendarepresent,thesehavethesamemeaningsasaslice‘ string[start:end] ’.
isalnum()
ReturnTrueifallcharactersin stringarealphanumericandthereisatleastonecharacterin string;
Falseotherwise.
isalpha()
ReturnTrueifallcharactersin stringarealphabeticandthereisatleastonecharacterin string;False
otherwise.
isdigit()
ReturnTrueifallcharactersin stringaredigitsandthereisatleastonecharacterin string;False
otherwise.
islower()
ReturnTrueifallcharactersin stringarelowercaseandthereisatleastonecasedcharacterin string;
Falseotherwise.
isspace()
ReturnTrueif all characters in stringare whitespace and there is at least one character in string,
Falseotherwise.
istitle()
ReturnTrueifstringistitlecased. Uppercasecharactersmayonlyfollowuncasedcharacters(whites-
pace,punctuation,etc.) andlowercasecharactersonlycasedones, Falseotherwise.
isupper()
ReturnTrueifallcharactersin stringareuppercaseandthereisatleastonecasedcharacterin string;
Falseotherwise.
rfind(sub, [start], [end] )
Return the highest index in stringwhere substring subis found. Return -1 if the substring is not
found. If startorendarepresent,thesehavethesamemeaningsasaslice‘ string[start:end] ’.
rindex(sub, [start], [end] )
Returnthehighestindexin stringwheresubstring subisfound. Raise ValueErrorifthesubstringis
notfound.. If startorendarepresent,thesehavethesamemeaningsasaslice‘ string[start:end] ’.
startswith (sub, [start], [end] )
ReturnTrueifstringstartswiththespeciﬁed prefix,otherwisereturn False. Thepreﬁxcanbea
single string or a sequence of individual strings. If startorendare present, these have the same
meaningsasaslice‘ string[start:end] ’.
Thefollowinggeneratorscreateanotherkindofobject,usuallyasequence,froma string.
partition (separator )
Return three values: the text prior to the ﬁrst occurance of separatorin string, thesepas the
delimiter,andthetextaftertheﬁrstoccuranceoftheseparator. Iftheseparatordoesn’toccur,allof
theinputstringisintheﬁrstelementofthe3-tuple;theothertwoelementsareemptystrings.
split(separator, [maxsplit] )
Returna listofthewordsinthe string,usingseparatorasthedelimiter. If maxsplitisgiven,at
mostmaxsplitsplitsaredone. If separatorisnotspeciﬁed,anywhitespacecharacaterisaseparator.
splitlines (keepends)
Returna listofthelinesin string,breakingatlineboundaries. Linebreaksarenotincludedinthe
resulting listunlesskeependsisgivenandsetto True.
150 Chapter 13. Strings
Building Skills in Python, Release 2.6.5
13.8 String Modules
Thereisanoldermodulenamed string. Almostallofthefunctionsinthismodulearedirectlyavailable
asmethodsofthe stringtype. Theoneremainingfunctionofvalueisthe maketrans()function,which
createsatranslationtabletobeusedbythe translate()methodofa string.
maketrans (from, to)
Returnatranslationtable(a string256characterslong)suitableforusein str.translate() . The
fromandtoparametersmustbestringsofthesamelength. Thetablewillassurethateachcharacter
infromismappedtothecharacterinthesamepositionin to.
Thefollowingexampleshowshowtomakeandthenapplyatranslationtable.
>>>importstring
>>>t=string.maketrans( "aeiou","xxxxx")
>>>phrase="now is the time for all good men to come to the aid of their party "
>>>phrase.translate( t )
'nxw xs thx txmx fxr xll gxxd mxn tx cxmx tx thx xxd xf thxxr pxrty'
Thecodecsmoduletakesadiﬀerentapproachandhasanumberofbuilt-intranslations.
Moreimportantly,thismodulecontainsanumberofdeﬁnitionsofthecharactersintheASCIIcharacterset.
Thesedeﬁnitionsserveasacentral,formalrepositoryforfactsaboutthecharacterset. Notethatthereare
generaldeﬁnitions,applicabletoUnicodecharactersetts,diﬀerentfromtheASCIIdeﬁnitions.
ascii_letters The set of all letters, essentially a union of ascii_lowercase and
ascii_uppercase .
ascii_lowercase The lowercase letters in the ASCII character set:
'abcdefghijklmnopqrstuvwxyz'
ascii_uppercase The uppercase letters in the ASCII character set:
'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
digitsThedigitsusedtomakedecimalnumbers: '0123456789'
hexdigitsThedigitsusedtomakehexadecimalnumbers: '0123456789abcdefABCDEF'
lettersThisisthesetofallletters,aunionof lowercaseanduppercase,whichdependson
thesettingofthelocaleonyoursystem.
lowercaseThisisthesetoflowercaseletters,anddependsonthesettingofthelocaleonyour
system.
octdigitsThedigitsusedtomakeoctalnumbers: '01234567'
printableAllprintablecharactersinthecharacterset. Thisisaunionofdigits,letters,punc-
tuationandwhitespace.
punctuation All punctuation in the ASCII character set, this is
!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~
uppercaseThisisthesetofuppercaseletters,anddependsonthesettingofthelocaleonyour
system.
whitespaceA collection of characters that cause spacing to happen. For ASCII this is
'\t\n\x0b\x0c\r'
13.8. String Modules 151
Building Skills in Python, Release 2.6.5
13.9 String Exercises
1.CheckAmountWriting .
TranslateanumberintotheEnglishphrase.
Thisexamplealgorithmfragmentisonlytogetyoustarted. Thisshowshowtopickoﬀthedigitsfrom
therightendofanumberandassemblearesultingstringfromtheleftendofthestring.
Note that the right-most two digits have special names, requiring some additional cases above and
beyondthesimplisticloopshownbelow. Forexample,291is“twohundredninetyone”,where29is
“twentynine”. Thewordfor“2”changes,dependingonthecontext.
Asapracticalmatter,youshouldanalyzethenumberbytakingoﬀthreedigitsatatime,theexpression
‘(number % 1000) ’doesthis. Youwouldthenformatthethreedigitnumberwithwordslike“million”,
“thousand”,etc.
English Words For An Amount, n
(a)Initialization .
Setresult←””
Settc←0. Thisisthe“tenscounter”thatshowswhatpositionwe’reexamining.
(b)Loop. While n > 0.
i.GetRightDigit . Set digit←n%10,theremainderwhendividedby10.
ii.MakePhrase . Translate digittoastringfrom“zero”to“nine”. Translate tctoastring
from“”to“thousand”. Thisistrickybecausethe“teens”arespecial,wherethe“hundreds”
and“thousands”areprettysimple.
iii.AssembleResult . Prepend digitstringand tcstringtotheleftendofthe resultstring.
iv.NextDigit.n←⌊n÷10⌋. Besuretousethe‘ //’integerdivisionoperator,oryou’llget
ﬂoating-pointresults.
Increment tcby1.
(c)Result. Return resultastheEnglishtranslationof n.
2.RomanNumerals .
ThisissimilartotranslatingnumberstoEnglish. InsteadwewilltranslatethemtoRomanNumerals.
TheAlgorithmissimilartoCheckAmountWriting(above). Youwillpickoﬀsuccessivedigits,using
‘%10’and‘/10’togatherthedigitsfromrighttoleft.
TherulesforRomanNumeralsinvolveusingfourpairsofsymbolsforonesandﬁve,tensandﬁfties,
hundredsandﬁvehundreds. Anadditionalsymbolforthousandscoversalltherelevantbases.
Whenanumberisfollowedbythesameorsmallernumber,itmeansaddition. “II”istwo1’s=2.
“VI”is5+1=6.
Whenonenumberisfollowedbyalargernumber,itmeanssubtraction. “IX”is1before10=9. “IIX”
isn’tallowed,thiswouldbe“VIII”.
Fornumbersfrom1to9,thesymbolsare“I”and“V”,andthecodingworkslikethis.
(a)“I”
(b)“II”
152 Chapter 13. Strings
Building Skills in Python, Release 2.6.5
(c)“III”
(d)“IV”
(e)“V”
(f)“VI”
(g)“VII”
(h)“VIII”
(i)“IX”
Thesamerulesworkfornumbersfrom10to90, using“X”and“L”.Fornumbersfrom100to900,
usingthesymbols“C”and“D”.Fornumbersbetween1000and4000,using“M”.
Herearesomeexamples. 1994=MCMXCIV,1956=MCMLVI,3888=MMMDCCCLXXXVIII
3.WordLengths .
Analyzethefollowingblockoftext. You’llwanttobreakintointowordsonwhitespaceboundaries.
Thenyou’llneedtodiscardallpunctuationfrombefore,afterorwithinaword.
What’sleftwillbeasequenceofwordscomposedofASCIIletters. Computethelengthofeachword,
andproducethesequenceofdigits. (nowordis10ormoreletterslong.)
Comparethesequenceofwordlenghtswiththevalueof‘ math.pi’.
Poe, E.
Near a Raven
Midnights so dreary, tired and weary,
Silently pondering volumes extolling all by-now obsolete lore.
During my rather long nap - the weirdest tap!
An ominous vibrating sound disturbing my chamber's antedoor.
"This", I whispered quietly, "I ignore".
Thisisbasedon http://www.cadaeic.net/cadenza.htm .
13.10 Digression on Immutability of Strings
In Stringsand T upleswenotedthat stringandtupleobjectsareimmutable. Theycannotbechangedonce
theyarecreated. Programmersexperiencedinotherlanguagessometimesﬁndthistobeanoddrestriction.
Twocommonquestionsthatarisearehowtoexpanda stringandhowtoremovecharactersfroma string.
Generally,wedon’texpandorcontracta string,wecreateanew stringthatistheconcatenationofthe
originalstringobjects. Forexample:
>>>a="abc"
>>>a=a+"def"
>>>a
'abcdef'
Ineﬀect,Pythongivesus stringobjectsofarbitrarysize. Itdoesthisbydynamicallycreatinganew string
insteadofmodifyinganexisting string.
Some programmers who have extensive experience in other languages will ask if creating a new string
from the original stringis the most eﬀicient way to accomplish this. Or they suggest that it would be
13.10. Digression on Immutability of Strings 153
Building Skills in Python, Release 2.6.5
“simpler” to allow a mutable stringfor this kind of concatenation. The short answer is that Python’s
storagemanagementmakesthisuseofimmutable stringthesimplestandmosteﬀicient.
Responsestotheimmutabilityof tupleandmutabilityof listvary,includingsomeofthefollowingfre-
quentlyaskedquestions.
Sincealistdoeseverythinga tupledoesandismutable,whybotherwith tuple?
Immutable tupleobjectsaremoreeﬀicientthanvariable-length listobjectsforsomeoperations. Once
thetupleiscreated,itcanonlybeexamined. Whenitisnolongerreferenced,thenormalPythongarbage
collectionwillreleasethestorageforthe tuple.
Mostimportantly,atuplecanbereliablyhashedtoasinglevalue. Thismakesitausablekeyforamapping.
Many applications rely on ﬁxed-length tuples. A program that works with coordinate geometry in two
dimensions may use 2-tuples to represent ( x,y) coordinate pairs. Another example might be a program
thatworkswithcolorsas3-tuples, ( r,g,b), of red, green andbluelevels. Avariable-length listisnot
appropriateforthesekindsofﬁxed-lengthtuple.
Wouldn’titbe“moreeﬀicient”toallowmutable strings?
Thereareanumberofaxesforeﬀiciency: thetwomostcommonaretimeandmemoryuse.
Amutable stringcoulduselessmemory. However,thisisonlytrueinthebenignspecialcasewherewe
are only replacing or shrinking the stringwithin a ﬁxed-size buﬀer. If the stringexpands beyond the
sizeofthebuﬀertheprogrammusteithercrashwithanexception,oritmustswitchtodynamicmemory
allocation. Pythonsimplyusesdynamicmemoryallocationfromthestart. Cprogramsoftenhaveserious
securityproblemscreatedbyattemptingtoaccessmemoryoutsideofa stringbuﬀer. Pythonavoidsthis
problembyusingdynamicallocationofimmutable stringobjects.
Processingamutable stringcoulduselesstime. Inthecasesofchanginga stringinplaceorremoving
charactersfroma string,aﬁxed-lengthbuﬀerwouldrequiresomewhatlessmemorymanagementoverhead.
Rather than indict Python for oﬀering immutable string, this leads to some productive thinking about
stringprocessingingeneral.
Intext-intensiveapplicationswemaywanttoavoidcreatingseparate stringobjects. Instead,wemaywant
tocreateasingle stringobject–theinputbuﬀer–andworkwithslicesofthatbuﬀer. Ratherthancreate
string,wecancreate sliceobjectsthatdescribestartingandendingoﬀsetswithintheone-and-onlyinput
buﬀer.
Ifwethenneedtomanipulatetheseslicesoftheinputbuﬀer, wecancreatenew stringobjectsonlyas
needed. Inthiscase,ourapplicationprogramisdesignedforeﬀiciency. WeusethePython stringobjects
whenwewantﬂexibilityandsimplicity.
154 Chapter 13. Strings
CHAPTER
FOURTEEN
TUPLES
We’lllookat tuplefromanumberofviewpoints:semantics,literalvalues,operations,comparisonoperators,
statements,built-infunctionsandmethods.
Additionally,wehaveadigressiononthe operatorin Digression on The Sigma Operator .
14.1 T uple Semantics
Atupleis a container for a ﬁxed sequence of data objects. The name comes from the Latin suﬀix for
multiples: dou ble,tri ple,quadr uple,quin tuple.
Mathematicianscommonlyconsider ordered pairs;forinstance,mostanalyticalgeometryisdonewithCarte-
siancoordinates( x,y). Anorderedpaircanbegeneralizedasa2-tuple.
Anessentialingredienthereisthata tuplehasaﬁxedandknownnumberofelements.A3-dimensionalpoint
isa3-tuple. AnCMYKcolorcodeisa4-tuple. Thesizeofthe tuplecan’tchangewithoutfundamentally
redeﬁningtheproblemwe’resolving.
AtupleisanimmutablesequenceofPythonobjects. Sinceitisasequence,allofthecommonoperations
tosequencesapply. Sinceitisimmutable,itcannotbechanged. Twocommonquestionsthatarisearehow
toexpanda tupleandhowtoremoveobjectsfroma tuple.
Whensomeoneasksaboutchanginganelementinsidea tuple,eitheradding,removingorupdating,wehave
toremindthemthatthe list,coveredin Lists,isfordynamicsequencesofelements. A tupleisgenerally
appliedwhenthenumberofelementsisﬁxedbythenatureoftheproblem.
Thistupleprocessing even pervades the way functions are deﬁned. We can have positional parameters
collectedintoa tuple,somethingwe’llcoverin Advanced Parameter Handling F or F unctions .
14.2 T uple Literal Values
Atupleliteraliscreatedbysurroundingobjectswith‘ ()’andseparatingtheitemswithcommas(‘ ,’). An
emptytupleissimple‘ ()’.
AninterestingquestionishowPythontellsanexpressionfroma1-tuple. A1-element tuplehasasingle
comma;forexample,‘ (1,)’. Anexpressionlacksthecomma: (1). Apleasantconsequenceofthisisthatan
extracommaattheendofevery tupleislegal;forexample,‘ (9, 10, 56, ) ’.
Examples:
155
Building Skills in Python, Release 2.6.5
xy=(2,3)
personal =('Hannah',14,5*12+6)
singleton =("hello",)
xyA2-tuplewithintegers.
personalA3-tuplewithastringandtwointegers
singletonA1-tuplewithastring. Thetrailing‘ ,’assuresthathisisatuple,notanexpression.
Theelementsofa tupledonothavetobethesametype. A tuplecanbeamixtureofanyPythondata
types,includingother tuples.
14.3 T uple Operations
Therearethreestandardsequenceoperations(‘ +’,‘*’,‘[]’)thatcanbeperformedwith tuplesaswellas
othersequences.
The‘+’operatorcreatesanew tupleastheconcatenationofthearguments. Here’sanexample.
>>>("chapter",8)+("strings","tuples","lists")
('chapter', 8, 'strings', 'tuples', 'lists')
The‘*’operatorbetween tupleandnumber(number‘ *’tupleortuple‘*’number)createsanew tuple
thatisanumberofrepetitionsoftheinput tuple.
>>>2*(3,"blind","mice")
(3, 'blind', 'mice', 3, 'blind', 'mice')
The‘[]’operatorselectsanitemoraslicefromthe tuple.
Therearetwoforms: thesingle-itemformandthesliceform.
•Thesingleitemformatis tuple[index]. Itemsarenumberedfrom0to‘ len(tuple)’. Itemsarealso
numberedinreversefrom-‘ len(tuple)’to-1.
•Thesliceformatis tuple[start:end]. Itemsfrom startto end-1arechosentocreateanew tuple
asasliceoftheoriginal tuple;therewillbe end−startitemsintheresulting tuple.
Ifstartisomitteditisthebeginningofthe tuple(position0).
Ifendisomitteditistheendofthe tuple(position-1).
Yes, you can omit both (‘ someTuple[:] ’) to make a copy of a tuple. This is a shal low copy: the
originalobjectsarenowmembersoftwodistincttuples.
>>>t=( (2,3), (2,"hi"), (3,"mom"),2+3j,6.02E23 )
>>>t[2]
(3, 'mom')
>>>t[:3]
((2, 3), (2, 'hi'), (3, 'mom'))
>>>t[3:]
((2+3j), 6.02e+23)
>>>t[-1]
6.02e+23
>>>t[-3:]
((3, 'mom'), (2+3j), 6.02e+23)
156 Chapter 14. T uples
Building Skills in Python, Release 2.6.5
14.4 T uple Comparison Operations
Thestandardcomparisons(‘ <’,‘<=’,‘>’,‘>=’,‘==’,‘!=’,in,notin)workexactlythesameamong tuple
objectsastheydoamong stringandothersequences. The tuplepbjectsarecomparedelementbyelement.
Ifthecorrespondingelementsarethesametype,ordinarycomparisonrulesareused. Ifthecorresponding
elementsarediﬀerenttypes,thetypenamesarecompared,sincethereisalmostnootherrationalbasisfor
comparison.
>>>a=(1,2,3,4,5)
>>>b=(9,8,7,6,5)
>>>a<b
True
>>>3ina
True
>>>3inb
False
Here’salongerexample.
redblack.py
#!/usr/bin/env python
importrandom
n=random.randrange( 38)
ifn==0:
print'0','green'
elifn==37:
print'00','green'
elifnin(1,3,5,7,9,12,14,16,18,19,21,23,25,27,30,32,34,36):
printn,'red'
else:
printn,'black'
1.Weimport random.
2.Wecreatearandomnumber, nintherange0to37.
3.Wecheckfor0and37asspecialcasesofsingleanddoublezero.
4.Ifthenumberisinthe tupleofredspacesontheroulettelayout,thisisprinted.
5.Ifnoneoftheotherrulesaretrue,thenumberisinoneoftheblackspaces.
14.5 T uple Statements
Thereareanumberofstatementsthathavespeciﬁcfeaturesrelatedto tupleobjects.
The Assignment Statement . There is a variation on the assignmentstatement called a multiple-
assignmentstatementthatworksnicelywith tuples. Welookedatthisin Multiple Assignment Statement .
Multiplevariablesaresetbydecomposingtheitemsinthe tuple.
Forexample:
14.4. T uple Comparison Operations 157
Building Skills in Python, Release 2.6.5
>>>x, y=(1,2)
>>>x
1
>>>y
2
An essential ingredient here is that a tuplehas a ﬁxed and known number of elements. For example a
2-dimensionalgeometricpointmighthavea tuplewith xand y. A3-dimensionalpointmightbea tuple
with x,y,and z.
Thisworkswellbecausetherightsideoftheassignmentstatementisfullyevaluatedbeforetheassignments
areperformed. Thisallowsthingslikeswappingthevaluesintwovariableswith‘ x,y=y,x’.
TheforStatement . Theforstatementwillstepthoughallelementsofasequence.
Forexample:
s=0
foriin(1,3,5,7,9,12,14,16,18,19,21,23,25,27,30,32,34,36):
s+=i
print"total",s
Thiswillstepthrougheachnumberinthegiventuple.
There are three built-in functions that will transform a tuple into another sequence. The enumerate(),
sorted()andreversed()functionswillprovidetheitemsofthetuplewiththeirindex,insortedorderor
inreverseorder.
14.6 T uple Built-in Functions
Thetuple()functioncreatesatupleoutofanothersequenceobject.
tuple(sequence)
Createatuplefromanothersequence. Thiswillconvert listorstrtoatuple.
Functionswhichapplytotuples,butaredeﬁnedelsewhere.
•len(). Fortuples,thisfunctionreturnsthenumberofitems.
>>>len( (1,1,2,3) )
4
>>>len( () )
0
•max(). Fortuples,thisfunctionreturnsthemaximumitem.
>>>max( (1,9973,2) )
9973
•min(). Fortuples,thisfunctionreturnstheminimumitem.
•sum(). Fortuples,thisfunctionsumstheindividualitems.
>>>sum( (1,9973,2) )
9976
•any(). Fortuples,Return Trueifthereexistsanyitemwhichis True.
158 Chapter 14. T uples
Building Skills in Python, Release 2.6.5
>>>any( (0,None,False) )
False
>>>any( (0,None,False,42) )
True
>>>any( (1,True) )
True
•all(). Fortuples,Return Trueifallitemsare True.
>>>all( (0,None,False,42) )
False
>>>all( (1,True) )
True
•enumerate(). Iteratethroughthetuplereturning2-tuplesof‘ ( index, item ) ’.
Ineﬀect,thisfunction“enumerates”alltheitemsinasequence:itprovidesanumberandeachelement
oftheoriginal sequenceina2-tuple.
fori, xinsomeTuple:
print"position ", i,"has value ", x
Considerthefollowing.
>>>a=(3.1415926 ,"Words", (2+3j) )
>>>tuple(enumerate ( a ) )
((0, 3.1415926000000001), (1, 'Words'), (2, (2+3j)))
Wecreateda tuplefromtheenumeration. Thisshowsthateachitemoftheenumerationisa2-tuple
withtheindexnumberandanitemfromtheoriginaltuple.
•sorted(). Iteratethroughthetupleinsortedorder.
>>>tuple(sorted( (9,1,8,2,7,3) ))
(1, 2, 3, 7, 8, 9)
>>>tuple(sorted( (9,1,8,2,7,3), reverse =True))
(9, 8, 7, 3, 2, 1)
•reversed(). Iteratethroughthetupleinreverseorder.
>>>tuple(reversed ( (9,1,8,2,7,3) ) )
(3, 7, 2, 8, 1, 9)
Thefollowingfunctionreturnsatuple.
divmod(x, y ) -> ( div, mod )
Returna2-tuplewith‘ ((x-x%y)/y, x%y) ’. Thereturnvalueshavetheinvariant: div×y+mod =x.
Thisisthequotientandtheremainderindivision.
Thedivmod()functionsisoftencombinedwithmultipleassignment. Forexample:
>>>q,r=divmod(355,113)
>>>q
3
>>>r
16
14.6. T uple Built-in Functions 159
Building Skills in Python, Release 2.6.5
>>>q*113+r
355
14.7 T uple Exercises
Theseexercisesimplementsomebasicstatisticalalgorithms. ForsomebackgroundontheSigmaoperator,
,see Digression on The Sigma Operator .
1.BlocksofStock . Ablockofstockasanumberofattributes,includingapurchasedate,apurchase
price,anumberofshares,andatickersymbol. Wecanrecordthesepiecesofinformationina tuple
foreachblockofstockanddoanumberofsimpleoperationsontheblocks. Let’sdreamthatwehave
thefollowingportfolio.
PurchaseDate PurchasePrice SharesSymbol:CurrentPrice”
25Jan2001 43.50 25CAT92.45
25Jan2001 42.80 50DD51.19
25Jan2001 42.10 75EK34.87
25Jan2001 37.58 100GM37.58
Wecanrepresenteachblockofstockasa5-tuplewithpurchasedate,purchaseprice,shares,ticker
symbolandcurrentprice.
portfolio =[ ("25-Jan-2001 ",43.50,25,'CAT',92.45),
("25-Jan-2001 ",42.80,50,'DD',51.19),
("25-Jan-2001 ",42.10,75,'EK',34.87),
("25-Jan-2001 ",37.58,100,'GM',37.58)
]
Developafunctionthatexamineseachblock,multipliessharesbypurchasepriceanddeterminesthe
totalpurchasepriceoftheportfolio.
Developasecondfunctionthatexamineseachblock,multipliessharesbypurchasepriceandsharesby
currentpricetodeterminethetotalamountgainedorlost.
2.Mean. Computing themean of a listofvaluesis relativelysimple. Themean is thesum ofthe
valuesdividedbythenumberofvaluesinthe list. Sincethestatisticalformulaissocloselyrelated
totheactualloop,we’llprovidetheformula,followedbyanoverviewofthecode.
µx=∑
0i<nxi
n
[Thecryptic-looking µxisashort-handfor“meanofvariablex”.]
The deﬁnition of the mathematical operator leads us to the following method for computing the
mean:
Computing Mean
(a)Initialize. Setsum, s,tozero
(b)Reduce. Foreachvalue, i,intherange0tothenumberofvaluesinthelist, n:
Sets←s+xi.
160 Chapter 14. T uples
Building Skills in Python, Release 2.6.5
(c)Result. Return s÷n.
3.Standard Deviation . The standard deviation can be done a few ways, but we’lluse the formula
shownbelow. Thiscomputesadeviationmeasurementasthesquareofthediﬀerencebetweeneach
sampleandthemean. Thesumofthesemeasurementsisthendividedbythenumberofvaluestimes
thenumberofdegreesoffreedomtogetastandardizeddeviationmeasurement. Again,theformula
summarizestheloop,sowe’llshowtheformulafollowedbyanoverviewofthecode.
σx=vuut∑
0i<n(xi−µx)2
n−1
[Thecryptic-looking σxisshort-handfor“standarddeviationofvariablex”.]
The deﬁnition of the mathematical operator leads us to the following method for computing the
standarddeviation:
Computing Standard Deviation
(a)Initialize. Computethemean, m.
Initializesum, s,tozero.
(b)Reduce. Foreachvalue, xiinthelist:
Computethediﬀerencefromthemean, d←xi−µx.
Sets←s+d2.
(c)Variance. Compute the variance ass
n 1. The n−1. factor reﬂects the statistical notion of
“degreesoffreedom”,whichisbeyondthescopeofthisbook.
(d)StandardDeviation . Returnthesquarerootofthevariance.
Themathmodulecontainsthe math.sqrt()funtion. Forsomeadditionalinformation,see The math
Module.
14.8 Digression on The Sigma Operator
Forthoseprogrammersnewtostatistics,thissectionprovidesbackgroundontheSigmaoperator, .
Theusualpresentationofthesummationoperatorlookslikethis.
n∑
i=1f(i)
The operatorhasthreepartstoit. Belowitisaboundvariable, iandthestartingvaluefortherange,
writtenas i= 1. Aboveitistheendingvaluefortherange,usuallysomethinglike n. Totherightissome
functiontoexecuteforeachvalueoftheboundvariable. Inthiscase,agenericfunction, f(i). Thisisread
as“sum f(i)for iintherange1to n“.
Thiscommondeﬁnitionof usesaclosedrange;onethatincludestheendvaluesof1and n. This,however,
isnotahelpfuldeﬁnitionforsoftware. Itisslightlysimplertodeﬁne tostartwithzeroanduseahalf-open
interval. Itstillexactly nelements,including0and n-1;mathematically, 0≤i < n.
For software design purposes, we prefer the following notation, but it is not often used. Since most sta-
tisticalandmathematicaltextsuse1-basedindexing, somecareisrequiredwhentranslatingformulaeto
14.8. Digression on The Sigma Operator 161
Building Skills in Python, Release 2.6.5
programminglanguagesthatuse0-basedindexing.
∑
0i<nf(i)
Thisshowstheboundvariable( i)andtherangebelowtheoperator. Itshowsthefunctiontoexecuteon
therightoftheoperator.
StatisticalAlgorithms . Ourtwostatisticalalgorithmshaveaformmorelikethefollowing. Inthisweare
applyingsomefunction, f,toeachvalue, xiofanarray.
∑
0i<nf(xi)
Whencomputingthemean,therethefunctionappliedtoeachvaluedoesnothing.Whencomputingstandard
deviation,thefunctionappliedinvolvessubtractingandmultiplying.
Wecantransformthisdeﬁnitiondirectlyintoa forloopthatsetstheboundvariabletoallofthevaluesin
therange,anddoessomeprocessingoneachvalueofthesequenceofvalues.
ThisisthePythonimplementionof . Thiscomputestwovalues,thesum, sum,andthenumberofelements,
n.
Python Sigma Iteration
sum= 0
for x_i in aSequence:
fx_i = some processing of x_i
sum += fx_i
n= len(aSequence)
1.Executethebodyoftheloopforallvaluesof x_iinthesequence aSequence. Thesequencecanbea
tuple,listorothersequentialcontainer.
2.Forsimplemeancalculation,the fx_istatementdoesnothing. Forstandarddeviation,however,this
statementcomputesthemeasureofdeviationfromtheaverage.
3.Wesumthe x_ivaluesforameancalculation.Wesum fx_ivaluesforastandarddeviationcalculation.
162 Chapter 14. T uples
CHAPTER
FIFTEEN
LISTS
We’lllookat listfromanumberofviewpoints: semantics,literalvalues,operations,comparisonoperators,
statements,built-infunctionsandmethods.
15.1 List Semantics
AlistisacontainerforvariablelengthsequenceofPythonobjects. A listismutable,whichmeansthat
itemswithinthe listcanbechanged. Also,itemscanbeaddedtothe listorremovedfromthe list.
Sincealistisasequence,allofthecommonoperationstosequencesapply.
Sometimeswe’llseea listwithaﬁxednumberofelements,likeatwo-dimensionalpointwithtwoelements,
xand y. Aﬁxed-length listmaynotbetherightchoice;a tuple,coveredin T uplesisusuallybetterfor
staticsequencesofelements.
AgreatdealofPython’sinternalsare list-based. Theforstatement,inparticular,expectsasequence,
and we often create a listby using the range()function. When we split a stringusing the split()
method,wegeta listofsubstrings.
15.2 List Literal Values
Alistliteraliscreatedbysurroundingobjectswith‘ []’andseparatingtheitemswithcommas(‘ ,’). A
listcanbecreated,expandedandreduced. Anempty listissimply‘ []’. Aswith tuple,anextracomma
attheendofthe listisgracefullyignored.
Examples:
myList=[2,3,4,9,10,11,12]
history =[ ]
Theelementsofa listdonothavetobethesametype. A listcanbeamixtureofanyPythondata
types,including lists,tuples,stringsandnumerictypes.
Alistpermitsasophisticatedkindofdisplaycalleda comprehension . We’llrevisitthisinsomedepthin
List Comprehensions . Asateaser,considerthefollowing:
>>>[2*i+1foriinrange(6) ]
[1, 3, 5, 7, 9, 11]
163
Building Skills in Python, Release 2.6.5
Thisstatementcreatesa listusingalistcomprehension. Acomprehensionstartswithacandidate list
(‘range(6)’,inthisexample)andderivesthe listvaluesfromthecandidate list(using‘2*i+1’inthis
example). Agreatdealofpowerisavailableincomprehensions,butwe’llsavethedetailsforalatersection.
15.3 List Operations
Thethreestandardsequenceoperations(‘ +’,‘*’,‘[]’)canbeperformedwith list,aswellasothersequences
liketupleandstring.
The‘+’operatorcreatesanew listastheconcatenationofthearguments.
>>>["field"]+[2,3,4]+[9,10,11,12]
['field', 2, 3, 4, 9, 10, 11, 12]
The‘*’operatorbetween listandnumbers(number‘ *’listorlist‘*’number)createsanew listthat
isanumberofrepetitionsoftheinput list.
>>>2*["pass","don't","pass"]
['pass', "don't", 'pass', 'pass', "don't", 'pass']
The‘[]’operatorselectsancharacteroraslicefromthe list. Therearetwoforms: thesingle-itemform
andthesliceform.
•Thesingleitemformatis list[index]. Itemsarenumberedfrom0to‘ len(list)’. Itemsarealso
numberedinreversefrom-‘ len(list)’to-1.
•Thesliceformatis list[start:end]. Itemsfrom startto end-1arechosentocreateanew listasa
sliceoftheoriginal list;therewillbe end−startitemsintheresulting list.
Ifstartisomitteditisthebeginningofthe list(position0).
Ifendisomitteditistheendofthe list(position-1).
Yes,youcanomitboth(‘ someList[:]’) tomakeacopyofalist. Thisisa shal low copy: theoriginal
objectsarenowmembersoftwodistinctlists.
Inthefollowingexample,we’veconstructeda listwhereeachelementisa tuple. Eachtuplecouldbea
pairofdice.
>>>l=[(6,2), (5,4), (2,2), (1,3), (6,5), (1,4)]
>>>l[2]
(2, 2)
>>>l[:3]
[(6, 2), (5, 4), (2, 2)]
>>>l[3:]
[(1, 3), (6, 5), (1, 4)]
>>>l[-1]
(1, 4)
>>>l[-3:]
[(1, 3), (6, 5), (1, 4)]
15.4 List Comparison Operations
Thestandardcomparisons(‘ <’, ‘<=’, ‘>’, ‘>=’, ‘==’, ‘!=’,in,notin)workexactlythesameamong list,
tupleandstringsequences. The listitems are compared element by element. If the corresponding
164 Chapter 15. Lists
Building Skills in Python, Release 2.6.5
elementsarethesametype,ordinarycomparisonrulesareused. Ifthecorrespondingelementsarediﬀerent
types,thetypenamesarecompared,sincethereisnootherrationalbasisforcomparison.
d1=random.randrange( 6)+1
d2=random.randrange( 6)+1
ifd1+d2in[2,12]+[3,4,9,10,11]:
print"field bet wins on ", d1+d2
else:
print"field bet loses on ", d1+d2
Thiswillcreatetworandomnumbers,simulatingarollofdice. Ifthenumberisinthe listofﬁeldbets,
thisisprinted. Notethatweassembletheﬁnal listofﬁeldbetsfromtwoother listobjects. Inalarger
applicationprogram,wemightseparatethediﬀerentwinner listinstancesbasedondiﬀerentpayoutodds.
15.5 List Statements
Thereareanumberofstatementsthathavespeciﬁcfeaturesrelatedto listobjects.
TheAssignmentStatement . Thevariationonthe assignmentstatementcalled multiple-assignment
statementalsoworkswith lists. Welookedatthisin Multiple Assignment Statement . Multiplevariables
aresetbydecomposingtheitemsinthe list.
>>>x, y=[1,"hi"]
>>>x
1
>>>y
'hi'
This will only work of the listhas a ﬁxed and known number of elements. This is more typical when
workingwitha tuple,whichisimmutable,ratherthana list,whichcanvaryinlength.
TheforStatement . Theforstatementwillstepthoughallelementsofasequence.
s=0
foriin[2,3,5,7,11,13,17,19]:
s+=i
print"total",s
Whenweintroducedthe forstatementin Iterative Processing: The for Statement ,weshowedthe range()
function;thisfunctioncreatesa list. Wecanalsocreatea listwithaliteralorcomprehension. We’ve
lookedatsimpleliteralsabove. We’lllookatcomprehensionsbelow.
ThedelStatement . Thedelstatementremovesitemsfroma list. Forexample
>>>i=range(10)
>>>deli[0], i[2], i[4], i[6]
>>>i
[1, 2, 4, 5, 7, 8]
Thisexamplerevealshowthe delstatementworks.
Theivariablestartsasthe list[0, 1, 2, 3, 4, 5, 6, 7, 8, 9 ] .
1.Remove‘ i[0]’andthevariableis [1, 2, 3, 4, 5, 6, 7, 8, 9] .
2.Remove‘ i[2]’(thevalue3)fromthisnew list,andget [1, 2, 4, 5, 6, 7, 8, 9] .
15.5. List Statements 165
Building Skills in Python, Release 2.6.5
3.Remove‘ i[4]’(thevalue6)fromthisnew listandget[1, 2, 4, 5, 7, 8, 9] .
4.Finally,remove‘ i[6]’andget [1, 2, 4, 5, 7, 8] .
15.6 List Built-in Functions
Thelist()functioncreatesalistoutofanothersequenceobject.
list(sequence)
Createalistfromanothersequence. Thiswillconvert tupleorstrtoalist.
Functionswhichapplytotuples,butaredeﬁnedelsewhere.
•len(). Forlists,thisfunctionreturnsthenumberofitems.
>>>len( [1,1,2,3] )
4
>>>len( [] )
0
•max(). Forlists,thisfunctionreturnsthemaximumitem.
>>>max( [1,9973,2] )
9973
•min(). Forlists,thisfunctionreturnstheminimumitem.
•sum(). Forlists,thisfunctionsumstheindividualitems.
>>>sum( [1,9973,2] )
9976
•any(). Forlists,Return Trueifthereexistsanyitemwhichis True.
>>>any( [0,None,False] )
False
>>>any( [0,None,False,42] )
True
>>>any( [1,True] )
True
•all(). Forlists,Return Trueifallitemsare True.
>>>all( [0,None,False,42] )
False
>>>all( [1,True] )
True
•enumerate(). Iteratethroughthelistreturning2-tuplesof‘ ( index, item ) ’.
Ineﬀect,thisfunction“enumerates”alltheitemsinasequence:itprovidesanumberandeachelement
oftheoriginal sequenceina2-tuple.
fori, xinsomeList:
print"position ", i,"has value ", x
Considerthefollowinglistoftuples.
166 Chapter 15. Lists
Building Skills in Python, Release 2.6.5
>>>a=[ ("pi",3.1415946 ),("e",2.718281828 ),("mol",6.02E23) ]
>>>list(enumerate ( a ) )
[(0, ('pi', 3.1415945999999999)), (1, ('e', 2.7182818279999998)
02e+23))]
>>>fori, tinenumerate ( a ):
... print"item",i,"is",t
...
item 0 is ('pi', 3.1415945999999999)
item 1 is ('e', 2.7182818279999998)
item 2 is ('mol', 6.02e+23)
•sorted(). Iteratethroughthelistinsortedorder.
>>>list(sorted( [9,1,8,2,7,3] ))
[1, 2, 3, 7, 8, 9]
>>>tuple(sorted( [9,1,8,2,7,3], reverse =True))
[9, 8, 7, 3, 2, 1]
•reversed(). Iteratethroughthelistinreverseorder.
>>>tuple(reversed ( [9,1,8,2,7,3] ) )
[3, 7, 2, 8, 1, 9]
Thefollowingfunctionreturnsalist.
range([start], stop, [step] )
Theargumentsmustbeplainintegers. Ifthe stepargumentisomitted,itdefaultsto1. Ifthe start
argumentisomitted,itdefaultsto0. stepmustnotbezero(orelse ValueErrorisraised).
Thefullformreturnsa listofplainintegers[ start,start +step,start + 2×step,...].
Ifstepispositive,thelastelementisthelargest start +i×step < stop;;ifstepisnegative,thelast
elementisthelargest start +i×step > stop.
15.7 List Methods
Alistobjecthasanumberofmembermethods. Thesecanbegroupedarbitrarilyintomutators,which
changethe list,transformerswhichcreatesomethingnewfromthe list,andandaccessors,whichreturns
afactabouta list.
Thefollowing listmutatorsupdatea listobject. Generally,thesedonotreturnavalue.
Inthecaseofthe pop()method,itbothreturnsinformationaswellasmutatesthe list.
append(object)
Update listbyappending objecttoendofthe list.
extend(list)
Extend listbyappending listelements.Notethediﬀerencefrom append(),whichtreatstheargument
asasingle listobject.
insert(index, object )
Updatelist lbyinserting objectbeforeposition index. Ifindexisgreaterthan‘ len(list)’,the
objectissimplyappended. Ifindexislessthanzero,theobjectisprepended.
15.7. List Methods 167
Building Skills in Python, Release 2.6.5
pop([index=-1] )
Removeandreturnitemat index(defaultlast,-1)in list. Anexceptionisraisedifthe listisalready
empty.
remove(value)
Removeﬁrstoccurrenceof valuefrom list. Anexceptionisraisedifthevalueisnotinthe list.
reverse()
Reversetheitemsofthe list. Thisisdone“inplace”,itdoesnotcreateanew list. Thereisnoreturn
value.
sort([key], [reverse=F alse] )
Sorttheitemsofthe list. Thisisdone“inplace”,itdoesnotcreateanew list.
If thereversekeyword parameter is provided and set to True, the tuple is sorted into descending
order.
Thekeyparameterisusedwhentheitemsinthetuplearen’tsimplysortedusingthedefaultcomparison
operators. The keyfunctionmustreturntheﬁeldstobecomparedselectedfromtheunderlyingitems
inthetuple.
We’lllookatthisindetailin F unctional Programming with Col lections .
Thefollowingaccessormethodsprovideinformationabouta list.
count(value)
Returnnumberofoccurrencesof valuein list.
index(value)
Returnindexofﬁrstoccurrenceof valuein list.
Stacks and Queues . Thelist.append() andlist.pop()functions can be used to create a standard
push-down stack,orlast-in-ﬁrst-out(LIFO) list. Theappend()methodplacesanitemattheendofthe
list(ortopofthestack),wherethe pop()methodcanremoveitandreturnit.
>>>stack=[]
>>>stack.append(1)
>>>stack.append( "word")
>>>stack.append( ( "a","2-tuple") )
>>>stack.pop()
('a', '2-tuple')
>>>stack.pop()
'word'
>>>stack.pop()
1
>>>len(stack)
0
>>>stack.pop()
Traceback (most recent call last):
File"<stdin>" , line1, in <module>
IndexError : pop from empty list
Thelist.append() andlist.pop()functionscanbeusedtocreateastandard queue,orﬁrst-in-ﬁrst-out
(FIFO)list. Theappend()methodplacesanitemattheendofthequeue. Acallto‘ pop(0)’removesthe
ﬁrstitemfromthequeueandreturnsit.
>>>queue=[]
>>>queue.append( 1)
>>>queue.append( "word")
>>>queue.append( ( "a","2-tuple") )
168 Chapter 15. Lists
Building Skills in Python, Release 2.6.5
>>>queue.pop(0)
1
>>>queue.pop(0)
'word'
>>>queue.pop(0)
('a', '2-tuple')
>>>len(queue)
0
>>>queue.pop(0)
Traceback (most recent call last):
File"<stdin>" , line1, in <module>
IndexError : pop from empty list
15.8 Using Lists as Function Parameter Defaults
It’s very, very important to note that default values must be immutable objects. Recall that numbers,
strings,None,andtupleobjectsareimmutable.
We note that lists as well as sets and dictionaries are mutable, and cannot be used as default values for
functionparameters.
Considerthefollowingexampleofwhatnottodo.
>>>defappend2( someList =[] ):
... someList .append(2)
... returnsomeList
...
>>>looks_good =[]
>>>append2(looks_good)
[2]
>>>append2(looks_good)
[2, 2]
>>>looks_good
[2, 2]
>>>
>>>
>>>not_good =append2()
>>>not_good
[2]
>>>worse=append2()
>>>worse
[2, 2]
>>>not_good
[2, 2]
1.Wedeﬁnedafunctionwhichhasadefaultvaluethat’samutableobject. Thisissimpleabadpro-
grammingpracticeinPython.
2.Weusedthisfunctionwithalistobject, looks_good. Thefunctionupdatedthelistobjectasexpected.
3.Weusedthefunction’sdefaultvaluetocreate not_good. Thefunctionappendedtoanemptylistand
returnedthisnewlistobject.
Itturnsoutthatthefunctionupdatedthemutabledefaultvalue,also.
4.Whenweusethefunction’sdefaultvalueagain, with worse, thefunctionusestheupdateddefault
valueandupdatesitagain.
15.8. Using Lists as Function Parameter Defaults 169
Building Skills in Python, Release 2.6.5
Bothnot_goodandworsearereferencestothesamemutableobjectthatisbeingupdated.
Toavoidthis,donotusemutablevaluesasdefaults. Dothisinstead.
defappend2( someList =None):
ifsomeList isNone:
someList =[]
someList .append(2)
returnsomeList
Thiscreatesafreshnewmutableobjectasneeded.
15.9 List Exercises
1.AccumulatingDistinctValues . Thisusesthe Bounded Linear Search algorithmtolocateduplicate
valuesinasequence. Thisisapowerfultechniquetoeliminatesortingfromawidevarietyofsummary-
typereports. Failuretousethisalgorithmleadstoexcessiveprocessinginmanytypesofapplications.
Distinct Values of a Sequence, seq
(a)InitializeDistinctValues . Set dv←list().
(b)Loop. Foreachvalue, v,in seq.
We’llusetheBoundedLinearSearchtoseeif voccursin dv.
i.Initialize. Set i←0.
Append vtothelist dv.
ii.Search. while dv[i]̸=v: increment i.
Atthispoint dv[i] =v. Thequestioniswhether i=len(dv)ornot.
iii.NewValue?. ifi=len(dv):visdistinct.
iv.ExistingValue? . ifi̸=len(dv):visaduplicateof dv[i].
Delete dv[−1],thevalueweadded.
(c)Result. Returnarray dv,whichhasdistinctvaluesfrom seq.
You may also notice that this fancy Bounded Linear Search is suspiciously similar to the index()
methodfunctionofalist. Rewritethisusing‘ uniq.index’insteadoftheBoundedLinearSearchin
step2.
Whenwelookthe setcollection,you’llseeanotherwaytotacklethisproblem.
2.BinarySearch . ThisisnotasuniversallyusefulastheBoundedLinearSearch(above)becauseit
requiresthedatabesorted.
Binary Search a sorted Sequence, seq , for a target value, tgt
(a)Initialize.l, h←0,len(seq).
m←(l+h)÷2. Thisisthemidpointofthesortedsequence.
170 Chapter 15. Lists
Building Skills in Python, Release 2.6.5
(b)DivideandConquer . While l+ 1< hand seq[m]̸=tgt.
Iftgt < seq [m]:h←m. Move htothemidpoint.
Iftgt > seq [m]:l←m+ 1. Move ltothemidpoint.
m←(l+h)÷2. Computeamidpointofthenew,smallersequence.
(c)Result. Iftgt=seq[m]: return m
Iftgt̸=seq[m]: return-1asacodefor“notfound”.
3.Quicksort. Thesuper-fastsortroutine
As a series of loops it is rather complex. As a recursion it is quite short. This is the same basic
algorithmintheClibraries.
Quicksortproceedsbypartitioningthe listintotworegions: onehasallofthehighvalues,theother
hasallthelowvalues. Eachoftheseregionsisthenindividuallysortedintoorderusingthequicksort
algorithm. Thismeanstheeachregionwillbesubdividedandsorted.
Fornow,we’llsortanarrayofsimplenumbers. Later,wecangeneralizethistosortgenericobjects.
Quicksort a List, abetween elements lo and hi
(a)Partition
i.Initialize.ls, hs←lo, hi. Setupforpartitioningbetween lsand hs.
middle←(ls+hs)÷2.
ii.SwapToPartition . while ls < hs:
Ifa[ls].key≤a[middle ].key: increment lsby 1. Move the low boundary of the
partitioning.
Ifa[ls].key > a [middle ].key: swapthevalues a[ls]a[middle ].
Ifa[hs].key≥a[middle ].key: decrement hsby 1. Move the high boundary of the
partitioning.
Ifa[hs].key < a [middle ].key:,swapthevalues a[hs]a[middle ].
(b)QuicksortEachPartition .
QuickSort( a,lo,middle)
QuickSort( a,middle+1, hi)
4.RecursiveSearch . Thisisalsoabinarysearch: itworksusingadesigncalled“divideandconquer”.
Ratherthansearchthewhole list,wedivideitinhalfandsearchjusthalfthe list. Thisversion,
howeverisdeﬁnedwitharecusivefunctioninsteadofaloop. Thiscanoftenbefasterthanthelooping
versionshownabove.
Recursive Search a List, seq for a target, tgt , in the region between elements lo
and hi.
(a)EmptyRegion? Iflo+ 1≥hi: return-1asacodefor“notfound”.
(b)MiddleElement .m←(lo+hi)÷2.
(c)Found?Ifseq[m] =tgt: return m.
15.9. List Exercises 171
Building Skills in Python, Release 2.6.5
(d)LowerHalf? Ifseq[m]< tgt: returnrecursiveSearch( seq,tgt,lo,m)
(e)UpperHalf? Ifseq[m]> tgt: returnrecursiveSearch( seq,tgt,m+1, hi)
5.SieveofEratosthenes . Thisisanalgorithmwhichlocatesprimenumbers. Aprimenumbercan
onlybedividedevenlyby1anditself. Welocateprimesbymakingatableofallnumbers,andthen
crossingoutthenumberswhicharemultiplesofothernumbers. Whatisleftmustbeprime.
Sieve of Eratosthenes
(a)Initialize. Createalist, primeof5000booleans,all True,initially.
p←2.
(b)Iterate. While 2≤p < 5000.
i.FindNextPrime . Whilenotprime [p]and 2≤p < 5000:
Increment pby1.
ii.RemoveMultiples . Atthispoint, pisprime.
Setk←p+p.
while k < 5000.
prime [k]←False.
Increment kby p.
iii.Nextp. Increment pby1.
(c)Report. Atthispoint,forall p,if prime[p]istrue, pisprime.
while 2≤p < 5000:
ifprime [p]: print p
Thereportingstepisa“ﬁlter”operation. We’recreatingalistfromasourcerangeandaﬁlterrule.
Thisisidealforalistcomprehension. We’lllookatthesein List Comprehensions .
Formally,wecansaythattheprimesarethesetofvaluesdeﬁnedby primes ={p|0p<5000ifprime p}.
Thisformalismlooksalittlebitlikealistcomprehension.
6.PolynomialArithmetic . Wecanrepresentnumbersaspolynomials. Wecanrepresentpolynomials
asarraysoftheircoeﬀicients. Thisiscoveredindetailin [Knuth73],section2.2.4algorithmsAandM.
Example: 4x3+ 3x+ 1hasthefollowingcoeﬀicients: ‘ ( 4, 0, 3, 1 ) ’.
Thepolynomial 2x2−3x−4isrepresentedas‘ ( 2, -3, -4 ) ’.
Thesumoftheseis 4x3+ 2x2−3;‘( 4, 2, 0, -3 ) ’.
Theproducttheseis 8x5−12x4−10x3−7x2−15x−4;‘( 8, -12, -10, -7, -15, -4 ) ’.
Youcanapplythistolargedecimalnumbers. Inthiscase, xis10,andthecoeﬀicientsmustallbe
between0and x-1. Forexample, 1987 = 1 x3+ 9x2+ 8x+ 7,when x= 10.
Add Polynomials, p,q
(a)ResultSize.rsz←thelargerof len (p)and len (q).
(b)PadP?Iflen (p)< rsz:
172 Chapter 15. Lists
Building Skills in Python, Release 2.6.5
Set p1toatupleof rsz−len(p)zeros+ p.
Else: Set p1to p.
(c)PadQ?Iflen (q)< rsz:
Set q1tatupleof rsz−len(q)zeroes+ q.
Else,Set q1to q.
(d)Add. Addmatchingelementsfrom p1and q1tocreateresult, r.
(e)Result. Return rasthesumof pand q.
Multiply Polynomials, x,y
(a)ResultSize.rsz←len(x) +len(y).
Initializetheresultlist, r,toallzeros,withasizeof rsz.
(b)Forallelementsofx . while 0≤i <len(x):
Forallelementsofy . while 0≤j <len(y):
Setr[i+j] =r[i+j] +x[i]×y[j].
(c)Result. Returnatuplemadefrom rastheproductof xand y.
7.RandomNumberEvaluation . Beforeusinganewrandomnumbergenerator,itiswisetoevaluate
thedegreeofrandomnessinthenumbersproduced. Avarietyofcleveralgorithmslookforcertain
typesofexpecteddistributionsofnumbers, pairs, triples, etc. Thisisoneofmanyrandomnumber
tests.
Userandom.random() togenerateanarrayofrandomsamples. Thesenumberswillbeuniformover
theinterval0..1
Distribution test of a sequence of random samples, U
(a)Initialize. Initialize counttoalistof10zeros.
(b)ExamineSamples . Foreachsamplevalue, v,intheoriginalsetof1000randomsamples, U.
i.CoerceIntoRange . Set x←⌊v×10⌋. Multiplyby10andtruncateandintegertogetaa
newvalueintherange0to9.
ii.Count. Increment count[x]by1.
(c)Report. Weexpecteachcounttobe1/10thofouravailablesamples. Weneedtodisplaythe
actualcountandthe%ofthetotal. Wealsoneedtocalculatethediﬀerencebetweentheactual
countandtheexpectedcount,anddisplaythis.
8.DutchNationalFlag . Achallengingproblem,oneofthehardestinthisset. ThisisfromEdsger
Dijkstra’sbook, A Discipline of Programming [Dijkstra76].
Imagineaboardwitharowofholesﬁlledwithred,white,andbluepegs. Developanalgorithmwhich
willswappegstomakethreebandsofred,white,andblue(liketheDutchﬂag). Youmustalsosatisfy
thisadditionalconstraint: eachpegmustbeexaminedexactlyonce.
Withouttheadditionalconstraint,thisisarelativelysimplesortingproblem.Theadditionalconstraint
requiresthatinsteadofasimplesortwhichpassesoverthedataseveraltimes,weneedamoreclever
sort.
15.9. List Exercises 173
Building Skills in Python, Release 2.6.5
Hint: Youwillneedfourpartitionsinthearray. Initially,everypegisinthe“Unknown”partition.
Theotherthreepartitions(“Red”,“White”and“Blue”)areempty. Asthealgorithmproceeds,pegs
areswappedintotheRed,WhiteorBluepartitionfromtheUnknownpartition. Whenyouaredone,
theunknownpartitionisreducedtozeroelements,andtheotherthreepartitionshaveknownnumbers
ofelements.
174 Chapter 15. Lists
CHAPTER
SIXTEEN
MAPPINGS AND DICTIONARIES
Manyalgorithmsneedtomapakeytoadatavalue. ThiskindofmappingissupportedbythePython
dictionary, dict.We’lllookatdictionariesfromanumberofviewpoints:semantics,literalvalues,operations,
comparisonoperators,statements,built-infunctionsandmethods.
We are then in a position to look at two applications of the dictionary. We’ll look at how Python uses
dictionariesalongwithsequencestohandlearbitraryconnectionsofparameterstofunctionsin Advanced
Parameter Handling F or F unctions . Thisisaverysophisticatedsetoftoolsthatletusdeﬁnefunctionsthat
areveryﬂexibleandeasytouse.
16.1 Dictionary Semantics
Adictionary,calleda dict,mapsa keytoa value. ThekeycanbeanytypeofPythonobjectthatcomputes
aconsistenthashvalue. ThevaluereferencedbythekeycanbeanytypeofPythonobject.
There is a subtle terminology issue here. Python has provisions for creating a variety of diﬀerent types
of mappings. Only one type of mapping comes built-in; that type is the dict. The terms are almost
interchangeable. However, you may develop or download other types of mappings, so we’ll be careful to
focusonthe dictclass.
Workingwitha dictissimilartoworkingwithasequence. Itemsareinsertedintothe dict,foundinthe
dictandremovedfromthe dict. Adictobjecthasmembermethodsthatreturnasequenceofkeys,or
values,or( key,value)tuplessuitableforuseina forstatement.
Unlikeasequence, a dictdoesnotpreserveorder. Insteadoforder, a dictusesa hashingalgorithmto
identifyeachitem’splaceinthe dictwitharapidcalculationofthekey’shashvalue. Thebuilt-infunction,
hash()isusedtodothiscalculation. Itemsinthe dictareinsertedinanpositionrelatedtotheirkey’s
apparentlyrandomhashvalues.
SomeAlternateTerminology . Adictcanbethoughtofasacontainerof( key:value)pairs. Thiscan
beahelpfulwaytoimaginetheinformationinamapping. Eachpairinthelististhemappingfromakey
toanassociatedvalue.
Adictcanbecalledanassociativearray. Ordinaryarrays,typiﬁedbysequences,useanumericindex,but
adict‘sindexismadeupofthekeyobjects. Eachkeyisassociatedwith(or“mappedto”)theappropriate
value.
SomeConsequences . Eachkeyobjecthasahashvalue, whichisusedtoplacethevalueinthe dict.
Consequently,thekeysmusthaveconsistenthashvalues;theymustbeimmutableobjects. Youcan’tuse
list,dictorsetobjects as keys. You can use tuple,stringandfrozensetobjects, since they are
immutable. Additionally,whenwegettoclassdeﬁnitions(in Classes),wecanmakearrangementsforour
objectstoreturnanimmutablehashvalue.
175
Building Skills in Python, Release 2.6.5
Acommonprogrammingneedisaheterogeneouscontainerofdata. Databaserecordsareanexample. A
record in a database might have a boat’s name (as a string), the length overall (as a number) and an
inventoryofsails(a listofstrings). Oftenarecordlikethiswillhaveeachelement(knownasa ﬁeld)
identiﬁedbyname.
A C or C++ ‘ struct’ accomplishes this. This kind of named collection of data elements may be better
handled with a class (someting we’ll cover in Classes) or a named tuple (see collections). However, a
mappingisalsousefulformanagingthiskindofheterogeneousdatawithnamedﬁelds.
Notethatmanylanguagesmakerecorddeﬁnitionsastatically-deﬁnedcontainerofnamedﬁelds. APython
dictisdynamic,allowingustoaddﬁeldnamesatrun-time.
Acommonalternativetohashingisusingsomekindoforderedstructuretomaintainthekeys. Thismight
beatreeorlist,whichwouldleadtootherkindsofmappings. Forexample,thereisanordereddictionary,
inthePython collectionsmodule.
16.2 Dictionary Literal Values
Adictliteraliscreatedbysurroundingakey-valuelistwith‘ {}’;akeyisseparatedfromitsvaluewith‘ :’,
andthe‘key : value’pairsareseparatedwithcommas(‘ ,’). Anempty dictissimply‘ {}’. Aswith list
andtuple,anextra‘ ,’insidethe‘ {}’istolerated.
Examples:
diceRoll ={ (1,1):"snake eyes ", (6,6):"box cars "}
myBoat={"NAME":"KaDiMa","LOA":18,"SAILS":["main","jib","spinnaker "] }
theBets ={ }
diceRollThisisa dictwithtwoelements. Oneelementhasakeyofa tuple(1,1)andavalue
ofastring,"snake eyes" . Theotherelementhasakeyofa tuple(6,6)andavalueof
astring "box cars" .
myBoatThis variable is a dictwith three elements. One element has a key of the string
"NAME"and a value of the string "KaDiMa" . Another element has a key of the string
"LOA"andavalueoftheinteger 18. Thethirdelementhasakeyofthe string "SAILS"
andthevalueofa list["main", "jib", "spinnaker"] .
theBetsAnempty dict.
Thevaluesandkeysina dictdonothavetobethesametype. Keysmustbeatypethatcanproduceahash
value. Since listsanddictobjectsaremutable,theyarenotpermittedaskeys. Allothernon-mutable
types(especially string,frozensetandtuple)arelegalkeys.
16.3 Dictionary Operations
Adictonlypermitsasingleoperation: ‘ []’. Thisisusedtoadd,changeorretrieveitemsfromthe dict.
Theslicingoperationsthatapplytosequencesdon’tapplytoa dict.
Examplesof dictoperations.
>>>d={}
>>>d[2]=[ (1,1) ]
>>>d[3]=[ (1,2), (2,1) ]
>>>d
{2: [(1, 1)], 3: [(1, 2), (2, 1)]}
176 Chapter 16. Mappings and Dictionaries
Building Skills in Python, Release 2.6.5
>>>d[2]
[(1, 1)]
>>>d["2 or 3"]=d[2]+d[3]
>>>d
{'2 or 3': [(1, 1), (1, 2), (2, 1)], 2: [(1, 1)], 3: [(1, 2), (2, 1)]}
1.Thisexamplestartsbycreatinganempty dict,d.
2.Into‘d[2]’weinserta listwithasingle tuple.
3.Into‘d[3]’weinserta listwithtwo tuples.
4.Whentheentire dictisprinteditshowsthetwokey:valuepairs,onewithakeyof2andanotherwith
akeyof3.
5.Theentrywithakeyofthe string "2 or 3" hasavaluewhichiscomputedfromthevaluesof‘ d[2] +
d[3]’. Sincethesetwoentriesare lists,thelistscanbecombinedwiththe +operator. Theresulting
expressionisstoredintothe dict.
6.Whenweprint d,weseethattherearethreekey:valuepairs: onewithakeyof3,onewithakeyof2
andonewithakeyof "2 or 3".
Thisabilitytouseanyobjectasakeyisapowerfulfeature, andcaneliminatesomeneedlesslycomplex
programmingthatmightbedoneinotherlanguages.
Herearesomeotherexamplesofpickingelementsoutofa dict.
>>>myBoat={"NAME":"KaDiMa","LOA":18,
... "SAILS":["main","jib","spinnaker "] }
>>>myBoat["NAME"]
'KaDiMa'
>>>myBoat["SAILS"].remove("spinnaker ")
>>>myBoat
{'LOA': 18, 'NAME': 'KaDiMa', 'SAILS': ['main', 'jib']}
String Formatting with Dictionaries . Thestringformatting operator, %, can be applied between
stranddictas well as strand sequence. When this operator was introduced in Strings, the format
speciﬁcationswereappliedtoa tupleorothersequence. Whenusedwitha dict,eachformatspeciﬁcation
isgivenanadditionaloptionthatspeciﬁeswhich dictelementtouse. Thegeneralformatforeachconversion
speciﬁcationis:
%( element ) [ flags ][
width [ . precision ]] code
The ﬂags,width,precisionand codeelementsaredeﬁnedin Strings. The elementﬁeldmustbeenclosedin
()’s;thisisthekeytobeselectedfromthe dict.
Forexample:
print"%(NAME)s ,%(LOA)d"%myBoat
This will ﬁnd ‘ myBoat[NAME] ’ and use ‘ %s’ formatting; it will ﬁnd ‘ myBoat[LOA]’ and use ‘ %d’ number
formatting.
16.3. Dictionary Operations 177
Building Skills in Python, Release 2.6.5
16.4 Dictionary Comparison Operations
Someofthestandardcomparisons(‘ <’,‘<=’,‘>’,‘>=’,‘==’,‘!=’)don’thavealotofmeaningbetween
twodictionaries. Sincetheremaybenocommonkeys,norevenacommondatatypeforkeys,dictionaries
aresimplycomparedbylength. The dictwithfewerelementsisconsideredlessthana dictwithmore
elements.
Themembershipcomparisons( in,notin)applytothekeysofthedictionary.
>>>colors={"blue": (0x30,0x30,0xff),"green": (0x30,0xff,0x97),
..."red": (0xff,0x30,0x97),"yellow": (0xff,0xff,0x30) }
>>>"blue"incolors
True
>>>(0x30,0x30,0xff)incolors
False
>>>"orange"notincolors
True
16.5 Dictionary Statements
Thereareanumberofstatementsthathavespeciﬁcfeaturesrelatedto dictobjects.
TheforStatement . Theforstatementiteratesthroughthekeysofthedictionary.
>>>colors={"blue": (0x30,0x30,0xff),"green": (0x30,0xff,0x97),
..."red": (0xff,0x30,0x97),"yellow": (0xff,0xff,0x30) }
>>>forcincolors:
... printc, colors[c]
It’scommontousesomeslightlydiﬀerenttechniquesforiteratingthroughtheelementsofa dict.
•Thekey:valuepairs. Wecanusethe items()methodtoiteratethroughthesequenceof2-tuplesthat
containeachkeyandtheassociatedvalue.
for key, value in someDictionary.items():
# process key and value
•Thevalues.Wecanusethe values()methodtoiteratethroughthesequenceofvaluesinthedictionary.
for value in someDictionary.values():
# process the value
Notethatwecan’teasilydeterminetheassociatedkey. Adictionaryonlygoesoneway: fromkeyto
value.
•The keys. We can use the keys()method to iterate through the sequence of keys. This is what
happenswhenwesimplyusethedictionaryobjectinthe forstatement.
Here’sanexampleofusingthekey:valuepairs.
>>>myBoat={"NAME":"KaDiMa","LOA":18,
... "SAILS":["main","jib","spinnaker "] }
>>>forkey, value inmyBoat.items():
... printkey,"=", value
...
178 Chapter 16. Mappings and Dictionaries
Building Skills in Python, Release 2.6.5
LOA = 18
NAME = KaDiMa
SAILS = ['main', 'jib', 'spinnaker']
ThedelStatement . Thedelstatementremovesitemsfroma dict. Forexample
>>>i={"two":2,"three":3,"quatro":4}
>>>deli["quatro"]
>>>i
{'two': 2, 'three': 3}
Inthisexample,weusethekeytoremovetheitemfromthe dict.
Thememberfunction, pop(),doesthisalso.
>>>i={"two":2,"three":3,"quatro":4}
>>>i.pop("quatro")
4
>>>i
{'two': 2, 'three': 3}
16.6 Dictionary Built-in Functions
Herearethebuilt-infunctionsthatdealwithdictionaries.
dict([values], [key=value...] )
Createsanewdictionary. Ifapositionalparameter, valuesisprovided,eachelementmustbea2-
tuple. The valuespairsareusedtopopulatethedictionary;theﬁrstelementofeachpairisthekey
andthesecondelementisthevalue.
Notethatthe zip()functionproducesa listof2-tuplesfromtwoparallel lists.
Ifanykeywordparametersareprovided,eachkeywordbecomesakeyinthedictionaryandthekeyword
argumentbecomesthevalueforthatkey.
>>>dict( [('first',0), ('second',1),('third',2)] )
{'second': 1, 'third': 2, 'first': 0}
>>>dict(zip(['fourth','fifth','sixth'],[3,4,5]) )
{'sixth': 5, 'fifth': 4, 'fourth': 3}
>>>dict( seventh =7, eighth =8, ninth=9)
{'seventh': 7, 'eighth': 8, 'ninth': 9}
Functionswhichapplytodicts,butaredeﬁnedelsewhere.
•len(). Fordicts,thisfunctionreturnsthenumberofitems.
>>>len( {1:'first',2:'second',3:'third'} )
3
>>>len( {} )
0
•max(). Fordicts,thisfunctionreturnsthemaximumkey.
>>>max( {1:'first',2:'second',3:'third'} )
3
16.6. Dictionary Built-in Functions 179
Building Skills in Python, Release 2.6.5
•min(). Fordicts,thisfunctionreturnstheminimumkey.
•sum(). Fordicts,thisfunctionsumsthekeys.
>>>sum( {1:'first',2:'second',3:'third'} )
6
•any(). Equivalent to ‘ any( dictionary.keys() ) ’. Return Trueif any key in the dictionary are
True, orequivalentto True. Thisisalmostalwaystrueexceptforemptydictionariesorapeculiar
dictionarywithkeysof 0,False,None,etc.
•all(). Equivalentto‘ all( dictionary.keys() ) ’. Return Trueifallkeysinthedictionaryare True,
orequivalentto True.
>>>all( {1:'first',2:'second',3:'third'} )
True
>>>all( {1:'first',2:'second',None:'error'} )
False
•enumerate(). Iteratethroughthedictionaryreturning2-tuplesof‘ ( index, key ) ’. Thisiterates
throughthekeyvalues. Sincedictionarieshavenoexplicitorderingtotheirkeys,thisenumerationis
inanarbitraryorder.
•sorted(). Iteratethroughthedictionarykeysinsortedorder. Thekeysareactuallyalist,andthis
returnsalistofthesortedkeys.
>>>sorted( {"two":2,"three":3,"quatro":4} )
['quatro', 'three', 'two']
16.7 Dictionary Methods
Adictobjecthasanumberofmembermethods. Manyofthesemaintainthevaluesina dict. Others
retrievepartsofthe dictasasequence,foruseina forstatement.
Thefollowingmutatorfunctionsupdatea dictobject. Mostofthesedonotreturnavalue. The dict.pop()
anddict.setdefault() methodsbothupdatethedictionary andreturnvalues.
clear()
Removeallitemsfromthe dict.
pop(key, [default] )
Removethegivenkeyfromthe dict,returningtheassociatedvalue. Ifthekeydoesnotexist,return
the default value provided. If the key does not exist and no default value exists, raise a KeyError
exception.
setdefault (key, [default] )
Ifthekeyisinthedictionary,returntheassociatedvalue. Ifthe keyisnotinthedictionary,setthe
givendefaultasthevalueandreturnthisvalue. If defaultisnotgiven,itdefaultsto None.
update(new, [key=value...] )
Mergevaluesfromthenew newintotheoriginal dict,addingorreplacingasneeded.
ItisequivalenttothefollowingPythonstatement. ‘ for k in new.keys(): d[k]= new[k] ’
Ifanykeywordparametersareprovided,eachkeywordbecomesakeyinthedictionaryandthekeyword
argumentbecomesthevalueforthatkey.
180 Chapter 16. Mappings and Dictionaries
Building Skills in Python, Release 2.6.5
>>>x=dict( seventh =7, eighth =8, ninth=9)
>>>x
{'seventh': 7, 'eighth': 8, 'ninth': 9}
>>>x.update( first =1)
>>>x
{'seventh': 7, 'eighth': 8, 'ninth': 9, 'first': 1}
Thefollowingtransformerfunctiontransformsadictionaryintoanotherobject.
copy()
Copythe dicttomakeanew dict. Thisisa shal low copy. Allobjectsinthenew dictarereferences
tothesameobjectsastheoriginal dict.
Thefollowingaccessormethodsprovideinformationabouta dict.
get(key, [default] )
Gettheitemwiththegiven key,similarto‘ dict[key]’. Ifthekeyisnotpresentand defaultisgiven,
supplydefaultinstead. Ifthekeyisnotpresentandnodefaultisgiven,raisethe KeyErrorexception.
items()
Returnalloftheitemsinthe dictasasequenceof(key,value)2-tuples. Notethatthesearereturned
innoparticularorder.
keys()
Returnallofthekeysinthe dictasasequenceofkeys. Notethatthesearereturnedinnoparticular
order.
values()
Returnallthevaluesfromthe dictasasequence. Notethatthesearereturnedinnoparticularorder.
16.8 Using Dictionaries as Function Parameter Defaults
It’s very, very important to note that default values must be immutable objects. Recall that numbers,
strings,None,andtupleobjectsareimmutable.
We note that dictionaries as well as sets and lists are mutable, and cannot be used as default values for
functionparameters.
Considerthefollowingexampleofwhatnottodo.
>>>defdefault2 ( someDict ={} ):
... someDict[ 'default']=2
... returnsomeDict
...
>>>looks_good ={}
>>>default2(looks_good)
{'default': 2}
>>>default2(looks_good)
{'default': 2}
>>>looks_good
{'default': 2}
>>>
>>>
>>>not_good =default2()
>>>not_good
{'default': 2}
>>>worse=default2()
16.8. Using Dictionaries as Function Parameter Defaults 181
Building Skills in Python, Release 2.6.5
>>>worse
{'default': 2}
>>>not_good
{'default': 2}
>>>
>>>not_good[ 'surprise ']='what?'
>>>not_good
{'default': 2, 'surprise': 'what?'}
>>>worse
{'default': 2, 'surprise': 'what?'}
1.Wedeﬁnedafunctionwhichhasadefaultvaluethat’samutableobject. Thisissimpleabadpro-
grammingpracticeinPython.
2.We used this function with a dictionary object, looks_good. The function updated the dictionary
objectasexpected.
3.Weusedthefunction’sdefaultvaluetocreate not_good. Thefunctioninsertedavalueintoanempty
dictionaryandreturnedthisnewdictionaryobject.
Itturnsoutthatthefunctionupdatedthemutabledefaultvalue,also.
4.Whenweusethefunction’sdefaultvalueagain, with worse, thefunctionusestheupdateddefault
valueandupdatesitagain.
Bothnot_goodandworsearereferencestothesamemutableobjectthatisbeingupdated.
Toavoidthis,donotusemutablevaluesasdefaults. Dothisinstead.
defdefault2 ( someDict =None):
ifsomeDict isNone:
someDict ={}
someDict[ 'default']=2
returnsomeDict
Thiscreatesafreshnewmutableobjectasneeded.
16.9 Dictionary Exercises
1.WordFrequencies . Updatetheexercisein Accumulating Unique V alues tocounteachoccuranceof
thevaluesin aSequence. Changetheresultfromasimplesequencetoa dict. Thedictkeyisthe
valuefrom aSequence. Thedictvalueisthecountofthenumberofoccurances.
Ifthisisdonecorrectly,theinputsequencecanbewords,numbersoranyotherimmutablePython
object,suitablefora dictkey.
Forexample,theprogramcouldacceptalineofinput,discardingpunctuationandbreakingtheminto
wordsinspaceboundaries. Thebasic stringoperationsshouldmakeitpossibletocreateasimple
sequenceofwords.
Iterate through this sequence, placing the words into a dict. The ﬁrst time a word is seen, the
frequencyis1. Eachtimethewordisseenagain,incrementthefrequency. Produceafrequencytable.
Toalphabetizethefrequencytable,extractjustthekeys. Asequencecanbesorted(seesection6.2).
Thissortedsequenceofkeyscanbeusedtoextractthecountsfromthe dict.
2.StockReports . Ablockofpubliclytradedstockhasavarietyofattributes,we’lllookatafewof
them. Astockhasatickersymbolandacompanyname. Createasimple dictwithtickersymbols
andcompanynames.
182 Chapter 16. Mappings and Dictionaries
Building Skills in Python, Release 2.6.5
Forexample:
stockDict ={'GM':'General Motors ',
'CAT':'Caterpillar ','EK':"Eastman Kodak "}
Createasimple listofblocksofstock. Thesecouldbe tupleswithtickersymbols,prices,datesand
numberofshares. Forexample:
purchases =[ ('GE',100,'10-sep-2001 ',48),
('CAT',100,'1-apr-1999 ',24),
('GE',200,'1-jul-1999 ',56) ]
Createapurchasehistoryreportthatcomputesthefullpurchaseprice(sharestimesdollars)foreach
blockofstockandusesthestockDicttolookupthefullcompanyname. Thisisthebasicrelational
databasejoinalgorithmbetweentwotables.
Createasecondpurchasesummarythatwhichaccumulatestotalinvestmentbytickersymbol. Inthe
abovesampledata,therearetwoblocksofGE.Thesecaneasilybecombinedbycreatinga dictwhere
the key is the ticker and the value is the listof blocks purchased. The program makes one pass
throughthedatatocreatethe dict. Apassthroughthe dictcanthencreateareportshowingeach
tickersymbolandallblocksofstock.
3.Date Decoder . A date of the form ‘ 8-MAR-85’ includes the name of the month, which must be
translated to a number. Create a dictsuitable for decoding month names to numbers. Create a
functionwhichuses stringoperationstosplitthedateinto3itemsusingthe“-”character. Translate
themonth,correcttheyeartoincludeallofthedigits.
Thefunctionwillacceptadateinthe“dd-MMM-yy”formatandrespondwitha tupleof( y,m,d).
4.DiceOdds.Thereare36possiblecombinationsoftwodice.Asimplepairofloopsoverrange(6)+1will
enumerateallcombinations. Thesumofthetwodiceismoreinterestingthantheactualcombination.
Createa dictofallcombinations,usingthesumofthetwodiceasthekey.
Eachvalueinthe dictshouldbea listoftuples;eachtuplehasthevalueoftwodice. Thegeneral
outlineissomethinglikethefollowing:
Enumerate Dice Combinations
Initialize.combos←dict()
Foralld1. Iteratewith 1≤d1<7.
Foralld2. Iteratewith 1≤d2<7.
CreateaTuple .t←(d1, d2).
IntheDictionary . Isd1+d2akeyin combos?
Append. Appendthetuple, ttothevalueforitem d1+d2in combos.
NotIntheDictionary . Ifd1+d2isnotakeyin combos,then
Insert. Addanewelement d1+d2tothe combos;thevalueisa1-element
listofthetuple, t.
Report. Displaytheresultingdictionary.
16.9. Dictionary Exercises 183
Building Skills in Python, Release 2.6.5
16.10 Advanced Parameter Handling For Functions
In More F unction Deﬁnition F eatures we hinted that Python functions can handle a variable number of
argumentvaluesinadditiontosupportingoptionalargumentvalues.
Whenwedeﬁneafunction,wecanhaveoptionalparameters. Wedeﬁneaﬁxednumberofparameters,but
some(orall)canbeomittedbecauseweprovideddefaultvaluesforthem. Thisallowsustoprovidetoofew
positionalargumentvalues.
Ifweprovidetoomanypositionalargumentvaluestoafunction,however,Pythonraisesanexception. It
turnsoutthatwecanalsohandlethis.
Considerthefollowingexample. Wedeﬁnedafunctionofthreepositionalparameters,andthenevaluated
itwithmorethanthreeargumentvalues.
>>>defavg(a,b,c): return(a+b+c)/3.0
...
>>>avg(10,11,12)
11.0
>>>avg(10,11,12,13)
Traceback (most recent call last):
File"<stdin>" , line1, in <module>
TypeError : avg() takes exactly 3 arguments (4 given)
First, we’ll look at handling an unlimited number of positional values. Then we’ll look at handling an
unlimitednumberofkeywordvalues.
16.10.1 Unlimited Number of Positional Argument Values
Pythonletsusdeﬁneafunctionthathandlesanunknownandunlimitednumberofargumentvalues. Ex-
amplesofbuilt-infunctionswithaunlimitednumberofargumentvaluesare max()andmin().
Rather than have Python raise an exception for extra argument values, we can request the additional
positionalargumentvaluesbecollectedintoa tuple. Todothis,weprovideaﬁnalparameterdeﬁnitionof
theform*extras. The*indicatesthatthisparametervariableistheplacetocapturetheextraargument
values. Thevariable, herecalled extras, willreceiveasequencewithalloftheextrapositionalargument
values.
Youcanonlyprovideonesuchvariable(ifyouprovidedtwo,howcouldPythondecidewhichofthesetwo
gottheextraargumentvalues?) Youmustprovidethisvariableaftertheordinarypositionalparametersin
thefunctiondeﬁnition.
The following function accepts an unlimited number of positional arguments; it collects these in a single
tupleparameter, args.
defmyMax(*args ):
max=args[0]
forainargs[1:]:
ifa>max:max=a
returnmax
Here’s another example. In this case we have a ﬁxed parameter in the ﬁrst position and all the extra
parameterscollectedintoa tuplecalledvals.
defprintf( format, *vals ):
printformat%vals
184 Chapter 16. Mappings and Dictionaries
Building Skills in Python, Release 2.6.5
This should look familiar to C programmers. Now we can write the following, which may help ease the
transitionfromCtoPython.
printf( "%s=%d","some string ",2)
printf( "%s,%s,%d%d","thing1","thing2",3,22)
16.10.2 Unlimited Number of Keyword Argument Values
Inadditiontocollectingextrapositionalargumentvaluesintoasingleparameter,Pythoncanalsocollect
extrakeywordargumentvaluesintoa dict.
Ifyouwantacontainerofkeywordarguments,youprovideaparameteroftheform ** extras. Yourvariable,
herecalled extras,willreceivea dictwithallofthekeywordparameters.
Thefollowingfunctionacceptsanynumberofkeywordarguments;theyarecollectedintoasingleparameter.
defrtd(**args ):
if"rate"inargsand"time"inargs:
args['distance ']=args['rate']*args['time']
elif"rate"inargsand"distance "inargs:
args['time']=args['distance ']/args['rate']
elif"time"inargsand"distance "inargs:
args['rate']=args['distance ']/args['time']
else:
raiseException ("%rdoes not compute "%( args, ) )
returnargs
Here’stwoexamplesofusingthis rtd()function.
>>>rtd( rate =60.0, time=.75)
{'distance': 45.0, 'rate': 60.0, 'time': 0.75}
>>>rtd( distance =173, time=2+50/60.0)
{'distance': 173, 'rate': 61.058823529411761, 'time': 2.8333333333333335}
Thekeywordargumentsarecollectedintoa dict,namedargs. Wecheckforcombinationsof“rate”,“time”
and “distance” in the argsdictionary. For each combination, we can solve for the remaining value and
updatethe dictbyinserttheadditionalkeyandvalueintothe dict.
16.10.3 Evaluation with a Container Instead of Individual Argument Values
Whenevaluatingafunction,wecanprovideasequenceinsteadofprovidingindividualpositionalparameters.
Wedothiswithaspecialversionofthe *operatorwhenevaluatingafunction. Here’sanexampleofforcing
a3-tupletobeassignedtothreepositionalparameters.
>>>defavg3( a, b, c ):
... return(a+b+c)/3.0
...
>>>data=(4,3,2)
>>>avg3(*data )
3.0
Inthisexample,wetoldPythontoassigneachelementofour3-tuplenamed data,toaseparateparameter
variablesofthefunction avg3().
16.10. Advanced Parameter Handling For Functions 185
Building Skills in Python, Release 2.6.5
Aswiththe*operator,wecanuse **tomakea dictbecomeaseriesofkeywordparameterstoafunction.
>>>d={'a':5,'b':6,'c':9}
>>>avg3(**d )
6.666666666666667
Inthisexample,wetoldPythontoassigneachelementofthe dict,d,tospeciﬁckeywordparametersof
ourfunction.
Wecanmixandmatchthiswithordinaryparameterassignment,also. Here’sanexample.
>>>avg3(2, b=3,**{'c':4} )
3.0
Herewe’vecalledourfunctionwiththreeargumentvalues. Theparameter awillgetitsvaluefromasimple
positionalparameter. Theparameter bwillgetitsvaluefromakeywordargument. Theparameter cwill
getitsvaluefromhavingthe dict{'c':4}turnedintokeywordparameterassignment.
We’llmakemoreuseofthisin Inheritance.
186 Chapter 16. Mappings and Dictionaries
CHAPTER
SEVENTEEN
SETS
Manyalgorithmsneedtoworkwithsimplecontainersofdatavalues,irrespectiveoforderoranykey. This
isasimplesetofobjects,whichissupportedbythePythonsetcontainer. We’lllookatSetsfromanumber
ofviewpoints: semantics,literalvalues,operations,comparisonoperators,statements,built-infunctionsand
methods.
17.1 Set Semantics
Asetis,perhapsthesimplestpossiblecontainer,sinceitcontainsobjectsinnoparticularorderwithno
particularidentiﬁcation. Objectsstandforthemselves. Withasequence,objectsareidentiﬁedbyposition.
Withamapping,objectsareidentiﬁedbysomekey. Witha set,objectsstandforthemselves.
Sinceeachobjectstandsforitself;elementsofa setcannotbeduplicated. A listortuple,forexample,
canhaveanynumberofduplicateobjects. Forexample, the tuple( 1, 1, 2, 3 ) hasfourelements,
whichincludestwocopiesoftheinteger 1;ifwecreatea setfromthis tuple,thesetwillonlyhavethree
elements.
Asethaslargenumberofoperationsforunions,intersections,anddiﬀerences.Acommonneedistoexamine
asettoseeifaparticularobjectisamemberofthat set,orifone setiscontainedwithinanother set.
Asetismutable,whichmeansthatitcannotbeusedasakeyfora dict(see Mappings and Dictionaries for
moreinformation.) Inordertousea setasadictkey,wecancreatea frozenset,whichisanimmutable
copyofa set. Thisallowsustoaccumulatea setofvaluestocreatea dictkey.
17.2 Set Literal Values
Therearenoliteralvaluesfor setobjects. A setvalueiscreatedbyusingthe set()orfrozenset()factory
functions. Thesecanbeappliedtoany iterablecontainer,whichincludesanysequence,thekeysofa dict,
orevenaﬁle.
We’ll return to the general notion of “iterable” when we look at the yieldstatement in Iterators and
Generators.
set(iterable)
Transformsthegiveniterable(sequence,ﬁle, frozensetorset)intoaset.
>>>set( ("hello","world","of","words","of","world") )
set(['world', 'hello', 'words', 'of'])
187
Building Skills in Python, Release 2.6.5
Notethatweprovidedasix-tuplesequencetothe set()function, andwegota setwiththefour
uniqueobjects. The setisshownasa listliteral,toremindusthata setismutable.
Youcannot providea list of argument valuesto the set()function. Youmustprovidean iterable
object(usuallyatuple).
Trying ‘set( "one", "two", "three" ) ’ will result in an TypeErrorbecause you providedthree
arguments. You must provide a single argument which is iterable. All sequences are iterable, so a
sequenceliteralistheeasiesttoprovide.
set(iterable)
Transformsthegiveniterable(sequence,ﬁleor set)intoanimmutable frozenset.
17.3 Set Operations
Therearealargenumberof setoperations,includingunion(‘ |’),intersection(‘ &’),diﬀerence(‘ -’),and
symmetricdiﬀerence(‘ ^’). Theseareunusualoperations,sowe’lllookattheminsomedetail. Inadditionto
theoperatornotation,therearealsomethodfunctionswhichdothesamethings. We’lllookatthemethod
functionversionsbelow.
We’llusethefollowingtwo setobjectstoshowtheseoperators.
>>>fib=set( (1,1,2,3,5,8,13) )
>>>prime=set( (2,3,5,7,11,13) )
Union. ‘|’. Theresulting sethaselementsfrombothsource sets. Anelementisintheresultifitisone
set ortheother.
>>>fib|prime
set([1, 2, 3, 5, 7, 8, 11, 13])
188 Chapter 17. Sets
Building Skills in Python, Release 2.6.5
S1∪S2 ={e|e∈S1ore∈S2}
Intersection. ‘&’. Theresulting sethaselementsthatarecommontobothsource sets. Anelementisin
theresultifitisinone set andtheother.
>>>fib&prime
set([2, 3, 5, 13])
S1∩S2 ={e|e∈S1ande∈S2}
Diﬀerence. ‘-’. Theresulting sethaselementsoftheleft-hand setwithallelementsfromtheright-hand
setremoved. Anelementwillbeintheresultifitisintheleft-hand setandnotintheright-hand set.
>>>fib-prime
set([8, 1])
>>>prime-fib
set([11, 7])
S1−S2 ={e|e∈S1ande/∈S2}
S2−S1 ={e|e/∈S1ande∈S2}
SymmetricDiﬀerence . ‘^’. Theresulting sethaselementswhichareuniquetoeach set. Anelementwill
beintheresult setifeitheritisintheleft-hand setandnotintheright-hand setoritisintheright-hand
setandnotintheleft-hand set. Whew!
17.3. Set Operations 189
Building Skills in Python, Release 2.6.5
>>>fib^prime
set([1, 7, 8, 11])
S1⊖S2 ={e|e∈S1xore∈S2}
17.4 Set Comparison Operators
Therer are a number of setcomparisons. All of the standard comparisons (‘ <’, ‘<=’, ‘>’, ‘>=’, ‘==’, ‘!=’,
in,notin)workwith sets, buttheinterpretationoftheoperatorsisbasedon settheory. Thevarious
operationsfromsettheoryarethesubsetandpropersubsetrelationships.
Thevariouscomparisonmathematicaloperationsof ⊂,⊆,⊃,⊇areimplementedby‘ <’,‘<=’,‘>’,‘>=’.
Inthefollowingexample,the setcrapsisallofthewayswecanrollcrapsonacomeoutroll. Also,we’ve
deﬁnedthreetoholdbothofthedicerollsthattotal3. Whenwecompare threewithcraps,weseethe
expectedrelationships: threeisasubset crapsaswellasapropersubsetof craps.
>>>craps=set( [ (1,1), (2,1), (1,2), (6,6) ] )
>>>three=set( [ (1,2), (2,1) ] )
>>>three<craps
True
>>>three<=craps
True
Theinandnotinoperatorsimplementthat ∈and /∈relationships.
In the following example, the setcrapsis all of the ways we can roll craps on a come out roll. We’ve
modeledathrowofthediceasa2-tuple. Wecannowtestaspeciﬁcthrowtoseeifitiscraps.
190 Chapter 17. Sets
Building Skills in Python, Release 2.6.5
>>>craps=set( [ (1,1), (2,1), (1,2), (6,6) ] )
>>>(1,2)incraps
True
>>>(3,4)incraps
False
17.5 Set Statements
Theforstatementworksdirectlywith setobjects,becausetheyareiterable. A setisnotasequence,but
itislikeasequencebecausewecaniteratethroughtheelementsusinga forstatement.
Herewecreatethree setobjects:even,odd,andzerotoreﬂectsomestandardoutcomesinRoulette. The
unionofallthree setsisthecomplete setofpossiblespins. Wecaniteratethroughthisresulting set.
>>>even=set(range(2,38,2) )
>>>odd=set(range(1,37,2) )
>>>zero=set( (0,'00') )
>>>fornineven|odd|zero:
print n
17.6 Set Built-in Functions
Anumberofbuilt-infunctionscreateorprocess setobjects.
Theset()andfrozenset()weredescribedabove,underSetLiteralValues.
Functionswhichapplytosets,butaredeﬁnedelsewhere.
17.5. Set Statements 191
Building Skills in Python, Release 2.6.5
•len(). Forsets,thisfunctionreturnsthenumberofitems.
>>>len(set( [1,1,2,3] ) )
3
>>>len(set() )
0
Notethatsetsdonotincludeduplicates,that’swhythelengthintheﬁrstexampleisnot4.
•max(). Forsets,thisfunctionreturnsthemaximumitem.
>>>max(set( [1,1,2,3,5,8] ) )
8
•min(). Forsets,thisfunctionreturnstheminimumitem.
•sum(). Forsets,thisfunctionsumstheitems.
>>>sum(set( [1,1,2,3,5,8] ) )
19
Notethatsetsdonotincludeduplicates,that’swhythesumisnot20.
•any(). Forsets,Return Trueifthereexistsanyitemwhichis True.
>>>set( [0,None,False] )
set([0, None])
>>>any( _ )
False
>>>any(set( [0,None,False,42] ) )
True
Notethat Falseand0havethesamevaluewhenconstructingaset,andareduplicates.
•all(). Forsets,Return Trueifallitemsare True.
>>>all(set( [0,None,False,42] ) )
False
>>>all(set( [1,True] ) )
True
•enumerate(). Iteratethroughthesetreturning2-tuplesof‘ ( index, item ) ’. Sincesetshaveno
explicitorderingtotheiritems,thisenumerationisinanarbitraryorder.
•sorted(). Iteratethroughthesetelementsinsortedorder. Thisreturnsasetofelements.
>>>sorted(set( [1,1,2,3,5,8] ) )
[1, 2, 3, 5, 8]
17.7 Set Methods
Asetobjecthasanumberofmembermethods.
Thefollowingmutatorsupdatea setobject. Notethatmostofthesemethodsdon’treturnavalue. The
exceptionispop.
192 Chapter 17. Sets
Building Skills in Python, Release 2.6.5
clear()
Removeallitemsfromthe set.
pop()
Removeanarbitraryobjectfromthe set,returningtheobject. Ifthe setwasalreadyempty,thiswill
raiseaKeyErrorexception.
add(new)
Addselement newtothe set. Iftheobjectisalreadyinthe set,nothinghappens.
remove(old)
Removeselement oldfromthe set. Iftheobject oldisnotinthe set, thiswillraisea KeyError
exception.
discard()
Sameaset.remove() .
update(new)
Mergevaluesfromthe newsetintotheoriginal set,addingelementsasneeded.
ItisequivalenttothefollowingPythonstatement. ‘ s |= new’.
intersection_update (new)
Update settohavetheintersectionof setandnew. Ineﬀect,thisdiscardselementsfrom set,keeping
onlyelementswhicharecommonto newand set
ItisequivalenttothefollowingPythonstatement. ‘ s &= new’.
difference_update (new)
Update settohavethediﬀerencebetween setandnew. Ineﬀect,thisdiscardselementsfrom setwhich
arealsoin new.
ItisequivalenttothefollowingPythonstatement. ‘ s -= new’.
symmetric_difference_update (new)
Update settohavethesymmetricdiﬀerencebetween setandnew. Ineﬀect,thisbothdiscardselements
from swhicharecommonwith newandalsoinsertselementsinto swhichareuniqueto new.
ItisequivalenttothefollowingPythonstatement. ‘ s ^= new’.
Thefollowingtransformersbuiltanewobjectfromoneormore sets.
copy()
Copythe settomakeanew set. Thisisa shal low copy. Allobjectsinthenew setarereferencesto
thesameobjectsastheoriginal set.
union(new)
Ifnewisaproper set,return‘set | new’. Ifnewisasequenceorotheriterable,makeanew setfrom
thevalueof new,thenreturntheunion,‘ set | new’. Thisdoesnotupdatetheoriginal set.
>>>prime.union( ( 1,2,3,4,5) )
set([1, 2, 3, 4, 5, 7, 11, 13])
intersection (new)
Ifnewisaproper set,return‘set & new’. Ifnewisasequenceorotheriterable,makeanew setfrom
thevalueof new,thenreturntheintersection,‘ set & new’. Thisdoesnotupdate set.
difference (new)
Ifnewisaproper set,return‘set - new’. Ifnewisasequenceorotheriterable,makeanew setfrom
thevalueof new,thenreturnthediﬀerence,‘ set - new’. Thisdoesnotupdate set.
17.7. Set Methods 193
Building Skills in Python, Release 2.6.5
symmetric_difference (new)
Ifnewisaproper set,return‘ s ^ new’. Ifnewisasequenceorotheriterable,makeanew setfrom
thevalueof new,thenreturnthesymmetricdiﬀerence,‘ sset ^ new’. Thisdoesnotupdate s.
Thefollowingaccessormethodsprovideinformationabouta set.
issubset (other)
Ifsetisasubsetof other,returnTrue,otherwisereturn False. Essentially,thisis‘ set <= other ’.
issuperset (other)
Ifsetisasupersetof other,returnTrue,otherwisereturn False. Essentially,thisis‘ set >= other’.
17.8 Using Sets as Function Parameter Defaults
It’s very, very important to note that default values must be immutable objects. Recall that numbers,
strings,None,andtupleobjectsareimmutable.
We note that sets as well as dictionaries and lists are mutable, and cannot be used as default values for
functionparameters.
Considerthefollowingexampleofwhatnottodo.
>>>defdefault2 ( someSet =set() ):
... someSet.add(2)
... returnsomeSet
...
>>>looks_good =set()
>>>default2( looks_good )
set([2])
>>>looks_good
set([2])
>>>
>>>
>>>not_good =default2()
>>>not_good
set([2])
>>>worse=default2()
>>>worse
set([2])
>>>
>>>not_good .add(3)
>>>not_good
set([2, 3])
>>>worse
set([2, 3])
1.Wedeﬁnedafunctionwhichhasadefaultvaluethat’samutableobject. Thisissimpleabadpro-
grammingpracticeinPython.
2.Weusedthisfunctionwithasetobject, looks_good. Thefunctionupdatedthesetobjectasexpected.
3.Weusedthefunction’sdefaultvaluetocreate not_good. Thefunctioninsertedavalueintoanempty
setandreturnedthisnewsetobject.
Itturnsoutthatthefunctionupdatedthemutabledefaultvalue,also.
4.Whenweusethefunction’sdefaultvalueagain, with worse, thefunctionusestheupdateddefault
valueandupdatesitagain.
194 Chapter 17. Sets
Building Skills in Python, Release 2.6.5
Bothnot_goodandworsearereferencestothesamemutableobjectthatisbeingupdated.
Toavoidthis,donotusemutablevaluesasdefaults. Dothisinstead.
defdefault2 ( someSet =None):
ifsomeSet isNone:
someSet={}
someSet.add(2)
returnsomeSet
Thiscreatesafreshnewmutableobjectasneeded.
17.9 Set Exercises
1.Dice Rolls. In Craps, each roll of the dice belongs to one of several sets of rolls that are used
to resolve bets. There are only 36 possible dice rolls, but it’s annoying to deﬁne the various sets
manually. Here’samulti-stepprocedurethatproducesthevarious setsofdicerollsaroundwhich
youcandeﬁnethegameofcraps.
First, createasequencewith13empty sets, callit dice. Somethinglike‘ [ set() ]*13 ’doesn’t
workbecauseitmakes13copiesofasingle setobject. You’llneedtouseaforstatementtoevaluate
thesetconstructorfunction13diﬀerenttimes. Whatistheﬁrstindexofthissequence? Whatisthe
lastentryinthissequence?
Second,writetwo,nested,for-loopstoiteratethroughall36combinationsofdice,creating2- tuples.
The362-tupleswillbeginwith (1,1)andendwith (6,6). Thesumofthetwoelementsisanindex
intodice. Wewanttoaddeach2- tupletotheappropriate setinthedicesequence.
Whenyou’redone,youshouldseeresultslikethefollowing:
>>>dice[7]
set([(5, 2), (6, 1), (1, 6), (4, 3), (2, 5), (3, 4)])
Nowyoucandeﬁnethevariousrulesas setsbuiltfromother sets.
loseOntheﬁrstroll,youloseifyouroll2,3or12. Thisisthe set‘dice[2] | dice[3] |
dice[12]’. Thegameisover.
winOntheﬁrstroll, youwinifyouroll7or11. Thegameisover. Thisis‘ dice[7] |
dice[11]’.
pointOntheﬁrstroll,anyotherresult(4,5,6,8,9,or10)establishesapoint. Thegame
runsuntilyourollthepointoraseven.
crapsOnceapointisestablished,youwinifyourollthepoint’snumber. Youloseifyou
rolla7.
Onceyouhavethesethree setsdeﬁned,youcansimulatetheﬁrstrollofacrapsgamewitharelatively
elegant-lookingprogram. Youcangeneratetworandomnumberstocreatea2-tuple. Youcanthen
checktoseeifthe2-tupleisinthe loseorwinsets.
Ifthecome-outrollisinthe pointset,thenthesumofthe2-tuplewillletyoupicka setfromthe
dicesequence. Forexample,ifthecome-outrollis (2,2),thesumis4,andyou’dassign‘ dice[4]’to
thevariable point;thisisthe setofwinnersfortherestofthegame. The setoflosersfortherest
ofthegameisalwaysthe crapsset.
17.9. Set Exercises 195
Building Skills in Python, Release 2.6.5
Therestofthegameisasimpleloop,likethecome-outrollloop,whichusestworandomnumbersto
createa2- tuple. Ifthenumberisinthe pointset,thegameisawinner. Ifthenumberisinthe
crapsset,thegameisaloser,otherwiseitcontinues.
2.Roulette Results . In Roulette, each spin of the wheel has a number of attributes like even-ness,
low-ness,red-ness,etc. Youcanbetonanyoftheseattributes. Iftheattribteonwhichyouplacedbet
isinthesetofattributesforthenumber,youwin.
We’lllookatafewsimpleattributes: red-black,even-odd,andhigh-low. Theeven-oddandhigh-low
attributesareeasytocompute. Thered-blackattributeisbasedonaﬁxedsetofvalues.
redNumbers =set( [1,3,5,7,9,12,14,16,18,19,21,23,25,27,30,32,34,36] )
Wehavetodistinguishbetween0and00,whichmakessomeofthisdecision-makingrathercomplex.
Wecan,forexample,useordinaryintegersforthenumbers0to36,andappendthe string“00”to
thissetofnumbers. Forexample, ‘ set( range(37) ) | set( ['00'] ) ’. Thissetistheentire
Roulettewheel,wecancallit wheel.
Wecandeﬁneanumberof setsthatstandforbets: red,black,even,odd,highandlow. Wecan
iteratethoughthevaluesofwheel,anddecidewhich setsthatvaluebelongsto.
•Ifthespinisnon-zeroand‘ spin % 2 == 0 ’,addthespintothe evenset.
•Ifthespinisnon-zeroand‘ spin % 2 != 0 ’,addthespintothe oddset.
•Ifthespinisnon-zeroandit’sinthe redNumbers set,addthespintothe redset.
•Ifthespinisnon-zeroandit’snotinthe redNumbers set,addthevaluetothe blackset.
•Ifthespinisnon-zeroand‘ spin <= 18’,addthevaluetothe lowset.
•Ifthespinisnon-zeroand‘ spin > 18’,addthevaluetothe highset.
Onceyouhavethesesix setsdeﬁned,youcanusethemtosimulateRoulette. Eachroundinvolves
pickingarandomspinwithsomethinglike‘ random.choice( list(wheel) ) ’. Youcanthenseewhich
setthespinbelongsto. Ifthespinbelongstoa setonwhichyou’vebet,thespinisawinner,otherwise
it’saloser.
Thesesix setsallpay2:1. Thereareasome setswhichpay3:1,includingthe1-12,13-24,25to36
ranges,aswellasthethreecolumns,spin%3==0,spin%3==1andspin%3==2. Thereare
stillmorebetsontheRoulettetable,butthe setsofspinsforthosebetsarerathercomplextodeﬁne.
3.Sieve of Eratosthenes . Look at Sieve of Eratosthenes . We created a listof candidate prime
numbers,usingasequencewith5000booleanﬂags. Wecan,withouttoomuchwork,simplifythisto
useasetinsteadofa list.
Sieve of Eratosthenes - Set Version
(a)Initialize
Createa set,primewhichhasintegersbetween2and5000.
Setp←2
(b)Iterate. While 2≤p < 5000:
FindNextPrime . whilenot prime pand 2≤p < 5000:
Increment pby1.
RemoveMultiples . Atthispoint, pisprime.
196 Chapter 17. Sets
Building Skills in Python, Release 2.6.5
Setk←p+p
while k < 5000:
Removekfromthe setprime
Setk←k+p
Nextp. Increment pby1.
(c)Report.
Atthispoint,the setprimehastheprimenumbers. Wecanreturnthe set.
IntheFindNextPrime step,you’rereallylookingfortheminimuminthe primesetwhichisgreater
thanorequalto p.
IntheRemoveMultiples step,youcancreatethe setofmultiples,anduse difference_update()
toremovethemultiplesfrom prime.
Youcan,also,usethe range()functiontocreatemultiplesof p,andcreatea setfromthissequence
ofmultiples.
17.9. Set Exercises 197
Building Skills in Python, Release 2.6.5
198 Chapter 17. Sets
CHAPTER
EIGHTEEN
EXCEPTIONS
The try , except, ﬁnally and raise statements
Awell-writtenprogramshouldproducevaluableresultsevenwhenexceptionalconditionsoccur. Aprogram
dependsonnumerousresources: memory,ﬁles,otherpackages,input-outputdevices,tonameafew. Some-
timesitisbesttotreataproblemwithanyoftheseresourcesasanexception,whichinterruptsthenormal
sequentialﬂowoftheprogram.
In Exception Semantics weintroducethesemanticsofexceptions. We’llshowthebasicexception-handling
featuresofPythonin Basic Exception Handling andthewayexceptionsareraisedbyaprogramin Raising
Exceptions.
We’ll look at a detailed example in An Exceptional Example . In Complete Exception Handling and The
ﬁnal ly Clause,wecoversomeadditionalsyntaxthat’ssometimesnecessary. In Exception F unctions ,we’ll
lookatafewstandardlibraryfunctionsthatapplytoexceptions.
We descibe most of the built-in exceptions in Built-in Exceptions . In addition to exercises in Exception
Exercises, wealsoincludestylenotesin Style Notesandadigressiononproblemsthatcanbecausedby
pooruseofexceptionsin A Digression.
18.1 Exception Semantics
An exceptionisaneventthatinterruptstheordinarysequentialprocessingofaprogram. Whenanexception
israised,Pythonwill handleitimmediately. Pythondoesthisbyexamining exceptclausesassociatedwith
trystatementstolocateasuiteofstatementsthatcanprocesstheexception. Ifthereisno exceptclause
tohandletheexception,theprogramstopsrunning,andamessageisdisplayedonthestandarderrorﬁle.
Anexceptionhastwosides: thedynamicchangetothesequenceofexecutionandanobjectthatcontains
informationabouttheexceptionalsituation. Thedynamicchangeisinitiatedbythe raisestatement,and
can ﬁnish with the handlers that process the raised exception. If no handler matches the exception, the
program’sexecutioneﬀectivelystopsatthepointofthe raise.
Inadditiontothedynamicsideofanexception,anobjectiscreatedbythe raisestatement;thisisusedto
carryanyinformationassociatedwiththeexception.
Consequences . Theuseofexceptionshastwoimportantconsequences.
First, we need to clarify where exceptions can be raised. Since various places in a program will raise
exceptions,andthesecanbehiddendeepwithinafunctionorclass,theirpresenceshouldbeannouncedby
specifyingthepossibleexceptionsinthedocstring.
Second,multiplepartsofaprogramwillhavehandlerstocopewithvariousexceptions.Thesehandlersshould
handlejustthemeaningfulexceptions. Someexceptions(like RuntimeError orMemoryError)generallycan’t
199
Building Skills in Python, Release 2.6.5
behandledwithinaprogram;whentheseexceptionsareraised,theprogramissobadlybrokenthatthere
isnorealrecovery.
Exceptionsareapowerfultoolfordealingwithrare,atypicalconditions. Generally,exceptionsshouldbe
consideredasdiﬀerentfromtheexpectedorordinaryconditionsthataprogramhandles. Forexample,if
aprogramacceptsinputfromaperson,exceptionprocessingisnotappropriateforvalidatingtheirinputs.
There’snothingrareoruncommonaboutapersonmakingmistakeswhileattemptingtoenternumbersor
dates. Ontheotherhand,anunexpecteddisconnectionfromanetworkserviceisagoodcandidateforan
exception;thisisarareandatypicalsituation. Examplesofgoodexceptionsarethosewhichareraisedin
responsetoproblemswithphysicalresourceslikeﬁlesandnetworks.
Pythonhasalargenumberofbuilt-inexceptions,andaprogrammercancreatenewexceptions. Generally,it
isbettertocreatenewexceptionsratherthanattempttostretchorbendthemeaningofexistingexceptions.
18.2 Basic Exception Handling
Exception handling is done with the trystatement. The trystatement encapsulates several pieces of
information. Primarily,itcontainsasuiteofstatementsandagroupofexception-handlingclauses. Each
exception-handling clause names a class of exceptions and provides a suite of statements to execute in
responsetothatexception.
Thebasicformofa trystatementlookslikethis:
try:
suite
except exception 〈 , target 〉 :
suite
except:
suite
Each suiteisanindentedblockofstatements. Anystatementisallowedinthesuite. Whilethismeansthat
youcanhavenested trystatements,thatisrarelynecessary,sinceyoucanhaveanunlimitednumberof
exceptclausesonasingle trystatement.
Ifanyofthestatementsinthe trysuiteraiseanexception, eachofthe exceptclausesareexaminedto
locateaclausethatmatchestheexceptionraised. Ifnostatementinthe trysuiteraisesanexception,the
exceptclausesaresilentlyignored.
The ﬁrst form of the exceptclause provides a speciﬁc exception class which is used for matching any
exceptionwhichmightberaised. Ifa targetvariablenameisprovided,thisvariablewillhavetheexception
objectassignedtoit.
Thesecondformofthe exceptclauseisthe“catch-all”version. Thiswillmatchallexceptions. Ifused,this
mustbeprovidedlast,sinceitwillalwaysmatchtheraisedexception.
We’lllookattheadditional ﬁnallyclauseinalatersections.
Important: Python3
Theexceptstatement can’t easily handle a list of exception classes. The Python 2 syntax for this is
confusingbecauseitrequiressomeadditional‘ ()’aroundthelistofexceptions.
except ( exception, ... ) 〈 , target 〉 :
200 Chapter 18. Exceptions
Building Skills in Python, Release 2.6.5
ThePython3syntaxwilbeslightlysimpler. Usingthekeyword aswillremovetheneedfortheadditional
‘()’aroundthelistofexceptions.
except exception, ... as target
OverallProcessing .Thestructureofthecomplete trystatementsummarizesthephilosophyofexceptions.
First,trythesuiteofstatements,expectingthemwork. Intheunlikelyeventthatanexceptionisraised,ﬁnd
anexceptionclauseandexecutethatexceptionclausesuitetorecoverfromorworkaroundtheexceptional
situation.
Except clauses include some combination of error reporting, recovery or work-around. For example, a
recovery-orientedexceptclausecoulddeleteuselessﬁles. Awork-aroundexceptionclausecouldreturninga
complexresultforsquarerootofanegativenumber.
First Example . Here’s the ﬁrst of several related examples. This will handle two kinds of exceptions,
ZeroDivisionError andValueError.
exception1.py
defavg( someList ):
"""Raises TypeError or ZeroDivisionError exceptions."""
sum=0
forvinsomeList:
sum=sum+v
returnfloat(sum)/len(someList)
defavgReport ( someList ):
try:
m=avg(someList)
print"Average+15 %=", m*1.15
exceptTypeError , ex:
print"TypeError: ", ex
exceptZeroDivisionError , ex:
print"ZeroDivisionError: ", ex
Thisexampleshowsthe avgReport()function;itcontainsa tryclausethatevaluatesthe avg()function.
Weexpectthattherewillbea ZeroDivisionError exceptionifanemptylistisprovidedto avg(). Also,a
TypeErrorexceptionwillberaisedifthelisthasanynon-numericvalue. Otherwise,itprintstheaverageof
thevaluesinthelist.
Inthetrysuite,weprinttheaverage. Forcertainkindsofinappropriateinput,wewillprinttheexceptions
whichwereraised.
Thisdesignisgenerallyhowexceptionprocessingishandled. Wehavearelativelysimple, clearfunction
whichattemptstodothejobinasimpleandclearway. Wehaveaapplication-speciﬁcprocesswhichhandles
exceptionsinawaythat’sappropriatetotheoverallapplication.
Nested:command:‘try‘Statements . Inmorecomplexprograms,youmayhavemanyfunctiondeﬁni-
tions. Ifmorethanonefunctionhasa trystatement,thenestedfunctionevaluationswilleﬀectivelynest
thetrystatementsinsideeachother.
Thisexampleshowsafunction solve(),whichcallsanotherfunction, quad(). Bothofthesefunctionshave
atrystatement. Anexceptionraisedby quad()couldwindupinanexceptionhandlerin solve().
18.2. Basic Exception Handling 201
Building Skills in Python, Release 2.6.5
exception2.py
defsum( someList ):
"""Raises TypeError"""
sum=0
forvinsomeList:
sum=sum+v
returnsum
defavg( someList ):
"""Raises TypeError or ZeroDivisionError exceptions."""
try:
s=sum(someList)
returnfloat(s)/len(someList)
exceptTypeError , ex:
return"Non-Numeric Data "
defavgReport ( someList ):
try:
m=avg(someList)
print"Average+15 %=", m*1.15
exceptTypeError , ex:
print"TypeError: ", ex
exceptZeroDivisionError , ex:
print"ZeroDivisionError: ", ex
Inthisexample,wehavethesame avgReport()function,whichuses avg()tocomputeanaverageofalist.
We’verewrittenthe avg()functiontodependona sum()function. Both avgReport()andavg()contain
trystatements. Thiscreatesanestedcontextforevaluationofexceptions.
Speciﬁcally,whenthefunctionsumisbeingevaluated,anexceptionwillbeexaminedby avg()ﬁrst,then
examinedby avgReport(). Forexample,if sum()raisesaTypeErrorexception,itwillbehandledby avg();
theavgReport()functionwillnotseethe TypeErrorexception.
FunctionDesign . Notethatthisexamplehasasubtlebugthatillustratesanimportantpointregarding
functiondesign. Weintroducedthebugwhenwedeﬁned avg()toreturneitheranansweroranerrorstatus
codeintheformofa string. Generally,thingsaremorecomplexwhenwetrytomixreturnofvalidresults
andreturnoferrorcodes.
Statuscodesaretheonlywaytoreporterrorsinlanguagesthatlackexceptions. C,forexample, makes
heavyuseofstatuscodes. ThePOSIXstandardAPIdeﬁnitionsforoperatingsystemservicesareoriented
toward C. A program making OS requests must examing the results to see if it is a proper values or an
indicationthatanerroroccurred. Python,however,doesn’thavethislimitation. Consequentlymanyofthe
OSfunctionsavailableinPythonmoduleswillraiseexceptionsratherthanmixproperreturnvalueswith
statuscodevalues.
Inourcase,ourdesignfor avg()atteptstoreturneitheravalidnumericresultorastringresult. Tobe
correctwewouldhavetodotwokindsoferrorcheckingin avgReport(). Wewouldhavetohandleany
exceptionsandwewouldalsohavetoexaminetheresultsof avg()toseeiftheyareanerrorvalueora
properanswer.
Ratherthanreturnstatuscodes,abetterdesignistosimplyuseexceptionsforallkindsoferrors. IStatus
codeshavenorealpurposesinwell-designedprograms. Inthenextsection,we’lllookathowtodeﬁneand
raiseourownexceptions.
202 Chapter 18. Exceptions
Building Skills in Python, Release 2.6.5
18.3 Raising Exceptions
Theraisestatementdoestwothings: itcreatesan exceptionobject,andimmediatelyleavestheexpected
programexecutionsequencetosearchtheenclosing trystatementsforamatching exceptclause. Theeﬀect
ofaraisestatementistoeitherdivertexecutioninamatching exceptsuite,ortostoptheprogrambecause
nomatchingexceptsuitewasfoundtohandletheexception.
TheExceptionobject created by raisecan contain a message string that provides a meaningful error
message. Inadditiontothestring,itisrelativelysimpletoattachadditionalattributestotheexception.
Herearethetwoformsforthe raisesatement.
raiseexceptionClass , value
raiseexception
Theﬁrstformofthe raisestatementusesanexceptionclassname. Theoptionalparameteristheadditional
valuethatwillbecontainedintheexception. Generally,thisisa stringwithamessage,howeveranyobject
canbeprovided.
Here’sanexampleofthe raisestatement.
raiseValueError ,"oh dear me "
This statement raises the built-in exception ValueErrorwith an amplifying stringof"oh dear me" .
The amplifying string in this example, one might argue, is of no use to anybody. This is an important
considerationinexceptiondesign. Whenusingabuilt-inexception,besurethattheargumentsprovided
pinpointtheerrorcondition.
Thesecondformoftheraisestatementusesanobjectconstructortocreatethe Exceptionobject.
raiseValueError ("oh dear me ")
Here’savariationonthesecondforminwhichadditionalattributesareprovidedfortheexception.
ex=MyNewError( "oh dear me ")
ex.myCode=42
ex.myType="O+"
raiseex
Inthiscaseahandlercanmakeuseofthemessage,aswellasthetwoadditionalattributes, myCodeand
myType.
DeﬁningYourOwnException . Youwillrarelyhaveaneedtoraiseabuilt-inexception. Mostoften,
youwillneedtodeﬁneanexceptionwhichisuniquetoyourapplication.
We’llcoverthisinmoredetailaspartoftheobjectorientedprogrammingfeaturesofPython,in Classes.
Here’stheshortversionofhowtocreateyourownuniqueexceptionclass.
classMyError(Exception ):pass
Thissinglestatementdeﬁnesasubclassof ExceptionnamedMyError. Youcanthenraise MyErrorina
raisestatementandcheckfor MyErrorinexceptclauses.
Here’sanexampleofdeﬁningauniqueexceptionandraisingthisexceptionwithanamplifying string.
18.3. Raising Exceptions 203
Building Skills in Python, Release 2.6.5
quadratic.py
importmath
classQuadError (Exception ):pass
defquad(a,b,c):
ifa==0:
ex=QuadError( "Not Quadratic ")
ex.coef=( a, b, c )
raiseex
ifb*b-4*a*c<0:
ex=QuadError( "No Real Roots ")
ex.coef=( a, b, c )
raiseex
x1=(-b+math.sqrt(b*b-4*a*c))/(2*a)
x2=(-b-math.sqrt(b*b-4*a*c))/(2*a)
return(x1,x2)
AdditionalraiseStatements . Exceptionscanberaisedanywhere,includinginan exceptclauseofatry
statement. We’lllookattwoexamplesofre-raisinganexception.
Wecanusethesimple raisestatementinan exceptclause. Thisre-raisestheoriginalexception. Wecan
usethistodostandardizederrorhandling. Forexample,wemightwriteanerrormessagetoalogﬁle,or
wemighthaveastandardizedexceptionclean-upprocess.
try:
attempt something risky
except Exception, ex:
log_the_error( ex )
raise
Thisshowshowwemightwritetheexceptiontoastandardloginthefunction log_the_error() andthen
re-raisetheoriginalexceptionagain. Thisallowstheoverallapplicationtochoosewhethertostoprunning
gracefullyorhandletheexception.
TheothercommontechniqueistotransformPythonerrorsintoourapplication’suniqueerrors. Here’san
examplethatlogsanerrorandtransformsthebuilt-in FloatingPointError intoourapplication-speciﬁc
error,MyError.
class MyError( Exception ): pass
try:
attempt something risky
except FloatingPointError, e:
do something locally, perhaps to clean up
raise MyError("something risky failed: %s" % ( e, ) )
Thisallowsustohavemoreconsistenterrormessages,ortohideimplementationdetails.
18.4 An Exceptional Example
Thefollowingexampleusesauniquelynamedexceptiontoindicatethattheuserwishestoquitratherthan
supplyinput. We’lldeﬁneourownexception,anddeﬁnefunctionwhichrewritesabuilt-inexceptiontobe
ourownexception.
204 Chapter 18. Exceptions
Building Skills in Python, Release 2.6.5
We’ll deﬁne a function, ckyorn(), which does a “Check for Y or N”. This function has two parameters,
promptandhelp,thatareusedtoprompttheuserandprinthelpiftheuserrequestsit. Inthiscase,the
returnvalueisalwaysa“Y”or“N”.Arequestforhelp(“?”) ishandledautomatically. Arequesttoquitis
treatedasanexception,andleavesthenormalexecutionﬂow. Thisfunctionwillaccept“Q”orend-of-ﬁle
(usuallyctrl-D,butalso ctrl-ZonWindows)asthequitsignal.
interaction.py
classUserQuit (Exception ):pass
defckyorn( prompt, help =""):
ok=0
whilenotok:
try:
a=raw_input ( prompt +"[y,n,q,?]: ")
exceptEOFError :
raiseUserQuit
ifa.upper() in['Y','N','YES','NO']: ok=1
ifa.upper() in['Q','QUIT']:
raiseUserQuit
ifa.upper() in['?']:
printhelp
returna.upper()[ 0]
Wecanusethisfunctionasshowninthefollowingexample.
importinteraction
answer=interaction .ckyorn(
help="Enter Y if finished entering data ",
prompt="All done? ")
Thisfunctiontransformsan EOFErrorintoaUserQuitexception,andalsotransformsauserentryof“Q”
or“q”intothissameexception. Inalongerprogram,thisexceptionpermitsashort-circuitofallfurther
processing,omittingsomepotentiallycomplex ifstatements.
Detailsofthe ckyorn()FunctionOurfunctionusesaloopthatwillterminatewhenwehavesuccessfully
interpretedananswerfromtheuser. Wemaygetarequestforhelporperhapssomeuninterpretableinput
fromtheuser. Wewillcontinueourloopuntilwegetsomethingmeaningful. Thepostconditionwillbethat
thevariable okissettoTrueandtheanswer, aisoneof ("Y", "y", "N", "n") .
Withintheloop, wesurroundour raw_input()functionwitha trysuite. Thisallowsustoprocessany
kindofinput,includinguserinputsthatraiseexceptions. Themostcommonexampleistheuserentering
theend-of-ﬁlecharacterontheirkeyboard.
Wehandlethebuilt-in EOFErrorbyraisingour UserQuitexception. Whenwegetend-of-ﬁlefromtheuser,
weneedtotidyupandexittheprogrampromptly.
Ifnoexceptionwasraised,weexaminetheinputcharactertoseeifwecaninterpretit. Notethatiftheuser
enters‘Q’or‘QUIT’,wetreatthisexactlylikeasanend-of-ﬁle;weraisethe UserQuitexceptionsothatthe
programcantidyupandexitquickly.
Wereturnasingle-characterresultonlyforordinary,validuserinputs. Auserrequesttoquitisconsidered
extraordinary,andweraiseanexceptionforthat.
18.4. An Exceptional Example 205
Building Skills in Python, Release 2.6.5
18.5 Complete Exception Handling and The ﬁnally Clause
Acommonusecaseistohavesomeﬁnalprocessingthatmustoccurirrespectiveofanyexceptionsthatmay
arise. Thesituationusuallyariseswhenanexternalresourcehasbeenacquiredandmustbereleased. For
example,aﬁlemustbeclosed,irrespectiveofanyerrorsthatoccurwhileattemptingtoreadit.
Withsomecare,wecanbesurethatallexceptionclausesdothecorrectﬁnalprocessing. However,thismay
leadtoasomeredundantprogramming. The ﬁnallyclausesavesustheeﬀortoftryingtocarefullyrepeat
thesamestatement(s)inanumberof exceptclauses. Thisﬁnalstepwillbeperformedbeforethetryblock
isﬁnished,eithernormallyorbyanyexception.
Thecompleteformofa trystatementlookslikethis:
try:
suite
except exception , target :
suite
except:
suite
finally: suite
Each suiteisanindentedblockofstatements. Anystatementisallowedinthesuite. Whilethismeansthat
youcanhavenested trystatements,thatisrarelynecessary,sinceyoucanhaveanunlimitednumberof
exceptclauses.
Theﬁnallyclauseisalwaysexecuted. Thisincludesallthreepossiblecases: ifthetryblockﬁnisheswith
noexceptions;ifanexceptionisraisedandhandled;andifanexceptionisraisedbutnothandled. Thislast
casemeansthateverynestedtrystatementwitha ﬁnallyclausewillhavethat ﬁnallyclauseexecuted.
Useaﬁnallyclausetocloseﬁles, releaselocks, closedatabaseconnections, writeﬁnallogmessages, and
other kinds of ﬁnal operations. In the following example, we use the ﬁnallyclause to write a ﬁnal log
message.
defavgReport ( someList ):
try:
print"Start avgReport "
m=avg(someList)
print"Average+15 %=", m*1.15
exceptTypeError , ex:
print"TypeError: ", ex
exceptZeroDivisionError , ex:
print"ZeroDivisionError: ", ex
finally:
print"Finish avgReport "
18.6 Exception Functions
Thesysmoduleprovidesonefunctionthatprovidesthedetailsoftheexceptionthatwasraised. Programs
withexceptionhandlingwilloccasionallyusethisfunction.
206 Chapter 18. Exceptions
Building Skills in Python, Release 2.6.5
Thesys.exc_info() function returns a 3- tuplewith the exception, the exception’s parameter, and a
tracebackobjectthatpinpointsthelineofPythonthatraisedtheexception. Thiscanbeusedsomething
likethefollowingnot-very-goodexample.
exception2.py
importsys
importmath
a=2
b=2
c=1
try:
x1=(-b+math.sqrt(b*b-4*a*c))/(2*a)
x2=(-b-math.sqrt(b*b-4*a*c))/(2*a)
printx1, x2
except:
e,p,t=sys.exc_info()
printe,p
Thisusesmultipleassignment tocapturethethreeelementsofthe sys.exc_info() tuple,theexception
itselfine,theparameterin pandaPython tracebackobjectin t.
This“catch-all”exceptionhandlerinthisexampleisabadpolicy. Itmaycatchexceptionswhicharebetter
leftuncaught. We’lllookatthesekindsofexceptionsin Built-in Exceptions . Forexample,a RuntimeError
issomethingyoushouldnotbothercatching.
18.7 Exception Attributes
Exceptions have one interesting attribute. In the following example, we’ll assume we have an exception
objectnamed e. Thiswouldhappeninsidean exceptclausethatlookedlike‘ except SomeException, e: ’.
Traditionally,exceptionshada messageattributeaswellasan argsattribute. Thesewereusedinconsis-
tently.
Whenyoucreateanew Exceptioninstance,theargumentvaluesprovidedareloadedintothe argsattribute.
Ifyouprovideasinglevalue,thiswillalsobeavailableas message;thisisapropertynamethatreferences
‘args[0]’.
Here’sanexamplewhereweprovidedmultiplevaluesaspartofour Exception.
>>>a=Exception (1,2,3)
>>>a.args
(1, 2, 3)
>>>a.message
__main__:1: DeprecationWarning: BaseException.message has been deprecated as of
Python 2.6
''
Here’sanexamplewhereweprovidedasinglevalueaspartofour Exception; inthiscase, the message
attributeismadeavailable.
>>>b=Exception ("Oh dear")
>>>b.message
'Oh dear'
18.7. Exception Attributes 207
Building Skills in Python, Release 2.6.5
>>>b.args
('Oh dear',)
18.8 Built-in Exceptions
ThefollowingexceptionsarepartofthePythonenvironment. Therearethreebroadcategoriesofexceptions.
•Non-errorExceptions. Theseareexceptionsthatdeﬁneeventsandchangethesequenceofexecution.
•Run-time Errors. These exceptions can occur in the normal course of events, and indicate typical
programproblems.
•InternalorUnrecoverableErrors. TheseexceptionsoccurwhencompilingthePythonprogramorare
partoftheinternalsofthePythoninterpreter;thereisn’tmuchrecoverypossible,sinceitisn’tclear
thatourprogramcanevencontinuetooperate. ProblemswiththePythonsourcearerarelyseenby
applicationprograms,sincetheprogramisn’tactuallyrunning.
Herearethenon-errorexceptions. Generally,youwillneverhaveahandlerforthese,norwillyoueverraise
themwitharaisestatement.
exception StopIteration
Thisisraisedbyaniteratorwhenthereisnonextvalue. The forstatementhandlesthistoendan
iterationloopcleanly.
exception GeneratorExit
Thisisraisedwhenageneratorisclosedbyhavingthe close()methodevaluated.
exception KeyboardInterrupt
Thisisraisedwhenauserhits ctrl-CtosendaninterruptsignaltothePythoninterpreter. Gener-
ally, thisisnotcaughtinapplicationprogramsbecauseit’stheonlywaytostopaprogramthatis
misbehaving.
exception SystemExit
This exception is raised by the sys.exit()function. Generally, this is not caught in application
programs;thisisusedtoforceaprogramtoexit.
Herearetheerrorswhichcanbemeaningfullyhandledwhenaprogramruns.
exception AssertionError
Assertionfailed. Seethe assertstatementformoreinformationin The assert Statement
exception AttributeError
Attributenotfoundinanobject.
exception EOFError
Readbeyondendofﬁle.
exception FloatingPointError
Floatingpointoperationfailed.
exception IOError
I/Ooperationfailed.
exception IndexError
Sequenceindexoutofrange.
exception KeyError
Mappingkeynotfound.
208 Chapter 18. Exceptions
Building Skills in Python, Release 2.6.5
exception OSError
OSsystemcallfailed.
exception OverflowError
Resulttoolargetoberepresented.
exception TypeError
Inappropriateargumenttype.
exception UnicodeError
Unicoderelatederror.
exception ValueError
Inappropriateargumentvalue(ofcorrecttype).
exception ZeroDivisionError
Secondargumenttoadivisionormodulooperationwaszero.
ThefollowingerrorsindicateseriousproblemswiththePythoninterepreter.Generally,youcan’tdoanything
iftheseerrorsshouldberaised.
exception MemoryError
Outofmemory.
exception RuntimeError
Unspeciﬁedrun-timeerror.
exception SystemError
InternalerrorinthePythoninterpreter.
Thefollowingexceptionsaremoretypicallyreturnedatcompiletime,orindicateanextremelyseriouserror
inthebasicconstructionoftheprogram. Whiletheseexceptionalconditionsareanecessarypartofthe
Pythonimplementation,there’slittlereasonforaprogramtohandletheseerrors.
exception ImportError
Importcan’tﬁndmodule,orcan’tﬁndnameinmodule.
exception IndentationError
Improperindentation.
exception NameError
Namenotfoundglobally.
exception NotImplementedError
Methodorfunctionhasn’tbeenimplementedyet.
exception SyntaxError
Invalidsyntax.
exception TabError
Impropermixtureofspacesandtabs.
exception UnboundLocalError
Localnamereferencedbutnotboundtoavalue.
Thefollowingexceptionsarepartoftheimplementationofexceptionobjects. Normally,theseneveroccur
directly. Thesearegenericcategoriesofexceptions. Whenyouuseoneofthesenamesina catchclause,a
numberofmoremorespecializedexceptionswillmatchthese.
exception Exception
Commonbaseclassforalluser-deﬁnedexceptions.
18.8. Built-in Exceptions 209
Building Skills in Python, Release 2.6.5
exception StandardError
Base class for all standard Python errors. Non-error exceptions ( StopIteration ,GeneratorExit ,
KeyboardInterrupt andSystemExit)arenotsubclassesof StandardError .
exception ArithmeticError
Base class for arithmetic errors. This is the generic exception class that includes OverflowError ,
ZeroDivisionError ,andFloatingPointError .
exception EnvironmentError
Baseclassforerrorsthatareinput-outputoroperatingsystemrelated. Thisisthegenericexception
classthatincludes IOErrorandOSError.
exception LookupError
Baseclassforlookuperrorsinsequencesormappings,itincludes IndexErrorandKeyError.
18.9 Exception Exercises
1.InputHelpers . Thereareanumberofcommoncharacter-modeinputoperationsthatcanbeneﬁt
fromusingexceptionstosimplifyerrorhandling. Alloftheseinputoperationsarebasedaroundaloop
thatexaminestheresultsofraw_inputandconvertsthistoexpectedPythondata.
Allofthesefunctionsshouldacceptaprompt,adefaultvalueandahelptext. Someofthesehave
additionalparameterstoqualifythe listofvalidresponses.
Allofthesefunctionsconstructapromptoftheform:
your prompt [ valid input hints ,?,q]:
Iftheuserentersa?,thehelptextisdisplayed. Iftheuserentersaq,anexceptionisraisedthatindi-
catesthattheuserquit. Similarly,ifthe KeyboardInterrupt oranyend-of-ﬁleexceptionisreceived,
auserquitexceptionisraisedfromtheexceptionhandler.
Mostofthesefunctionshaveasimilaralgorithm.
User Input Function
(a)ConstructPrompt . Constructthepromptwiththehintsforvalidvalues,plus‘ ?’ and‘q’.
(b)WhileNotValidInput . Loopuntiltheuserentersvalidinput.
Trythefollowingsuiteofoperations.
PromptandRead . Useraw_input()topromptforandreadareplyfromtheuser.
Help?. Iftheuserentered“?”,providethehelpmessage.
Quit?. Iftheuserentered“q”or“Q”,raiseaUserQuitexception.
Other. Trythefollowingsuiteofoperations
Convert. Attemptanyconversion. Someinputswillinvolvenumeric,ordate-
timeconversions.
Validate. Ifnecessary,doanyvalidationcheckschecks. Forsomeprompts,there
willbeaﬁxedlistofvalidanswers.Theremaybeanumericrangeoradaterange.
Forotherprompts,thereisnocheckingrequired.
Iftheinputpassesthevalidation,breakoutoftheloop. Thisisourhoped-for
answer.
210 Chapter 18. Exceptions
Building Skills in Python, Release 2.6.5
Intheeventofanexception,theuserinputwasinvalid.
Nothing?. Iftheuserenterednothing,andthereisadefaultvalue,returnthedefault
value.
Intheeventofanyotherexceptions,thisfunctionshouldgenerallyraisea UserQuitexception.
(c)Result. Returnthevalidateduserinput.
Functionstoimplement
ckdatePrompts for and validates a date. The basic version would require dates have a
speciﬁcformat,forexamplemm/dd/yy.Amoreadvancedversionwouldaccepta string
tospecifytheformatfortheinput. Muchofthisdatevalidationisavailableinthe time
module, which will be covered in Dates and Times: the time and datetime Modules .
Thisfunctionnotreturnbaddatesorotherinvalidinput.
ckintDisplayaprompt;verifyandreturnanintegervalue
ckitemBuildamenu;promptforandreturnamenuitem. Amenuisanumberedlistof
alternativevalues,theuserselectsavaluebyenteringthenumber. Thefunctionshould
acceptasequenceofvalidvalues,generatethenumbersandreturntheactualmenuitem
string. Anadditionalhelppromptof "??"shouldbeaccepted, thiswritesthehelp
messageandredisplaysthemenu.
ckkeywdPromptsforandvalidatesakeywordfromalistofkeywords. Thisissimilarto
themenu,butthepromptissimplythelistofkeywordswithoutnumbersbeingadded.
ckpathDisplayaprompt;verifyandreturnapathname. Thiscanusetheos.pathmodule
forinformationonconstructionofvalidpaths. Thisshouldusefstattochecktheuser
inputtoconﬁrmthatitactuallyexists.
ckrangePrompts for and validates an integer in a given range. The range is given as
separatevaluesforthelowestallowedandhighestallowedvalue. Ifeitherisnotgiven,
then that limit doesn’t apply. For instance, if only a lowest value is given, the valid
inputisgreaterthanorequaltothelowestvalue. Ifonlyahighestvalueisgiven,the
inputmustbelessthanorequaltothehighestvalue.
ckstrDisplayaprompt; verifyandreturna stringanswer. Thisissimilartothebasic
raw_input(),exceptthatitprovidesasimplehelpfeatureandraisesexceptionswhen
theuserwantstoquit.
cktimeDisplayaprompt;verifyandreturnatimeofday. Thisissimilartockdate;amore
advancedversionwouldusethetimemoduletovalidateinputs. Thebasicversioncan
simplyaccepta‘ hh:mm:ss’timestringandvalidateitasalegaltime.
ckyornPromptsforandvalidatesyes/no.Thisissimilartockkeywd,exceptthatittolerates
anumberofvariationsonyes(YES,y,Y)andanumberofvariationsonno(NO,n,N).
Itreturnsthecanonicalforms: YorNirrespectiveoftheinputactuallygiven.
18.10 Style Notes
Built-inexceptionsareallnamedwithaleadingupper-caseletter. Thismakesthemconsistentwithclass
names,whichalsobeginwithaleadingupper-caseletter.
Most modules or classes will have a single built-in exception, often called Error. This exception will be
importedfromamodule,andcanthenbequaliﬁedbythemodulename. Modulesandmodulequaliﬁcation
iscoveredin Components, Modules and Packages . Itisnottypicaltohaveacomplexhierarchyofexceptional
conditionsdeﬁnedbyamodule.
18.10. Style Notes 211
Building Skills in Python, Release 2.6.5
18.11 A Digression
Readers with experience in other programming languages may equate an exception with a kind of goto
statement. Itchangesthenormalcourseofexecutiontoa(possiblyhardtoﬁnd)exception-handlingsuite.
Thisisacorrectdescriptionoftheconstruct,whichleadstosomediﬀicultdecision-making.
Someexception-causingconditionsareactuallypredictablestatesoftheprogram. Thenotableexclusions
areI/OError,MemoryErrorandOSError. Thesethreedependonresourcesoutsidethedirectcontrolof
therunningprogramandPythoninterpreter. ExceptionslikeZeroDivisionErrororValueErrorcanbe
checkedwithsimple,clear ifstatements. ExceptionslikeAttributeErrororNotImplementedErrorshould
neveroccurinaprogramthatisreasonablywellwrittenandtested.
Relyingonexceptionsforgarden-varietyerrors–thosethatareeasilyspottedwithcarefuldesignortesting
–isoftenasignofshoddyprogramming. Theusualstoryisthattheprogrammerreceivedtheexception
duringtestingandsimplyaddedtheexceptionprocessing trystatementtoworkaroundtheproblem;the
programmermadenoeﬀorttodeterminetheactualcauseorremediationfortheexception.
Intheirdefense,exceptionscansimplifycomplexnested ifstatements. Theycanprovideaclear“escape”
fromcomplexlogicwhenanexceptionalconditionmakesallofthecomplexitymoot. Exceptionsshouldbe
usedsparingly,andonlywhentheyclarifyorsimplifyexpositionofthealgorithm. Aprogrammershould
notexpectthereadertosearchallovertheprogramsourcefortherelevantexception-handlingclause.
Futureexamples,whichuseI/OandOScalls,willbeneﬁtfromsimpleexceptionhandling. However,excep-
tionladenprogramsareaproblemtointerpret. Exceptionclausesarerelativelyexpensive,measuredbythe
timespenttounderstandtheirintent.
212 Chapter 18. Exceptions
CHAPTER
NINETEEN
ITERA TORS AND GENERA TORS
The yield Statement
We’vemadeextensiveuseoftherelationshipbetweenthe forstatementandvariouskindsof iterablecon-
tainerswithoutlookingtoocloselyathowthisreallyworks.
In this chapter, we’ll look at the semantics of iterators in Iterator Semantics ; this includes their close
relationshptoaniterablecontainer,andthe forstatement. Wecanthenlookatthesemanticsofgenerator
functionsin Generator F unction Semantics ,andtalkaboutthesyntaxfordeﬁningageneratorfunctionin
Deﬁning a Generator F unction .
We’lllookatotherbuilt-infunctionsweusewithiteratorsin Generator F unctions .
We’llreviewstatementsrelatedtotheuseofiteratorsin Generator Statements .
We’llprovidemoreplaceswhereiteratorsareusedin Iterators Everywhere ,aswellasanin-depthexample
in Generator F unction Example .
Whenweseehowtodeﬁneourownclassesofobjects,we’lllookatcreatingourowniteratorsin Creating
or Extending Data T ypes .
19.1 Iterator Semantics
Theeasiestwaytodeﬁneaniterator(andtheclosely-relatedconceptofgeneratorfunction)istolookatthe
forstatement. The forstatementmakesuseofalargenumberofiteratorfeatures. Thisstatementisthe
coreusecaseforiterators,andwe’lluseittounderstandtheinterfaceaniteratormustprovide.
Let’slookatthefollowingsnippetofcode.
foriin(1,2,3,4,5):
printi
Underthehood,the forstatementengagesinthefollowingsequenceofinteractionswithaniterableobject
(thetuple(1,2,3,4,5)).
1.Theforstatementrequestsaniteratorfromtheobject. The forstatementdoesthisbyevaluatingthe
iter()functionontheobjectinthe inclause.
Theworkingdeﬁnitionof iterableisthattheobjectrespondstothe iter()functionbyreturningan
iterator. All of the common containers ( str,list,tuple,dict,set) will respond to the iter()
functionbyreturninganiteratorovertheitemsinthecontainer. A dictiteratorwillyieldthekeys
inthemapping.
213
Building Skills in Python, Release 2.6.5
2.Theforstatementusesthe next()functiontoevaluatethetheiterator’s next()methodandassigns
theresultingobjecttothetargetvariable. Inthiscase,thevariable iisassignedtoeachobject.
3.Theforstatementevaluatesthesuiteofstatements. Inthiscase,thesuiteisjusta printstatement.
4.Theforstatementcontinuessteps2and3untilanexceptionisraised.
Iftheexceptionisa StopIteration ,thisishandledtoindicatethattheloophasﬁnishednormally.
Theforstatementisonesideoftheinterface;theothersideistheiteratorobjectitself. Fromtheabove
scenario,wecanseethataniteratormustdeﬁnea __next__()methodthatthe forstatementcanuse. This
methoddoesoneoftwothings.
•Returnsthenextitemfromasequence(orothercontainer)or
•Raisesthe StopIteration exception.
Todothis,aniteratormustalsomaintainsomekindofinternalstatetoknowwhichiteminthesequence
willbedeliverednext.
When we describe a container as iterable, we mean that it responds to the built-in iter()function by
returninganiteratorobjectthatcanbeusedbythe forstatement. Allofthesequencecontainersreturn
iterators; set,dictandﬁlesalsoreturniterators. Inthecaseofa dict,theiteratorreturnsthe dictkeys
innoparticularorder.
IteratorsinPython . Asnotedabove,allofthecontainerswe’veseensofarhavetheiterableinterface.
Thismeansthatthecontainerwillreturnaniteratorobjectthatwillvisitalltheelements(orkeys)inthe
container.
ItturnsoutthattherearemanyotherusesofiteratorsinPython. Manyofthefunctionswe’velookedat
workwithiterators.
We’llreturntothisin Iterators Everywhere .
DeﬁningOurOwnIterators . Therearetwowaystodeﬁneourowniterators. Wecancreateanobject
thathastheiteratorinterface,orwecandeﬁneageneratorfunction. Underthehood,ageneratorfunction
will have the iterator interface, but we’re saved from having to create a class with all the right method
functionnames.
We’lllookatGeneratorFunctionsin Generator F unction Semantics .
We’lllookatdeﬁninganIteratorclassin Data + Processing = Objects .
19.2 Generator Function Semantics
Ageneratorfunctionisafunctionthatcanbeusedbythe forstatementasifitwereaniterator. Agenerator
lookslikeaconventionalfunction,withoneimportantdiﬀerence: ageneratorincludesthe yieldstatement.
Theessentialrelationshipbetweenageneratorfunctionandthe forstatementisthefollowing.
1.Theforstatement calls the generator. The generator begins execution and executes statements in
thesuiteuptotheﬁrst yieldstatement. Theyieldcreatestheinitialvalueforthe forstatementto
assign.
2.Theforstatement applies the built-in next()function to the generator function’s hidden next()
method. Thevaluethatwasreturnedbythe yieldstatementisassignedtothetargetvariable.
3.Theforstatementevaluatesit’ssuiteofstatements.
4.Theforstatement applies the built-in next()function to the generator function’s hidden next()
method. Thegeneratorresumesexecutionafterthe yieldstatement. Whenthegeneratorfunction
getstoanotheryieldstatement,thisvaluecreatesavalueforthe forstatement.
214 Chapter 19. Iterators and Generators
Building Skills in Python, Release 2.6.5
5.Theforstatementcontinuessteps3and4untilthegeneratorexecutesa returnstatement(orruns
pasttheendofit’ssuite). Eithersituationwillraisethe StopIteration exception.
WhenaStopIteration israised,itishandledbythe forstatementasanormalterminationofthe
loop.
What we Provide . Generator function deﬁnition is similar to function deﬁnition (see F unctions). We
provide three pieces of information: the name of the generator, a list of zero or more parameters, and a
suiteofstatementsthatyieldstheoutputvalues. Thesuiteofstatementsmustincludeatleastone yield
statement.
Weevaluateageneratorina forstatementbyfollowingthefunction’snamewith‘ ()’enclosinganyargument
values. ThePythoninterpreterevaluatestheargumentvalues,thenappliesthegenerator. Thiswillstart
executionofthethegenerator’ssuite.
Once the generator has started, the generator and the forstatement pass control back and forth. The
generatorwillyieldobjectsandthe forstatementconsumesthoseobjects.
Thisback-and-forthbetweenthe forstatementandthegeneratormeansthatthegenerator’slocalvariables
are all preserved. In other words, a generator function has a peer relationship with the forstatement;
it’slocalvariablesarekeptwhenityieldsavalue. The forsuiteandthegeneratorsuitecouldbecalled
coroutines.
Example: UsingaGeneratortoConsolidateInformation . Lexicalscanningandparsingareboth
tasks that compilers do to discover the higher-level constructs that are present in streams of lower-level
elements. Alexicalscannerdiscoverspunctuation, literalvalues, variables, keywords, comments, andthe
likeinaﬁleofcharacters. Aparserdiscoversexpressionsandstatementsinasequenceoflexicalelements.
Lexicalscanningandparsingalgorithms consolidateanumberofcharactersintotokensoranumberoftokens
intoastatement. Acharacteristicofthesealgorithmsisthatsomestatechangeisrequiredtoconsolidatethe
inputspriortocreatingeachoutput. Ageneratorprovidesthesecharacteristicsbypreservingthegenerator’s
stateeachtimeanoutputisyielded.
Inbothlexicalscanningandparsing, thegeneratorfunctionwillbeloopingthroughasequenceofinput
values,discoveringahigh-levelelement,andthenyieldingthatelement. The yieldstatementreturnsthe
sequenceofresultsfromageneratorfunction,andalsosavesallthelocalvariables,andeventhelocationof
theyieldstatementsothatthegenerator’snextrequestwillresumeprocessingrightafterthe yield.
19.3 Deﬁning a Generator Function
Thepresenceofthe yieldstatementinafunctionmeansthatthefunctionisactuallyageneratorobject,
andwillhavetheaniterator-likeinterfacebuiltautomatically. Ineﬀectitbecomesastatefulobjectwitha
next()methoddeﬁned–soitwillworkwiththe next()functionandforstatement–anditwillraisethe
StopIteration exceptionwhenitreturns.
Thesyntaxforafunctiondeﬁnitionisin F unction Deﬁnition: The def and return Statements ;agenerator
issimilar.
def name ( parameter 〈, ... 〉 ):
suite
Thesuiteofstatementsmustincludeatleastone yieldstatement.
Theyieldstatementspeciﬁesthevaluesemittedbythegenerator. Notethattheexpressionisrequired.
yieldexpression
19.3. Deﬁning a Generator Function 215
Building Skills in Python, Release 2.6.5
Ifareturnstatementisusedinthefunction,itendsthegeneratorbyraisingthe StopIteration exception
toalerttheforstatement. Forobviousreasons,the returnstatementcannotreturnavalue.
Here’sacomplete,butsillyexampleofagenerator.
defprimes():
yield2
yield3
yield5
yield7
yield11
return
Inthiscase,wesimplyyieldaﬁxedsequenceofvalues. Afteryieldingﬁvevalues,itexits. Here’showthis
generatorisusedbya forstatement.
>>>forpinprimes():
... printp
2
3
5
7
11
19.4 Generator Functions
Theiter()functioncanbeusedtoacquireaniteratorobjectassociatedwithacontainerlikeasequence,
set,ﬁleordict. Wecanthenmanipulatethisiteratorexplicitlytohandlesomecommonsituations.
iter(iterable)
Returnstheiteratorforanobject. Thisiteratorinteractswithbuilt-intypesinobviousways. For
sequences,thiswillreturneachelementinorder. For sets,itwillreturneachelementinnoparticular
order. Fordictionaries,itwillreturnthekeysinnoparticularorder. Forﬁles,itwillreturneachline
inorder.
Gettimg an explicit iterator – outside a forstatement – is handy for dealing with data structures (like
ﬁles)whichhaveahead-bodystructure. Inthiscase,thereareoneormoreelements(thehead)whichare
processedonewayandtheremainingelements(thebody)whichareprocessedanotherway.
We’llreturntothisindetailin Files. Fornow,here’sasmallexample.
>>>someSeq =range(2,20,2)
>>>seq_iter =iter(someSeq)
>>>next(seq_iter)
2
>>>forvalueinseq_iter:
... printvalue,
...
4 6 8 10 12 14 16 18
1.Wecreateasequence, someSeq. Anyiterableobjectwouldworkhere;anysequence, set,dictorﬁle.
2.Wecreatetheiteratorforthissequence,andassignitto seq_iter. Thisobjecthasa next()method
whichisusedbythe next()functionandthe forstatement.
3.Wecall‘next(seq_iter) ’explicitlytogetpastoneheadingiteminthesequence.
216 Chapter 19. Iterators and Generators
Building Skills in Python, Release 2.6.5
4.Wethenprovidetheiteratortothe forstatement. Theforstatementrepeatedlyevaluatesthe next()
functionontheiteratorobjectandexecutesitssuiteofstatements.
19.5 Generator Statements
What the for statement really does
In Iterative Processing: The for Statement ,wedeﬁnedaforstatementusingthefollowingsummary:
forvariable initerable :
suite
Weglossedoverthe iterable,showinghowtocreatesimplesequenceobjectsusingthe range()functionor
explicitlistliterals.
At this point, we can use a number of data structures that are “iterable”: they respond the the iter()
functionbycreatinganiterator.
Also,wecandeﬁnegeneratorfunctions,whicharealsoiterable.
TheSecretWorldoffor . Oncewe’velookedatgeneratorfunctionsanditerators,wecanseewhatthe
forstatementreallydoes. Thepurposeofthe forstatementistovisiteachvalueyieldedbyaniterator,
assigningeachvaluetothe variable.
Notethattherearetwopartstothis.
First,the‘ for variable in object ’evalates‘ iter(object) ’togetaniterator. Objectswillreturnanan
iteratorallprimedandreadytoyield. Ageneratorfunctionwill–eﬀectively–returnitself,allprimedand
readytoyield.
Second,theiteratorobject(orgeneratorfunction)mustyieldasequenceofvalues.
Lookingforward,we’llseemanyadditionalapplicationsofthewaythe forstatementworks. Aswelookat
designingourownobjectsin Data + Processing = Objects ,we’llwanttoassurethatourobjectsworkwell
withtheforstatement,also.
19.6 Iterators Everywhere
Iteratorsareubiquitous. Wehave–uptothispoint–beenbreezyandcasualaboutalltheplacesiterators
areused.
We’ve looked at many functions ( max(),min(),any(),all(),sum(),sorted(),reversed(), and
enumerate()) which apply to all the various container classes. Actually, these functions all apply to it-
eratorsandourcontainersreturntheiteratorsthesefunctionsexpect.
Asasimpleexample,wecandeﬁneourownversionof enumerate().
defenumerate ( iterable, start =0):
foriteminiterable:
yieldstart, item
start+=1
That’sallthat’srequiredtowriteafunctionwhichworkswithaniterable,andisitselfaniterator. This
styleofprogrammingiscalled functional,andisbeyondthescopeofthisbook.
Additionally,we’velookedatthe range()functionwithoutlookingtoocloselyatit’ssibling xrange().
19.5. Generator Statements 217
Building Skills in Python, Release 2.6.5
Important: Python3andRange
InPython3,the range()function–whichcreatedalistobject–willbereplacedwithaniterator.
Tocreatealistobject,you’lldothis
someList =list(range(6) )
Ineﬀect,the xrange()iteratorwillberenamed range(). Thelegacy range()functionwillgoaway.
Itturnsoutthatwe’vebeenmakingheavyuseofiterators. Functionslike sorted(),reversed(),any(),
all(),andsum()allworkwithiteratorsnotsimplylistobjects.
We’lllookathowtocreateourowniteratorobjectsin Col lection Special Method Names for Iterators and
Iterable.
19.7 Generator Function Example
Let’slookatanexamplewhichsummarizessomedetails,yieldingthesummaries. Assumewehavethe list
oftuplesnamed spins. Wewanttoknowhowmanyredspinsseparateapairofblackspins,onaverage.
Weneedafunctionwhichwillyieldthecountofgapsasitexaminesthespins. Wecanthencallthisfunction
repeatedlytogetthegapinformation.
generator.py
spins=[('red','18'), ('black','13'), ('red','7'),
('red','5'), ('black','13'), ('red','25'),
('red','9'), ('black','26'), ('black','15'),
('black','20'), ('black','31'), ('red','3')]
defcountReds ( aList ):
count=0
forcolor,number inaList:
ifcolor=='black':
yieldcount
count=0
else:
count+=1
yieldcount
gaps=[ gapforgapincountReds(spins) ]
printgaps
1.Thespinsvariabledeﬁnesoursampledata. Thismightbeanactualrecordofspins.
2.Wedeﬁneour gapCount()function. Thisfunctioninitializes counttoshowthenumberofnon-black’s
beforeablack. Itthenstepsthroughtheindividualspins,intheorderpresented. Fornon-black’s,the
countisincremented.
3.Forblackspins,however,weyieldthelengthofthegapbetweenthelastblack. Whenweyieldaresult,
thegeneratorproducesaresultvalue,andalsosavesalltheotherprocessinginformationaboutthis
functionsothatitcanbecontinuedfromthispoint.
Whenthefunctioniscontinued,itresumesrightafterthe yieldstatement: thecountwillbereset,
andtheforloopwilladvancetoexaminethenextnumberinthesequence.
218 Chapter 19. Iterators and Generators
Building Skills in Python, Release 2.6.5
4.Whenthesequenceisexhausted,wealsoyieldtheﬁnalcount. Theﬁrstandlastgapcountsmayhave
tobediscardedforcertainkindsofstatisticalanalysis.
5.Thisgapsstatementshowshowweusethegenerator. Inthiscase, wecreatealistcomprehension
fromtheresults;the forclausewillstepthroughthevaluesyieldedbythegeneratoruntiltheitexits
normally. Thissequenceofvaluesiscollectedintoa listthatwecantheuseforstatisticalanalysis.
19.8 Generator Exercises
1.The Sieve of Eratosthones (Again) . Look at The Sieve of Eratosthones and The Sieve of Er-
atosthones. Wecreateda listorasetofcandidateprimenumbers.
This exercise has three parts: initialization, generating the list(orset) or prime numbers, then
reporting. Inthe listversion,wehadtoﬁlterthesequenceofbooleanvaluestodeterminetheprimes.
Inthesetversion,the setcontainedtheprimes.
Withinthe Generatestep,thereisapointwhereweknowthatthevalueof pisprime. Atthispoint,
wecanyieldp. Ifweyieldeachvalueaswediscoverit,weeliminatetheentire“report”stepfromthe
function.
2.The Generator Version of range(). Therange()function creates a sequence. For very large
sequences,thisconsumesalotofmemory. Youcanwriteaversionofrangewhichdoesnotcreatethe
entiresequence,butinsteadyieldstheindividualvalues. Usingageneratorwillhavethesameeﬀect
asiteratingthroughasequence,butwon’tconsumeasmuchmemory.
Deﬁne a generator, genrange(), which generates the same sequence of values as range(), without
creatinga listobject.
Checkthedocumentationforthebuilt-infunction xrange().
3.PrimeFactors . Therearetwokindsofpositivenumbers: primenumbersandcompositenumbers. A
compositenumberistheproductofasequenceofprimenumbers. Youcanwriteasimplefunctionto
factornumbersandyieldeachprimefactorofthenumber.
Yourfactor()functioncanacceptanumber, n,forfactoring. Thefunctionwilltestvalues, f,between
2andthesquarerootof ntoseeiftheexpression‘ n % f == 0’istrue. Ifthisistrue. thenthefactor,
f,divides nwithnoremainder; fisafactor.
Don’tuseasimple-looking for-loop;theprimefactorof128is2,repeated7times. You’llneedtouse
awhileloop.
19.8. Generator Exercises 219
Building Skills in Python, Release 2.6.5
220 Chapter 19. Iterators and Generators
CHAPTER
TWENTY
FILES
The ‘file ’ Class; The with Statement
Programsoftendealwithexternaldata;dataoutsideofvolatileprimarymemory. Thisexternaldatacould
bepersistentdataonaﬁlesystemortransientdataonaninput-outputdevice. Mostoperatingsystems
provideasimple,uniforminterfacetoexternaldataviaobjectsofthe fileclass.
In File Semantics ,weprovideanoverviewofthesemanticsofﬁles. WecoverthemostimportantofPython’s
built-infunctionsforworkingwithﬁlesin Built-in F unctions . We’llreviewstatementsfordealingwithﬁles
in File Statements . In File Methods,wedescribesomemethodfunctionsofﬁleobjects.
Filesareadeep,deepsubject. We’lltouchonseveralmodulesthatarerelatedtomanagingﬁlesin Com-
ponents, Modules and Packages . Theseinclude File Handling Modules and File F ormats: CSV, T ab, XML,
Logs and Others .
20.1 File Semantics
Inonesenseaﬁleisacontainerforasequenceofbytes. Amoreusefulview,however,isthata fileisa
containerofdataobjects,encodedasasequenceofbytes. Filescanbekeptonpersistentbutslowdevices
likedisks. Filescanalsobepresentedasastreamofbytesﬂowingthroughanetworkinterface. Eventhe
user’skeyboardcanbeprocessedasifitwasaﬁle;inthiscasetheﬁleforcesoursoftwaretowaituntilthe
persontypessomething.
Our operating systems use the abstraction of ﬁleas a way to unify access to a large number of devices
andoperatingsystemservices. IntheLinuxworld,allexternaldevices,plusalargenumberofin-memory
datastructuresareaccessiblethroughtheﬁleinterface. Thewidevarietyofthingswithﬁle-likeinterfaces
isaconsequenceofhowUnixwasoriginallydesigned. Sincethenumberandtypesofdevicesthatwillbe
connectedtoacomputerisessentiallyinﬁnite,devicedriversweredesignedasasimple,ﬂexibleplug-into
theoperatingsystem. Formoreinformationontheubiquityofﬁles,see Additional Background .
Files include more than disk drives and network interfaces. Kernel memory, random data generators,
semaphores,sharedmemoryblocks,andotherthingshaveﬁleinterfaces,eventhoughtheyaren’t–strictly
speaking–devices. OurOSappliestheﬁleabstractiontomanythings. Python,similarly,extendstheﬁle
interfacetoincludecertainkindsofin-memorybuﬀers.
All GNU/Linux operating systems make all devices available through a standard ﬁle-oriented interface.
Windowsmakesmostdevicesavailablethroughareasonablyconsistentﬁleinterface. Python’s fileclass
providesaccesstotheOSﬁleAPI’s,givingourapplicationsthesameuniformaccesstoavarietyofdevices.
Important: Terminology
221
Building Skills in Python, Release 2.6.5
The terminology is sometimes confusing. We have physical ﬁles on our disk, the ﬁle abstraction in our
operating system, and fileobjects in our Python program. Our Python fileobject makes use of the
operatingsystemﬁleAPI’swhich,inturn,manipulatetheﬁlesonadisk.
We’lltrytobeclear,butwithonlyoneoverloadedwordforthreediﬀerentthings,thischaptermaysometimes
beconfusing.
Werarelyhaveareasontotalkaboutaphysicalﬁleonadisk. Generallywe’lltalkabouttheOSabstraction
ofﬁleandthePythonclassof file.
Standard Files . Consistent with POSIX standards, all Python programs have three ﬁles available:
sys.stdin,sys.stdout,sys.stderr. Theseﬁlesareusedbycertainbuilt-instatementsandfunctions. The
printstatement(and print()function),forexample,writesto sys.stdoutbydefault. The raw_input()
functionwritesthepromptto sys.stdoutandreadstheinputfrom sys.stdin.
These standard ﬁles are always available, and Python assures that they are handled consistently by all
operatingsystems. The sysmodulemakestheseﬁlesavailableforexplictuse. Newbiesmaywanttocheck
File Redirection for Newbies forsomeadditionalnotesonthesestandardﬁles.
FileRedirectionforNewbies
Thepresenceofastandardinputﬁleandtwostandardoutputﬁlesisapowerfultoolforsimplifying
programsandmakingthemmorereusable. Programswhichreadfromstandardinputandwriteto
standard output can be combined intoprocessing sequences, called pipelines. The POSIX-standard
syntaxforcreatingapipelineisshownbelow.
$ ./step1.py <source.dat | ./step2.py >result.dat
Thispipelinehastwosteps: step1.pyreadsinputfromstdinandwritestostdout. We’vetoldtheshell
toredirectstdinsothatitreadstheﬁle source.dat. We’vealsotoldtheshelltoconnect step1.py
standardoutputto step2.pystandardinput. We’vealsoredirected step2.pystandardoutputtoa
ﬁle,result.dat.
Wecansimplifyourprogramswhenwemaketheshellresponsibleforﬁlenameandpipelineconnections.
20.2 File Organization and Structure
Some operating systems provide support for a large variety of ﬁle organizations. Diﬀerent ﬁle organiza-
tions will include diﬀerent record termination rules, possibly with record keys, and possibly ﬁxed length
records. ThePOSIXstandard,however,considersaﬁletobenothingmorethanasequenceofbytes. It
becomesentirelythejoboftheapplicationprogram,orlibrariesoutsidetheoperatingsystemtoimposeany
organizationonthosebytes.
Thebasic fileobjectsinPythonconsideraﬁletobeasequenceoftextcharacters(ASCIIorUnicode)or
bytes. Thecharacterscanbeprocessedasasequenceofvariablelengthlines;eachlineterminatedwitha
newlinecharacter. FilesmovedfromaWindowsenvironmentmaycontainlineswhichappeartohavean
extraneousASCIIcarriagereturncharacter( r),whichiseasilyremovedwiththe string strip() method.
Ordinarytextﬁlescanbemanageddirectlywiththebuilt-in fileobjectsandtheirmethodsforreading
andwritinglinesofdata. Wewillcoverthisbasictextﬁleprocessingintherestofthischapter.
Fileswhichareasequenceofbytesdon’t–properly–havelineboundaries. Byte-orientedﬁlescouldinclude
characters(inASCIIoraUnicodeencoding)orotherdataobjectsencodedasbytes. We’lladdresssome
byte-orientedﬁleswithlibrarymoduleslike pickleandcsv.
222 Chapter 20. Files
Building Skills in Python, Release 2.6.5
20.3 Additional Background
TheGNU/Linuxviewofﬁlescanbesurprisingforprogrammerswithabackgroundthatfocusesonmainframe
Z/OSorWindows. ThisisadditionalbackgroundinformationforprogrammerswhoarenewtothePOSIX
useoftheﬁleabstraction. ThisPOSIXviewinformshowPythonworks.
IntheZ/OSworld,ﬁlesarecalled data sets,andcanbemanagedbytheOScatalogorleftuncataloged.
Uncatalogeddatasetsarefairlycommon.
IntheGNU/Linuxworld,thecatalog(calledadirectory)isseamless,silentandautomatic. Filesarealmost
alwayscatalogedIntheGNU/Linuxworld,uncataloged,temporaryﬁlesareatypical,rarelyused,andrequire
aspecialAPIcall.
In the Z/OS world, ﬁles are generally limited to disk ﬁles and nothing else. This is diﬀerent from the
GNU/Linuxuseofﬁletomeanalmostanykindofexternaldeviceorservice.
BlockModeFiles . Filedevicescanbeorganizedintotwodiﬀerentkindsofstructures: block modeand
character mode . Blockmodedevicesareexempliﬁedbymagneticdisks: thedataisstructuredintoblocksof
bytesthatcanbeaccessedinanyorder. Boththemedia(disk)andread-writeheadcanmove;thedevicecan
berepositionedtoanyblockasoftenasnecessary. Adiskprovidesdirect(sometimesalsocalledrandom)
accesstoeachblockofdata.
Charactermodedevicesareexempliﬁedbynetworkconnections: thebytescomepouringintotheprocessor
buﬀers. Thestreamcannotberepositioned. Ifthebuﬀerﬁllsupandbytesaremissed,thelostdataare
goneforever.
Operatingsystemsupportforblockmodedevicesincludesﬁledirectoriesandﬁlemanagementutilitiesfor
deleting,renamingandcopyingﬁles.Modernoperatingsystemsincludeﬁlenavigators(FindersorExplorers),
iconicrepresentationsofﬁles,andstandardGUIdialogsforopeningﬁlesfromwithinapplicationprograms.
Theoperatingsystemalsohandlesmovingdatablocksfrommemorybuﬀerstodiskandfromdisktomemory
buﬀers. Allofthedevice-speciﬁcvagariesarehandledbyhavingavarietyof device drivers sothatarange
ofphysicaldevicescanbesupportedinauniformmannerbyasingleoperatingsystemsoftwareinterface.
Files on block mode devices are sometimes called seekable. They support the operating system seek()
function that can begin reading from any byte of the ﬁle. If the ﬁle is structured in ﬁxed-size blocks or
records,thisseekfunctioncanbeverysimpleandeﬀective. Typically,databaseapplicationsaredesigned
to work with ﬁxed-size blocks so that seeking is always done to a block, from which database rows are
manipulated.
CharacterModeDevicesandKeyboards . Operatingsystemsalsoproviderichsupportforcharacter
modedeviceslikenetworksandkeyboards. Typically,anetworkconnectionrequiresa protocol stack that
interprets the bytes into packets, and handles the error correction, sequencing and retransmission of the
packets. One of the most famous protocol stacks is the TCP/IP stack. TCP/IP can make a streaming
deviceappearlikeasequentialﬁleofbytes. Mostoperatingsystemscomewithnumerousclientprograms
thatmakeheavyuseofthenetrowk,examplesincludesendmail,ftp,andawebbrowser.
Aspecialkindofcharactermodeﬁleisthe console;itusuallyprovidesinputfromthekeyboard. ThePOSIX
standardallowsaprogramtoberunsothatinputcomesfromﬁles,pipesortheactualuser. Iftheinput
ﬁleisa TTY(teletype),thisistheactualhumanuser’skeyboard. Iftheﬁleisapipe,thisisaconnection
toanotherprocessrunningconcurrently. ThekeyboardconsoleorTTYisdiﬀerentfromordinarycharacter
modedevices,pipesorﬁlesfortworeasons. First,thekeyboardoftenneedstoexplicitlyechocharacters
backsothatapersoncanseewhattheyaretyping. Second, pre-processingmustoftenbedonetomake
backspacesworkasexpectedbypeople.
Theechofeatureisenabledforenteringordinarydataordisabledforenteringpasswords. Theechofeature
isaccomplishedbyhavingkeyboardeventsbequeuedupfortheprogramtoreadasiffromaﬁle. These
samekeyboardeventsareautomaticallysenttoupdatetheGUIifechoisturnedon.
20.3. Additional Background 223
Building Skills in Python, Release 2.6.5
Thepre-processingfeatureisusedtoallowsomestandardeditsoftheinputbeforetheapplicationprogram
receives the buﬀer of input. A common example is handling the backspace character. Most experienced
computer users expect that the backspace key will remove the last character typed. This is handled by
theOS:itbuﬀersordinarycharacters,removescharactersfromthebuﬀerwhenbackspaceisreceived,and
providestheﬁnalbuﬀerofcharacterstotheapplicationwhentheuserhitstheReturnkey. Thishandling
ofbackspacescanalsobedisabled;theapplicationwouldthenseethekeyboardeventsas rawcharacters.
TheusualmodeisfortheOStoprovide cookedcharacters,withbackspacecharactershandledbeforethe
applicationseesanydata.
Typically,thisisallhandledinaGUIinmodernapplications. However,Pythonprovidessomefunctionsto
interactwithUnixTTYconsolesoftwaretoenableanddisableechoandprocessrawkeyboardinput.
FileFormatsandAccessMethods . InZ/OS(andOpenVMS,andafewotheroperatingsystems)ﬁles
haveveryspeciﬁcformats,anddataaccessismediatedbytheoperatingsystem. InZ/OS,theycallthese
access methods , andtheyhavenameslikeBDAMorVSAM.Thisviewishandyinsomerespects, butit
tendstolimityoutotheaccessmethodssuppliedbytheOSvendor.
TheGNU/Linuxviewisthatﬁlesshouldbemanagedminimallybytheoperatingsystem. AttheOSlevel,
ﬁlesarejustbytes. Ifyouwouldliketoimposesomeorganizationonthebytesoftheﬁle,yourapplication
shouldprovidetheaccessmethod. Youcan,forexample,useadatabasemanagementsystem(DBMS)to
structureyourbytesintotables,rowsandcolumns.
TheC-languagestandardI/Olibrary(stdio)canaccessﬁlesasasequenceofindividuallines;eachlineis
terminatedbythenewlinecharacter,‘ n’. SincePythonisbuiltintheClibraries,Pythoncanalsoreadﬁles
asasequenceoflines.
20.4 Built-in Functions
Therearetwobuilt-infunctionsthatcreateanewﬁleoropenanexistingﬁle.
open(ﬁlename, [mode], [buﬀering] )
CreateaPythonﬁleobjectassociatedwithanoperatingsystemﬁle. filenameisthenameoftheﬁle.
modecanbe‘r’, ‘w’or‘a’forreading(default), writingorappending. Theﬁlewillbecreatedifit
doesn’texistwhenopenedforwritingorappending;itwillbetruncatedwhenopenedforwriting. Add
a‘b’tothemodeforbinaryﬁles. Adda‘+’tothemodetoallowsimultaneousreadingandwriting.
Ifthebufferingargumentisgiven,0meansunbuﬀered,1meanslinebuﬀered,andlargernumbers
specifythebuﬀersize.
file(ﬁlename, [mode], [buﬀering] )
Doesthesamethingasthe open(). Thisispresentsothatthenameofthisfactoryfunctionmatches
theclassoftheobjectbeingcreated.
Theopen()functionismoredescriptiveofwhatisreallygoingonintheprogram.
Thefile()functionisusedfortypecomparisons.
CreatingFileNameStrings . Aﬁlenamestringcanbegivenasastandardname,oritcanuseOS-speciﬁc
punctuation. The standard is to use ‘ /’ to separate elements of a ﬁle path; Python can do OS-speciﬁc
translation.
Windows,however,uses‘ \’formostlevelsofthepath,buthasaleadingdevicecharacterseparatedbya‘ :’
.
Rather than force your program to implement the various operating system punctuation rules, Python
provides modules to help you construct and process ﬁle names. The os.pathmodule should be used to
constructﬁlenames. Bestpracticeistousethe os.path.join() functiontomakeﬁlenamesfromsequences
ofstrings. We’lllookatthisin File Handling Modules .
224 Chapter 20. Files
Building Skills in Python, Release 2.6.5
Thefilenamestringcanbeasimpleﬁlename,alsocalleda relative path string,wheretheOSrulesof
applyingacurrentworkingdirectoryareusedtocreateafull,absolutepath. Ortheﬁlename stringcan
beafull absolute pathtotheﬁle.
FileModeStrings . Themodestringspeciﬁeshowtheﬁlewillbeaccessedbytheprogram. Thereare
threeseparateissuesaddressedbythemode string: opening,texthandlingandoperations.
•Opening. Fortheopeningpartofthemodestring,therearethreealternatives:
‘r’Openforreading. Startatthebeginningoftheﬁle. Iftheﬁledoesnotexist,raisean IOError
exception. Thisisimpliedifnothingelseisspeciﬁed.
‘w’Openforwriting. Startathebeginningoftheﬁle,overwritinganexistingﬁle. Iftheﬁledoesnot
exist,createtheﬁle.
‘a’Openforappending. Startattheendoftheﬁle. Iftheﬁledoesnotexist,createtheﬁle.
•TextHandling . Forthetexthandlingpartofthemodestring,therearetwoalternatives:
‘b’Interprettheﬁleasbytes,nottext.
(nothing)Thedefault,ifnothingisspeciﬁedistointerpretthecontentastext: asequenceofchar-
acterswithnewlinesattheendofeachline.
‘U’Thecapital‘ U’mode(whenusedwith‘ r’)enables“universalnewline”reading. Thisallowsyour
programtocopewiththenon-standardline-endingcharacterspresentinsomeWindowsﬁles. The
standardend-of-lineisasinglenewlinecharacter, \n. InWindows, anadditional \rcharacter
mayalsobepresent.
•Operations. Fortheadditionaloperationspartofthemode string,therearetwoalternatives:
‘+’Allowbothreadandwriteoperations.
(nothing)Ifnothingisspeciﬁed,allowonlyreadsforﬁlesopenedwith“r”;allowonlywritesforﬁles
openedwith“w”or“a”.
Typical combinations include "rb"to read data as bytes and "w+"to create a text ﬁle for reading and
writing.
Examples. Thefollowingexamplescreateﬁleobjectsforfurtherprocessing:
myLogin =open(".login","r")
newSource =open("somefile.c ","w")
theErrors =open("error.log ","a")
someData =open('source.dat ','rb')
myLoginAtextﬁle,openedforreading.
newSourceAtextﬁle,openedforwriting. Iftheﬁleexists,itisoverwritten.
theErrorsAtextﬁle,openedforappending. Iftheﬁledoesn’texist,it’screated.
someDataAbinaryﬁle,openedforreading.
Buﬀeringﬁlesistypicallyleftasadefault,specifyingnothing. However,forsomesituationsbuﬀeringcan
improveperformance. Errorlogs,forinstance,areoftenunbuﬀered,sothedataisavailableimmediately.
Large input ﬁles may have large buﬀer numbers speciﬁed to encourage the operating system to optimize
inputoperationsbyreadingafewlargechunksofdatainsteadofalargenumberofsmallerchunks.
20.4. Built-in Functions 225
Building Skills in Python, Release 2.6.5
20.5 File Statements
Thereareanumberofstatementsthathavespeciﬁcfeaturesrelatedto tupleobjects.
TheforStatement . Principally,weusethe forstatementtoworkwithﬁles. Textﬁlesareiterable,making
themanaturalﬁtwiththe forstatement.
Themostcommonpatternisthefollowing:
source = open( "someFile.txt", "r" )
for line in source:
# process line
source.close()
Additionally,weusethe withstatementwithﬁles. Thisassuresthatwehave–withoutexception–closed
theﬁlewhenwe’redoneusingit.
ThewithStatement . Thewithstatementisusedtobeabsolutelysurethatwehaveclosedaﬁle(or
otherresource)whenwe’redoneusingit.
Thewithstatementusesanobjectcalleda“contextmanager”. Thismanagerobjectcanbeassignedtoa
temporaryvariableandusedinthe withstatement’ssuite. See Managing Contexts: the with Statement for
moreinformationoncreatingacontextmanager.
Thetwocentralfeaturesare
1.Thecontextmanagerwillbeclosedattheendofthe withstatement. Thisisguaranteed,irrespective
ofanyexceptionsthatareraised.
2.Afileisacontextmanager. Itwillbeclosed.
withStatementSyntax . Thewithstatementhasthefollowingsyntax.
withexpression asvariable :
suite
Afileobjectconformstothecontextmanagerinterface. Ithasan __enter__()anda__exit__()method.
Itwillbeclosedattheendofthe withstatement.
Generally,weusethisasfollows.
withfile("somefile ","r")assource:
forlineinsource:
printline
Attheendofthe withstatement,irrespectiveofanyexceptionswhicharehandled–ornothandled–the
ﬁlewillbeclosedandtherelevantresourcesreleased.
20.6 File Methods
Thebuilt-in file()functioncreatesa fileobject. Theresultingobjecthasanumberofoperationsthat
changethestateoftheﬁle,readorwritedata,orreturninformationabouttheﬁle.
ReadMethods . Thefollowingmethodsreadfromaﬁle. Asdataisread,theﬁlepositionisadvancedfrom
thebeginningtotheendoftheﬁle. Theﬁlemustbeopenedwithamodethatincludesorimplies 'r'for
thesemethodstowork.
226 Chapter 20. Files
Building Skills in Python, Release 2.6.5
read([size])
Readasmanyas sizecharactersorbytesfromtheﬁle. If sizeisnegativeoromitted,therestofthe
ﬁleisread.
readline ([size])
Readthenextline. If sizeisnegativeoromitted,thenextcompletelineisread. Ifthe sizeisgiven
andpositive,readasmanyas sizecharactersfromtheﬁle;anincompletelinecanberead.
Ifacompletelineisread,itincludesthetrailingnewlinecharacter, \n. Iftheﬁleisattheend,this
willreturnazerolength string.
Iftheﬁlehasablankline,theblanklikewillbea stringoflength1(thenewlinecharacteratthe
endoftheline.)
readlines ([hint])
Readthenextlinesorasmanylinesfromthenext hintcharactersfromﬁle. Thevalueof hintmay
beroundeduptomatchaninternalbuﬀersize. If hintisnegativeoromitted,therestoftheﬁleis
read. Alllineswillincludethetrailingnewlinecharacter, \n. Iftheﬁleisattheend,thisreturnsa
zerolength list.
WriteMethods . Thefollowingmethodswritetoaﬁle. Asdataiswritten,theﬁlepositionisadvanced,
possiblygrowingtheﬁle. Iftheﬁleisopenedforwrite,thepositionbeginsatthebeginningoftheﬁle. If
theﬁleisopenedforappend,thepositionbeginsattheendoftheﬁle. Iftheﬁledoesnotalreadyexist,
bothwritingandappendingareequivalent. Theﬁlemustbeopenedwithamodethatincludes 'a'or'w'
forthesemethodstowork.
flush()
FlushallaccumulateddatafromtheinternalbuﬀerstotheOSﬁle. DependingonyourOS,thismay
alsoforceallthedatatobewrittentothedevice.
write(string)
Writethegiven stringtotheﬁle. Buﬀeringmaymeanthatthestringdoesnotappearonanyconsole
untilaclose()orflush()methodisused.
writelines (list)
Writethe listofstringstotheﬁle. Buﬀeringmaymeanthatthe stringsdonotappearonany
consoleuntila close()orflush()operationisused.
truncate ([size])
Truncatetheﬁle. If sizeisnotgiven,theﬁleistruncatedatthecurrentposition. If sizeisgiven,the
ﬁlewillbetruncatedat size. Iftheﬁleisn’taslargeasthegiven size,theresultsvarybyoperating
system. Thisfunctionisnotavailableonallplatforms.
PositionControlMethods . Thecurrentpositionofaﬁlecanbeexaminedandchanged. Ordinaryreads
and writes will alter the position. These methods will report the position, and allow you to change the
positionthatwillbeusedforthenextoperation.
seek(oﬀset, [whence] )
Changethepositionfromwhichtheﬁlewillbeprocessed. Therearethreevaluesfor whencewhich
determinethedirectionofthemove. If whenceiszero(oromitted), movetotheabsoluteposition
givenby offset. ‘f.seek(0)’willrewindﬁle f.
Ifwhenceis1, move relative to the current position by offsetbytes. If oﬀset is negative, move
backwards;otherwisemoveforward.
Ifwhenceis2,moverelativetotheendofﬁle. ‘ f.seek(0,2)’willadvanceﬁle ftotheend,makingit
possibletoappendtotheﬁle.
tell()
Returnthepositionfromwhichtheﬁlewillbeprocessed. Thisisapartnertothe seek()method;any
20.6. File Methods 227
Building Skills in Python, Release 2.6.5
positionreturnedbythe tell()methodcanbeusedasanargumenttothe seek()methodtorestore
theﬁletothatposition.
OtherMethods . Theseareadditionalusefulmethodsofaﬁleobject.
close()
Closetheﬁle,ﬂushingalldata. Theclosedﬂagisset. Anyfurtheroperations(exceptaredundant
close)raisean IOErrorexception.
fileno()
Returntheinternalﬁledescriptor(FD)usedbytheOSlibrarywhenworkingwiththisﬁle. Anumber
ofPythonmodulesprovidefunctionsthatusetheOSlibraries;theOSlibrariesneedtheFD.
isatty()
ReturnTrueiftheﬁleisconnectedtotheconsoleorkeyboard.
Somehandyattributesofaﬁle.
file.closed -> boolean
Thisattributeis Trueiftheﬁleisclosed.
file.mode -> string
Thisattributeisthemodeargumenttothe open()functionthatwasusedtocreatetheﬁleobject.
file.name -> string
This attribute of is the ﬁlename argument to the open()function that was used to create the ﬁle
object.
file.encoding -> string
Thisistheencodingfortheﬁle. ManyUnicodeﬁleswillhaveaByteOrderMark(BOM)thatprovides
theencoding.
20.7 Several Examples
We’ll look at four examples of ﬁle processing. In all cases, we’ll read simple text ﬁles. We’ll show some
traditionalkindsofﬁleprocessingprogramsandhowthosecanbeimplementedusingPython.
20.7.1 Reading a T ext File
Thefollowingprogramwillexamineastandardunixpasswordﬁle. We’llusetheexplicit readline()method
toshowtheprocessingindetail. We’llusethe split()methodoftheinput stringasanexampleofparsing
alineofinput.
readpswd.py
pswd = file( "/etc/passwd", "r" )
for aLine in pswd
fields= aLine.split( ":" )
print fields[0], fields[1]
pswd.close()
1.Thisprogramcreatesa fileobject,pswd,thatrepresentsthe /etc/passwdﬁle,openedforreading.
2.Afileisaniteratoroverlinesoftext. Wecanusea fileintheforstatement;the fileobjectwill
returneachindividuallineinresponsetothe iterator.next() method.
228 Chapter 20. Files
Building Skills in Python, Release 2.6.5
3.Theinputstringissplitintoindividualﬁeldsusing:literal>: “:”boundaries. Twoparticularﬁeldsare
printed. Field0istheusernameandﬁeld1isthepassword.
4.Closingtheﬁlereleasesanyresourcesusedbytheﬁleprocessing.
Fornon-unixusers,apasswordﬁlelookslikethefollowing:
root:q.mJzTnu8icF.:0:10:Sysadmin:/:/bin/csh
fred:6k/7KCFRPNVXg:508:10:% Fredericks:/usr2/fred:/bin/csh
The‘:’ separatedﬁeldsinlcudetheusername,password,userid,groupid,username,homedirectoryand
shelltorunuponlogin.
20.7.2 Reading a CSV File the Hard Way
ThisﬁlewillhaveaCSV(Comma-SeparatedValues)ﬁleformatthatwewillparse. The csvmoduledoes
afarbetterjobthanthislittleprogram. We’lllookatthatmodulein Comma-Separated V alues: The csv
Module.
ApopularstockquotingserviceontheInternetwillprovideCSVﬁleswithcurrentstockquotes. Theﬁles
havecomma-separatedvaluesinthefollowingformat:
stock, lastPrice, date, time, change, openPrice, daysHi, daysLo, volume
Thestock,dateandtimearetypicallyquotedstrings. Theotherﬁeldsarenumbers,typicallyindollarsor
percentswithtwodigitsofprecision. WecanusethePython eval()functiononeachcolumntogracefully
evaluateeachvalue,whichwilleliminatethequotes,andtransformastringofdigitsintoaﬂoating-point
pricevalue. We’lllookatdatesin Dates and Times: the time and datetime Modules .
Thisisanexampleoftheﬁle:
"^DJI",10623.64 ,"6/15/2001 ","4:09PM",-66.49,10680.81 ,10716.30 ,10566.55 ,N/A
"AAPL",20.44,"6/15/2001 ","4:01PM",+0.56,20.10,20.75,19.35,8122800
"CAPBX",10.81,"6/15/2001 ","5:57PM",+0.01,N/A,N/A,N/A,N/A
Theﬁrstlineshowsaquoteforanindex: theDow-JonesIndustrialaverage. Thetradingvolumedoesn’t
apply to an index, so it is “N/A”. The second line shows a regular stock (Apple Computer) that traded
8,122,800sharesonJune15,2001. Thethirdlineshowsamutualfund. Thedetailedopeningprice,day’s
high,day’slowandvolumearenotreportedformutualfunds.
Afterlookingattheresultsonline,weclickedonthelinktosavetheresultsasaCSVﬁle. Wecalledit
quotes.csv. Thefollowingprogramwillopenandreadthe quotes.csvﬁleafterwedownloaditfromthis
service.
readquotes.py
qFile=file("quotes.csv ","r")
forqinqFile:
try:
stock, price, date, time, change, opPrc, dHi, dLo, vol\
=q.strip().split(",")
printeval(stock), float(price), date, time, change, vol
exceptValueError :
pass
qFile.close()
20.7. Several Examples 229
Building Skills in Python, Release 2.6.5
1.Weopenourquotesﬁle, quotes.csv,forreading,creatinganobjectnamed qFile.
2.Weuseaforstatementtoiteratethroughthesequenceoflinesintheﬁle.
3.Thequotesﬁletypicallyhasanemptylineattheend, whichsplitsintozeroﬁelds, sowesurround
thiswithatrystatement. Theemptylinewillraisea ValueErrorexception,whichiscaughtinthe
exceptclauseandignored.
4.Eachstockquote, q,isastring. Weusethe string.strip() methodtoremovewhitespace;onthe
resultingstringweusethe string.split() methodtosplitthestringon ",". Thistransformsthe
inputstringintoalistofindividualﬁelds.
Weusemultipleassignmenttoassigneachﬁeldtoarelevantvariable. Notethatwestripthisﬁleinto
nineﬁelds,leadingtoalongstatement. Weputa‘ \’tobreakthestatementintotwolines.
5.Thenameofthestockisastringwhichincludesextraquotes. Inordertogracefullyremovethequotes,
weusethe eval()function.
Thepriceisastring. WecouldalsouseevalfunctiontoevaluatethisstringasaPythonvalue. Instead,
weusethe float()functiontoconvertthepricestringtoapropernumericvalueforfurtherprocessing.
Asapracticalmatter,thisisacurrencyvalue,andweneedtouseaDecimalvalue,notaﬂoatvalue.
Thedecimalmodulehandlescurrencyverynicely.
20.7.3 Read, Sort and Write
ForCOBOLexpatriates,here’sanexamplethatshowsashortwaytoreadaﬁleintoanin-memorysequence,
sortthatsequenceandprinttheresults. ThisisaverycommonCOBOLdesignpattern,andittendstobe
ratherlongandcomplexinCOBOL.
Thisexamplelooksforwardtosomeslightlymoreadvancedtechniqueslike listsorting. We’lldelveinto
sortingin F unctional Programming with Col lections .
sortquotes.py
data=[]
withfile("quotes.csv ","r")asqFile:
forqinqFile:
fields=tuple( q.strip().split(",") )
iflen(fields) ==9: data.append( fields )
defpriceVolume (a):
returna[1], a[8]
data.sort( key =priceVolume )
forstock, price, date, time, change, opPrc, dHi, dLo, vol indata:
printstock, price, date, time, change, volume
1.Wecreateanemptysequence, data,towhichwewillappend tuplescreatedfromsplittingeachline
intoﬁelds.
2.Wecreateﬁleobject, qFilethatwillreadallthelinesofourCSV-formatﬁle.
3.Thisforloopwillset qtoeachlineintheﬁle.
4.Thevariable fieldsiscreatedbystrippingwhitespacefromtheline, q, breakingituponthe ","
boundariesintoseparateﬁelds,andmakingtheresultingsequenceofﬁeldvaluesintoa tuple.
230 Chapter 20. Files
Building Skills in Python, Release 2.6.5
Ifthelinehastheexpectednineﬁelds,the tupleisappendedtothe data,sequence. Lineswiththe
wrongnumberofﬁeldsaretypicallytheblanklinesatthebeginningorendoftheﬁle.
5.Toprepareforthesort,wedeﬁneakeyfunction. Thiswillextractﬁelds1and8,priceandvolume.
Ifwedon’tuseakeyfunction,thetuplewillbesortedbyﬁeldsinorder. Theﬁrstﬁeldisstockname.
6.Wecanthensortthe datasequence. Notethatthe list.sort()methoddoesnotreturnavalue. It
mutatesthelist.
Thesortmethodwilluseour priceVolume() functiontoextractkeysforcomparingrecords. This
kindofsortiscoveredindepthin Advanced List Sorting .
7.Oncethesequenceofdataelementsissorted,wecanthenprintareportshowingourstocksrankedby
price,andforstocksofthesameprice,rankedbyvolume. Wecouldexpandonthisbyusingthe %
operatortoprovideanicer-lookingreportformat.
Notethatwearen’tobligatedtosortthesequence. Wecanusethe sorted()functionhere,also.
forstock, price, date, time, change, opPrc, dHi, dLo, vol \
insorted( data, key =priceVolume ):
printstock, price, date, time, change, volume
Thisdoesnotupdatethe datalist,butisotherwiseidentical.
20.7.4 Reading “Records”
InlanguageslikeCorCOBOLa“record”or“struct”willdescribethecontentsofaﬁle. Theadvantageofa
recordisthattheﬁeldshavenamesinsteadofnumericpositions. InPython,wecanacheivethesamelevel
ofclarityusinga dictforeachlineintheﬁle.
Forthis, we’lldownloadﬁlesfromaweb-basedportfoliomanager. Thisportfoliomanagergivesusstock
informationinaﬁlecalled display.csv. Hereisanexample.
+/-,Ticker,Price,Price Change,Current Value,Links,# Shares,P/E,Purchase Price,
-0.0400,CAT,54.15,-0.04,2707.50,CAT,50,19,43.50,
-0.4700,DD,45.76,-0.47,2288.00,DD,50,23,42.80,
0.3000,EK,46.74,0.30,2337.00,EK,50,11,42.10,
-0.8600,GM,59.35,-0.86,2967.50,GM,50,16,53.90,
Thisﬁlecontainsaheaderlinethatnamesthedatacolumns,makingprocessingconsiderablymorereliable.
Wecanusethecolumntitlestocreatea dictforeachlineofdata. Byusingeachdatalinealongwiththe
columntitles,wecanmakeourprogramquiteabitmoreﬂexible. Thisshowsawayofhandlingthiskindof
well-structuredinformation.
readportfolio.py
invest=0
current=0
withopen("display.csv ","rU")asquotes:
titles=quotes.next().strip().split(',')
forqinquotes:
values=q.strip().split(',')
data=dict(zip(titles,values) )
printdata
invest+=float(data["Purchase Price "])*float(data["# Shares "])
20.7. Several Examples 231
Building Skills in Python, Release 2.6.5
current +=float(data["Price"])*float(data["# Shares "])
printinvest, current, (current -invest)/invest
1.Weopenourportfolioﬁle, display.csv,forreading,creatingaﬁleobjectnamed quotes.
2.Theﬁrstlineofinput,‘ varname.next() ’,isthesetofcolumntitles. Westripanyextraneouswhites-
pacecharactersfromthisline, andthenperformasplittocreatea listofindividualcolumntitle
strs. Thislististaggedwiththevariable titles.
3.Wealsoinitializetwocounters, investandcurrenttozero. Thesewillaccumulateourinitialinvest-
mentandthecurrentvalueofthisportfolio.
4.Weuseaforstatementtoiteratethroughtheremaininglinesin quotesﬁle. Eachlineisassignedto
q.
5.Eachstockquote, q,isstrippedandsplittoseparatetheﬁeldsintoa list. Weassignthis listto
thevariable values.
6.We create a dict,data; the column titles in the titleslistare the keys. The data ﬁelds from
thecurrentrecord,in valuesareusedtoﬁllthis dict. Thebuilt-in zip()functionisdesignedfor
preciselythissituation: itinterleavesvaluesfromeach listtocreateanew listoftuples.
Now,wehaveaccesstoeachpieceofdatausingit’spropercolumntile. Thenumberofsharesisin
thecolumntitled "# Shares". Wecanﬁndthisinformationin‘ data["# Shares"] ’.
7.Weperformsomesimplecalculationsoneach dict. Inthiscase,weconvertthepurchasepricetoa
number,convertthenumberofsharestoanumberandmultiplytodeterminehowmuchwespenton
thisstock. Weaccumulatethesumoftheseproductsinto invest.
Wealsoconvertthecurrentpricetoanumberandmultiplythisbythenumberofsharestogetthe
currentvalueofthisstock. Weaccumulatethesumoftheseproductsinto current.
8.Whentheloophasterminated,wecanwriteoutthetwonumbers,andcomputethepercentchange.
20.8 File Exercises
1.FileStructures . Whatisrequiredtoprocessvariablelengthlinesofdatainanarbitrary(random)
order? Howistheapplicationprogramtoknowwhereeachlinebegins?
2.Device Structures . Some disk devices are organized into cylinders and tracks instead of blocks.
A disk may have a number of parallel platters; a cylinder is the stack of tracks across the platters
availablewithoutmovingtheread-writehead. Atrackisthedataononecircularsectionofasingle
diskplatter. Whatadvantagesdoesthishave? What(ifany)complexitycouldthisleadto? Howdoes
anapplicationprogramspecifythetracksandsectorstobeused?
Somediskdevicesaredescribedasasimplesequenceofblocks,innoparticularorder. Eachblockhas
auniquenumericidentiﬁer. Whatadvantagescouldthishave?
Somediskdevicescanbepartitionedintoanumberof“logical”devices. Eachpartitionappearstobe
aseparatedevice. What(ifany)relevancedoesthishavetoﬁleprocessing?
3.PortfolioPosition . WecancreateasimpleCSVﬁlethatcontainsadescriptionofablockofstock.
We’llcallthistheportfolioﬁle. Ifwehaveaccesstoaspreadsheet,wecancreateasimpleﬁlewith
fourcolumns: stock,shares,purchasedateandpurchaseprice. WecansavethisasaCSVﬁle. Ifwe
don’thaveaccesstoaspreadsheet,wecancreatethisﬁleinIDLE.Here’sanexampleline.
232 Chapter 20. Files
Building Skills in Python, Release 2.6.5
stock,shares, "Purchase Date ","Purchase Price "
"AAPL",100,"10/1/95",14.50
"GE",100,"3/5/02",38.56
Wecanreadthisﬁle,multiplysharesbypurchaseprice,andwriteasimplereportshowingourinitial
positionineachstock.
Note that each line will be a simple string. When we split this string on the ,’s (using the string
split()method)wegetalistofstrings. We’llstillneedtoconvertthenumberofsharesandthe
purchasepricefromstringstonumbersinordertodothemultiplication.
4.AggregatedPortfolioPosition . In Porfolio Position wereadaﬁleanddidasimplecomputationon
eachrowtogetthepurchaseprice. Ifwehavemultipleblocksofagivenstock,thesewillbereported
as separate lines of detail. We’d like to combine (or aggregate) any blocks of stock into an overall
position.ProgrammersfamiliarwithCOBOL(orRPG)orsimilarlanguagesoftenusea Control-
Breakreportingdesignwhichsortsthedataintoorderbythekeys,thenreadsthelinesofdatalooking
forbreakinthekeys. Thisdesignusesverylittlememory,butisratherslowandcomplex.
It’sfarsimplertouseaPythondictionarythanitistousetheControl-Breakalgorithm. Unlessthe
number of distinct key values is vast (on the order of hundreds of thousands of values) most small
computerswillﬁttheentiresummaryinasimpledictionary.
Aprogramwhichproducessummaries,then,wouldhavethefollowingdesignpattern.
(a)Createanemptydictionaryforretainingaggregates.
(b)Openandreadtheheaderlinefromtheﬁle. Thishastheﬁeldnames.
(c)Readtheportfolioﬁle. Foreachlineintheﬁle,dothefollowing.
i.Createatuplefromthedataﬁelds. Youcancreatearowdictionaryfroma zip()ofthe
headerﬁeldszippedwitharow.
ii.Ifthestocknamekeydoesnotexistintheaggregatedictionary,insertthenecessaryelement,
andprovideasuitableinitialvalue.
iii.Locatethestocknameinthedictionary,accumulateanewaggregatevalue.
(d)Writetheaggregatedictionarykeysandvaluesastheﬁnalreport.
Somepeopleliketoseetheaggregatessortedintoorder. Thisisamatterofusing sorted()toiterate
throughthedictionarykeysinthedesiredordertowritetheﬁnalreport.
5.PortfolioValue . In Reading a CSV File the Hard W ay ,welookedatasimpleCSV-formatﬁlewith
stocksymbolsandprices. Thisﬁlehasthestocksymbolandlastprice,whichservesasadailyquote
forthisstock’sprice. We’llcallthisthestock-priceﬁle.
Wecannowcomputetheaggregatevalueforourportfoliobyextractingpricesfromthestockprice
ﬁleandnumberofsharesfromtheportfolioﬁle.
Ifyou’refamiliarwithSQL,thisiscalleda join operation ;andmostdatabasesprovideanumberof
algorithmstomatchrowsbetweentwotables. Ifyou’refamiliarwithCOBOL,thisisoftendoneby
creatinga lookup table,whichisanin-memoryarrayofvalues.
We’llcreateadictionaryfromthestock-priceﬁle. Wecanthenreadourportfolio,locatethepricein
ourdictionary,andwriteourﬁnalreportofcurrentvalueoftheportfolio. Thisleadstoaprogram
withthefollowingdesignpattern.
(a)Loadthepricemappingfromthestock-priceﬁle.
i.Createanemptystockpricedictionary.
20.8. File Exercises 233
Building Skills in Python, Release 2.6.5
ii.Readthestockpriceﬁle. Foreachlineintheﬁle,populatethedictionary,usingthestock
nameasthekey,andthemostrecentsalepriceisthevalue.
(b)Processthepositioninformationfromtheportfolioﬁle. See Aggregated Portfolio Position and
Porfolio Position fortheskeletonofthisprocess.
Inthecaseofastockwithnoprice,theprogramshouldproducea“nopricequote”lineinthe
outputreport. Itshouldnotproducea KeyErrorexception.
234 Chapter 20. Files
CHAPTER
TWENTYONE
FUNCTIONAL PROGRAMMING WITH
COLLECTIONS
This chapter presents some advanced collection concepts. In Lists of T uples we describe the relatively
commonPythondatastructurebuiltfroma listoftuples.We’llcoverapowerful listconstruction
method called a list comprehension in List Comprehensions . We can use this to simplify some common
list-processingpatterns.
In Sequence Processing F unctions: map(), ﬁlter() and reduce() we’llcoverthreefunctionsthatcansimplify
somelistprocessing. map(),filter()andreduce()providefeaturesthatoverlapwithlistcomprehensions.
In Advanced List Sorting we cover some advanced sequence sorting techniques. In particular, we’ll look
closelyathowtoprovideasuitablekeyfunctiontocontrolsorting.
We’lllookat lambda forms in The Lambda. Thesearen’tessentialforPythonprogramming, butthey’re
handyforclarifyingapieceofcodeinsomerarecases.
In Multi-Dimensional Arrays or Matrices wecoversimplemultidimensionalsequences. Thesearesometimes
calledmatricesorarrays.
Evenmorecomplexdatastructuresareavailable, ofcourse. Numerousmoduleshandlethesophisticated
representationschemesdescribedintheInternetstandards(calledRequestsforComments,RFC’s). We’ll
touchonthesein The Python Library .
21.1 Lists of T uples
Thelistoftuplestructureisremarkablyuseful. Inotherlanguages,likeJavaorC++,weareforcedto
eitherusebuilt-inarraysorcreateanentireclassdeﬁnitiontosimplykeepafewvaluestogther.
Onecommonsituationisprocessinglistofsimplecoordinatepairsfor2-dimensionalor3-dimensionalge-
ometries. Additionalexamplesmightincludeexaminingalistoftuplesthatcontainthethreelevelsforred,
greenandbluethatdeﬁneacolor. Or–forprinting–thevaluesforcyan,magenta,yellowandblackthat
deﬁneacolor.
Asanexampleofusingared,green,blue tuple,wemayhavealistofindividualcolorsthatlookslikethe
following.
colorScheme =[ (0,0,0), (0x20,0x30,0x20), (0x10,0xff,0xff) ]
We’vealreadyseenhowdictionaries( Mappings and Dictionaries )havean dict.items() methodthatpro-
videsthedictionarykeysandvaluesasa listof2-tuples. Additionally,the zip()built-infunctioninter-
leavestwoormoresequencestocreatea listoftuples.
235
Building Skills in Python, Release 2.6.5
TheforStatement . Ainterestingformofthe forstatementisonethatexploitsmultipleassignmentto
workwitha listoftuples. Considerthefollowingexamples:
forc,fin[ ("red",18), ("black",18), ("green",2) ]:
print"%soccurs%f"%(c, f/38.0)
forr, g, b in[ (0,0,0), (0x20,0x30,0x20), (0x10,0xff,0xff) ]:
print"red:%x, green: %x, blue: %x"%(255-r,255-g,255-b )
Intheseexamples,wehavecreateda listoftuples. Theforstatementusesaformofmultipleassignment
tosplitupeach tupleintoaﬁxednumberofvariables.
Theﬁrstexampleisequivalenttothefollowing.
forpin[ ("red",18), ("black",18), ("green",2) ]:
c,f=p
print"%soccurs%f"%(c, f/38.0)
Thistechniqueworksbecausetuplesareexpectedtohaveaﬁxed,knownnumberofelements.
Here’sanexampleusing dict.items() . Welookedatdictionariesin Mappings and Dictionaries .
d={'red':18,'black':18,'green':2}
forc,find.items():
print"%soccurs%f"%(c, f/38.0)
21.2 List Comprehensions
Pythonprovidesseveral listliteralsor“displays”. Themostcommonlistdisplayisthesimpleliteralvalue
shownin List Literal V alues : valuesarewrittenasfollows:
[ expression 〈 , ... 〉 ]
Pythonhasasecondkindoflistdisplay,basedona list comphrehension .Alistcomprehensionisanexpression
thatcombinesafunction,a forstatementandanoptional ifstatementintoonetidypackage. Thisallows
asimple,clearexpressionoftheprocessingthatwillbuildupaniterablesequence.
ListComprehensionSemantics . Themostimportantthingaboutalistcomprehensionisthatitisan
iterablethatappliesacalculationtoanotheriterable. Alistdisplaycanusealistcomprehensioniterableto
createanewlist.
Whenwewritealistcomprehension,wewillprovideaniterable,avariableandanexpression. Pythonwill
processtheiteratorasifitwasafor-loop,iteratingthroughasequenceofvalues. Itevaluatestheexpression,
onceforeachiterationofthefor-loop. Theresultingvaluescanbecollectedintoafresh,newlist,orused
anywhereaniteratorisused.
ListComprehensionSyntax . Alistcomprehensionis–technically–acomplexexpression. It’soften
usedinlistdisplays,butcanbeusedinavarietyofplaceswhereaniteratorisexpected.
expr for-clause
The exprisanyexpression. Itcanbeasimpleconstant, oranyotherexpression(includinganestedlist
comprehension).
The for-clausemirrorstheforstatement:
236 Chapter 21. Functional Programming with Collections
Building Skills in Python, Release 2.6.5
for variable in sequence
Acommonuseforthisisinalistdisplay. We’llshowsomelistcomprehensionexamplesusedtocreatenew
lists.
even=[2*xforxinrange(18) ]
hardways =[ (x,x) forxin(2,3,4,5) ]
samples =[ random .random() forxinrange(10) ]
evenThisisalistofvalues [0,2,4, ...,14].
hardwaysThisisalistof2-tuples. Each2-tupleisbuiltfromthevaluesinthegivensequence.
Theresultis [(2,2), (3,3), (4,4), (5,5)] .
samplesThisisalistof10randomnumbers.
Alistdisplaythatusesalistcomprehensionbehaveslikethefollowingloop:
r=[]
forvariable insequence :
r.append( expr )
Thebasicprocess,then,istoiteratethroughthesequenceinthe for-clause,evaluatingtheexpression, expr.
Thevaluesthatresultareassembledintothe list. Iftheexpressiondependsonthe for-clause,eachvalue
inthelistcanbediﬀerent. Iftheexpressiondoesn’tdependonthe for-clause,eachvaluewillbethesame.
Here’sanexamplewheretheexpressiondependsonthefor-clause.
>>>[ v*2+1forvinrange(10) ]
[1, 3, 5, 7, 9, 11, 13, 15, 17, 19]
>>>sum(_)
100
Thiscreatestheﬁrst10oddnumbers. Itstartswiththesequencecreatedby‘ range(10)’. The for-clause
assignseachvalueinthissequencetothelocalvariable v. Theexpression, ‘ v*2+1’, isevaluatedforeach
distinctvalueof v. Theexpressionvaluesareassembledintotheresulting list.
Here’sanexamplewheretheexpressiondoesn’tdependonthe for-clause.
b=[0foriinrange(10) ]
bwillbea listof10zeroes.
Comprehensions Outside List Displays . A list comprehension can be used outside of a list display.
Whenwewritealistdisplay(using‘ [’and‘]’)wereusinganiterable(thelistcomprehension)tocreatea
newlist.
Wecanusetheiterablelistcomprehensioninothercontextsthatexpectaniterator.
square=sum( (2*a+1)forainrange(10) )
column_1 =tuple(3*b+1forbinrange(12) )
rolls=( (random .randint( 1,6),random .randint( 1,6))foruinrange(100) )
hardways =any( d1==d2ford1,d2inrolls )
squareThis is the sum of odd numbers. The list comprehension (‘ (2*a+1) for a in
range(10)’)isaniterablewhichthe sum()functioncanuse.
column_1Thiscreatesatupleof12valuesusingaalistcomprehension.
21.2. List Comprehensions 237
Building Skills in Python, Release 2.6.5
rollsThiscreatesageneratorobjectthatwilliterateover100valuesusingalistcomprehension.
Thisdoesnotactuallycreate100values–itdeﬁnesaniteratorthatwillproduce100values.
Note that this generator has an internal state: it can only be used once. Once it has
generatedallit’svalues,itwillnotgenerateanyothervalues.
Astatementlike‘ r1 = list(rolls) ’willusetheiteratorobject, rollswiththe list()
functiontoactuallycreateanobjectthathas100randomvalues.
hardwaysThis iterates through the iterator named rollsto see if any of the pairs had the
numberrolled“thehardway”withbothvaluesequal.
TheifClause . Alistcomprehensioncanalsohavean if-clause.
Thebasicsyntaxisasfollows:
expr for-clause if-clause
The for-clausemirrorstheforstatement:
for variable in sequence
The if-clausemirrorstheifstatement:
if filter
Hereisanexampleofacomplexlistcomprehensioninalistdisplay.
hardways =[ (x,x) forxinrange(1,7)ifx+xnotin(2,12) ]
Thismorecomplexlistcomprehensionbehaveslikethefollowingloop:
r=[]
forvariable insequence :
iffilter:
r.append( expr )
Thebasicprocess,then,istoiteratethroughthesequenceinthe for-clause,evaluatingthe if-clause. When
the if-clauseisTrue,evaluatetheexpression, expr. Thevaluesthatresultareassembledintothe list.
Here’sanotherexample.
>>>[ (x,2*x+1)forxinrange(10)ifx%3==0]
[(0, 1), (3, 7), (6, 13), (9, 19)]
Thisworksasfollows:
1.The for-clauseiteratesthroughthe10valuesgivenby‘ range(10)’,assigningeachvaluetothelocal
variable x.
2.The if-clauseevaluatestheﬁlterfunction,‘ x%3==0’. Ifitis False,thevalueisskipped. Ifitis True,
theexpression,at‘ (x,2*x+1)’,isevaluatedandretained.
3.Thesequenceof2-tuplesareassembledintoa list.
Alistcomprehensioncanhaveanynumberof for-clausesand if-clauses,freely-intermixed. A for-clausemust
beﬁrst. Theclausesareevaluatedfromlefttoright.
238 Chapter 21. Functional Programming with Collections
Building Skills in Python, Release 2.6.5
21.3 Sequence Processing Functions: map() ,filter() andreduce()
Themap(),filter(),andreduce()built-infunctionsarehandyfunctionsforprocessingsequenceswithout
writinglengthyfor-loops. Theseowemuchtotheworldoffunctionalprogramminglanguages. Theideaof
eachistotakeasmallfunctionyouwriteandapplyittoalltheelementsofasequence,savingyoufrom
writinganexplicitloop. Theimplicitloopwithineachofthesefunctionsmaybefasterthananexplicit for
loop.
Additionally,eachoftheseisapurefunction,returningaresultvalue. Thisallowstheresultsofthefunctions
tobecombinedintocomplexexpressionsrelativelyeasily.
ProcessingPipeline . Itisvery,verycommontoapplyasinglefunctiontoeveryvalueofalist. Insome
cases,wemayapplymultiplesimplefunctionsinakindof“processingpipeline”.
Here’sanexample.
>>>defftin_2_in ( ftin ):
... feet, inches =ftin
... return12.0*feet+inches
...
>>>heights =[ (5,8), (5,9), (6,2), (6,1), (6,7) ]
>>>map( ftin_2_in, heights )
[68.0, 69.0, 74.0, 73.0, 79.0]
>>>
>>>defin_2_m( inches ):
... returninches*0.0254
...
>>>map( in_2_m, map( ftin_2_in, heights ) )
[1.7271999999999998, 1.7525999999999999, 1.8795999999999999, 1.8541999999999998, 2.0065999999999997]
1.We deﬁned a simple function, ftin_2_in()that converts a distance in the form ‘ (ft,in)’ into a
distancemeasuredininches.
2.Wedeﬁnedasetofpeople’sheightsin heights.
3.Weusedthe map()functiontoapplyour ftin_2_in()functiontoeachvaluein heights,creatinga
newlistofvalues.
4.Wedeﬁnedasimplefunction, in_2_m()thatconvertsadistanceininchesintoadistanceinmeters.
5.Wedidafairlycomplexcalculationwhereweapplied ftin_2_in()toeachvaluein heights. Wethen
appliedin_2_m()toeachofthosevalues. We’veconvertedalistofvaluesfromEnglish‘ (ft,in)’to
propermetricunitsbyapplyingtwosimplefunctionstoeachvalue.
Thisconceptcanbeusedextensivelyusingthesefunctionsandlistcomprehensionstocreatecomplexand
sophisticatedsoftwarefromaseriesofsimpletransformations.
Deﬁnitions. Eachofthe map(),filter()andreduce()functionstransformaniterable(asequenceor
generatorfunction).
Themap()andfilter()eachapplysomefunctiontoasequencetocreateanewsequence.
Thereduce()function applies a function which will reduce the sequence to a single value. There are a
numberofspecial-purposereducefunctionsthatwe’vealreadyseen. Thesereductionsinclude sum(),any(),
all().
Themap()andfilter()functionshavenointernalstate,theysimplyapplythefunctiontoeachindividual
valueofthesequence. The reduce()function,incontrast,maintainsaninternalstatewhichisseededfrom
aninitialvalue,passedtothefunctionalongwitheachvalueofthesequenceandreturnedastheﬁnalresult.
Herearetheformaldeﬁnitions.
21.3. Sequence Processing Functions: map() ,filter() andreduce() 239
Building Skills in Python, Release 2.6.5
map(function, sequence, [...] )
Create a new listfrom the results of applying the given functionto the items of the the given
sequence.
>>>map(int, ["10","12","14",3.1415926 ,5L] )
[10, 12, 14, 3, 5]
Thisfunctionbehavesasifithadthefollowingdeﬁnition.
defmap( aFunction, aSequence ):
return[ aFunction(v) forvinaSequence ]
Itturnsoutthatmorethanonesequencecanbegiven. Inthiscase,thefunctionmustacceptmultiple
arguments,andtheremustbeasmanysequencesasargumentstothefunction. Thecorresponding
itemsfromeachsequenceareprovidedasargumentstothefunction.
Ifanysequenceistooshort, Noneisusedformissingthevalues. Ifthe functionisNone,map()will
createtuplesfromcorrespondingitemsineachlist,muchlikethe zip()function.
filter(function, sequence )
Returna listcontainingthoseitemsof sequenceforwhichthegivenfunctionis True. Ifthefunction
isNone,returna listofitemsthatareequivalentto True.
Thisfunctionbehavesasifithadthefollowingdeﬁnition.
deffilter( aFunction, aSequence ):
return[ vforvinaSequence ifaFunction(v) ]
Here’sanexample
>>>importrandom
>>>rolls=list( (random .randint( 1,6),random .randint( 1,6))foruinrange(100) )
>>>defhardways ( pair ):
... d1, d2=pair
... returnd1==d2andd1+d2in(4,6,8,10)
>>>filter( hardways, rolls )
[(4, 4), (5, 5), (2, 2), (5, 5), (4, 4), (5, 5), (5, 5), (3, 3), (2, 2), (2, 2), (5, 5), (4, 4)]
>>>len(_)
12
1.Wecreated100randomrolls.
2.Wedeﬁnedafunctionthatevaluatesarolltoseeifthepointwasmadethe“hardway”.
3.Weappliedourﬁltertoourrollstoseethat12/100rollsarehardwayrolls.
Here’santherexample
>>>defover_2( m ):
... returnm>2.0
>>>filter( over_2, map( in_2_m, map( ftin_2_in, heights ) ) )
[2.0065999999999997]
1.Wedeﬁnedaﬁlterfunctionwhichreturns Trueiftheargumentvalueisgreaterthan2.0.
2.Weﬁlteredourlistofheightstolocateanyheightsover2.0meters.
240 Chapter 21. Functional Programming with Collections
Building Skills in Python, Release 2.6.5
reduce(function, sequence, [initial=0] )
Thegivenfunctionmustaccepttwoargumentvalues. Thisfunctionwillapplythatfunctiontoan
internalaccumulatorandeachitemofasequence,fromlefttoright,soastoreducethesequencetoa
singlevalue.
Theinternalaccumulatorisinitializedwiththegiveninitialvalue(or 0ifnovalueisprovided.)
Thisbehavesasifithadthefollowingdeﬁnition.
defreduce( aFunction, aSequence, init =0):
r=init
forsinaSequence:
r=aFunction( r, s )
returnr
Here’sanexample.
>>>defplus( a, b ):
... returna+b
>>>reduce( plus, [ 1,3,5,7,9] )
25
NotethatPythonhasanumberofbuilt-inreductions: sum(),any()andall()arekindsofreduce
functions.
CostsandBeneﬁts . Whataretheadvantages? First,thefunctionalversioncanbeclearer. It’sasingle
lineofcodethatsummarizestheprocessing. Second,andmoreimportant,Pythoncanexecutethesequence
processingfunctionsfarfasterthantheequivalentexplicitloop.
Youcanseethat map()andfilter()areequivalenttosimplelistcomprehensions. Thisgivesyoutwoways
tospecifytheseoperations,bothofwhichhaveapproximatelyequivalentperformance. Thisalsomeansthat
map()andfilter()aren’t essentialtoPython,buttheyarewidelyused.
Thereduce()function is a bit of a problem. It can have remarkably bad performance if it is misused.
Consequently,thereissomedebateaboutthevalueofhavingthisfunction.
Another Example . Here’s an interesting example that combines reduce()andmap(). This uses two
functionsdeﬁnedinearlierexamples, add()andoddn().
defplus( a, b ):
returna+b
defoddn( n ):
return2*n+1
foriinrange(10):
sq=reduce( plus, map(oddn,range(i)),0)
printi, sq
Let’slookattheevaluationof sqfrominnermosttooutermost.
1.The‘range(i)’generatesasequenceofnumbersfrom0to i-1.
2.Amap()functionapplies oddn()tothesequencecreatedby‘ range(i)’,creating ioddvalues. The
oddn()functionreturnsthe nthoddvalue.
3.Areduce()functionapplies plus()tothesequenceofoddvalues,creatingasum.
Thezip()Function. Thezip()functioninterleavesvaluesfromtwoormoresequencestocreateanew
sequence. Thenewsequenceisasequenceof tuples. Eachitemofa tupleisthecorrespondingvaluesfrom
fromeachsequence.
21.3. Sequence Processing Functions: map() ,filter() andreduce() 241
Building Skills in Python, Release 2.6.5
zip(sequence, [sequence...] )
Interleavevaluesfromthevarioussequencestocreatetuples. Ifanysequenceistoolong,truncateit.
Here’sanexample.
>>>zip(range(5),range(1,12,2) )
[(0, 1), (1, 3), (2, 5), (3, 7), (4, 9)]
Inthisexample,wezippedtwosequencestogether. Theﬁrstsequencewas‘ range(5)’,whichhasﬁvevalues.
Thesecondsequencewas‘ range(1,12,2) ’whichhas6oddnumbersfrom1to11. Since zip()truncates
totheshorterlist,wegetﬁvetuples,eachofwhichhasthematchingvaluesfrombothlists.
Themap()functionbehavesalittlelike zip()whenthereisnofunctionprovided,justsequences. However,
map()doesnottruncate,itﬁllstheshorterlistwith Nonevalues.
>>>map(None,range(5),range(1,12,2) )
[(0, 1), (1, 3), (2, 5), (3, 7), (4, 9), (None, 11)]
21.4 Advanced List Sorting
Considera listoftuples. Wecouldgetsucha listwhenprocessinginformationthatwasextractedfrom
aspreadsheetprogram.
Forexample,ifwehadaspreadsheetwithrawcensusdata,wecaneasilytransformitintoasequenceof
tuplesthatlooklikethefollowing.
jobData=[
(001,'Albany','NY',162692),
(003,'Allegany ','NY',11986),
...
(121,'Wyoming','NY',8722),
(123,'Yates','NY',5094)
]
Wecanalsosavethespreadsheetdatain csvformatandusethe csvmoduletoreadit. We’llreturntothe
csvmodulein Components, Modules and Packages .
ListofTuplesfromSpreadsheetRows
Tocreatealistoftuplesfromaspreadsheet,youcandothefollowing.
In each row of the spreadsheet, put in a formula that creates a tuple from the various cells. This
formulawillhavetoincludethenecessaryadditionalquotes.
Ifyou’reusinganOpenOﬀice.ORGspreadsheet,itmightlooksomethinglikethis
="(" & CONCATENATE( """" & A1 & ""","; """" & B1 & ""","; """" & C1 & """," ) & ")"
Oncewehaveeachrowasa tuple,wecanputsome‘ []’infrontoftheﬁrsttupleandafterthelast
tupletomakeaproperlistdisplay.
WecanalsoslapanPythonassignmentstatementontothis listofrowsandturnourspreadsheetinto
aPythonstatement. WecancopyandpastethisdataintoourPythonscript.
Sortingthis listcanbedonetriviallywiththe list.sort()method.
jobData.sort()
242 Chapter 21. Functional Programming with Collections
Building Skills in Python, Release 2.6.5
Recallthatthisupdatesthe listinplace. The sort()methodspeciﬁcallydoesnotreturnaresult. A
commonmistakeistosaysomethinglike: ‘ a= b.sort()’. Thesortmethodalwaysreturns None.
Thiskindofsortwillsimplycomparethe tupleitemsintheorderpresentedinthetuple. Inthiscase,the
countynumberisﬁrst. Whatifwewanttosortbysomeothercolumn,likestatenameorjobs?
Let’ssaywewantedtosortbystatename,thethirdelementinthe tuple. Wehavetwostrategiesforsorting
whenwedon’twantthesimplisticcomparisonofelementsinorder.
1.Wecanprovidea“keyextraction”functiontothe sort()method. Thiswilllocatethekeyvalue(or
atupleofkeyvalues)withinthegivenobjects.
2.Wecanusethe“decorate-sort-undecorate”pattern. Whatwedoisdecorateeachelementinthe
list,makingitintoanewkindof2-tuplewiththeﬁeldsonwhichwewanttosortastheﬁrstelement
ofthistupleandtheoriginaldataasthesecondelementofthe tuple.
Thishasthesideeﬀectofcreatingasecondcopyoftheoriginallist.
SortingWithKeyExtraction . Thesort()methodofalistcanacceptakeywordparameter, key,that
providesakeyextractionfunction. Thisfunctionreturnsavaluewhichcanbeusedforcomparisonpurposes.
Tosortour jobDatabythethirdﬁeld,wecanuseafunctionlikethefollowing.
defbyState( a ):
returna[2]
jobData.sort( key =byState )
ThisbyState()functionreturnstheselectedkeyvalue,whichisthenusedbysorttoorderthetuplesin
theoriginallist. Ifwewanttosortbyamulti-partkey,wecnadosomethinglikethefollowing.
defbyStateJobs ( a ):
return( a[2], a[3] )
Thisfunctionwillcreateatwo-value tupleandusethesetwovaluesfororderingtheitemsinthe list.
SortingWithListDecoration . Superﬁcially,thismethodappearsmorecomplex. Howeveritisremark-
ablyﬂexible. Thisisaslightlymoregeneralsolutionthanusingakeyextractorfunction.
Theideaistotransformtheinitial listofvaluesintoanew listof2-tuples, withtheﬁrstitembeing
thekeyandtheseconditembeingtheoriginal tuple. Theﬁrstitem,onlyusedforsorting,isadecoration
placedinfrontoftheoriginalvalue.
Inthisexample,wedecorateourvalueswitha2-tupleofstatenamesandnumberofjobs. Wecansortthis
temporarylistof2-tuples. Thenwecanstripoﬀthedecorationandrecovertheoriginalvalues.
Here’stheexampleshownasthreedistinctsteps.
deco=[ ((a[2],a[3]),a)forainjobData ]
deco.sort()
state_jobs =[ vfork,vindeco ]
Here’sanexampleshownwithasingleoperation.
state_jobs =[ vfork,vinsorted( ((a[2],a[3]),a)forainjobData ) ]
Thisworksbyevaluatingthe“undecorate”listcomprehension,‘ v for k,v in sorted() ’. Thatlistcom-
prehension depends on the output from the sorted()function. The sorted()function depends on the
“decorate”listcomprehension,‘ (...,a) for a in jobData ’.
21.4. Advanced List Sorting 243
Building Skills in Python, Release 2.6.5
21.5 The Lambda
Thefunctions map(),filter(),reduce(),andthe list.sort()methodallusesmallfunctionstocontrol
theiroperations.
Forexample,wewouldwritesomethinglike:
defbyState( x ):
returnx[2]
data.sort( key =byState )
Inthiscase,weprovidedthe byState()functiontothe list.sort()method.
Inmanycases,thisfunctionisusedonlyonce,andithardlyseemsnecessarytodeﬁneafunctionobjectfor
asingleuselikethis.
Insteadofdeﬁningafunction,Pythonallowsustoprovidea lambda form. Thisisakindofanonymous,
one-use-onlyfunctionbodyinplaceswhereweonlyneedavery,verysimplefunction.
Alambdaformislikeadeﬁnedfunction: ithasparametersandcomputesavalue. Thebodyofalambda,
however,canonlybeasingleexpression,limitingittorelativelysimpleoperations. Ifitgetscomplex,you’ll
havetodeﬁnearealfunction.
Syntax. Thesyntaxisrelativelysimple.
lambda :replaceable: parameter 〈 , ... 〉 : expression
Therecanbeanynumberofparameters. Theresultoftheexpressionisthevaluewhenthelambdaisapplied
toarguments. Noactual returnstatementisrequired. Nostatementscanbeused,justanexpression.
Notethatalambdaformisnotastatement;it’sanexpressionthat’susedwithinotherexpressions. The
lambdaformdoesnotdeﬁneanobjectwithalonglife-time. Thelambdaformobject–generally–exists
justinthescopeofasinglestatement’sexecution.
Generally,alambdawilllooklikethis.
lambdaa: a[0]*2+a[1]
Thisisalambdawhichtakesatupleargumentvalueandreturnsavaluebasedontheﬁrsttwoelementsof
thetuple.
Examples. Here’sanexampleofusingalambdaformandapplyingitdirectlytoit’sarguments.
>>>frommathimportpi
>>>(lambdax: pi*x*x)(5)
78.539816339744831
1.The‘(lambda x: pi*x*x) ’isafunctionwithnoname;itacceptsasingleargument, x,andcomputes
‘pi*x*x’.
2.Weapplythelambdatoanargumentvalueof5. Thevalueofapplyingthelambdato5isthevalue
52π= 25π.
Here’salambdaformusedinthemapfunction.
>>>map(lambdax: pi*x*x,range(8) )
[0.0, 3.1415926535897931, 12.566370614359172, 28.274333882308138,
50.26548245743669, 78.539816339744831, 113.09733552923255,
153.93804002589985]
244 Chapter 21. Functional Programming with Collections
Building Skills in Python, Release 2.6.5
Thismap()functionappliesalambdaformtothevaluesfrom0to7ascreatedbythe range(). Theinput
sequenceismappedtotheoutputsequencebyhavingthelambdaobjectappliedtoeachvalue.
Parameterizing a Lambda . Sometimes we want to have a lambda with an argument deﬁned by the
“context”or“scope”inwhichthelambdaisbeingused.
Thisisverysimilartoa closure,inwhichafreevariableisboundintothelambdaexpression.
Here’sthebasicformthat’scommonlyusedtocreateaclosureinPython. Thisisafunctionthatreturnsa
lambdaforlateruse.
>>>deftimesX( x ):
... returnlambdaa: x*a
...
>>>t2=timesX(2)
>>>t2(5)
10
>>>t3=timesX(3)
>>>t3(5)
15
Wecanusethiskindofthingasfollows. Wecallour“closure”functiontocreatealambdathat’sgota
constantboundintoit. Wecanthenusetheresultinglambda. Inthiscase,we’reusingitina map()function
evaluation.
>>>map( timesX( 3),range(5) )
[0, 3, 6, 9, 12]
Considerthismorecomplexexample.
>>>spins=[ (23,"red"), (21,"red"), (0,"green"), (24,"black") ]
>>>defbyColor( color ):
... returnlambdat: color ==t[1]
...
>>>filter( byColor( "red"), spins )
[(23, 'red'), (21, 'red')]
>>>filter( byColor( "green"), spins )
[(0, 'green')]
1.Wehavefoursamplespinsofaroulettewheel, spins.
2.Wehaveafunction, byColor(),thatcreatesaclosure. Thisfunctionbindsthenameofacolorintoa
simplelambda,‘ lambda t: color == t[1] ’.
Theresultinglambdacanbeusedanywhereafunctionisrequired.
3.Weusethe byColor()functiontocreatealambdawhatweuseforﬁlteringourcollectionofspins. We
createalambdawith‘ byColor("red") ’thatwillreturn Trueforspinsthathavethecolorof "red".
4.Weusethe byColor()functiontocreateanotherlambdawhatweuseforﬁlteringourcollectionof
spins. We create a lambda with ‘ byColor("green") ’ that will return Truefor spins that have the
colorof"green".
Asanalternativetocreating listswiththe filter()function,similarresultscanbecreatedwithalist
comprehension.
>>>byRed=byColor( "red")
>>>[ sforsinspinsifbyRed(s) ]
[(23, 'red'), (21, 'red')]
21.5. The Lambda 245
Building Skills in Python, Release 2.6.5
21.6 Multi-Dimensional Arrays or Matrices
Therearesituationsthatdemandmulti-dimensionalarraysormatrices. Inmanylanguages(Java,COBOL,
BASIC) this notion of multi-dimensionality is handled by pre-declaring the dimensions (and limiting the
sizesofeachdimension). InPython,thesearehandledsomewhatmoresimply.
If you have a need for more sophisticated processing than we show in this section, you’ll need to get
the Python Numericmodule, also known as NumPy. This is a Source Forge project, and can be found
athttp://numpy.sourceforge.net/ .
Let’s look at a simple two-dimensional tabular summary. When rolling two dice, there are 36 possible
outcomes. Wecantabulatetheseinatwo-dimensionaltablewithonedieintherowsandonedieinthe
columns:
123456
1234567
2345678
3456789
45678910
567891011
6789101112
InPython,amulti-dimensionaltablelikethiscanbeimplementedasasequenceofsequences. Atableis
a sequence of rows. Each row is a sequence of individual cells. This allows us to use mathematical-like
notation. Wherethemathematicianmightsay Ai;j,inPythonwecansay‘ A[i][j]’. InPython,wewant
therowifromtableA,andcolumn jfromthatrow.
Thisisessentiallthelikethe listoftuples,yetagain. See Lists of T uples .
ListofListsExample . Wecanbuildatableusinganestedlistcomprehension. Thefollowingexample
createsatableasasequenceofsequencesandthenﬁllsineachcellofthetable.
table=[ [0foriinrange(6) ]forjinrange(6) ]
printtable
ford1inrange(6):
ford2inrange(6):
table[d1][d2] =d1+d2+2
printtable
Thisprogramproducedthefollowingoutput.
[[0,0,0,0,0,0], [0,0,0,0,0,0], [0,0,0,0,0,0],
[0,0,0,0,0,0], [0,0,0,0,0,0], [0,0,0,0,0,0]]
[[2,3,4,5,6,7], [3,4,5,6,7,8], [4,5,6,7,8,9],
[5,6,7,8,9,10], [6,7,8,9,10,11], [7,8,9,10,11,12]]
1.First,wecreatedasixbysixtableofzeroes,named table.
Eachiteminthetableisa6-item listofzeroes. Weusedalistcomprehensiontocreateanobjectfor
eachvalueof jintherangeof0to6. Eachoftheobjectsisa listofzeroes,oneforeachvalueof i
intherangeof0to6.
2.Weprintedthatlistoflists.
3.Wethenﬁlledthiswitheachpossiblecombinationoftwodice. Weiterateoverallcombinationsoftwo
dice,ﬁllingineachcellofthetable. Thisisdoneastwonestedloops,oneloopforeachofthetwodice.
Theouterenumeratesallvaluesofonedie, d1. Theloopenumeratesallvaluesofaseconddie, d2.
246 Chapter 21. Functional Programming with Collections
Building Skills in Python, Release 2.6.5
Updatingeachcellinvolvesselectingtherowwith‘ table[d1]’;thisisa listof6values. Thespeciﬁc
cellinthis listisselectedby‘ [d2]’. Wesetthiscelltothenumberrolledonthedice,‘ d1+d2+2’.
AdditionalExamples . Theprinted listofliststructureisalittlehardtoread. Thefollowingloop
woulddisplaythetableinamorereadableform.
>>>forrowintable:
... printrow
...
[2, 3, 4, 5, 6, 7]
[3, 4, 5, 6, 7, 8]
[4, 5, 6, 7, 8, 9]
[5, 6, 7, 8, 9, 10]
[6, 7, 8, 9, 10, 11]
[7, 8, 9, 10, 11, 12]
Asanexercise,we’llleaveittothereadertoaddsomefeaturestothistoprintcolumnandrowheadings
alongwiththecontents. Asahint,the‘ "%2d" % value ’stringoperationmightbeusefultogetﬁxed-size
numericconversions.
ExplicitIndexValues . Let’ssummarizeourmatrixofdierolls,andaccumulateafrequencytable. We’ll
useasimplelistwith13buckets(numberedfrom0to12)toaccumulatethefrequencyofeachdieroll.
fq=13*[0]
foriinrange(6):
forjinrange(6):
c=table[i][j]
fq[ c ] +=1
1.Weinitializethefrequencytable, fq,tobea listof13zeroes.
2.Theouterloopsetsthevariable itothevaluesfrom0to5.
3.Theinnerloopsetsthevariable jtothevaluesfrom0to5.
4.Weusetheindexvalueof itoselectarowfromthetable,andtheindexvalueof jtoselectacolumn
fromthatrow. Thisisthevalue, c. Wethenaccumulatethefrequencyoccurancesinthefrequency
table,fq.
Thislooksverymathematicalandformal. However,Pythongivesusanalternative,whichcanbesomewhat
simpler.
UsingListIteratorsInsteadofIndexValues . Sinceourtableisalistoflists,wecanmakeuseofthe
poweroftheforstatementtostepthroughtheelementswithoutusinganindex.
fq=13*[0]
printfq
forrowintable:
forcinrow:
fq[c]+=1
1.Weinitializethefrequencytable, fq,tobea listof13zeroes.
2.Theouterloopsetsthevariable rowtoeachelementoftheoriginal tablevariable. Thisdecomposes
thetableintoindividualrows,eachofwhichisa6-element list.
3.Theinnerloopsetsthevariable ctoeachcolumn’svaluewithintherow. Thisdecomposestherow
intotheindividualvalues.
21.6. Multi-Dimensional Arrays or Matrices 247
Building Skills in Python, Release 2.6.5
4.We count the actual occurances of each value, cby using the value as an index into the frequency
table,fq. Theincrementthefrequencyvalueby1.
MathematicalMatrices . Weusetheexplicitindextechniqueformanagingthemathematically-deﬁned
matrixoperations. Matrixoperationsaredonemoreclearlywiththisstyleofexplicitindexoperations.
We’llshowmatrixadditionasanexample,here,andleavematrixmultiplicationasanexerciseinalater
section.
m1=[ [1,2,3,0], [4,5,6,0], [7,8,9,0] ]
m2=[ [2,4,6,0], [1,3,5,0], [0,-1,-2,0] ]
m3=[4*[0]foriinrange(3) ]
foriinrange(3):
forjinrange(4):
m3[i][j] =m1[i][j] +m2[i][j]
1.Inthisexamplewecreatedtwoinputmatrices, m1andm2,eachthreebyfour.
2.Weinitializedathirdmatrix, m3,tothreerowsoffourzeroes,usingacomprehension.
3.Weiteratedthroughallrows(usingthe ivariable),andallcolumns(usingthe jvariable)andcomputed
thesumof m1andm2.
Pythonprovidesanumberofmodulesforhandlingthiskindofprocessing. In Components, Modules and
Packageswe’lllookatmodulesformoresophisticatedmatrixhandling.
21.7 Exercises
1.AllDiceCombinations . Writealistcomprehensionthatusesnestedfor-clausestocreateasingle
listwithall36diﬀerentdicecombinationsfrom(1,1)to(6,6).
2.TemperatureTable . Writealistcomprehensionthatcreatesa listoftuples. Eachtuplehas
twovalues,atemperatureinFarenheitandatemperatureinCelsius.
Createone listforFarenheitvaluesfrom0to100instepsof5andthematchingCelsiusvalues.
Createanother listforCelsiusvaluesfrom-10to50instepsof2andthematchingFarenheitvalues.
3.Deﬁnemax()andmin() . Usereduce()tocreateversionsofthebuilt-ins max()andmin().
Youmayﬁndthisdiﬀiculttodothiswithasimplelambdaform. However,considerthefollowing. We
canpickavaluefroma tuplelikethis: ‘ (a,b)[0] == a ’,and‘(a,b)[1] == b ’. Whatarethevalues
of‘(a,b)[a<b]’and‘(a,b)[a>b]’?
4.Computethe Averageor Mean . Anumber of standarddescriptivestatistics can bebuilt with
reduce(). Thebasicformulaearegivenin T uples.
Writeafunctionbasedon reduce()whichcomputesthemean. Meanisasimple“add-reduction”of
thevaluesinasequencedividedbythelength.
Inessence,you’reinventingaversionof sum()basedon reduce().
5.ComputetheVarianceandStandardDeviation . Anumberofstandarddescriptivestatistics
canbebuiltwith reduce(). Thebasicformulaearegivenin T uples.
Givenasequenceofvalues A={a0, a1, ..., a n}, thestandarddeviationhasanumberofalternative
deﬁnitions. Oneapproachistosumthevaluesandsquarethisnumber,aswellassumthesquaresof
248 Chapter 21. Functional Programming with Collections
Building Skills in Python, Release 2.6.5
eachnumber. Summingsquarescanbedoneasa map()tocomputesquaresandthenusethe sum()
function.
s1←∑
0i<n(A2
i)
s2←(∑
0i<nAi)2
v←s1−s2
n
σA←√v
Alsothestandarddeviationcanbedeﬁnedasthesquarerootoftheaveragevariance.
m←∑
0i<nAi
n
v←∑
0i<n(Ai−m)2
n−1
σA←√v
6.DistinctValuesInASequence . In List Exercises,oneoftheexerciseslookedataccumulatingthe
distinctvaluesinasequence.
Givenaninputsequence, seq,wecaneasilysortthissequence. Thiswillputallequal-valuedelements
together. Thecomparisonforuniquevaluesisnowdonebetweenadjacentvalues,insteadofalookup
intheresultingsequence.
Unique Values of a Sequence, seq , usingsort()
Initalize
Setresult←[]anemptysequence.
Sorttheinputsequence, seq.
Loop. Foreachvalue, v,inthesorted seq.
Alreadyin result? Is vthelastelementin result? Ifso,ignoreit. Ifnot,append vtothesequence
result.
Result. Returnarray result,whichhasdistinctvaluesfrom seq.
Whilethisisappealinginit’ssimplicity,thesortoperationmakesitrelativelyineﬀicient.
7.ComputetheMedian . Themedianfunctionarrangesthevaluesinsortedorder. Itlocateseither
themid-mostvalue(ifthereareanoddnumber)oritaveragestwoadjacentvalues(iftherearean
evennumber).
If‘len(data) % 2 == 1 ’,thereisanoddnumberofvalues,and‘ (len(data)+1)/2 ’isthemidmost
value. Otherwisethereisanevennumberofvalues,andthe‘ len(data)/2’and‘len(data)/2-1 ’are
thetwomid-mostvalueswhichmustbeaveraged.
8.PortfolioReporting .In T uple Exercises ,oneoftheexercisespresentedastockportfolioasasequence
oftuples. Plus,wewrotetwosimplefunctionstoevaluatepurchasepriceandtotalgainorlossfor
thisportfolio.
Develop a function (or a lambda form) to sort this porfolio into ascending order by current value
(currentprice×numberofshares). Thisfunction(orlambda)willrequirecomparingtheproductsof
twoﬁeldsinsteadofsimplycomparingtwoﬁelds.
21.7. Exercises 249
Building Skills in Python, Release 2.6.5
9.MatrixFormatting . Givena6×6matrixofdicerolls,produceanicelyformattedresult. Eachcell
shouldbeprintedwithaformatlike‘ "| %2s"’sothatverticallinesseparatethecolumns. Eachrow
shouldendwithan‘|’. Thetopandbottomshouldhaverowsof‘ "----"’printedtomakeacomplete
table.
10.ThreeDimensions . Iftherollsoftwodicecanbeexpressedinatwo-dimensionaltable,thenthe
rollsofthreedicecanbeexpressedinathree-dimensionaltable. Developathreedimensionaltable,6
x6x6,thathasall216diﬀerentrollsofthreedice.
Writealoopthatextractsthediﬀerentvaluesandsummarizestheminafrequencytable. Therange
ofvalueswillbefrom3to18.
250 Chapter 21. Functional Programming with Collections
CHAPTER
TWENTYTWO
ADV ANCED MAPPING TECHNIQUES
This chapter presents two advanced map concepts. In Default Dictionaries we show how to use the
collections.defaultdict class. In Inverting a Dictionary wediscuss“inverting”adictionarytoprocess
itbyvalueinsteadofbykey.
22.1 Default Dictionaries
Pythonhasamodule,called collections,thatincludesanumberofmoreadvancedcollectionclasses. We’ll
lookatoneparticularlyusefulone, defaultdict.
Thepointofa defaultdictistohandlethe dict.get()methodinadiﬀerentway.
•Whenthebuiltin dictclassisconfrontedwithamissingkey,itraisesa KeyErrorexception.
•When the collections.defaultdict class is confronted with a missing key, it will use a supplied
functiontocreateadefaultentryinthedictionary.
Considerthissnippet.
frequency ={}
foriinrange(100):
d1, d2=random.randint( 1,6), random .randint( 1,6)
frequency[d1 +d2]+=1
This is elegantly simply, but all it does is crash in a KeyErrorexception. We can add code, using
dict.setdefault() to handle missing keys. However, defaultdictallows us to write this simple thing
andhaveitworkasexpected.
Importing defaultdict. Wecanmakethe defaultdictcontaineravailableviathefollowing:
fromcollections importdefaultdict
We’lllookatthe importstatementindetailin Components, Modules and Packages .
Creatinga defaultdict. Wecreateanew defaultdictbyprovidingafunctionwhichwillcreateadefault
valueforus. Mostapplicationsof defaultdictwillbeusedforcountingoraccumulatinglists,sothemost
commoninitializationsarethefollowingtwo.
fromcollections importdefaultdict
frequency_table =defaultdict( int)
search_index =defaultdict( list)
251
Building Skills in Python, Release 2.6.5
frequency_table Wecreateadefaultdictusingthebuilt-in int()functiontocreatedefault
values. Calling‘ int()’returnsazero,whichisausefuldefaultforfrequencytables.
This dict allows you to say ‘ frequency_table[someKey] += 1 ’ without worrying about
KeyErrorexceptions. Ifthekeyvalueisinthedictionary,thenthatvalueisincremented.
Ifthekeyvalueisnotinthedictionary,theinitializationfunction(‘ int’)willevaluatedto
createthedefaultvalue.
search_index We create a default dict using the built-in list()function to create default
values. Calling‘ list()’returnsaanemptylist,whichisausefuldefaultforanon-unique
searchindex.
Thisdictallowsyoutosay‘ search_index[someKey].append( someValue ) ’withoutwor-
ryingabout KeyErrorexceptions. Ifthekeyvalueisinthedictionary, thenlistvalueis
appendto. Ifthekeyvalueisnotinthedictionary,theinitializationfunction(‘ list’)will
evaluatedtocreatethedefaultvalue,anemptylist. Thiscanthenbeappendedto.
Example. Thefollowingexampleaccumulatesafrequencytableof1000dicerolls.
fromcollections importdefaultdict
fromrandomimportrandint
frequency =defaultdict( int)
foriinrange(100):
d1, d2=randint( 1,6), randint( 1,6)
frequency[d1 +d2]+=1
22.2 Inverting a Dictionary
An“inverteddatabase”hasonecopyofeachdistinctvalue. Thissinglecopyisthenassociatedthelistof
recordidentiﬁersthatsharethisvalue.
Ratherthanthis:
keynameyear
1KaDiMa1972
2Dekkan2000
3Swell1972
Wewouldhavesomethinglikethis.
namerecordlist
KaDiMa[1]
Dekkan[2]
Swell[3]
Andthis
yearrecordlist
1972[1,3]
2000[2]
This“inversion”techniqueoftentomappings. Wemaywanttosearchadictionaryforaparticularvalue
insteadofaparticularkey. Insomecases,wemayhavemultiplesearchesoverthesamebasecollectionof
information.
Let’slookatthesimplestcaseﬁrst.
Wehaveafrequencytablelikethefollowing:
252 Chapter 22. Advanced Mapping T echniques
Building Skills in Python, Release 2.6.5
frequency ={2:2,3:1,4:4,5:10,6:12,7:22,
8:19,9:11,10:12,11:4,12:3}
We’dliketo“invert”thisdictionary,anddisplaythedictionaryinascendingorderbyvalue. Thsissueis
thatthevaluesmaynotbeunique.
>>>byFreq=defaultdict( list)
>>>forkinfrequency:
... byFreq[frequency[k]] .append( k )
...
>>>byFreq
defaultdict(<type 'list'>, {1: [3], 2: [2], 3: [12], 4: [4, 11],
10: [5], 11: [9], 12: [6, 10], 19: [8], 22: [7]})
This technique creats a new dictionary with the original values as keys and a list of the original keys as
values.
22.3 Exercises
1.ComputetheMode . Themodefunctionﬁndsthemostcommonvalueinadataset. Thiscanbe
donebycomputingthefrequencywithwhicheachuniquevalueoccurs.
You’llneedto“invert”thedictionarysothatyouworkwiththevalues(thefrequencies)insteadofthe
keys.
Thesimplestsolutionistoﬁndthemaximumfrequency,theassociatedkeyisthemode.
However, theremaybetiesforﬁrst. Thismaymeanthayyouhavea bimodaloreven multi-modal
distribution. Becauseofthisit’sbesttosortandcheckthetoptwofrequenciestobesurethereisn’t
atie.
Ifthereisatie,thereareseveralpossibleresponse. Oneistodeﬁnethemodefunctiontoreturna
tuplewithallthevaluestiedformostfrequency. Generally,therewillonlybeasinglefrequentvalue,
butintheeventofties,alltopvalueswillbeinthetuple. Anotherchoiceistoraiseanexception.
2.StockPurchasesbyYear . In Dictionary Exercises ,welookedatblocksofstockwhereeachblock
wasrepresentedasasimpletuple.
purchases =[ ('GE',100,'10-sep-2001 ',48),
('CAT',100,'1-apr-1999 ',24),
('GE',200,'1-jul-1999 ',56) ]
Createadictionarywheretheindexistheyearofpurchase,andthevalueisalistofpurchases.
Parsingthedatecanbesimpliﬁedto‘ date[-4:]’ fornow. Laterin Components, Modules and Pack-
ages,we’lladdressdate-timeparsing.
3.Eﬀiciency. Whatisthetypicalcomplexityofasortalgorithm? Whatisthecomplexityofahash
table?
Compareandcontrastsortingandusingadictionarytosummarizedataaccordingtodistinctvalues.
InSQL,wespecifyadictionary-likesummaryofdatausinga‘ GROUP BY’clause. Whydoesadatabase
useasort?
22.3. Exercises 253
Building Skills in Python, Release 2.6.5
254 Chapter 22. Advanced Mapping T echniques
Part IV
Data + Processing = Objects
255

Building Skills in Python, Release 2.6.5
Encapsulating Data and Processing into Class Deﬁnitions
In Language Basics , we examined the core statements in the Python language. In Data Structures , we
examinedthebuilt-indatastructuresavailabletousasprogrammers. Usingthesedatastructuresgaveus
somehands-onexperiencewithanumberofclasses. Afterusingthisvarietyofbuilt-inobjects,wearebetter
preparedtodesignourownobjects.
Classesintroducesbasicsofclassdeﬁnitionsand Advanced Class Deﬁnition introducessimpleinheritance.
Weextendthisdiscussionfurthertoincludeseveralcommondesignpatternsthatusepolymorphism. In
Some Design Patterns wecoverafewcommondesignpatterns. Creating or Extending Data T ypes describes
themechanismforaddingtypestoPythonthatbehavelikethebuilt-intypes.
WewillspendsometimeonPython’sﬂexiblenotionof“attribute”in Attributes, Properties and Descriptors .
Itturnsoutthatanattributecanbeasimpleinstancevariableoritcanbeamethodfunctionthatmanages
aninstancevariable.
We’ll look at Python’s decorators in Decorators; this is handy syntax for assuring that speciﬁc aspects
of a family of classes are implemented consistently. We’ll look at the various ways to deﬁne properties
inobjects.properties. Additionally, we’lllookhowwecanmanagemoresophisticatedobjectprotocolsin
Managing Contexts: the with Statement .
DataTypes. We’velookedatmostofthesedatatypesin Data Structures . Thisisakindofroad-mapof
someofthemostimportantbuilt-infeatures.
•None. Auniqueconstant,handyasaplaceholderwhennoothervalueisappropriate. Anumberof
built-infunctionsreturnvaluesof Nonetoindicatethatnousefulworkcanbedone.
•NotImplemented . Auniqueconstant,returnedbyspecialmethodstoindicatethatthemethodis
notimplemented. See Numeric T ype Special Methods formoreinformation.
•Numeric types have relatively simple values. These are immutable objects: they cannot have their
valueschanged,buttheycanparticipateinnumerousarithmeticandcomparisonoperationslike‘ +’,
‘-’,‘*’,‘/’,‘//’,‘**’.
–Boolean. (bool)Avarietyofvaluesaretreatedaslogicallyfalse: False,0,None,"",(),[],{},
‘set()’. Allothervaluesarelogically True.
–Integer. (int)Typically32-bitnumberswitharangeof-2,147,483,648through2,147,483,647.
–Long. (long)Thesearespeciallycodedintegersofarbitrarylength. Theygrowasneededto
accuratelyrepresentnumericresults. Literalsendwith‘ L’.
InPython3,theintegerandlongtypeswillbeuniﬁedandtheremainingdistinctionsremoved.
–Float. (float)Theseareﬂoatingpoint,scientiﬁcnotationnumbers. Theyarerepresentedusing
theplatform’sﬂoatingpointnotation,sorangesandprecisionsvary. Typicallythesearecalled
“doubleprecision”inotherlanguages,andareoften64-bitslong.
–Complex. (complex)Theseareapairofﬂoatingpointnumbersoftheform a+bj,where ais
therealpartand bisthe“imaginary”part. j=√−1.
•Sequence. Collectionsofobjectsidentiﬁedbytheirorderorposition.
–Immutablesequencesarecreatedasneededandcanbeusedbutneverchanged.
*String. (str)AsequenceofindividualASCIIcharacters.
*Unicode. (unicode)AsequenceofindividualUnicodecharacters.
InPython3,StringandUnicodewillbeuniﬁedintoasingleclassnamed strthatincludes
featuresof unicode.
257
Building Skills in Python, Release 2.6.5
*Tuple. (tuple)AsequenceofaﬁxednumberofPythonitems. Literalslooklike (expression
⟨,...⟩)
–Mutablesequencescanbecreated,appended-to,changed,andhaveelementsdeleted.
*List. (list)AsequencePythonitems. Literalslooklike [expression⟨,...⟩]Operations
likeappend(),pop()andsort()canbeusedtochangelists.
•SetandFrozenset . (set,frozenset)Collectionsofobjects. Thecollectionisneitherorderednor
keyed. Eachitemstandsforitself. A setismutable;wecanappend,changeanddeleteelementsfrom
aset. Afrozensetisimmutable.
•Mapping. Collectionsofobjectsidentiﬁedbykeysinsteadoforder.
– Dictionary. (dict)Acollectionofobjectswhichareindexedbyotherobjects. Itislikeasequence
of‘key:value’pairs,wherekeyscanbefoundeﬀiciently. AnyPythonobjectcanbeusedasthe
value. Keyshaveasmallrestriction: mutablelistsandothermappingscannotbeusedaskeys.
Literalslooklike {key:value⟨,...⟩}
•File. (classname: ﬁle)Pythonsupportsseveraloperationsonﬁles,mostnotablyreading,writingand
closing. Pythonalsoprovidesnumerousmodulesforinteractingwiththeoperatingsystem’smanage-
mentofﬁles.
•Callable. Whenwecreateafunctionwiththe defstatement,wecreatea callableobject. Wecan
alsodeﬁneourownclasseswithaspecialmethodof __call__()tomakeacallableobjectthatbehaves
likeafunction.
•Class. Whatwe’llcoverinthispart.
TherearenumerousadditionaldatastructuresthatarepartofPython’simplementationinternals;theyare
beyondthescopeofthisbook.
OneofthemostpowerfulandusefulfeaturesofPython,isitsabilitytodeﬁnenew classes. Thenextchapters
willintroducetheclassandthebasicsofobject-orientedprogramming.
258
CHAPTER
TWENTYTHREE
CLASSES
Object-oriented programming permits us to organize our programs around the interactions of objects. A
classprovides the deﬁnition of the structure and behavior of the objects; each object is an instance of a
class. Consequently,atypicalprogramisanumberofclassdeﬁnitionsandaﬁnalmainfunction. Themain
functioncreatestheobjectsthatwillperformthejoboftheprogram.
Thischapterpresentsthebasictechniquesofdeﬁningclasses. In Semanticswedeﬁnethesemanticsofobjects
andtheclasseswhichdeﬁnetheirattributes(instancevariables)andbehaviors. In Class Deﬁnition: the
class Statement weshowthesyntaxforcreatingclassdeﬁnitions;wecovertheuseofobjectsin Creating and
Using Objects.
Pythonhassomesystem-deﬁnednamesthatclassescanexploittomakethembehavelikebuilt-inPython
classes,afewoftheseareintroducedin Special Method Names .Weprovidesomeexamplesin Some Examples .
Perhaps the most important part of working with objects is how they collaborate to do useful work; we
introducethisin Object Col laboration
23.1 Semantics
Object-oriented programming focuses software design and implementation around the deﬁnitions of and
interactions between individual objects. An object is said to encapsulatea state of being and a set of
behaviors;itisbothdataandprocessing. Eachinstanceofaclasshasindividualcopiesofattributeswhich
aretightlycoupledwiththeclass-wideoperations. Wecanunderstandobjectsbylookingatfourfeatures,
adaptedfrom[Rumbaugh91] .
•Identity. Each object is unique and is distinguishable from all other objects. In the real world,
twootherwiseidenticalcoﬀeecupscanbedistiguishedasdistinctobjects. Forexample,theyoccupy
diﬀerentlocationsonourdesk. Intheworldofacomputer’smemory,objectscouldbeidentiﬁedby
theiraddress,whichwouldmakethemunique.
•Classiﬁcation .Thisissometimescalled Encapsulation.Objectswiththesameattributesandbehavior
belongtoacommon class. Eachindividualobjecthasuniqueattributevalues. Wesawthiswhenwe
lookedatthevariouscollectionclasses. Twodiﬀerent listobjectshavethesamegeneralstructure,
andthesamebehavior. Bothlistsrespondto append(),pop(),andalloftheothermethodsofa list.
However,each listobjecthasauniquesequenceofvalues.
•Inheritance. Aclasscaninheritmethodsfromaparentclass,reusingcommonfeatures. Asuperclass
ismoregeneral,asubclassoverridessuperclassfeatures,andismorespeciﬁc. Withthebuilt-inPython
classes,we’velookedatthewaysinwhichallimmutablesequencesarealike.
•Polymorphism . Ageneraloperationcanhavevariantimplementationmethods, dependingonthe
classoftheobject. WesawthiswhenwenotedthatalmosteveryclassonPythonhasa +operation.
259
Building Skills in Python, Release 2.6.5
Betweentwoﬂoating-pointnumbersthe +operationaddsthenumbers,betweentwolists,however,
the+operationconcatenatesthelists.
Python’sImplementation . A classisthePython-languagedeﬁnitionofthefeaturesofindividual objects:
thenamesofthe attributesanddeﬁnitionsofthe operations.
Pythonimplementsthegeneralnotionofattributeasadictionaryof instance variables foranobject. Python
implementsthegeneralideaofanoperationthroughacollectionofmethodsor method functions ofanobject’s
class.
NotethatallPythonobjectsareinstancesofsomeclass. Thisincludessomethingassimpleas NoneorTrue.
>>>type(None)
<type 'NoneType'>
>>>type(True)
<type 'bool'>
Additionally,aclassalsoconstructsnewobjectinstancesforus. Oncewe’vedeﬁnedtheclass,wecanthen
useitasakindoffactorytocreatenewobjects.
ClassDeﬁnition . Pythonclassdeﬁnitionsrequireustoprovideanumberofthings.
•Wemustprovideadistinctnametotheclass.
•Welistthesuperclassesfromwhichasubclassinheritsfeatures.
InPython2,classesshouldexplicitlybedeﬁnedassubclassesof object. InPython3,thiswillbethe
default.
Wehave multiple inheritance availableinPython. Thisdiﬀersfromthesingle-inheritanceapproach
usedbylanguageslikeJava.
•Weprovidemethodfunctionswhichdeﬁnetheoperationsfortheclass. Wedeﬁnethebehaviorofeach
objectthroughitsmethodfunctions.
Note that the attributes of each object are created by an initialization method function (named
__init__())whentheobjectiscreated.
•Wecandeﬁneattributesaspartoftheclassdeﬁnition. Ifwedo,thesewillbeclass-levelattributes,
sharedbyallinstancesoftheclass.
•Pythonprovidestherequiredmechanismforuniqueidentity. Youcanusethe id()functiontointer-
rogatetheuniqueidentiﬁerforeachobject.
Technically, aclassdeﬁnitioncreatesanew classobject. ThisPythonobjectcontainsthedeﬁnitionsof
the method functions. Additionally, a class object can also own class-level variables; these are, in eﬀect,
attributeswhicharesharedbyeachindividualobjectofthatclass.
Wecanusethisclassobjecttocreateclassinstanceobjects. It’stheinstancesthatdotherealworkofour
programs. Theclassissimplyatemplateorfactoryforcreatingtheinstanceobjects.
DuckTyping . Notethatourinstancevariablesarenotaformalpartoftheclassdeﬁnition. Thisdiﬀers
fromJavaorC++wheretheinstancevariablesmustbestaticallydeclared.
Another consequence of Python’s dynamic nature is that polymorphism is based on simple matching of
methodnames.ThisisdistinctfromlanguageslikeJavaorC++wherepolymorphismdependsoninheritance
andpreciseclass(orinterface)relationships.
Python’sapproachtopolymorphismissometimescalled duck typing: “ifitquackslikeaduckandwalkslike
aduckitisaduck.” Ifseveralobjectshavethecommonmethodnames,theyareeﬀectivelypolymorphic
withrespecttothosemethods.
260 Chapter 23. Classes
Building Skills in Python, Release 2.6.5
We’reAllAdults . Thebestprogrammingpracticeistotreateachobjectasiftheinternalimplementation
details where completely opaque. Often, a class will have “public” methods that are a well-deﬁned and
supportedinterface,plusitwillhave“private”methodsthatareimplementationdetailswhichcanbechanged
withoutnotice.
Allotherobjectswithinanapplicationshoulduseonlythemethodsandattributesthatcomprisetheclass
interface. Somelanguages(likeC++orJava)haveaformaldistinctionbetweeninterfaceandimplementa-
tion. Pythonhasalimitedmechanismformakingadistinctionbetweenthedeﬁnedinterfaceandtheprivate
implementationofaclass.
ThePythonphilosophyissometimescalled W e’re Al l Adults : there’slittleneedforthe(childish)formality
betweeninterfaceandimplementation. Programmerscan(andshould)betrustedtoreadthedocumentation
foraclassandusethemethodsappropriately.
Pythonoﬀerstwosimpletechniquesforseparatinginterfacefromimplementation.
•We can use a leading ‘ _’ on an instance variable or method function name to make it more-or-less
privatetotheclass.
•Wecanusepropertiesordescriptorstocreatemoresophisticatedprotocolsforaccessinginstancevari-
ables. We’llwaituntil Attributes, Properties and Descriptors tocoverthesemoreadvancedtechniques.
An Object’s Lifecycle . Each instance of every class has a lifecycle. The following is typical of most
objects.
1.Deﬁnition. The class deﬁnition is read by the Python interpreter (or it is a builtin class). Class
deﬁnitionsarecreatedbythe classstatement. Examplesofbuilt-inclassesinclude file,str,int,
etc.
2.Construction .Aninstanceoftheclassisconstructed:Pythonallocatesthenamespacefortheobject’s
instance variables and associating the object with the class deﬁnition. The __init__()method is
executedtoinitializeanyattributesofthenewlycreatedinstance.
3.AccessandManipulation . Theinstance’smethodsarecalled(similartofunctioncallswecovered
in F unctions),byclientobjectsorthemainscript. Thereisaconsiderableamountofcollaboration
amongobjectsinmostprograms. Methodsthatreportonthestateoftheobjectaresometimescalled
accessors;methodsthatchangethestateoftheobjectaresometimescalled mutatorsor manipulators.
4.GarbageCollection .Eventually,therearenomorereferencestothisinstance.Typically,thevariable
withanobjectreferencewaspartofthebodyofafunctionthatﬁnished,thenamespaceisdropped,
andthevariablesnolongerexist. Pythondetectsthis,andremovesthereferencedobjectfrommemory,
freeingupthestorageforsubsequentreuse. Thisfreeingofmemoryistermed garbage col lection ,and
happensautomatically. See Garbage Col lection formoreinformation.
23.1. Semantics 261
Building Skills in Python, Release 2.6.5
GarbageCollection
ItisimportanttonotethatPythoncountsreferencestoobjects. Whenobjectisnolongerinuse,the
referencecountiszero,theobjectcanberemovedfrommemory. Thisistrueforallobjects,especially
objectsofbuilt-inclasseslike str. Thisfreesusfromthedetailsofmemorymanagementaspracticed
byC++programmers. Whenwedosomethinglikethefollowing:
s="123"
s=s+"456"
Thefollowinghappens.
1.Pythoncreatesthestring "123"andputsareferencetothisstringintothevariable s.
2.Pythoncreatesthestring "456".
3.Pythonperformsthestringconcatenationmethodbetweenthestringreferencedby sandthe
string"456",creatinganewstring "123456".
4.Pythonassignsthereferencetothisnew "123456"stringintothevariable s.
5.Atthispoint,strings "123"and"456"arenolongerreferencedbyanyvariables. Theseobjects
willbedestroyedaspartofgarbagecollection.
23.2 Class Deﬁnition: the class Statement
Wecreateaclassdeﬁnitionwitha classstatement. Weprovidetheclassname,theparentclasses,andthe
methodfunctiondeﬁnitions.
classname( parent ) :
suite
The nameisthenameoftheclass,andthisnameisusedtocreatenewobjectsthatareinstancesoftheclass.
Traditionally,classnamesarecapitalizedandclasselements(variablesandmethods)arenotcapitalized.
The parentisthenameoftheparentclass,fromwhichthisclasscaninheritattributesandoperations. For
simple classes, we deﬁne the parent as object. Failing to list objectas a parent class is not – strictly
speaking–aproblem;using objectasthesuperclassdoesmakeafewofthebuilt-infunctionsalittleeasier
touse.
Important: Python3.0
InPython3.0,using objectasaparentclasswillnolongerbenecessary.
InPython2.6,however,itishighlyrecommended.
The suiteisaseriesoffunctiondeﬁnitions, whichdeﬁnetheclass. Allofthesefunctiondeﬁnitionsmust
haveaﬁrstpositionalargument, self,whichPythonusestoidentifyeachobject’suniqueattributevalues.
The suitecanalsocontainassignmentstatementswhichcreateinstancevariablesandprovidedefaultvalues.
Thesuitetypicallybeginswithacommentstring(oftenatriple-quotedstring)thatprovidesbasicdocumen-
tationontheclass. Thisstringbecomesaspecialattribute,called __doc__. Itisavailableviathe help()
function.
Forexample:
importrandom
classDie(object):
"""Simulate a 6-sided die."""
defroll(self):
self.value=random.randint( 1,6)
262 Chapter 23. Classes
Building Skills in Python, Release 2.6.5
returnself.value
defgetValue (self):
returnself.value
1.Weimportedthe randommoduletoprovidetherandomnumbergenerator.
2.Wedeﬁnedthesimpleclassnamed Die,andclaimeditasasubclassof object. Theindentedsuite
containsthreeelements.
•Thedocstring,whichprovidesasimpledeﬁnitionofthereal-worldthingthatthisclassrepresents.
Aswithfunctions,thedocstringisretrievedwiththe help()function.
•Wedeﬁnedamethodfunctionnamed roll().Thismethodfunctionhasthemandatorypositional
parameter, self,whichisusedtoqualiftytheinstancevariables.The selfvariableisanamespace
foralloftheattributesandmethodsofthisobject.
•Wedeﬁnedamethodfunctionnamed getValue(). Thisfunctionwillreturnthelastvaluerolled.
Whenthe roll()methodofa Dieobjectisexecuted,itsetsthatobject’sinstancevariable, self.value,
toarandomvalue. Sincethevariablename, value,isqualiﬁedbytheinstancevariable, self,thevariable
islocaltothespeciﬁcinstanceoftheobject.
Ifweomittedthe selfqualiﬁer,Pythonwouldcreateavariableinthelocalnamespace. Thelocalnamespace
ceasestoexistattheendofthemethodfunctionexecution,removingthelocalvariables.
23.3 Creating and Using Objects
Once we have a class deﬁnition, we can make objects which are instances of that class. We do this by
evaluatingtheclassasifitwereafunction: forexample,‘ Die()’. Whenwemakeoneoftheseclasscalls,
twothingswillhapppen.
•Anewobjectiscreated. Thisobjecthasareferencetoitsclassdeﬁnition.
•The object’s initializer method, __init__(), is called. We’ll look at how you deﬁne this method
functioninthnextsection.
Let’screatetwoinstancesofour Dieclass.
>>>d1=Die()
>>>d2=Die()
>>>d1.roll(), d2 .roll()
(6, 5)
>>>d1.getValue(), d2 .getValue()
(6, 5)
>>>d1, d2
(<__main__.Die object at 0x607bb0>, <__main__.Die object at 0x607b10>)
>>>d1.roll(), d2 .roll()
(1, 3)
>>>d1.value, d2 .value
(1, 3)
1.Weusethe Dieclassobjecttocreatetwovariables, d1,andd2;botharenewobjects,instancesof Die.
2.Weevaluatethe roll()methodof d1;wealsoevaluatethe roll()methodof d2. Eachofthesecalls
setstheobject’s valuevariabletoaunique,randomnumber. There’saprettygoodchance(1in6)
thatbothvaluesmighthappentobethesame. Iftheyare,simplycall‘ d1.roll()’and‘d2.roll()’
againtogetnewvalues.
23.3. Creating and Using Objects 263
Building Skills in Python, Release 2.6.5
3.Weevaluatethe getValue()methodofeachobject. Theresultsaren’ttoosurprising,sincethe value
attributewassetbythe roll()method. This attributewill bechangedthe nexttime wecallthe
roll()method.
4.Wealsoaskforarepresentationofeachobject. Ifweprovideamethodnamed __str__()inourclass,
thatmethodisused;otherwisePythonshowsthememoryaddressassociatedwiththeobject. Allwe
canseeisthatthenumbersarediﬀerent,indicatingthattheseinstancesaredistinctobjects.
23.4 Special Method Names
Thereareseveralspecialmethodsthatareessentialtotheimplementationofaclass. Eachofthemhasa
namethatbeginsandendswithdoubleunderscores. ThesemethodnamesareusedimplicitlybyPython.
Section3.3ofthe Python Language Reference providesthecompletelistofthesespecialmethodnames.
We’lllookatthespecialmethodnamesindepthin Creating or Extending Data T ypes . Untilthen,we’lllook
atafewspecialmethodnamesthatareusedheavily.
__init__ (self, ...)
The__init__()methodofaclassiscalledbyPythontoinitializeanewly-createdobject.
NotethatThe __init__()methodcanacceptparameters,butdoesnotreturnanything. Itsetsthe
internalstateoftheobject.
__str__(self)
The__str__()methodofaclassiscalledwheneverPythonneedsastringrepresentationofanobject.
Thisisthemethodusedbythe str()built-infunction. Whenprintinganobject,the str()iscalled
implicitlytogetthevaluethatisprinted.
__repr__ (self)
The__repr__()methodofaclassisusedwhenwewanttoseethedetailsofanobject’svalues. This
methodisusedbythe repr()function.
InitializinganObjectwith __init__(). Whenyoucreateanobject,Pythonwillbothcreatetheobject
andalsocalltheobject’s __init__()method.Thismethodfunctioncancreatetheobject’sinstancevariables
andperformanyotherone-timeinitialization. Thereare,typically,twokindsofinstancevariablesthatare
createdbythe __init__()method: variablesbasedonparametersandvariablesthatareindependentof
anyparameters.
Here’sanexampleofacompanydescriptionthatmightbesuitableforevaluatingstockperformance. Inthis
example,alloftheinstancevariables( self.name,self.symbol,self.price)arebasedonparametersto
the__init__()method.
classCompany(object):
def__init__ (self, name, symbol, stockPrice ):
self.name=name
self.symbol=symbol
self.price=stockPrice
defvalueOf(self, shares ):
returnshares*self.price
WhenwecreateaninstanceofCompany,weusecodelikethis.
c1=Company( "General Electric ","GE",30.125)
Thiswillprovidethreevaluestotheparametersof __init__().
264 Chapter 23. Classes
Building Skills in Python, Release 2.6.5
String value of an object with __str__(). The__str__()method function is called whenever an
instanceofaclassneedstobeconvertedtoastring. Typically,thisoccuswhenweusethe str()function
onanobject. Also,whenwereferenceobjectina printstatement,the str()functionisevaluated. Consider
thisdeﬁnitionoftheclass Card.
classCard(object):
def__init__ (self, rank, suit ):
self.rank=rank
self.suit=suit
self.points=rank
defhard(self):
returnself.points
defsoft(self):
returnself.points
Whenwetrytoprintaninstanceoftheclass,wegetsomethinglikethefollowing.
>>>c=Card(3,"D")
>>>c
<__main__.Card object at 0x607fb0>
>>>str(c)
'<__main__.Card object at 0x607fb0>'
Thisisthedefaultbehaviorforthe __str__()method. Wecan,however,overridethiswithafunctionthat
producesamoreuseful-lookingresult.
def__str__(self):
return"%2d%s"%(self.rank,self.suit)
Addingthismethodfunctionconvertsthecurrentvalueofthedietoastringandreturnsthis. Nowweget
somethingmuchmoreuseful.
>>>d=Card(4,"D")
>>>d
<__main__.Card object at 0x607ed0>
>>>str(d)
' 4D'
>>>printd
4D
Representation details with __repr__(). While the __str__()method produces a human-readable
string,wesometimeswantthenitty-grittydetails. The __repr__()methodfunctionisevaluatedwhenever
an instance of a class must have its detailed representation shown. This is usually done in response to
evaluatingthe repr()function. Examplesincludethefollowing:
>>>repr(c)
'<__main__.Card object at 0x607fb0>'
Ifwewouldliketoproduceamoreusefulresult,wecanoverridethe __repr__()function. Theobjectiveis
toproduceapieceofPythonprogrammingthatwouldreconstructtheoriginalobject.
def__repr__ (self):
return"Card(%d,%r)"%(self.rank,self.suit)
Weuse__repr__()toproduceacleardeﬁnitionofhowtorecreatethegivenobject.
23.4. Special Method Names 265
Building Skills in Python, Release 2.6.5
>>>c=Card(5,"D")
>>>repr(c)
"Card(5,'D')"
SpecialAttributeNames . Inadditiontothespecialmethodnames,eachobjecthasanumberofspecial
attributes. Thesearedocumentedinsection2.3.10ofthe Python Library Reference .
We’lllookatjustafew,including __dict__,__class__and__doc__.
__dict__Theattributevariablesofaclassinstancearekeptinaspecialdictionaryobject
named__dict__.Asaconsequence,whenyousay self.attribute= value ,thishasalmost
identicalmeaningto self.__dict__['attribute']= value .
Combined with the % string formatting operation, this feature is handy for writing
__str__()and__repr__()functions.
def__str__(self):
return"%(rank)2s %(suit)s "%self.__dict__
def__repr__ (self):
return"Card(%(rank)r ,%(suit)r )"%self.__dict__
__class__ Thisistheclasstowhichtheobjectbelongs.
__doc__Thedocstringfromtheclassdeﬁnition.
23.5 Some Examples
We’lllookattwoexamplesofclassdeﬁnitions. Inthebothexamples,we’llwriteascriptwhichdeﬁnesa
classandthenusestheclass.
die.py
#!/usr/bin/env python
"""Define a Die and simulate rolling it a dozen times."""
import random
class Die(object):
"""Simulate a generic die."""
def __init__( self ):
self.sides= 6
self.roll()
def roll( self ):
"""roll() -&gt; number
Updates the die with a random roll."""
self.value= 1+random.randrange(self.sides)
return self.value
def getValue( self ):
"""getValue() -&gt; number
Return the last value set by roll()."""
retur self.value
def main():
d1, d2 = Die(), Die()
for n in range(12):
266 Chapter 23. Classes
Building Skills in Python, Release 2.6.5
print d1.roll(), d2.roll()
main()
1.This version of the Dieclass contains a doc string and three methods: __init__(),roll()and
getValue().
2.The__init__()method,calleda constructor,iscalledautomaticallywhentheobjectiscreated. We
provideabodythatsetstwoinstancevariablesofa Dieobject. Itsetsthenumberofsides, sidesto
6anditthenrollsthedieaﬁrsttimetosetavalue.
3.Theroll()method,calleda manipulator,generatesarandomnumber,updatingthe valueinstance
variable.
4.ThegetValue()method,calleda getteroran accessor,returnsthevalueofthevalueinstancevariable,
value. Whywritethiskindoffunction? Whynotsimplyusetheinstancevariable? We’lladdressthis
intheFAQ’sattheendofthischapter.<
5.Themain()function is outside the Dieclass, and makes use of the class deﬁnition. This function
createstwo Die,d1andd2,andthenrollsthosetwo Dieadozentimes.
6.Thisisthetop-levelscriptinthisﬁle. Itexecutesthe main()function,which–inturn–thencreates
Dieobjects.
The__init__()methodcanacceptarguments. Thisallowsustocorrectlyinitializeanobjectwhilecreating
it. Forexample:
point.py
#!/usr/bin/env python
"""Define a geometric point and a few common manipulations."""
classPoint(object):
"""A 2-D geometric point."""
def__init__ (self, x, y ):
"""Create a point at (x,y)."""
self.x,self.y=x, y
defoffset(self, xo, yo ):
"""Offset the point by xo parallel to the x-axis
and yo parallel to the y-axis."""
self.x+=xo
self.y+=yo
defoffset2(self, val ):
"""Offset the point by val parallel to both axes."""
self.offset( val, val )
def__str__(self):
"""Return a pleasant representation."""
return"(%g,%g)"%(self.x,self.y )
1.Thisclass, Point,initializeseachpointobjectwiththexandycoordinatevaluesofthepoint. Italso
providesafewmemberfunctionstomanipulatethepoint.
2.The__init__()methodrequirestwoargumentvalues. Aclientprogramwoulduse‘ Point( 640,
480 )’tocreatea Pointobjectandprovideargumentstothe __init__()methodfunction.
3.Theoffset()methodrequirestwoargumentvalues. Thisisamanipulatorwhichchangesthestate
ofthepoint. Itmovesthepointtoanewlocationbasedontheoﬀsetvalues.
23.5. Some Examples 267
Building Skills in Python, Release 2.6.5
4.Theoffset2()methodrequiresoneargumentvalue. Thismethodmakesuseofthe offset()method.
Thiskindofreuseassuresthatbothmethodsareperfectlyconsistent.
5.We’veaddeda __str__()method,whichreturnsthestringrepresentationoftheobject. Whenwe
print any object, the printstatement (or print()function) automatically calls the str()built-in
function. The str()functionusesthe __str__()methodofanobjecttogetastringrepresentation
oftheobject.
defmain():
obj1_corner =Point(12,24)
obj2_corner =Point(8,16)
obj1_corner .offset( -4,-8)
printobj1_corner
printobj2_corner
main()
1.Weconstructa Point,namedobj1_corner.
2.Wemanipulatethe obj1_corner Point tomoveitafewpixelsleftandup.
3.Weaccessthe obj1_cornerobjectbyprintingit. Thiswillcallthe str()function,whichwillusethe
__str__()methodtogetastringrepresentationofthe Point.
TheselfVariable. Theseexamplesshoulddrivehometheubiquirtyofthe selfvariable. Withinaclass,
wemustbesuretouse self.infrontofthemethodfunctionnamesaswellasattributenames. Forexample,
ouroffset2()functionacceptsasinglevalueandcallstheobject’s offset()functionusing‘ self.offset(
val, val )’.
Theselfvariableissoimportant,we’llhighlightit.
Important: Theselfvariable
InPython,the selfqualiﬁerissimplyrequiredallthetime.
ProgrammersexperiencedinJavaorC++mayobjecttoseeingtheexplicit self.infrontofallvariable
namesandmethodfunctionnames. InJavaandC++,thereisa this.qualiﬁerwhichisassumedbythe
compiler. Sometimesthisqualiﬁerisrequiredtodisambiguatenames,othertimesthecompilercanworkout
whatyoumeant.
Someprogrammerscomplainthat selfistoomuchtyping,anduseanothervariablenamelike my. Thisis
unusual,generallydescribedasabadpolicy,butitisnotunheardof.
An object is a namespace; it contains the attributes. We can call the attributes instance variables to
distinguishthemfromglobalvariablesandfreevariables.
InstanceVariables Thesearepartofanobject’snamespace. Withinthemethodfunctionsof
aclass,thesevariablesarequaliﬁedby self.
Outsidethemethodfunctionsoftheclass,thesevariablesarequaliﬁedbytheobject’sname.
In die.py,themain()functionwouldreferto‘ d1.value’togetthevalueattributeofobject
d1.
GlobalVariables Globalvariablesarepareofaspecialglobalnamespace. The globalstate-
mentcreatesthevariablenameintheglobalnamespaceinsteadofthelocalnamespace. See
The global Statement formoreinformation.
Whileit’seasytorefertoglobalvariables,it’snotaseasytocreatethem.
FreeVariables Withinamethodfunction,avariablethatisnotqualiﬁedby self.,normarked
byglobalisafreevariable. Pythonchecksthelocalnamespace,thentheglobalnamespace
forthisvariable. Thisambiguityis,generally,notagoodidea.
268 Chapter 23. Classes
Building Skills in Python, Release 2.6.5
23.6 Object Collaboration
Object-orientedprogramminghelpsusbyencapsulatingdataandprocessingintoatidyclassdeﬁnition. This
encapsulationassuresusthatourdataisprocessedcorrectly. Italsohelpsusunderstandwhataprogram
doesbyallowingustoignorethedetailsofanobject’simplementation.
Whenwecombinemultipleobjectsintoacollaboration,weexploitthepowerofecapsulation. We’lllookat
asimpleexampleofcreatingacompositeobject,whichhasanumberofdetailedobjectsinsideit.
DeﬁningCollaboration . Deﬁningacollaborationmeansthatwearecreatingaclasswhichdependson
oneormoreotherclasses. Here’sanewclass, Dice,whichusesinstancesofour Dieclass. Wecannowwork
withaDicecollection,andnotworryaboutthedetailsoftheindividual Dieobjects.
dice.py - part 1
classDice(object):
"""Simulate a pair of dice."""
def__init__ (self):
"Create the two Die objects. "
self.myDice=( Die(), Die() )
defroll(self):
"Return a random roll of the dice. "
fordinself.myDice:
d.roll()
defgetTotal (self):
"Return the total of two dice. "
t=0
fordinself.myDice:
t+=d.getValue()
returnt
defgetTuple (self):
"Return a tuple of the dice values. "
returntuple( [d.getValue() fordinself.myDice] )
defhardways (self):
"Return True if this is a hardways roll. "
returnself.myDice[0].getValue() ==self.myDice[1].getValue()
1.We’rebuildingonthedeﬁnitionofasingle Die,fromthe die.pyexample. Wedidn’trepeatithereto
savesomespaceintheexample.
2.Thisclass, Dice,deﬁnesapairof Dieinstances.
3.The__init__()methodcreatesaninstancevariable, myDice,whichhasatupleoftwoinstancesof
theDieclass.
4.Theroll()methodchangestheoverallstateofagiven Diceobjectbychangingthetwoindividual
Dieobjectsitcontains. Thismanipulatorusesa forlooptoassigneachoftheinternal Dieobjectsto
d. Intheloopitcallsthe roll()methodofthe Dieobject,d. Thistechniqueiscalled delegation: a
Diceobjectdelegatestheworktotwoindividual Dieobjects. Wedon’tknow,orcare,howeach Die
computesit’snextvalue.
5.ThegetTotal()methodcomputesasumofallofthe Dieobjects. Itusesa forlooptoassigneachof
theinternal Dieobjectsto d. Itthenusesthe getValue()methodof d. Thisistheoﬀicialinterface
method;byusingit,wecanremainblissfullyunawareofhow Diesavesit’sstate.
6.ThegetTuple()methodreturnsthevaluesofeach Dieobject. Itusesalistcomprehensiontocreate
alistofthevalueinstancevariablesofeach Dieobject. Thebuilt-infunction tuple()convertsthe
23.6. Object Collaboration 269
Building Skills in Python, Release 2.6.5
listintoanimmutable tuple.
7.Thehardways()methodexaminesthevalueofeach Dieobjectoseeiftheyarethesame. Iftheyare,
thetotalwasmade“thehardway.”
ThegetTotal()andgetTuple()methodsreturnbasicattributeinformationaboutthestateoftheobject.
Thesekindsofmethodsareoftencalled gettersbecausetheirnamesstartwith“get”.
Collaborating Objects . The following function exercises an instance this class to roll a Diceobject a
dozentimesandprinttheresults.
deftest2():
x=Dice()
foriinrange(12):
x.roll()
printx.getTotal(), x .getTuple()
Thisfunctioncreatesaninstanceof Dice,calledx. Itthenentersalooptoperformasuiteofstatements12
times. Thesuiteofstatementsﬁrstmanipulatesthe Diceobjectusingits roll()method. Thenitaccesses
theDiceobjectusing getTotal()andgetTuple()method.
Here’sanotherfunctionwhichusesa Diceobject. Thisfunctionrollsthedice1000times,andcountsthe
number of hardways rolls as compared with the number of other rolls. The fraction of rolls which are
hardwaysisideally1/6,16.6%.
deftest3():
x=Dice()
hard=0
soft=0
foriinrange(1000):
x.roll()
ifx.hardways(): hard +=1
else: soft+=1
printhard/1000., soft/1000.
Independence . One point of object collaboration is to allow us to modify one class deﬁnition without
breakingtheentireprogram. AslongaswemakechangestoDiethatdon’tchangetheinterfacethatDie
uses,wecanaltertheimplementationofDieallwewant.Similarly,wecanchangetheimplementationofDice,
aslongasthebasicsetofmethodsarestillpresent,wearefreetoprovideanyalternativeimplementation
wechoose.
Wecan,forexample,reworkthedeﬁnitionof Dieconﬁdentthatwewon’tdisturb Diceorthefunctionsthat
useDice(test2()andtest3()). Let’schangethewayitrepresentsthevaluerolledonthedie.
Here’sanalternateimplemetationofDie. Inthiscase,theprivateinstancevariable, value,willhaveavalue
in the range 0≤value < 5. When getValue()adds 1, the value is in the usual range for a single die,
1≤value < 6.
class Die(object):
"""Simulate a 6-sided die."""
def __init__( self ):
self.roll()
def roll( self ):
self.value= random.randint(0,5)
retuen self.value
def getValue( self ):
return 1+self.value
270 Chapter 23. Classes
Building Skills in Python, Release 2.6.5
Sincethisversionof Diehasthesameinterfaceasotherversionsof Dieinthischapter,itispolymorphicwith
them. Therecouldbeperformancediﬀerences, dependingontheperformanceof random.randint() and
random.randrange() functions. Since random.randint() hasaslightlysimplerdeﬁnition,itmayprocess
morequickly.
Similarly,wecanreplace Diewiththefollowingalternative. Dependingontheperformanceof choice(),
thismaybefasterorslowerthanotherversionsof Die.
classDie(object):
"""Simulate a 6-sided die."""
def__init__ (self):
self.domain=range(1,7)
defroll(self):
self.value=random.choice(self.domain)
returnself.value
defgetValue (self):
returnself.value
23.7 Class Deﬁnition Exercises
Theseexercisesareconsiderablymoresophisticatedthentheexercisesinpreviousparts. Eachofthesesec-
tionsdescribesasmallprojectthatrequiresyoutocreateanumberofdistinctclasseswhichmustcollaborate
toproduceausefulresult.
When we document a method function, we don’t mention the selfvariable. This is required when you
actuallywritetheclassdeﬁnition. However,wedon’tshowitinthedocumentation.
23.7.1 Stock Valuation
ABlockof stock has a number of attributes, including a purchase price, purchase date, and number of
shares. Commonly,methodsareneededtocomputethetotalspenttobuythestock,andthecurrentvalue
ofthestock. A Positionisthecurrentownershipofacompanyreﬂectedbyalloftheblocksofstock. A
Portfolioisacollectionof Positions;ithasmethodstocomputethetotalvalueofall Blocksofstock.
Whenwepurchasestocksalittleatatime,each Blockhasadiﬀerentprice. Wewanttocomputethetotal
valueoftheentiresetof Blocks,plusanaveragepurchasepriceforthesetof Blocks.
TheStockBlockclass . First,deﬁnea StockBlockclasswhichhasthepurchasedate,pricepershareand
numberofshares. Herearethemethodfunctionsthisclassshouldhave.
__init__ (self, date, price, number_of_shares )
Populatetheindividualﬁeldsofdate,priceandnumberofshares. Thisisinformationwhichispart
ofthePosition,madeupofindividualblocks.
Don’tincludethecompanynameortickersymbol.
__str__(self)
Returnanicelyformattedstringthatshowsthedate,priceandshares.
getPurchValue (self)
Computethevalueaspurchasepricepershare ×shares.
getSaleValue (self, salePrice )
UsesalePricetocomputethevalueassalepricepershare ×shares.
23.7. Class Deﬁnition Exercises 271
Building Skills in Python, Release 2.6.5
getROI(self, salePrice )
UsesalePricetocomputethereturnoninvestmentas(salevalue-purchasevalue) ÷purchasevalue.
NotethatthisisnottheannualizedROI.We’lladdressthisissuebelow.
Wecanloadasimpledatabasewithapieceofcodethelookslikethefollowing. Theﬁrststatementwill
createasequencewithfourblocksofstock. Wechosevariablenamethatwouldremindusthattheticker
symbolsforallfouris‘GM’.Thesecondstatementwillcreateanothersequencewithfourblocks.
blocksGM =[
StockBlock( purchDate ='25-Jan-2001 ', purchPrice =44.89, shares =17),
StockBlock( purchDate ='25-Apr-2001 ', purchPrice =46.12, shares =17),
StockBlock( purchDate ='25-Jul-2001 ', purchPrice =52.79, shares =15),
StockBlock( purchDate ='25-Oct-2001 ', purchPrice =37.73, shares =21),
]
blocksEK =[
StockBlock( purchDate ='25-Jan-2001 ', purchPrice =35.86, shares =22),
StockBlock( purchDate ='25-Apr-2001 ', purchPrice =37.66, shares =21),
StockBlock( purchDate ='25-Jul-2001 ', purchPrice =38.57, shares =20),
StockBlock( purchDate ='25-Oct-2001 ', purchPrice =27.61, shares =28),
]
The Position class . A separate class, Position, will have an the name, symbol and a sequence of
StockBlocksforagivencompany. Herearesomeofthemethodfunctionsthisclassshouldhave.
Position. ()
__init__ (self, name, symbol, * blocks )
Acceptthecompanyname,tickersymbolandacollectionof StockBlockinstances.
__str__(self)
Returnastringthatcontainsthesymbol,thetotalnumberofsharesinallblocksandthetotalpurchse
priceforallblocks.
getPurchValue (self)
Sumthepurchasevaluesforallofthe StockBlocksinthisPosition. Itdelegatesthehardpartof
theworktoeach StockBlock‘sgetPurchValue() method.
getSaleValue (self, salePrice )
ThegetSaleValue() methodrequiresa salePrice;itsumsthesalevaluesforallofthe StockBlocks
inthisPosition.Itdelegatesthehardpartoftheworktoeach StockBlock‘sgetSaleValue() method.
getROI(self, salePrice )
ThegetROI()methodrequiresa salePrice; itcomputesthereturnoninvestmentas(salevalue-
purchasevalue)÷purchasevalue. ThisisanROIbasedonanoverallyield.
NotethatthisisnottheannualizedROI.We’lladdressthisissuebelow.
Wecancreateour Positionobjectswiththefollowingkindofinitializer. Thiscreatesasequenceofthree
individual Positionobjects; onehasasequenceofGMblocks,onehasasequenceofEKblocksandthe
thirdhasasingleCATblock.
portfolio= [
Position( "General Motors", "GM", blocksGM ),
Position( "Eastman Kodak", "EK", blocksEK )
Position( "Caterpillar", "CAT",
[ StockBlock( purchDate='25-Oct-2001',
purchPrice=42.84, shares=18 ) ] )
]
272 Chapter 23. Classes
Building Skills in Python, Release 2.6.5
An Analysis Program . You can now write a main program that writes some simple reports on each
Positionobject in the portfolio. One report should display the individual blocks purchased, and the
purchase value of the block. This requires iterating through the Positionsin theportfolio, and then
delegatingthedetailedreportingtotheindividual StockBlockswithineach Position.
Anotherreportshouldsummarizeeachpositionwiththesymbol,thetotalnumberofsharesandthetotal
valueofthestockpurchased. Theoverallaveragepricepaidisthetotalvaluedividedbythetotalnumber
ofshares.
In addition to the collection of StockBlockobjects that make up a Position, one additional piece of
informationthatisusefulisthecurrenttradingpriceforthe Position. First,adda currentPrice attribute,
andamethodtosetthatattribute. Then,adda getCurrentValue() methodwhichcomputesasumofthe
getSaleValue() methodofeach StockBlock,usingthetradingpriceofthe Position.
Annualized Return on Investment . In order to compare portfolios, we might want to compute an
annualizedROI.ThisisROIasifthestockwereheldforeactlyoneyear. Inthiscase, sinceeachblock
hasdiﬀerentownershipperiod,theannualizedROIofeachblockhastobecomputed. Thenwereturnan
averageofeachannualROIweightedbythesalevalue.
Theannualizationrequirescomputingthedurationofstockownership. Thisrequiresuseofthe timemodule.
We’llcoverthatindepthin Dates and Times: the time and datetime Modules .Theessentialfeature,however,
istoparsethedatestringtocreateatimeobjectandthengetthenumberofdaysbetweentwotimeobjects.
Here’sacodesnippetthatdoesmostofwhatwewant.
>>>importdatetime
>>>dt1="25-JAN-2001 "
>>>tm1=datetime .datetime .strptime( dt1, "%d-%b-%Y").date()
>>>tm1
datetime.date(2001, 1, 25)
>>>dt2="25-JUN-2001 "
>>>tm2=datetime .datetime .strptime( dt2, "%d-%b-%Y").date()
>>>tm2
datetime.date(2001, 6, 25)
>>>tm2-tm1
datetime.timedelta(151)
>>>(tm2-tm1).days/365.25
0.4134154688569473
In this example, tm1andtm2aredatetime.date objects with details parsed from the date string by
datetime.datetime.strptime() .
Wecansubtracttwo datetime.date objectsandgeta datetime.timedelta thathasthenumberofdays
betweenthetwodates. Atimedeltacanbeusedon datetime.datetime objectstogetdaysandseconds
betweentwodate-timestamps.
Inthiscase,thereare151daysbetweenthetwodates. Whenwedividebythenumberofdaysinayear
(includingleapdays)wegetthefractionofayearbetweenthetwodates.
ownedFor (self, saleDate )
Thismethodcomputesthenumberofyearsthestockwasowned.
annualROI (self, salePrice, saleDate )
ThismethodsdividesthegrossROIbythedurationinyearstoreturntheannualizedROI.
Oncewe’veaddedthenecessarysupportto StockBlock,wecanthenaddto Position.
annualROI (self, salePrice, saleDate )
Giventhe StockBlock.annualROI() method,wecanthencomputeaweightedaverageofeachblock’s
ROI.ThisistheannualizedROIfortheentireposition.
23.7. Class Deﬁnition Exercises 273
Building Skills in Python, Release 2.6.5
23.7.2 Dive Logging and Surface Air Consumption Rate
TheSurfaceAirConsumptionRateisusedbySCUBAdiverstopredictairusedataparticulardepth. If
wehaveasequenceof Diveobjectswiththedetailsofeachdive,wecandosomesimplecalculationstoget
averagesandrangesforourairconsumptionrate.
Foreachdive,weconvertourairconsumptionatthatdive’sdepthtoanormalizedairconsumptionatthe
surface. Givendepth(infeet), d, tartingtankpressure(psi), s, ﬁnaltankpressure(psi), f, andtime(in
minutes)of t,theSACR, c,isgivenbythefollowingformula.
c=33(s−f)
t(d+ 33)
Typically,youwillaveragetheSACRoveranumberofsimilardives.
TheDiveClass. Youwillwanttocreatea Diveclassthatcontainsattributeswhichincludestartpressure,
ﬁnishpressure,timeanddepth. Typicalvaluesareastartingpressureof3000,endingpressureof700,depth
of30to80feetandtimesof30minutes(at80feet)to60minutes(at30feet). SACR’saretypicallybetween
10and20. Your Diveclassshouldhaveamethodnamed Dive.getSACR() whichreturnstheSACRforthat
dive.
Tomakelifealittlesimplerputtingthedatain,we’lltreattimeasstringof‘ HH:MM’,andusestringfunctions
topickthisapartintohoursandminutes. Wecansavethisastupleoftwointgers: hoursandminutes.
To compute the duration of a dive, we need to normalize our times to minutes past midnight, by doing
‘hh*60+mm’. Oncewehaveourtimesinminutespastmidnight,wecaneasilysubtracttogetthenumberof
minutesofdurationforthedive. You’llwanttocreateamethodfunction Dive.getDuration() todojust
thiscomputationforeachdive.
__init__ (self, pressure_start, pressure_ﬁnish, time_start, time_ﬁnish, depth )
The__init__()methodwillinitializea DivewiththestartandﬁnishpressureinPSI,theinandout
timeasastring,andthedepthasaninteger. Thismethodshouldparseboththe time_startstring
andtime_finishstringandnormalizeeachtobeminutesaftermidnightsothatitcancomputethe
durationofthedive. Notethatapracticaldivelogwouldhaveadditionalinformationlikethedate,
thelocation, theairandwatertemperature, seastate, equipmentusedandothercommentsonthe
dive.
__str__(self)
The__str__()methodshouldreturnanicestringrepresentationofthediveinformation.
getSACR(self)
ThegetSACR()methodcancomputetheSACRvaluefromthestartingpressure,ﬁnalpressure,time
anddepthinformation.
TheDiveLogClass. We’llwanttoinitializeourdivelogasfollows:
log = [
Dive( start=3100, finish=1300, in="11:52", out="12:45", depth=35 ),
Dive( start=2700, finish=1000, in="11:16", out="12:06", depth=40 ),
Dive( start=2800, finish=1200, in="11:26", out="12:06", depth=60 ),
Dive( start=2800, finish=1150, in="11:54", out="12:16", depth=95 ),
]
Ratherthanuseasimplesequenceof Diveobjects,youcancreatea DiveLogclasswhichhasasequence
ofDiveobjectsplusa DiveLog.getAvgSACR() method. Your DiveLogmethodcanbeinitiatlizedwitha
sequenceofdives,andcanhaveanappendmethodtoputanotherdiveintothesequence.
Exercising the Dive and DiveLog Classes . Here’s how the ﬁnal application could look. Note that
we’reusinganarbitrarynumberofargumentvaluestothe Dive.__init__() function,therefore,ithasto
bedeclaredas‘ def __init__( self, *listOfDives ) ’
274 Chapter 23. Classes
Building Skills in Python, Release 2.6.5
log= DiveLog(
Dive( start=3100, finish=1300, in="11:52", out="12:45", depth=35 ),
Dive( start=2700, finish=1000, in="11:16", out="12:06", depth=40 ),
Dive( start=2800, finish=1200, in="11:26", out="12:06", depth=60 ),
Dive( start=2800, finish=1150, in="11:54", out="12:16", depth=95 ),
)
print log.getAvgSACR()
for d in log.dives:
print d
23.7.3 Multi-Dice
Ifwewanttosimulatemulti-dicegameslikeYacht,Kismet,Yatzee,Zilch,Zork,GreedorTenThousand,we’ll
needacollectionthatholdsmorethantwodice. Themostcommonconﬁgurationisaﬁve-dicecollection.
Inordertobeﬂexible,we’llneedtodeﬁnea Diceobjectwhichwillusea tuple,listorSetofindividual
Dieinstances. Sincethenumberofdiceinagamerarelyvaries,wecanalsousea FrozenSet.
Onceyouhavea Diceclasswhichcanholdacollectionofdice,youcangathersomestatisticsonvarious
multi-dicegames. Thesegamesfallintotwotypes. Inbothcases,theplayer’sturnstartswithrollingall
thedice,theplayercanthenelecttore-rollorpreserveselecteddice.
•ScorecardGames . InYacht,KismetandYatzee,ﬁvediceareused.
Theﬁrststepinaplayer’sturnisarollofallﬁvedice. Thiscanbefollowedbyuptotwoadditional
stepsinwhichtheplayerdecideswhichdicetopreserveandwhichdicetoroll.
Theplayeristryingtomakeascoringhand. Atypicalscorecardforthesegameslistsadozenormore
“hands”withassociatedpointvalues. Eachturnmustﬁllinonelineofthescorecard;ifthedicematch
ahandwhichhasnotbeenscored,theplayerentersascore. Ifaturndoesnotresultinahandthat
matchesanunscoredhand,thenascoreofzeroisentered.
Thegameendswhenthescorecardisﬁlled.
Atypicalscorecardhasspacesfor3-of-a-kinds(1through6)worththesumofthescoringdice; a
four-of-a-kindandfullhouse(3ofakindandapair)worththesumofthedice;asmallstraight(4in
arow)worth25points;alongstraight(all5inarow)worth30points;a“chance”(sumofthedice),
plus5-of-a-kindworth50points.
Somegamesawarda35pointbonusforgettingallsix3-of-a-kindscores.
•Point Games . In Zilch, Zork, Green or Ten Thousand, ﬁve dice are typical, but there are some
variations.
Theplayerinthisgamehasnolimitonthenumberofstepsintheirturn. Theﬁrststepistorollall
thediceanddetermineascore. Theirturnendswhentheyperceivetheriskofanothersteptobetoo
high,orthey’vemadearollwhichgivesthemascoreofzero(orzilch)fortheturn.
Typically,ifthenewlyrolleddicearenon-scoring,theirturnisoverwithascoreofzero. Ateachstep,
theplayerislookingatnewlyrolleddicewhichimprovetheirscore.
Thegameendswhensomeonehasascoreof10,000.
Atyipcalsetofrulesawardsastraight1000. Three-of-a-kindscores100 ×thedie’svalue(exceptthree
ones is 1000 points). After removing any three-of-a-kinds, each die showing 1 scores 100, each die
showing5scores50. Additionally,somefolkswillscore1000 ×thedie’svalueforﬁve-of-a-kind.
OurMultiDiceclasswillbebasedontheexampleof Diceinthischapter. Inadditiontoacollectionof Die
instances(asequence, SetorFrozenSet),theclasswillhavethefollowingmethods.
23.7. Class Deﬁnition Exercises 275
Building Skills in Python, Release 2.6.5
__init__ (self, dice)
Wheninitializinganinstanceof MultiDice,you’llcreateacollectionofindividual Dieinstances. You
canuseasequenceofsomekind,a SetoraFrozenSet.
roll(self)
RollalldiceinthesequenceorSet. Notethatyourchoiceofcollectiondoesn’tmateriallyalterthis
method. That’sacoolfeatureofPython.
getDice(self)
This method returns the collection of dice as a tuple so that a client class can examine them and
potentialyre-rollsomeorallofthedice.
reroll(self, * dice )
Rolljustthegivendice. Rememberthatthe MultiDice.getDice() returnedtheactualdiceobjects
fromourset. Whentheclientprogramgivestheseobjectsbacktous,wedon’tneedtosearchthrough
oursequenceorsettolocatetheunderlyingobjects. We’vebeengiventheobjects.
score(self)
Thismethodwillscorethehand,returninga listoftwo-tuples. Eachtwo-tuplewillhavethename
ofthehandandthepointvaluefortheparticulargame. Insomecases,therewillbemultiplewaysto
scoreahand,andthe listwillreﬂectallpossiblescoringsofthehand,inorderfrommostvaluable
toleastvaluable. Inothercases,the listwillonlyhaveasingleelement.
It isn’t practical to attempt to write a universal MultiDiceclass that covers all variations of dice
games. Ratherthanwriteagiganticdoes-everythingclass,thebetterpolicyistocreateafamilyof
classesthatbuildoneachotherusinginheritance. We’lllookatthisin Inheritance.
Forthisexercise,you’llhavetopickonegameandcomputethescoreforthatparticulargame. Later,
we’llseehowtocreateaninheritancehierarchythatcancoverallofthesemulti-dicegames.
Forthescorecardgames(Yacht,Kismet,Yatzee),wewanttoknowifthissetofdicematchesanyof
thescorecardhands. Inmanycases,asetofdicecanmatchanumberofpotentialhands. Ahandof
allﬁvediceshowingthesamevalue(e.g,a6)ismatchesthesixes,threeofakind,fourofakind,ﬁve
ofakindandwild-cardrowsonmostgamescore-sheets. Asequenceofﬁvedicewillmatchbotha
longstraightandashortstraight.
Common Scoring Methods . No matter which family of games you elect to pursue, you’ll need some
commonmethodfunctionstohelpscoreahand. Thefollowingmethodswillhelptoevaluateasetofdice
toseewhichhanditmightbe.
matchDie (self, die)
GiveaDie,usematchValue() topartitionthedicebasedonthevalueofthegiven Die‘svalue.
matchValue (self, number )
Givenanumericvalue,partitionthediceintotwosets: thedicewhichhaveavaluethatmatchesthe
givenDie,andtheremaining Diewhichdonotmatchthevalue.
Returnbothsets.
NOfAKind (self, n)
Thisfunctionswillevaluate MultiDice.matchDie() foreachDieinthecollection. Ifanygiven Die
hasamatchDie()withamatchsetthatcontains nmatchingdice,thehandasawholematchesthe
template.
Thismethodcanbeusedfor3ofakind,4ofakindand5ofakind.
ThismethodreturnsthematchingdiceorNoneifthehanddidnothaveN-of-a-kind. Thematching
dicesetcanthenbesummed(forthehandsthatcountonlyscoringdice)ortheentiresetofdicecan
besummed(forthehandsthatcountalldice.)
276 Chapter 23. Classes
Building Skills in Python, Release 2.6.5
largeStraight (self)
Thisfunctionmustestablishthatallﬁvediceformasequenceofvaluesfrom1to5or2to6. There
mustbenogapsandnoduplicatedvalues.
smallStraight (self)
Thisfunctionmustestablishthatfouroftheﬁvediceformasequenceofvalues. Thereareavariety
ofwaysofapproachingthis;itisactuallyachallengingalgorithm.
Here’s one approach: create a sequence of dice, and sort them into order. Look for an ascending
sequencewithone“irrelevant”dieinit. Thisirrelevantdiemustbeeither(a)agapatthestartofthe
sequence(1,3,4,5,6)or(b)agapattheendofthesequence(1,2,3,4,6)or(c)asingleduplicated
value(1,2,2,3,4,5)withinthesequence.
chance(self)
Thesumofthedicevalues. Itisanumberbetween5and30.
DesignNotes
Thisisn’tthebestwaytohandlescoring. Abetterwayistousethe Strategydesignpatternand
deﬁneaseparateclassforscoringagame. Theoverallgamecanthenuseasimple,generic MultiDice
instance.
Eachgame’sscoringclass,inturn,woulduse Strategytodelegatetherulesformatchingandscoring
ahandtoseparateobjects.
Wewoulddeﬁneaclassforeachkindofhand. Eachvariouskindsofhandobjectscaninterrogatethe
dicetodetermineifthedicematcheditsdistinctpattern. Eachhandobject, besidescheckingfora
match,canalsoencapsulatethescoreforthehand.
Thisissomethingwe’lllookatin Strategy.
ScoringYacht,KismetandYatzee . Forscoringthesehands,youroverall score()methodfunctionwill
stepthroughthecandidatehandsinaspeciﬁcorder. Generally, you’llwanttocheckfor fiveOfAKind()
ﬁrst, since fourOfAKind() andthreeOfAKind() willalsobetrueforthishand. Similarly, you’llhaveto
checkfor largeStraight() beforesmallStraight() .
Yourscore()methodwillevaluateeachofthescoringmethods. Ifthemethodmatches,yourmethodwill
appendatwo-tuplewiththenameandpointstothelistofscores.
ScoringZilch,Zorkand10,000 . Ascoringhand’sdescriptioncanberelativelycomplexinthesegames.
Forexample,youmayhaveahandwiththree2’s,a1anda5. Thisisworth350. Thedescriptionhastwo
parts: thethree-of-a-kindandtheextra1’sand5’s. Herearethestepsforscoringthisgame.
1.Evaluatethe largeStraight() method. Ifthehandmatches,thenreturna listwithanappropriate
2-tuple.
2.Ifyou’rebuildingagamevariationwhereﬁveofakindisascoringhand,thenevaluate fiveOfAKind() .
Ifthehandmatches,thenreturnalistwithanappropriate2-tuple.
3.Threeofakind. Evaluatethe threeOfAKind() method. Thiswillcreatetheﬁrstpartofthehand’s
description.
•Ifthematchingsethasexactlythreedice,thenthesetofunmatcheddicemustbeexaminedfor
additional1’sand5’s. Theﬁrstpartofthehand’sdescriptionstringisthree-of-a-kind.
•Ifthematchinghasfourorﬁvedice,thenoneortwodicemustbepoppedfromthematchingset
andaddedtothenon-matchingset. Thesetofunmatcheddicemustbeexaminedforaddtional
1’sand5’s. Theﬁrstpartofthehand’sdescriptionstringisthree-of-a-kind.
•Iftherewasnosetofthreematchingdice,thenallthediceareinthenon-matchingset,whichis
checkedfor1’sand5’s. Thestringwhichdescribesthehandhasnoﬁrstpart,sincetherewasno
three-of-a-kind.
23.7. Class Deﬁnition Exercises 277
Building Skills in Python, Release 2.6.5
4.1-5’s. Anynon-matchingdicefromthe threeOfAKind() testarethencheckedusing matchValue() to
seeifthereare1’sor5’s. Ifthereareany,thisisthesecondpartofthehand’sdescription. Ifthere
arenone,thenthere’snosecondpartofthedescription.
5.Theﬁnalstepistoassemblethedescription. Therearefourcases: nothing,three-of-a-kindwithno
1-5’s,1-5’swithnothree-of-a-kind,andthree-of-a-kindplus1-5’s.
Inthenothingcase,thisisanon-scoringhand. Intheotherthreecases,itisascoringhand,andyou
canassignpointvaluestoeachpartofthedescription.
ExercisingTheDice . Yourmainscriptshouldcreatea MultiDiceobject,executeaninitialrollandscore
theresult. Itshouldthenpickthreedicetore-rollandscoretheresult. Finally,itshouldpickonedie,re-roll
thisdieandscoretheresult. Thisdoesn’tmakesophisticatedstrategicdecisions,butitdoesexerciseyour
MultiDiceobjectthoroughly.
Whenplayingascorecardgame,thelistofpotentialhandsisexaminedtoﬁllinanotherlineonthescorecard.
Whenplayingapointsgame,eachthrowmustresultinahigherscorethanthepreviousthrowortheturn
isover.
ThePlayer’sDecision
Whenplayingthesegames,ahumanplayerwillgenerallyglanceatthedice,formapattern,anddecide
ifthediceare“close”tooneofthegivenhands. Thisisachallengingdeisionprocesstomodel.
Tocreateaproperodds-basedjudgementofpossibleoutcomes,onewouldhavetoenumerateallpossible
gamestrees.
Considerthatthereare7,776possiblewaystorolltheinitialﬁvedice. Fromhereonecanrerollfrom
0toallﬁve(7,776outcomes)dice.
Forscorecardgames, it’spossibletoenumerateallpossiblegametreesbecausethereareonlythree
totalrolls. Whiletherearealotofdiﬀerentwaysforthegametoevolve,thereareonlyafewscoring
handsastheﬁnalresult. Eachscoringhandhasavalueandacountofalternativetreesthatleadto
thathand.
23.7.4 Rational Numbers
ARationalnumberisaratiooftwointegers.Examplesinclude 1/2,2/3,22/7,355/113.Wecandoarithmetic
operationsonrationalnumbers. Wecandisplaythemasproperfractions( 3 1/7),improperfractions( 22/7)
ordecimalexpansions( 3.1428571428571428 ).
Theessenceofthisclassistosavearationalnumberandperformarithmeticoperationsonthisnumberor
betweentworationalnumbers.
It’salsoimportanttonotethatallarithmeticoperationswillcreateanew Rationalnumbercomputedfrom
theinputs. Thismakesourobjectmostlyimmutable,whichistheexpectedbehaviorfornumbers.
We’llstartbydeﬁningmethodstoaddandmultiplytworationalvalues. Later,we’lldelveintotheadditional
methodsyou’dneedtowritetocreatearobust,completeimplementation.
You’llwrite __add__()and__mul__()methodsthatwillperformtheirprocessingwithtwo Rationalvalues:
selfandother. Inbothcases,thevariable otherhastobeanother Rationalnumberinstance.
You can check this with a simple assertstatement. ‘ assert type(self) == type(other) ’. Gener-
ally, however, this extra checking isn’t essential. If you try to use a non-Rational number, you’ll get an
AttributeError exceptionwhenyoutrytoaccessthevariouspartsoftheRationalnumber.
Design. ARationalclasshastwoattributes: thenumeratorandthedenominatorofthevalue. Theseare
bothintegers. Herearethevariousmethodsyoushouldcreate.
278 Chapter 23. Classes
Building Skills in Python, Release 2.6.5
__init__ (self, numerator, denominator=1 )
Accept the numerator and denominator values. It can have a default value for the denominator of
1. Thisgivesustwoconstructors: ‘ Rational(2,3) ’and‘Rational(4)’. Theﬁrstcreatesthefraction
2/3. Thesecondcreatesthefraction4/1.
This method should call the Rational._reduce() method to assure that the fraction is properly
reduced. Forexample,‘ Rational(8,4) ’shouldautomaticallyreducetoanumeratorof2andade-
nominatorof1.
__str__(self)
Returnanicestringrepresentationfortherationalnumber,typicallyasanimproperfraction. This
givesyouthemostdirectviewofyour Rationalnumber.
Youshouldprovideaseparatemethodtoprovideaproperfractionstringwithawholenumberanda
fraction. Thisothermethodwoulddoadditionalprocessingtoextractawholenameandremainder.
__float__ (self)
Returntheﬂoating-pointvalueforthefraction. Thismethodiscalledwhenaprogramdoes‘ float(
rational )’.
__add__(self, other )
Createandreturnanew Rationalnumberthatisthesumof selfandother.
Sumof S+Owhere SandOareRationalnumbers,Sn
SdandOn
Od.
Sn
Sd+On
Od=Sn×Od+On×Sd
Sd×Od
Example: 3/5+7/11=(33+35)/55=71/55.
__mul__(self, other )
Createandreturnsanew Rationalnumberthatistheproductof selfandother.
Thisnewfractionthathasanumeratorof(self.numerator ×other.numerator),andadenominatorof(
self.denominator ×other.denominator).
Productof S+Owhere SandOareRationalnumbers,Sn
SdandOn
Od.
Sn
Sd×On
Od=Sn×On
Sd×Od
Example: 3/5×7/11=21/55.
_reduce(self)
ReducethisRationalnumberbyremovingthegreatestcommondivisorfromthenumeratorandthe
denominator. Thisiscalledby Rational.__init__() ,Rational.__add__() ,Rational.__mul__() ,
assurethatallfractionsarereduced.
Reduceisatwo-stepoperation. First,ﬁndthegreatestcommondivisorbetweenthenumeratorand
denominator. Second,dividebothbythisdivisor. Forexample8/4hasaGCDof4,andreducesto
2/1.
TheGreatestCommonDivisor(GCD)algorithmisgivenin Greatest Common Divisor and Greatest
Common Divisor .
Notethatwe’vegiventhismethodanamethatbeginswith‘ _’tomakeitprivate. It’sa“mutator”
andupdatestheobject,somethingthatmayviolatetheexpectationofimmutability.
23.7. Class Deﬁnition Exercises 279
Building Skills in Python, Release 2.6.5
23.7.5 Playing Cards and Decks
Standardplayingcardshavearank(ace,twothroughten,jack,queenandking)andsuit(clubs,diamonds,
hearts, spades). Theseformanifty Cardobjectwithtwosimpleattributes. Wecanaddafewgenerally
usefulfunctions.
Herearethemethodsforyour Cardclass.
__init__ (self, rank, suit )
Settherankandsuitofthecard. Thesuitscanbecodedwithasinglecharacter(“C”,“D”,“H”,“S”),
andtherankscanbecodedwithanumberfrom1to13. Thenumber1isanace. Thenumbers11,
12,13areJack,QueenandKing,respectively.
__str__(self)
Returntherankandsuitintheform“2C”or“AS”or“JD”.Arankof1wouldbecome“A”,arankof
11,12or13wouldbecome“J”,“Q”or“K”,respectively.
__eq__(self, other )
Comparethiscardwithothercardconsideringbothrankandsuit.
__ne__(self, other )
Thiscanbeimplementedas‘ not self == other ’.
__lt__(self, other )
Comparethiscardwithother,returnTrueifthiscard’srankislessthantheother. Iftheranksare
equalcomparethesuits.
__le__(self, other )
Thiscanbeimplementedas‘ self < other or self == other ’.
__gt__(self, other )
Thiscanbeimplementedas‘ not self <= other ’.
__ge__(self, other )
Thiscanbeimplementedas‘ not self < other ’.
DealingandDecks .Cardsaredealtfroma Deck;acollectionof Cardsthatincludessomemethodsfor
shuﬄinganddealing. Herearethemethodsthatcomprisea Deck.
__init__ (self)
Createall52cards. Itcanusetwoloopstoiteratethroughthesequenceofsuits ("C", "D", "H",
"S")anditeratethroughtheranks‘ range(1,14)’. Aftercreatingeach Card,itcanappendeach Card
toasequencelikea list.
deal(self)
This method needs to do two things. First it must shuﬄe the cards. The randommodule has a
shuffle()functionwhichdoespreciselythis.
Second,itshoulddealtheshuﬄedcards. Dealingisbestdonewithageneratormethodfunction. The
deal()methodfunctionshouldhaveasimplefor-loopthatyieldseachindividual Card;thiscanbe
usedbyaclientapplicationtogeneratehands. Thepresenceofthe yieldstatementwillmakethis
methodfunctionusablebya forstatementinaclientapplicationscript.
BasicTesting . YoushoulddosomebasictestsofyourCardobjectstobesurethattheyrespondappro-
priatelytocomparisonoperations. Forexample,
>>>x1=Card(11,"C")
>>>x1
JC
>>>x2=Card(12,"D")
280 Chapter 23. Classes
Building Skills in Python, Release 2.6.5
>>>x1<x2
True
Youcanwriteasimpletestscriptwhichcanthedothefollowingtodeal CardsfromaDeck. Inthisexample,
thevariable dealerwillbetheiteratorobjectthatthe forstatementusesinternally.
d=Deck()
dealer=d.deal()
c1=dealer.next()
c2=dealer.next()
Hands. Manycardgamesinvolvecollectingahandofcards. AHandisacollectionof Cardsplussome
addition methods to score the hand in way that’s appropriate to the given game. We have a number of
collectionclassesthatwecanuse: list,tuple,dictionaryandset.
InBlackjack,the Handwillhavetwo Cardsassignedinitially;itwillthenbescored. Afterthis,theplayer
mustchooseamongacceptinganothercard(ahit),usingthishandagainstthedealer(standing),doubling
thebetandtakingonemorecard,orsplittingthehandintotwohands. Ignoringthesplitoptionfornow,
it’sclearthatthecollectionof Cardshastogrowandthengetscoredagain. Whataretheprosandconsof
list,tuple,setanddictionaryforahandwhichgrows?
WhenconsideringPoker,wehavetocontendwiththeinnumerablevariationsonpoker;we’lllookatsimple
ﬁve-carddrawpoker. Gameslikeseven-cardstudrequireyoutoscorepotentialhandsgivenonlytwocards,
andasmanyas21alternativeﬁve-cardhandsmadefromsevencards. TexasHold-Emhasfromthreeto
ﬁvecommoncardsplustwoprivatecards,makingthescoringrathercomplex. Forﬁve-carddraw,the Hand
willhaveﬁvecardsassignedinitially,anditwillbescored. Thensomecardscanberemovedandreplaced,
andthehandscoredagain. Sinceavalidpokerhandisanascendingsequenceofcards,calledastraight,it
ishandytosortthecollectionofcards. Whataretheprosandconsof list,tuple,setanddictionary?
23.7.6 Blackjack Hands
ForBlackjack,we’llextendour Cardclasstoscorehands. WhenusedinBlackjack,a Cardhasapointvalue
inadditiontoarankandsuit. Acesareeither1or11;twothroughtenareworth2-10;thefacecardsare
allworth10points. Whenanaceiscountedas1point,thetotaliscalledthehardtotal. Whenanaceis
countedas11points,thetotaliscalledasofttotal.
Youcanaddapointattributetoyourcardclass. Thiscanbesetaspartof __init__()processing. Inthat
case,thefollowingmethodssimplereturnthepointvalue.
Asanalternative,youcancomputethepointvalueeachtimeitisrequested. Thishastheobviousdisad-
vantageofbeingslower. However,itisconsiderablysimplertoaddmethodstoaclasswithoutrevisingthe
existing__init__()method.
Herearethemethodsyou’llneedtoaddtoyour CardclassinordertohandleBlackjackhands.
getHardValue (self)
Returnsthepoints. Formostranks,thepointsaretherank. Forranksof11,12and13returnapoint
valueof10.
getSoftValue (self)
Returnsthepoints. Formostranks,thepointsaretherank. Forranksof11,12and13returnapoint
valueof10. Arankof1returnsapointvalueof11.
Asateaserforthenextchapter,we’llnotethatthesemethodsshouldbepartofaBlackjack-speciﬁcsubclass
ofthegeneric Cardclass. Fornow,however,we’lljustupdatethe Cardclassdeﬁnition.Whenwelookat
inheritance in Inheritance, we’ll see that a class hierarchy can be simpler than the if-statements in the
getHardValue() andgetSoftValue() methods.
23.7. Class Deﬁnition Exercises 281
Building Skills in Python, Release 2.6.5
ScoringBlackjackHands . TheobjectiveofBlackjackistoaccumulatea Handwithatotalpointvalue
thatislessthanorequalto21. Sinceanacecancountas1or11,it’sclearthatonlyoneoftheacesina
handcanhaveavalueof11,andanyotheracesmusthaveavalueof1.
EachCardproducesahardandsoftpointtotal. The Handasawholealsohashardandsoftpointtotals.
Often,bothhardandsofttotalareequal. Whenthereisanace,however,thehardandsofttotalsforthe
handwillbediﬀerent.
Wehavetolookattwocases.
•NoAces. Thehardandsofttotalofthehandwillbethesame;it’sthetotalofthehardvalueofeach
card. Ifthehardtotalislessthan21thehandisinplay. Ifitisequalto21,itisapotentialwinner.
Ifitisover21,thehandhasgonebust. Bothtotalswillbecomputedasthehardvalueofallcards.
•OneormoreAces. Thehardandsofttotalofthehandarediﬀerent. Thehardtotalforthehandisthe
sumofthehardpointvaluesofallcards. Thesofttotalforthehandisthesoftvalueofoneaceplus
thehardtotaloftherestofthecards. Ifthehardorsofttotalis21,thehandisapotentialwinner. If
thehardtotalislessthan21thehandisinplay. Ifthehardtotalisover21,thehandhasgonebust.
TheHandclasshasacollectionof Cards,usuallyasequence,buta Setwillalsowork. Herearethemethods
oftheHandclass.
__init__ (self, * cards )
Thismethodshouldbegiventwoinstancesof Cardtorepresenttheinitialdeal. Itshouldcreatea
sequenceor Setwiththesetwoinitialcards.
__str__(self)
Return a string with all of the individual cards. A construct like the following works out well:
‘",".join( map(str, self.cards ) ) ’. This gets the string representation of each card in the
self.cardscollection, andthenusesthe string‘s’join()methodtoassembletheﬁnaldisplayof
cards.
hardTotal (self)
Sumsthehardvalueofeach Card.
softTotal (self)
Checkforany Cardwithadiﬀerenthardandsoftpointvalue(thiswillbeanace). Theﬁrstsuchcard,
iffound,isthe softSet. Theremainingcardsformthe hardSet.
It’sentirelypossiblethatthe softSetwillbeempty. It’salsoentirelypossiblethattherearemultiple
cardswhichcouldbepartofthe softSet.
Thevalueofthisfunctionisthetotalofthehardvaluesforallofthecardsinthe hardSetplusthe
softvalueofthecardinthe softSet.
add(self, card )
Thismethodwilladdanother Card()totheHand().
Exercising Card, Deck and Hand . Onceyouhavethe Card,DeckandHandclasses,youcanexercisethese
withasimplefunctiontoplayonehandofblackjack. Thisprogramwillcreatea DeckandaHand;itwill
dealtwo Cardsintothe Hand. Whilethe Hand‘stotalissoft16orless,itwilladd Cards. Finally,itwill
printtheresulting Hand.
Therearetwosetsofrulesforhowtoﬁlla Hand. Thedealeristightlyconstrained,butplayersaremorefree
tomaketheirowndecisions. Notethattheplayer’shandswhichgobustaresettledimmediately,irrespective
ofwhathappenstothedealer. Ontheotherhand,theplayer’shandswhichtotal21aren’tresolveduntil
thedealerﬁnishestakingcards.
Thedealermustaddcardstoahandwithasoft16orless. Ifthedealerhasasofttotalbetween17and21,
theystop. Ifthedealerhasasofttotalwhichisover21,butahardtotalof16orless,theywilltakecards.
Ifthedealerhasahardtotalof17ormore,theywillstop.
282 Chapter 23. Classes
Building Skills in Python, Release 2.6.5
Aplayermayaddcardsfreelyuntiltheirhardtotalis21ormore. Typically,aplayerwillstopatasoft21;
otherthanthat,almostanythingispossible.
AdditionalPlays . We’veavoideddiscussingtheoptionstosplitahandordoublethebet. Thesearemore
advanced topics that don’t have much bearing on the basics of deﬁning Card,DeckandHand. Splitting
simplycreatesadditional Hands. Doublingdownchangesthebetandgetsjustoneadditionalcard.
23.7.7 Poker Hands
We’llextendthe Cardclasswecreatedin Playing Cards and Decks toscorehandsinPoker,whereboththe
rankandsuitareusedtodeterminethehandthatisheld.
Pokerhandsarerankedinthefollowingorder,frommostdesirable(andleastlikely)downtoleastdesirable
(andalltoocommon).
1.StraightFlush . Fivecardsofadjacentranks,allofthesamesuit.
2.FourofaKind . Fourcardsofthesamerank,plusanothercard.
3.FullHouse. Threecardsofthesamerank,plustwocardsofthesamerank.
4.Flush. Fivecardsofthesamesuit.
5.Straight. Fivecardsofadjacentranks. Inthiscase,AcecanbeaboveKingorbelow2.
6.ThreeofaKind . Threecardsofthesamerank,plustwocardsofotherranks.
7.TwoPair. Twocardsofonerank,plustwocardsofanotherrank,plusonecardofathirdrank.
8.Pair. Twocardsofonerank,plusthreecardsofotherranks.
9.HighCard. Thehighestrankingcardinthehand.
Notethatastraightﬂushisbothastraightandaﬂush;fourofakindisalsotwopairaswellasonepair;a
fullhouseisalsotwopair,aswellasaonepair. Itisimportant,then,toevaluatepokerhandsindecreasing
orderofimportanceinordertoﬁndthebesthandpossible.
Inordertodistinguishbetweentwostraightsortwofull-houses,itisimportanttoalsorecordthehighest
scoringcard. AstraightwithahighcardofaQueen,beatsastraightwithahighcardofa10. Similarly,
afullhouseortwopairisdescribedas“queensoverthrees”,meaningtherearethreequeensandtwothrees
comprisingthehand. We’llneedanumericrankingthatincludesthehand’srankfrom9downto1,plus
thecardsinorderof“importance”tothescoringofthehand.
Theimportanceofacarddependsonthehand. Forastraightorstraightﬂush,themostimportantcardis
thehighest-rankingcard. Forafullhouse,themostimportantcardsarethethree-of-akindcards,followed
bythepairofcards. Fortwopair,however,themostimportantcardsarethehigh-rankingpair,followedby
thelow-rankingpair. Thisallowsustocompare“twopair10’sand4’s”against“twopair10’sand9’s”. Both
handshaveapairof10’s,meaningweneedtolookatthethirdcardinorderofimportancetodetermine
thewinner.
ScoringPokerHands . TheHandclassshouldlooklikethefollowing. Thisdeﬁnitionprovidesanumber
ofmethodstocheckforstraight,ﬂushandthepatternsofmatchingcards. Thesefunctionsareusedbythe
score()method,shownbelow.
class PokerHand:
def __init__( self, cards ):
self.cards= cards
self.rankCount= {}
def straight( self ): all in sequence
def straight( self ): all of one suit
23.7. Class Deﬁnition Exercises 283
Building Skills in Python, Release 2.6.5
def matches( self ): tuple with counts of each rank in the hand
def sortByRank( self ): sort into rank order
def sortByMatch( self ): sort into order by count of each rank, then rank
Thisfunctiontoscoreahandcheckseachofthepokerhandrulesindescendingorder.
defscore(self):
ifself.straight() andself.flush():
self.sortByRank()
return9
elifself.matches() ==(4,1):
self.sortByMatch()
return8
elifself.matches() ==(3,2):
self.sortByMatch()
return7
elifself.flush():
self.sortByRank()
return6
elifself.straight():
self.sortByRank()
return5
elifself.matches() ==(3,1,1):
self.sortByMatch()
return4
elifself.matches() ==(2,2,1):
self.sortByMatchAndRank()
return3
elifself.matches() ==(2,1,1,1):
self.sortByMatch()
return2
else:
self.sortByRank()
return1
You’llneedtoaddthefollowingmethodstothePokerHandclass.
straight (self)
Trueifthecardsformastraight. Thiscanbetackledeasilybysortingthecardsintodescendingorder
byrankandthencheckingtoseeiftheranksalldiﬀerbyexactlyone.
flush(self)
Trueifallcardshavethesamesuit.
matches(self)
Returnsatupleofthecountsofcardsgroupedbyrank. Thiscanbedoneiteratingthrougheachcard,
usingthecard’srankasakeytothe self.rankCount dictionary;thevalueforthatdictionaryentryis
thecountofthenumberoftimesthatrankhasbeenseen. Thevaluesofthedictionarycanbesorted,
andformsixdistinctpatterns,ﬁveofwhichareshownabove. Thesixthissimply (1, 1, 1, 1, 1) ,
whichmeansnotwocardshadthesamerank.
sortByRank (self)
Sortsthecardsbyrank.
sortByMatch (self)
Usesthecountsinthe self.rankCount dictionarytoupdateeachcardwithitsmatchcount,andthen
284 Chapter 23. Classes
Building Skills in Python, Release 2.6.5
sortsthecardsbymatchcount.
sortByMatchAndRank (self)
Usesthecountsinthe self.rankCount dictionarytoupdateeachcardwithitsmatchcount,andthen
sortsthecardsbymatchcountandrankastwoseparatekeys.
ExercisingCard,DeckandHand . Onceyouhavethe Card,DeckandHandclasses,youcanexercise
thesewithasimplefunctiontoplayonehandofpoker. Thisprogramwillcreatea DeckandaHand;itwill
dealﬁve Cardsintothe Hand. Itcanscorethehand. Itcanreplacefromzerotothreecardsandscorethe
resultinghand.
23.7. Class Deﬁnition Exercises 285
Building Skills in Python, Release 2.6.5
286 Chapter 23. Classes
CHAPTER
TWENTYFOUR
ADV ANCED CLASS DEFINITION
Thissectionbuildsupsomeadditionalclassdeﬁnitiontechniques. Wedescribethebasicsofinheritancein
Inheritance. Weturntoaspeciﬁcinheritancetechnique,polymorphismin Polymorphism . Therearesome
class-relatedfunctions,whichwedescribein Built-in F unctions . We’lllookatsomespeciﬁcclassinitializer
technique in Initializer T echniques . We include a digression on design approaches in Design Approaches .
In Class V ariables we provide information on class-level variables, diﬀerent from instance variables. We
concludethischapterwithsomestylenotesin Style Notes.
24.1 Inheritance
In Semanticsweidentiﬁedfourimportantfeaturesofobjects.
•Identity.
•Classiﬁcation.
•Inheritance.
•Polymorphism.
Thepointofinheritanceistoallowustocreateasubclasswhichinheritsallofthefeaturesofasuperclass.
Thesubclasscanaddorreplacemethodfunctionsofthesuperclass. Thisistypicallyusedbydeﬁninga
general-purposesuperclassandcreatingspecializedsubclassesthatallinheritthegeneral-purposefeatures
butaddspecial-purposesfeaturesoftheirown.
Wedothisbyspecifyingtheparentclasswhenwecreateasubclass.
classsubclass ( superclass ) :
suite
Allofthemethodsofthesuperclassare,bydeﬁnition,alsopartofthesubclass. Oftenthesuiteofmethod
functionswilladdtooroverridethedeﬁnitionofaparentmethod.
Ifweomitprovidingasuperclass,wecreatea classicalclassdeﬁnition,wherethePythontypeis instance;
wehavetodoadditionalprocessingtodeterminetheactualtype. Generally,weshouldavoidthiskindof
classdeﬁnition. Itworks,butisn’tideal.
Whenweuse objectasthesuperclass,thePythontypeisreportedmoresimplyastheappropriate class
object. As a general principle, every class deﬁnition should be a subclass of object, either directly or
indirectly.
Important: Python3
InPython3,thisdistinctionwillberemoved. Aclasswithnoexplicitsuperclasswillstillbeasubclassof
object.
287
Building Skills in Python, Release 2.6.5
ExtendingaClass . Therearetwotrivialsubclassingtechniques. Onedeﬁnesasubclasswhichaddsnew
methods to the superclass. The other overrides a superclass method. The overriding technique leads to
twoclasseswhicharepolymorphicbecausetheyhavethesameinterface. We’llreturntopolymorphismin
Polymorphism .
Here’sarevisedversionofourbasic Diceclassandasubclasstocreate CrapsDice.
crapsdice.py
#!/usr/bin/env python
"""Define a Die, Dice and CrapsDice."""
classDie(object):
"""Simulate a 6-sided die."""
def__init__ (self):
self.domain=range(1,7)
defroll(self):
self.value=random.choice(self.domain)
returnself.value
defgetValue (self):
returnself.value
classDice(object):
"""Simulate a pair of dice."""
def__init__ (self):
"Create the two Die objects. "
self.myDice=( Die(), Die() )
defroll(self):
"Return a random roll of the dice. "
fordinself.myDice:
d.roll()
defgetTotal (self):
"Return the total of two dice. "
returnself.myDice[0].value+self.myDice[1].value
defgetTuple (self):
"Return a tuple of the dice. "
returnself.myDice
classCrapsDice ( Dice ):
"""Extends Dice to add features specific to Craps."""
defhardways (self):
"""Returns True if this was a hardways roll?"""
returnself.myDice[0].value==self.myDice[1].value
defisPoint(self, value ):
"""Returns True if this roll has the given total"""
returnself.getTotal() ==value
TheCrapsDiceclasscontainsallthefeaturesof Diceaswellastheadditionalfeaturesweaddedintheclass
declaration.
Wecan,forexample,evaluatethe roll()andhardways()methodsof CrapsDice. Theroll()methodis
inheritedfrom Dice,butthe hardways()methodisadirectpartof CrapsDice.
Adding Instance Variables . Adding new instance variables requires that we extend the __init__()
method.
288 Chapter 24. Advanced Class Deﬁnition
Building Skills in Python, Release 2.6.5
Inthiscaseoursubclass __init__()functionmuststartoutdoingeverythingthesuperclass __init__()
functiondoes,andthencreatesafewmoreattributes.
Pythonprovidesusthe super()functiontohelpusdothis. Wecanuse super()todistinguishbetween
methodfunctionswiththesamenamedeﬁnedinthesuperclassandextendedinasubclass.
super(type, variable )
Thiswilldotwothings: locatethesuperclassofthegiventype,anditthenbindthegivenvariable
tocreateanobjectofthesuperclass. Thisisoftenusedtocallasuperclassmethodfromwithina
subclass: ‘ super( classname ,self).method() ’
Here’satemplatethatshowshowasubclass __init__()methoduses super()toevaluatethesuperclass
__init__()method.
class Subclass( Superclass ):
def __init__( self ):
super(Subclass,self)__init__()
# Subclass-specific stuff follows
Thiswillbindour selfvariabletotheparentclasssothatwecanevaluatetheparentclass __init__()
method. Afterthat,wecanaddoursubclassinitialization.
We’lllookatadditionaltechniquesforcreatingveryﬂexible __init__()methodsin Initializer T echniques .
VariousKindsofCards . Let’slookcloselyattheproblemofcardsinBlackjack. Allcardshaveseveral
generalfeatures: theyhavearankandasuit. Allcardshaveapointvalue. However,somecardsusetheir
rankforpointvalue,othercardsuse10fortheirpointvalueandtheacescanbeeither1or11,dependingon
thetherestofthecardsinthehand. Welookedatthisinthe Playing Cards and Decks exercisein Classes.
Wecanmodelthisveryaccuratelybycreatinga Cardclassthatencapsulatesthegenericfeaturesofrank,
suit and point value. Our class will haveinstance variables for these attribites. The class will also have
twofunctionstoreturnthehardvalueandsoftvalueofthiscard. Inthecaseofordinarynon-face,non-ace
cards,thepointvalueisalwaystherank. Wecanusethis Cardclassforthenumbercards,whicharemost
common.
classCard(object):
"""A standard playing card for Blackjack."""
def__init__ (self, r, s ):
self.rank,self.suit=r, s
self.pval=r
def__str__(self):
return"%2d%s"%(self.rank,self.suit )
defgetHardValue (self):
returnself.pval
defgetSoftValue (self):
returnself.pval
Wecancreateasubclassof Cardwhichisspecializedtohandlethefacecards. Thissubclasssimplyoverrides
thevalueof self.pval,using10insteadoftherankvalue. Inthiscasewewanta FaceCard.__init__()
methodthatusestheparent’s Card.__init__() method,andthendoesadditionalprocessing. Theexisting
deﬁnitionsof getHardValue() andgetSoftValue() methodfunctions,however,workﬁneforthissubclass.
SinceCardisasubclassof object,soisFaceCard.
Additionally,we’dliketoreportthecardranksusingletters(J,Q,K)insteadofnumbers. Wecanoverride
the__str__()methodfunctiontodothistranslationfromranktolabel.
classFaceCard ( Card ):
"""A 10-point face card: J, Q, K."""
24.1. Inheritance 289
Building Skills in Python, Release 2.6.5
def__init__ (self, r, s ):
super(FaceCard, self).__init__( r, s )
self.pval=10
def__str__(self):
label=("J","Q","K")[self.rank-11]
return"%2s%s"%( label, self.suit )
Wecanalsocreateasubclassof CardforAces. Thissubclassinheritstheparentclass __init__()function,
sincetheworkdonethereissuitableforaces. The Aceclass,however,providesamorecomplexalgorithms
forthegetHardValue() andgetSoftValue() methodfunctions. Thehardvalueis1,thesoftvalueis11.
classAce( Card ):
"""An Ace: either 1 or 11 points."""
def__str__(self):
return"%2s%s"%("A",self.suit )
defgetHardValue (self):
return1
defgetSoftValue (self):
return11
DeckandShoeasCollectionsofCards . Inacasino,wecanseecardshandledinanumberofdiﬀerent
kindsofcollections. Dealerswillworkwithasingledeckof52cardsoramulti-deckcontainercalledashoe.
Wecanalsoseethedealerputtingcardsonthetableforthevariousplayer’shands,aswellasadealer’s
hand.
Each of these collections has some common features, but each also has unique features. Sometimes it’s
diﬀiculttoreasonaboutthevariousclassesanddiscernthecommonfeatures. Inthesecases,it’seasierto
deﬁneafewclassesandthenrefactorthecommonfeaturestocreateasuperclasswithelementsthathave
beenremovedfromthesubclasses. We’lldothatwithDecksandShoes.
We can deﬁne a Deckas a sequence of Cards. Thedeck.__init__() method function of Deckcreates
appropriate Cardsofeachsubclass. Theseare Cardobjectsintherange2to10, FaceCardobejctswith
ranksof11to13,and Aceobjectswitharankof1.
classDeck(object):
"""A deck of cards."""
def__init__ (self):
self.cards=[]
forsuitin("C","D","H","S"):
self.cards+=[Card(r,suit) forrinrange(2,11)]
self.cards+=[TenCard(r,suit) forrinrange(11,14)]
self.cards+=[Ace(1,suit)]
defdeal(self):
forcinself.cards:
yieldc
Inthisexample,wecreatedasingleinstancevariable self.cardswithineach Deckinstance. Fordealing
cards,we’veprovidedageneratorfunctionwhichyieldsthe Cardobjectsinarandomorder. We’veomitted
therandomizationfromthe deal()function;we’llreturntoitintheexercises.
Foreachsuit,wecreatedthe Cardsofthatsuitinthreesteps.
1.Wecreatedthenumbercardswithalistcomprehensiontogenerateallranksintherange2through
10.
2.Wecreatedthefacecardswithasimilarprocess,exceptweusethe TenCardclassconstructor,since
blackjackfacecardsallcountashavingtenpoints.
290 Chapter 24. Advanced Class Deﬁnition
Building Skills in Python, Release 2.6.5
3.Finally,wecreatedaone-itemlistofan Aceinstanceforthegivensuit.
We can use Deckobjects to create an multi-deck shoe. (A shoe is what dealers use in casinos to handle
severaldecksofslipperyplayingcards.) The Shoeclasswillcreatesixseparatedecks,andthenmergeall
312cardsintoasinglesequence.
classShoe(object):
"""Model a multi-deck shoe of cards."""
def__init__ (self, decks=6):
self.cards=[]
foriinrange(decks):
d=Deck()
self.cards+=d.cards
defdeal(self):
forcinself.cards:
yieldc
Fordealingcards, we’veprovidedageneratorfunctionwhichyieldsthe Cardsinarandomorder. We’ve
omittedtherandomizationfromthe deal()function;we’llreturntoitintheexercises.
FactoringOutCommonFeatures . WhenwecompareDeckandShoe,weseetwoobviouslycommon
features: theybothhaveacollectionof Cards,calledself.cards. Also,theybothhavea deal()method
whichyieldsasequenceofcards.
Wealsoseethingswhicharediﬀerent. Themostobviousdiﬀerencesaredetailsofinitializing self.cards.
Itturnsoutthattheusualprocedurefordealingfromashoeinvolvesshuﬄingallofthecards,butdealing
fromonlyfourorﬁveofthesixavailabledecks. Thisisdonebyinsertingamarkeroneortwodecksinfrom
theendoftheshoe.
Infactoringoutthecommonfeatures,wehaveanumberofstrategies.
•Oneofourexistingclassesisalreadygeneric-enoughtobethesuperclass. Inthe Cardexample,we
usedthegeneric Cardclassassuperclassforothercardsaswellastheclassusedtoimplementthe
numbercards. Inthiscasewewillmakeconcreteobjectinstancesfromthesuperclass.
•Wemayneedtocreateasuperclassoutofoursubclasses. Often,thesuperclassisn’tusefulbyitself;
onlythesubclassesarereallysuitableformakingconcreteobjectinstances. Inthiscase,thesuperclass
isreallyjustanabstraction,itisn’tmeanttobeusedbyitself.
Here’sanabstract CardDealerfromwhichwecansubclass DeckandShoe. Notethatitdoesnotcreate
anycards. Eachsubclassmustdothat. Similarly,itcan’tdealproperlybecauseitdoesn’thaveaproper
shuffle()methoddeﬁned.
classCardDealer (object):
def__init__ (self):
self.cards=[]
defdeal(self):
forcinself.shuffle():
yieldc
defshuffle(self):
...to be done inthe exercises ...
Pythondoesnothaveaformalnotationforabstractorconcretesuperclasses. Whencreatinganabstract
superclassitiscommontoreturn NotImplemented orraiseNotImplementedError toindicatethatamethod
mustbeoverriddenbyasubclass.
Wecannowrewrite Deckassubclassesof CardDealer.
24.1. Inheritance 291
Building Skills in Python, Release 2.6.5
class Deck( CardDealer ):
def __init__( self ):
super(Deck,self).__init__()
for s in ("C","D","H","S"):
for suit in ( "C", "D", "H", "S" ):
self.cards+= [Card(r,suit) for r in range(2,11)]
self.cards+= [TenCard(r,suit) for r in range(11,14)]
self.cards+= [Ace(1,suit)]
Wecanalsorewrite Shoeassubclassesof CardDealer.
classShoe( CardDealer ):
def__init__ (self, decks=6):
CardDealer .__init__( self)
foriinrange(decks):
d=Deck()
self.cards+=d.cards
Thebeneﬁtofthisistoassurethat DeckandShoeactuallysharecommonfeatures. Thisisnot“cutand
paste”sharing. Thisis“bydeﬁnition”sharing. Achangeto CardDealerwillchangebothDeckandShoe,
assuringcompleteconsistency.
24.2 Polymorphism
In Semanticsweidentiﬁedfourimportantfeaturesofobjects.
•Identity.
•Classiﬁcation.
•Inheritance.
•Polymorphism.
Polymorphism exists when we deﬁne a number of subclasses which have commonly named methods. A
functioncanuseobjectsofanyofthepolymorphicclasseswithoutbeingawarethattheclassesaredistinct.
Insomelanguages,itisessentialthatthepolymorphicclasseshavethesameinterface(orbesubinterfaces
ofacommonparentinterface),orbesubclassesofacommonsuperclass. Thisissometimescalled“strong,
hierarchicaltyping”,sincethetyperulesareveryrigidandfollowthesubclass/subinterfacehierarchy.
Pythonimplementssomethingthatislessrigid,oftencalled“ducktyping”. Thephrasefollowsfromaquote
attributedtoJamesWhitcombRiley: “WhenIseeabirdthatwalkslikeaduckandswimslikeaduckand
quackslikeaduck,Icallthatbirdaduck.” Inshort,twoobjectsareeﬀectivelyoftheclass Duckiftheyhave
acommoncollectionofmethods(walk,swimandquack,forexample.)
Whenwelookattheexamplesfor Card,FaceCard,Acein Inheritance,weseethatallthreeclasseshavethe
samemethodnames,buthavediﬀerentimplementationsforsomeofthesemethods. Thesethreeclassesare
polymorphic.
A client class like Handcan contain individual objects of any of the subclasses of Card. A function can
evaluatethesepolymorphicmethodswithoutknowingwhichspeciﬁcsubclassisbeinginvoked.
Inourexample,both FaceCardandAceweresubclassesof Card. Thissubclassrelationshipisn’tnecesary
for polymorphism to work correctly in Python. However, the subclass relationship is often an essential
ingredientinanoveralldesignthatreliesonpolymorphicclasses.
292 Chapter 24. Advanced Class Deﬁnition
Building Skills in Python, Release 2.6.5
What’stheBeneﬁt? Ifwetreatallofthevarioussubclassesof Cardinauniformway, weeﬀectively
delegate any special-case processing into the relevant subclass. We concentrate the implementation of a
specialcaseinexactlyoneplace.
Thealternativeistoinclude ifstatementsalloverourprogramtoenforcespecial-caseprocessingrules. This
diﬀusingofspecial-caseprocessingmeansthatmanycomponentswindupwithanimplicitrelationship. For
example,allportionsofaprogramthatdealwith Cardswouldneedmultiple ifstatementstoseparatethe
numbercardpoints,facecardpointsandacepoints.
Bymakingourdesignpolymorphic,allofoursubclassesof Cardhaveranksandsuits,aswellashardand
softpointvalues. Wewecandesignthe DeckandShoeclassestodealcardsinauniformway. Wecanalso
designaHandclasstototalpointswithoutknowingwhichspeciﬁcclasstowhicha Cardobjectbelongs.
Similarly, wemadeourdesignfor DeckandShoeclassespolymorphic. Thisallowsustomodelone-deck
blackjackormulti-deckblackjackwithnootherchangestoourapplication.
TheHandofCards . InordertocompletelymodelBlackjack,we’llneedaclassforkeepingtheplayer
anddealer’shands. Therearesomediﬀerencesbetweenthetwohands: thedealer,forexample,onlyreveals
theirﬁrstcard,andthedealercan’tsplit. Thereare,however,someimportantsimilarities. Everykindof
Handmustdeterminethehardandsoftpointtotalsofthecards.
Thehardpointtotalforahandissimplythehardtotalofallthecards. Thesofttotal,ontheotherhand,
is not simply the soft total of all cards. Only the Acecards have diﬀerent soft totals, and only one Ace
canmeaningfullycontributeit’ssofttotalof11. Generally,allcardsprovidethesamehardandsoftpoint
contributions. Ofthecardswherethehardandsoftvaluesdiﬀer,onlyonesuchcardneedstobeconsidered.
Notethatweareusingthevaluesofthe getHardValue() andgetSoftValue() methods. Sincethistest
applies to all classes of cards, we preserve polymorphism by checking this property of every card. We’ll
preservingjustoneofthecardswithasoftvaluethatisdiﬀerentfromthehardvalue. Atnotimedouse
investigatetheclassofa Cardtodetermineifthecardisoftheclass Ace. Examiningtheclassofeachobject
needlesslyconstrainsouralgorithm. Usingthepolymorphicmethodsmeansthatwecanmakechangesto
theclassstructurewithoutbreakingtheprocessingofthe Handclass.
Important: PrettyPoorPolymorphism
Themostcommonindicatorofpoorusepolymorphismisusingthe type(),isinstance() andissubclass()
functionstodeterminetheclassofanobject. Theseshouldusedrarely,ifatall. Allprocessingshouldbe
focusedonwhatisdiﬀerentabouttheobjects,nottheclasstowhichanobjectbelongs.
Wehaveanumberofwaystorepresentthepresenceofa Cardwithadistincthardandsoftvalue.
•Anattributewiththepointdiﬀerence(usually10).
•Acollectionofall Cardsexceptforone Cardwithapointdiﬀerence, andasingleattributeforthe
extracard.
We’llchoosetheﬁrstimplementation. Wecanuseuseasequencetoholdthecards. Whencardsareadded
tothehand,theﬁrstcardthatreturnsdistinctvaluesforthehardvalueandsoftvaluewillbeusedtoseta
variablehaskeepsthehardvs. softpointdiﬀerence.
hand.py
class Hand( object ):
"""Model a player's hand."""
def __init__( self ):
self.cards = [ ]
self.softDiff= 0
def addCard( self, aCard ):
24.2. Polymorphism 293
Building Skills in Python, Release 2.6.5
self.cards.append( aCard )
if aCard.getHardValue() != aCard.getSoftValue():
if self.softDiff == 0:
self.softDiff= aCard.getSoftValue()-aCard.getHardValue()
def points( self ):
"""Compute the total points of cards held."""
p= 0
for c in self.cards:
p += c.getHardValue()
if p + self.softDiff &lt;= 21:
return p + self.softDiff
else:
return p
1.The__init__()special function creates the instance variable, self.cards, which we will use to
accumulate the Cardobjects that comprise the hand. This also sets self.softDiff which is the
diﬀerenceinpointsbetweenhardandsofthands. UntilwehaveanAce,thediﬀerenceiszero. When
wegetanAce,thediﬀerencewillbe10.
2.We provide an addCard()method that places an additional card into the hand. At this time, we
examinethe Cardtoseeifthesoftvalueisdiﬀerentfromthehardvalue. Ifso,andwehavenotset
theself.softDiff yet,wesavethisdiﬀerence.
3.Thepoints()methodevaluatesthehand. Itinitializesthepointcount, p,tozero. Westarta for-loop
toassigneachcardobjectto c. Wecould,asanalternative,usea sum()functiontodothis.
Ifthetotalwiththe self.softDiff is21orunder,wehaveasofthand,andthesearethetotalpoints.
Ifthetotalwiththe self.softDiff isover21,wehaveahardhand. Thehardhandmaytotalmore
than21,inwhichcase,thehandisbust.
24.3 Built-in Functions
Therearetwobuiltinfunctionsofsomeimportancetoobjectorientedprogramming. Theseareusedto
determinetheclassofanobject,aswellastheinheritancehierarchyamongclasses.
isinstance (object, type )
Trueif objectisaninstanceofthegiven typeoranyofthesubclassesof type.
issubclass (parameter, base )
Trueifclass classisasubclassofclass base.
Thisquestionisusuallymoot, becausemostprogramsaredesignedtoprovidetheexpectedclasses
ofobjects. Therearesomeoccasionsfordeepparanoia;whenworkingwithuntrustedsoftware,your
classesmayneedtobesurethatotherprogrammersarefollowingtherules. InJavaandC++,the
compilercancheckthesesituations. InPython,thecompilerdoesn’tcheckthis,sowemaywantto
includerun-timechecks.
super(type)
Thiswillreturnthesuperclassofthegiventype.
Allofthebasicfactoryfunctions( str,int,float,long,complex,unicode,tuple,list,dict,set)are
eﬀectivelyclassnames. Youcan,therefore,useatestlike‘ isinstance( myParam ,int) ’toconﬁrmthat
theargumentvalueprovidedtothisparameterisaninteger.
Anadditionalclass, basestringistheparentclassofboth strandunicode.
294 Chapter 24. Advanced Class Deﬁnition
Building Skills in Python, Release 2.6.5
Thefollowingexampleusesthe isinstance() functiontovalidatethetypeofargumentvalues. First,we’ll
deﬁneaRoulettewheelclass, Wheel,andtwosubclasses, Wheel1withasinglezeroand Wheel2withzero
anddoublezero.
wheel.py
importrandom
classWheel(object):
defvalue(self):
returnNotImplemented
classWheel1( Wheel ):
defvalue(self):
spin=random.randrange( 37)
returnstr(spin)
classWheel2( Wheel ):
def__init__ (self):
self.values=['00']+map(str,range(37) )
defvalue(self):
returnrandom.randchoice( self.values )
1.TheWheelclass deﬁnes the interface for Roulette wheels. The actual class deﬁnition does nothing
exceptshowwhattheexpectedmethodfunctionsshouldbe. Wecouldcallthisanabstractdeﬁnition
ofaWheel.
2.TheWheel1subclassusesasimplealgorithmforcreatingthespinofawheel. The value()method
choosesanumberbetween0and36. Itreturnsastringrepresentationofthenumber. Thishasonly
asinglezero.
3.TheWheel2subclasscreatesaninstancevariable, values,tocontainallpossibleresults. Thisincludes
the37valuesfrom0to36,plusanadditional‘00’value. The value()methodchoosesoneofthese
possibleresults.
Thefollowingfunctionexpectsthatitsparameter, w,isoneofthesubclassesof Wheel.
defsimulate ( w ):
ifnotisinstance ( w, Wheel ):
raiseTypeError ("Must be a subclass of Wheel ")
foriinrange(10):
printw.value()
Inthiscase,thesimulatefunctionchecksitsargument, wtobesurethatitisasubclassof Wheel. Ifnot,
thefunctionraisesthebuiltin TypeError.
Analternativeistouseanassertionforthis.
defsimulate ( w ):
assertisinstance ( w, Wheel )
foriinrange(10):
printw.value()
24.3. Built-in Functions 295
Building Skills in Python, Release 2.6.5
24.4 Collaborating with max() ,min() andsort()
Themin()andmax()functionscaninteractwithourclassesinrelativelysimpleways. Similarly,the sort()
methodofalistcanalsointeractwithournewclassdeﬁnitions.
Inallthreecases,akeywordparameterof keycanbeusedtocontrolwhichattributesareusedfordetermining
minimum,maximumorsortorder.
Thekeyparameter must be given a function, and that function is evaluated on each item that is being
compared. Here’saquickexample.
classBoat(object):
def__init__ (self, name, loa ):
self.name=name
self.loa=loa
defbyName( aBoat ):
returnaBoat.name
defbyLOA( aBoat ):
returnaBoat.loa
fleet=[ Boat("KaDiMa",18), Boat( "Emomo",21), Boat( "Leprechaun ",30) ]
first=min( fleet, key =byName )
print"Alphabetically First: ", first
longest=max( fleet, key =byLOA )
print"Longest: ", longest
Asmin(),max()or sort traverse the sequence doing comparisons among the objects, they evaluate the
key()functionweprovided. Inthisexample,theprovidedfunctionsimplyselectsanattribute. Clearlythe
functionscoulddocalculationsorotheroperationsontheobjects.
24.5 Initializer T echniques
Whenwedeﬁneasubclass,weareoftenextendingsomesuperclasstoaddfeatures. Onecommondesign
patternistodothisbydeﬁningasubclasstouseparametersinadditiontothoseexpectedbythesuperclass.
Wemustreusethesuperclassconstructorproperlyinoursubclass.
Referringbacktoour CardandFaceCardexamplein Inheritance,wewroteaninitializerin FaceCardthat
referredto Card.
TheFaceCard.__init__() methodevaluates‘ super(FaceCard,self).__init__( rank, suit ) ’.Itpassed
thesameargumentstothe Card.__init__() method.
Note:OlderPrograms
Inolderprograms,you’llseeanalternativetothe super()function. Someclasseswillhaveanexplicitcall
to‘Card.__init__( self, r, s ) ’.
We’renamingtheclass(notanobjectoftheclass)andexplicitlyprovidingthe selfvariable.
Wecanmakeuseofthetechniquescoveredin Advanced Parameter Handling F or F unctions tosimplifyour
subclassinitializer.
classFaceCard ( Card ):
"""Model a 10-point face card: J, Q, K."""
def__init__ (self,*args ):
super(FaceCard, self).__init__( *args )
self.label=("J","Q","K")[self.rank-11]
self.pval=10
296 Chapter 24. Advanced Class Deﬁnition
Building Skills in Python, Release 2.6.5
def__str__(self):
return"%2s%s"%(self.label,self.suit )
Inthiscaseweusethe‘ def __init__( self, *args ) ’tocaptureallofthepositionalparametersinasingle
sequence, named args. Wethengivethatentiresequenceofpositionalparametersto Card.__init__() .
Byusingthe*operator,wetellPythontoexplodethelistintoindividualpositionalparameters.
Let’slookataslightlymoresophisticatedexample.
boat.py
class Boat( object ):
def __init__( self, name, loa ):
"""Create a new Boat( name, loa )"""
self.name= name
self.loa= loa
class Catboat( Boat )
def __init__( self, sailarea, * args ):
"""Create a new Catboat( sail_area, name, loa )"""
super(Catboat,self).__init__( * args )
self.main_area= sail_area
class Sloop( CatBoat ):
def __init__( self, jib_area, * args );
"""Create a new Sloop( jib_area, main_area, name, loa )"""
super(Sloop,self).__init__( * args )
self.jib_area= jib_area
1.The Boat class deﬁnes essential attributes for all kinds of boats: the name and the length overall
(LOA).
2.Inthecaseofa Catboat,weaddasinglesailareatobebasedeﬁnitionof Boat. Weusethesuperclass
initialization to prepare the basic name and length overall attributes. Then our subclass adds the
sailareaforthesinglesailonacatboat.
3.Inthecaseofa Sloop,weaddanothersailtothedeﬁnitionofa Catboat. Weaddthenewparameter
ﬁrstinthelist,andtheremainingparametersaresimplygiventothesuperclassforitsinitialization.
24.6 Class Variables
Thenotionofobjectdependsonhavinginstancevariables(or“attributes”)whichhaveuniquevaluesfor
eachobject. Wecanextendthisconcepttoincludevariablesthatarenotuniquetoeachinstance,butshared
byeveryinstanceoftheclass. Classlevelvariablesarecreatedintheclassdeﬁnitionitself;instancevariables
arecreatedintheindividualclassmethodfunctions(usually __init__()).
Classlevelvariablesareusually“variables”withvaluesthatdon’tchange;thesearesometimescalledmanifest
constantsornamedconstants. InPython,there’snoformaldeclarationforanamedconstant.
A class level variable that changes will be altered for all instances of the class. This use of class-level
variables is often confusing to readers of your program. Class-level variables with state changes need a
completeexplanation.
Thisisanexampleofthemoreusualapproachwithclass-levelconstants. Thesearevariableswhosevalues
don’tvary;instead,theyexisttoclarifyandnamecertainvaluesorcodes.
24.6. Class Variables 297
Building Skills in Python, Release 2.6.5
wheel.py
importrandom
classWheel(object):
"""Simulate a roulette wheel."""
green, red, black =0,1,2
redSet=[1,3,5,7,9,12,14,16,18,19,21,23,25,27,30,32,34,36]
def__init__ (self):
self.lastSpin =(None,None)
defspin(self):
"""spin() -&gt; ( number, color )
Spin a roulette wheel, return the number and color."""
n=random.randrange( 38)
ifnin[0,37]: n, color =0, Wheel.green
elifninWheel.redSet: color =Wheel.red
else: color=Wheel.black
self.lastSpin =( n, color )
returnself.lastSpin
1.Part of deﬁnition of the class Wheelincludes some class variables. These variables are used by all
instancesoftheclass. Bydeﬁningthreevariables, green,redandblack,wecanmakeourprograms
somewhat more clear. Other parts of our program that use the Wheelclass can then reference the
colorsbyname,insteadofbyanobscurenumericcode. Aprogramwoulduse Wheel.greentoreferto
thecodeforgreenwithinthe Wheelclass.
2.TheWheelclassalsocreatesaclass-levelvariablecalled redSet. Thisisthesetofredpositionsonthe
Roulettewheel. Thisisdeﬁnedattheclasslevelbecauseitdoesnotchange,andthereisnobeneﬁtto
havingauniquecopywithineachinstanceof Wheel.
3.The__init__()method creates an instance variable called lastSpin. If we had multiple wheel
objects,eachwouldhaveauniquevaluefor lastSpin. Theyallwouldall,however,shareacommon
deﬁnitionof green,red,blackandredSet.
4.Thespin()methodupdatesthestateofthewheel. Noticethattheclasslevelvariablesarereferenced
with the class name: Wheel.green. The instance level variables are referenced with the instance
parameter: self.lastSpin . Theclasslevelvariablesarealsoavailableusingtheinstanceparameter,
Wheel.greenisthesameobjectas self.green.
Thespin()methoddeterminesarandomnumberbetween0and37. Thenumbers0and37aretreated
as0and00, withacolorofgreen; anumberinthe Wheel.redSet isred, andanyothernumberis
black. Wealsoupdatethestateofthe Wheelbysetting self.lastSpin .
Finally,the spin()methodreturnsa tuplewiththenumberandthecodeforthecolor. Notethat
wecan’teasilytell0from00withthisparticularclassdeﬁnition.
Thefollowingprogramusesthis Wheelclassdeﬁnition. Itusestheclass-levelvariables redandblackto
clarifythecolorcodethatisreturnedby spin().
w=Wheel()
n,c=w.spin()
ifc==Wheel.red:printn,"red"
elifc==Wheel.black:printn,"black"
else:printn
Oursampleprogramcreatesaninstanceof Wheel,calledw. Theprogramcallsthe spin()methodof Wheel
,whichupdates w.lastSpinandreturnsthetuplethatcontainsthenumberandcolor. Weusemultiple
298 Chapter 24. Advanced Class Deﬁnition
Building Skills in Python, Release 2.6.5
assignmenttoseparatethetwopartsofthetuple. Wecanthenusetheclass-levelvariablestodecodethe
color. Ifthecoloris Wheel.red,wecanprint "red".
24.7 Static Methods and Class Method
Inafewcases, ourclassmayhavemethodswhichdependononlytheargumentvalues, oronlyonclass
variables. In this case, the selfvariable isn’t terribly useful, since the method doesn’t depend on any
attributesoftheinstance. Objectswhichdependonargumentvaluesinsteadofinternalstatusarecalled
Lightweightor Flyweightobjects.
Amethodwhichdoesn’tusethe selfvariableiscalledastaticmethod. Thesearedeﬁnedusingabuilt-in
functionnamed staticmethod() . Pythonhasahandysyntax,calledadecorator,tomakeiteasiertoapply
thestaticmethod() functiontoourmethodfunctiondeﬁnition. We’llreturntodecoratorsin Decorators.
Here’sthesyntaxforusingthe staticmethod() decorator.
@staticmethod
def name ( param 〈 , ... 〉 ) :
suite
Toevaluateastaticmethodfunction,wesimplyreferencethemethodoftheclass:‘ Class.method() ’instead
ofusingaspeciﬁcinstanceoftheclass.
ExampleofStaticMethod . Here’sanexampleofaclasswhichhasastaticmethod. We’vedeﬁneda
deckshuﬄer. Itdoesn’thaveanyattributesofitsown. Instead,itappliesit’s shuffle()algorithmtoa
Deckobject.
classShuffler (object):
@staticmethod
defshuffle( aDeck ):
foriinrange(len(aDeck)):
card=aDeck.get( random .randrange( len(aDeck)) )
aDeck.put( i, card )
d1=Deck()
Shuffler .shuffle( d1 )
ClassMethod . Thenotionofaclassmethodisrelativelyspecialized. Aclassmethodappliestotheclass
itself,notaninstanceoftheclass. Aclassmethodisgenerallyusedfor“introspection”onthestructureor
deﬁnitionoftheclass. Itiscommonlydeﬁnedbyasuperclasssothatallsubclassesinheritthenecessary
introspectioncapability.
Generally,classmethodsaredeﬁnedaspartofsophisticated,dynamicframeworks. Forourgamblingexam-
ples,however,wedohavesomepotentialuseforclassmethods. Wemightwanttoprovideabase Player
class who interacts with a particular Gameto make betting decisions. Our superclass for all players can
deﬁnemethodsthatwouldbeusedinasubclass.
24.8 Design Approaches
Whenweconsiderclassdesign,wehaveoftenhaveabuilt-inorlibraryclasswhichdoessomeofthejobwe
want. Forexample,wewanttobeabletoaccumulatealistofvaluesandthendeterminetheaverage: this
isaverylist-likebehavior,extendedwithanewfeature.
Therearetwooverallapproachesforextendingaclass: wrappingand inheritance.
24.7. Static Methods and Class Method 299
Building Skills in Python, Release 2.6.5
•Wrapanexistingclass(forexample,atuple,list,setormap)inanewclasswhichaddsfeatures. This
allowsyoutoredeﬁnetheinterfacetotheexistingclass,whichofteninvolvesremovingfeatures.
•Inherit from an existing class, adding features as part of the more specialized subclass. This may
requireyoutoreadmoreoftheoriginalclassdocumentationtoseealittleofhowitworksinternally.
Bothtechniquesworkextremelywell;thereisn’taprofoundreasonformakingaparticularchoice. When
wrappingacollection,youcanprovideanew,focusedinterfaceontheoriginalcollection;thisallowsyouto
narrowthechoicesfortheuseroftheclass. Whensubclassing,however,youoftenhavealotofcapabilities
intheoriginalclassyouareextending.
“Duck”Typing . In Polymorphism ,wementioned“Duck”Typing. InPython,twoclassesarepractically
polymorphiciftheyhavethesameintefacemethods. Theydonothavetobesubclassesofthesameclass
orinterface(whichistheruleinJava.)
ThisprinciplemeansthatthedistinctionbetweenwrappingandinheritanceismoresubtleinPythonthan
inotherlanguages. Ifyouprovidealloftheappropriateinterfacemethodstoaclass,itbehavesasifitwas
apropersubclass. Itmaybeaclassthatiswrappedbyanotherclassthatprovidesthesameinterface.
Forexample,saywehaveaclass Dice,whichmodelsasetofindividual Dieobjects.
classDice(object):
def__init__ (self):
self.theDice=[ Die(), Die() ]
defroll(self):
fordinself.theDice:
d.roll()
returnself.theDice
Inessence,ourclassisawrapperaroundalistofdice,named theDice. However,wedon’tprovideanyof
theinterfacemethodsthatarepartsofthebuilt-in listclass.
Eventhoughthisclassisawrapperarounda listobject,wecanaddmethodnamesbasedonthebuilt-in
listclass:append(),extend(),count(),insert(),etc.
classDice(object):
def__init__ (self):
self.theDice=[ Die(), Die() ]
defroll(self):
fordinself.theDice:
d.roll()
returnself.theDice
defappend(self, aDie ):
self.theDice.append( aDie )
def__len__(self):
returnlen(self.theDice )
Oncewe’vedeﬁnedtheselist-likefunctionswehaveanambiguoussituation.
•Wecouldhaveasubclassof list,whichinitializesitselftotwo Dieobjectsandhasa roll()method.
•Wecouldhaveadistinct Diceclass,whichprovidesa roll()methodandanumberofothermethods
thatmakeitlooklikea list.
For people who will read your Python, clarity is the most important feature of the program. In making
designdecisions, oneofyourﬁrstquestionshastobe“whatistherealthingthatI’mmodeling?” Since
manyalternativeswillwork,yourdesignshouldreﬂectsomethingthatclariﬁestheproblemyou’resolving.
300 Chapter 24. Advanced Class Deﬁnition
Building Skills in Python, Release 2.6.5
24.9 Advanced Class Deﬁnition Exercises
24.9.1Sample Class with Statistical Methods
Wecancreatea Samplesclasswhichholdsacollectionofsamplevalues. Thisclasscanhavefunctionsfor
commonstatisticsontheobject’ssamples. Foradditionaldetailsonthesealgorithms,seetheexercisesin
T uplesand Sequence Processing F unctions: map(), ﬁlter() and reduce() .
We’lllookatsubclassingthebuilt-in listclass,bycreatingaclass, Samples,whichextends list. You’ll
needtoimplementthefollowingmethodsinyournewclass.
__init__ (self, * args )
Saveasequenceofsamples. Itcould,atthistime,alsoprecomputeanumberofusefulvalues,likethe
sum,count,minandmaxofthissetofdata. Whennodataisprovided,thesevalueswouldbesetto
None.
__str__(self)
Returnstringwithasummaryofthedata. Anexampleisastringlike "%d values, min %g, max
%g, mean %g" withthenumberofdataelements,theminimum,themaximumandthemean. The
superclass, list,__repr__()functionwillreturntherawdata.
mean(self)
Returnsthesumdividedbythecount.
mode(self)
Returnthemostpopularofthesamplevalues. Belowwe’veprovidedanalgorithmthatcanbeused
tolocatethemodeofasequenceofsamples.
Forinformationoncomputingthemode,see Exercises.
median(self)
Themedianisthevalueinthemiddleofthesequence. First,sortthesequence. Ifthereisanodd
numberofelements,pickthemiddle-mostelement. Ifthereisanevennumberofelements,average
thetwoelementsthataremid-most.
variance (self)
For each sample, compute the diﬀerence between the sample and the mean, square this value, and
sumthesesquares. Thenumberofsamplesminus1isthe degrees of freedom . Thesum,dividedby
thedegreesoffreedom,isthevariance. Notethatyouneedtwosamplestomeaningfullycomputea
variance.
stdev(self)
Thesquarerootofthevariance.
Notethatthe listsuperclassalreadyworkscorrectlywiththebuilt-in min()andmax()functions. Inthis
case,thisconsequenceofusinginheritanceinsteadofwrappingturnsouttobeanadvantage.
24.9.2 Shuﬄing Method for the Deck class
Shuﬄingisamatteroftakingexistingcardsandputtingthemintootherpositions. Thereareamanyways
ofdoingthis. We’llneedtotrybothtoseewhichisfaster. Inessence,weneedtocreateapolymorphic
familyofclassesthatwecanusetomeasureperformance.
Shuﬄing Variation 1 - Exchange
Foriinrange0tothenumberofcards
24.9. Advanced Class Deﬁnition Exercises 301
Building Skills in Python, Release 2.6.5
Generatearandomnumber rintherange0tothenumberofcards.
UseMultipleAssignementtoswapcardsatposition iandr.
Shuﬄing Variation 2 - Build
Createanemptyresultsequence, s.
Whiletherearecardsinthesource self.cardssequence.
Generatearandomnumber rintherange0tothenumberofcards.
Appendcard rtotheresultsequence;deleteobject rfromthesource self.cardssequence. The
pop()methodofasequencecanreturnaselectedelementanddeleteitfromasequencenicely.
Replaceself.cardswiththeresultsequence, s.
Shuﬄing Variation 3 - Sort
Createakeyfunctionwhichactuallyreturnsarandomvalue.
Usethesort()methodofa listwiththisrandomkey-likefunction.
self.cards.sort( key =aRandomKeyFunction )
Shuﬄing Variation 4 - random.shuﬄe
Therandommodulehasa shuffle()methodwhichcanbeusedasfollows.
random.shuffle( self.cards )
Ofthesefouralgorithms,whichisfastest? Thebestwaytotesttheseistocreatefourseparatesubclasses
ofDeck,eachofwhichprovidesadiﬀerentimplementationofthe shuffle()method. Amainprogramcan
thencreateaninstanceofeachvariationon Deckanddoseveralhundredshuﬄes.
Wecancreateatimerusingthe timemodule. The time.clock() functionwillprovideanaccuratetime
stamp. Thediﬀerencebetweentwocallsto time.clock() istheelapsedtime. Becauseshuﬄingisfast,we’ll
doit100timestogetatimethat’slargeenoughtobeaccurate.
Becauseallofourvariationson Deckarepolymorphic,ourmainprogramshouldlooksomethinglikethe
following.
d1=DeckExch()
d2=DeckBuild()
d3=DeckSortRandom()
d4=DeckShuffle()
fordeckin( d1, d2, d3, d4 ):
start=time.clock()
foriinrange(100):
d.shuffle()
finish=time.clock()
302 Chapter 24. Advanced Class Deﬁnition
Building Skills in Python, Release 2.6.5
24.9.3 Encapsulation
TheShuﬄingexercisebuiltseveralalternatesolutionstoaproblem. Wearefreetoimplementanalgorithm
withnochangetotheinterfaceof Deck. Thisisaimportanteﬀectoftheprincipalofencapsulation: aclass
andtheclientsthatusethatclassareonlycoupledtogetherbyaninterfacedeﬁnedbymethodfunctions.
Thereareavarietyofpossibledependenciesbetweenaclassanditsclients.
•InterfaceMethodFunctions . Aclientcandependonmethodfunctionsspeciﬁcallydesignatedas
aninterfacetoaclass. InPython,wecandeﬁneinternalmethodsbypreﬁxingtheirnameswith‘ _’.
Othernames(withouttheleading‘ _’)deﬁnethepublicinterface.
•AllMethodFunctions . Aclientcandependonallmethodfunctionsofaclass. Thisremovesthe
complexityofhidden,internalmethods.
•InstanceVariables . Aclientcandependoninstancevariablesinadditiontomethodfunctions. This
canremovetheneedtowritemethodfunctionsthatsimplyreturnthevalueofaninstancevariable.
•GlobalVariables . Bothclassesshareglobalvariables. ThePython globalstatementisonewayto
accomplishthis.
•Implementation . Aclientcandependonthespeciﬁcalgorithmbeingexecutedbyaclass. Aclient
methodcanhaveexpectationsofhowaclassisimplemented.
Whataretheadvantagesanddisadvantagesofeachkindofdependency?
24.9.4 Class Responsibilities
Assigningresponsibilitytoclasscanbechallenging. Anumberofreasonscanbeusedtojustifythefunctions
andinstancevariablesthatarecombinedinasingleclass.
•Convenience . Aclassisdeﬁnedtodothingsbecause–well–it’sconvenienttowritetheprogram
thatway.
•SimilarOperations . Aclassisdeﬁnedbecauseitdoesallinput,alloutput,orallcalculations.
•SimilarTime . Aclassisdeﬁnedtohandleallinitialization,allprocessingorallﬁnalcleanup.
•Sequence. Weidentifysomeoperationswhichareperformedinasimplesequenceandbundlethese
intoasingleclass.
•CommonData . Aclassisdeﬁnedbecauseithastheoperationswhichisolateadatastructureor
algorithm.
Whatarethepossiblediﬀerencesbetweentheses? Whataretheadvantagesanddisadvantagesofeach?
24.10 Style Notes
ClassesareperhapsthemostimportantorganizationaltoolforPythonprogramming. Pythonsoftwareis
oftendesignedasasetofinteractingclasses. Thereareseveralconventionsfornaminganddocumenting
classdeﬁnitions.
Itisimportanttonotethatthesuitewithinaclassdeﬁnitionistypicallyindentedfourspaces. Itisoften
besttosetyourtexteditorwithtabstopseveryfourspaces. Thiswillusuallyyieldtherightkindoflayout.
Eachfunction’ssuiteissimilarlyindentedfourspaces,asarethesuiteswithincompoundstatements.
Blanklinesareusedsparingly;mosttypicallyasingleblanklinewillseparateeachfunctiondeﬁnitionwithin
theclass. Alengthyclassdeﬁnition,withanumberofone-linerset-getaccessorfunctionsmaygroupthe
accessorstogetherwithoutanyinterveningblanklines.
24.10. Style Notes 303
Building Skills in Python, Release 2.6.5
Classnamesaretypically MixedCasewithaleadinguppercaseletter.Membersoftheclass(methodfunctions
andattributes)typicallybeginwithalowercaseletter. Classnamesarealso,typicallysingularnouns. We
don’tdeﬁne People,wedeﬁne Person. AcollectionmightbeaPersonListorPersonSet.
NotethatthefollowingnamingconventionsarehonoredbyPython:
‘single_trailing_underscore_ ’UsedtomakeavariablenamesdiﬀerentfromasimilarPythonreserved
word. Forexample: ‘ range_’isalegalvariablename,where‘ range’wouldnotbelegal.
‘_single_leading_underscore ’Usedtomakevariableormethodnameshidden. Thisconcealsthemfrom
thedir()function.
‘__double_leading_underscore ’Class-private names. Use this to assure that a method function is not
useddirectlybyclientsofaclass.
‘__double_leading_and_trailing_underscore__ ’These are essentialy reserved by Python for its own
internals.
DocstringRecommendations . Theﬁrstlineofaclassbodyisthedocstring;thisprovidesanoverview
oftheclass. Itshouldsummarizetheresponsibilitiesandcollaboratorsoftheclass. Itshouldsummarizethe
publicmethodsandinstancevariables.
Individualmethodfunctionsareeachdocumentedintheirowndocstrings. ToolslikeSphinxandEpydoc
willlookforthe __init__()docstringaspartofsummarizingaclass.
Whendeﬁningasubclass,besuretomentionthespeciﬁcfeaturesadded(orremoved)bythesubclass. There
aretwobasiccases: overridingandextending. Whenoverridingasuperclassmethodfunction,thesubclass
hasreplacedthesuperclassfunction. Whenextendingasuperclassfunction,thesubclassmethodwillcall
thesuperclassfunctiontoperformsomeofthework. Theoverride-extenddistinctionsmustbemadeclear
inthedocstring.
Wheninitializinginstancevariablesinthe __init__()function,astringplacedaftertheassignmentstate-
mentcanserveasadeﬁnitionofthevariable.
RST Docstring . The most widely-used technique is to write reStructuredText (RST) markup in the
docstrings. ThisisextractedandformattedbytoolslikeSphinxandepydoc.
ForinformationonRSTformatting,see PEP287,aswellashttp://docutils.sourceforge.net/ .
classDice(object):
"""Model two dice used for craps. Relies on Die class.
:ivar theDice: tuple with two Die instances
.. method:: roll
roll dice and return total
"""
def__init__ (self):
"""Create a new pair of dice."""
self.theDice =( Die(), Die() )
defroll(self):
"""Roll the dice and return the sum.
:returns: number
"""
[ d.roll()fordinself.theDice ]
t=sum( theDice )
returnt
304 Chapter 24. Advanced Class Deﬁnition
Building Skills in Python, Release 2.6.5
Generally,wehavebeenomittingacompletedocstringheaderoneachclassintheinterestofsavingsome
spaceforthekindofsmallexamplespresentedinthetext.
24.10. Style Notes 305
Building Skills in Python, Release 2.6.5
306 Chapter 24. Advanced Class Deﬁnition
CHAPTER
TWENTYFIVE
SOME DESIGN P A TTERNS
The best way to learn object-oriented design is to look at patterns for common solutions to ubiquitous
problems. Thesepatternsareoftendescribedwithasynopsisthatgivesyouseveralessentialfeatures. The
writerofapatternwilldescribeaprogrammingcontext,thespeciﬁcproblem,theforcesthatleadtovarious
kindsofsolutions, asolutionthatoptimizesthecompetingforces, andanyconsequencesofchoosingthis
solution.
Thereareanumberofoutstandingbooksonpatterns. We’llpickafewkeypatternsfromoneofthebooks,
anddeveloprepresentativeclassesinsomedepth. TheideaistoaddafewadditionalPythonprogramming
techniques,alongwithanumberofclassdesigntechniques.
Most of these patterns come from the “Gang of Four” design patterns book, Design Patterns: Elements
of Reusable Object-Oriented Software [Gamma95]. We’lllookatafewdesignpatternsthatillustratesome
usefulPythonprogrammingtechniques.
FactoryThisisapatternfordesigningaclasswhichisusedasafactoryforafamilyofother
classes. Thisallowsaclientprogramtouseaveryﬂexibleandextensible“Factory”tocreate
necessaryobjects.
StateThisisapatternfordesigingahierarchyofclassesthatdescribesstates(orstatus)and
state-speciﬁcprocessingordata.
StrategyThisisapatternthathelpscreateaclassthatsupportsanextensionintheformof
alternativestrategiesforimplementingmethods.
25.1 Factory
Whenweaddsubclassestoaclasshierarchy,wemayalsoneedtorearrangethestatementswhereobjects
arecreated. Toprovideaﬂexibleimplementation,itisgenerallyagoodideatocentralizealloftheobject
creationstatementsintoasingleextendableclass. Whenweextendthesubclasshierarchywecanalsocreate
arelevantsubclassofthecentralizedobjectcreationclass.
ThedesignpatternforthiskindofcentralizedobjectcreatorcanbecalledaFactory. Itcontainsthedetails
forcreatinganinstanceofeachofthevarioussubclasses.
Inthenextsection, Components, Modules and Packages ,we’lllookathowtopackageaclasshierarchyin
amodule. Oftentheclassesandthefactoryobjectarebundledintooneseamlessmodule. Further,asthe
moduleevolvesandimproves,weneedtopreservethefactorywhichcreatesinstancesofotherclassesinthe
module. Creatingaclasswithafactorymethodhelpsuscontroltheevolutionofamodule. Ifweomitthe
Factoryclass,theneveryonewhousesourmodulehastorewritetheirprogramswhenwechangeourclass
hierarchy.
307
Building Skills in Python, Release 2.6.5
ExtendingtheCardClassHierarchy . We’llextendthe Cardclasshierarchy,introducedin Inheritance.
Thatoriginaldesignhadthreeclasses: Card,FaceCardandAceCard.
WhilethisseemscompleteforbasicBlackjack,wemayneedtoextendtheseclasses. Forexample,ifweare
goingtosimulateacommoncardcountingtechnique,we’llneedtoseparate2-6from7-9, leadingtotwo
moresubclasses. Addingsubclassescaneasilyripplethroughanapplication,leadingtonumerousadditional,
sometimescomplexchanges. Wewouldhavetolookforeachplacewherethevarioussubclassesofcards
werecreated. The F actorydesignpattern,however,providesahandysolutiontothisproblem.
An object of a class based on the F actorypattern creates instances of other classes. This saves having
toplacecreationdecisionsthroughoutacomplexprogram. Instead,allofthecreationdecision-makingis
centralizedinthefactoryclass.
Forourcardexample,wecandeﬁnea CardFactorythatcreatesnewinstancesof Card(ortheappropriate
subclass.)
classCardFactory (object):
defnewCard(self, rank, suit ):
ifrank==1:
returnAce( rank, suit )
elifrankin[11,12,13]:
returnFaceCard( rank, suit )
else:
returnCard( rank, suit )
Wecansimplifyourversionof Deckusingthisfactory.
class Deck( object ):
def __init__( self ):
factory= CardFactory()
self.cards = [ factory.newCard( rank+1, suit )
for suit in range(4)
for rank in range(13) ]
Rest of the class is the same
Tip:CentralizedObjectCreation
Whileitmayseemlikeoverheadtocentralizeobjectcreationinfactoryobjects,ithasanumberofbeneﬁts.
First, and foremost, centralizing object creation makes it easy to locate the one place where objects are
constructed, and ﬁx the constructor. Having object construction scattered around an application means
thattimeisspentsearchingforandﬁxingthingsthatare,inaway,redundant.
Additionally, centralized object creation is the norm for larger applications. When we break down an
application into the data model, the view objects and the control objects, we ﬁnd at least two kinds of
factories. Thedatamodelelementsareoftencreatedbyfetchingfromadatabase,orparsinganinputﬁle.
Thecontrolobjectsarepartofourapplicationthatarecreatedduringinitialization,basedonconﬁguration
parameters,orcreatedastheprogramrunsbasedonuserinputs.
Finally,itmakesevolutionoftheapplicationpossiblewhenwearecreatinganewversionofafactoryrather
thantrackingdownnumerouscreatorsscatteredaroundanapplication. Wecanassureourselvesthatthe
oldfactoryisstillavailableandstillpassesalltheunittests. Thenewfactorycreatesthenewobjectsfor
thenewfeaturesoftheapplicationsoftware.
ExtendingtheFactory . ByusingthiskindofFactorymethoddesignpattern,wecanmoreeasilycreate
newsubclassesofCard. Whenwecreatenewsubclasses,wedothreethings:
1.Extendthe Cardclasshierarchytodeﬁnetheadditionalsubclasses.
308 Chapter 25. Some Design Patterns
Building Skills in Python, Release 2.6.5
2.Extendthe CardFactorycreationrulestocreateinstancesofthenewsubclasses. Thisisusuallydone
bycreatinganewsubclassofthefactory.
3.Extendorupdate Decktousethenewfactory. Wecaneithercreateanewsubclassof Deck,ormake
thefactoryobjectaparameterto Deck.
Let’screatesomenewsubclassesof Cardforcardcounting. Thesewillsubdividethenumbercardsintolow,
neutralandhighranges. We’llalsoneedtosubclassourexisting FaceCardandAceclassestoaddthisnew
method.
classCardHi( Card ):
"""Used for 10."""
defcount(self):return-1
classCardLo( Card ):
"""Used for 3, 4, 5, 6, 7."""
defcount(self):return+1
classCardNeutral ( Card ):
"""Used for 2, 8, 9."""
defcount(self):return0
classFaceCount ( FaceCard ):
"""Used for J, Q and K"""
defcount(self):return-1
classAceCount ( Ace ):
"""Used for A"""
defcount(self):return-1
Acountingsubclassof Handcansumthe count()valuesofall Cardinstancestogetthecountofthedeck
sofar.
Oncewehaveournewsubclasses,wecancreateasubclassof CardFactorytoincludethesenewsubclasses
ofCard. We’llcallthisnewclass HiLoCountFactory . Thisnewsubclasswilldeﬁneanewversionofthe
newCard()methodthatcreatesappropriateobjects.
Byusingdefaultvaluesforparameters,wecanmakethisfactoryoptiontransparent. Wecandesign Deck
tousetheoriginal CardFactorybydefault. Wecanalsodesign Decktoacceptanoptional CardFactory
object,whichwouldtailorthe Deckforaparticularplayerstrategy.
class Deck( object ):
def __init__( self, factory=CardFactory() ):
self.cards = [ factory.newCard( rank+1, suit )
for suit in range(4)
for rank in range(13) ]
Rest of the class is the same
TheOverallMainProgram . Nowwecanhavemainprogramsthatlooksomethinglikethefollowing.
d1=Deck()
d2=Deck(HiLoCountFactory())
Inthiscase, d1isaDeckusingtheoriginaldeﬁnitions,ignoringthesubclassesforcardcounting. The d2
Deckisbuiltusingadiﬀerentfactoryandhascardsthatincludeaparticularcardcountingstrategy.
We can now introduce variant card-counting schemes by introducing further subclasses of Cardand
CardFactory. To pick a particular set of card deﬁnitions, the application creates an instance of one of
theavailablesubclassesof CardFactory. Sinceallsubclasseshavethesame newCard()method,thevarious
objectsareinterchangeable. Any CardFactoryobjectcanbeusedby Decktoproduceavaliddeckofcards.
25.1. Factory 309
Building Skills in Python, Release 2.6.5
Thisevolutionofadesignvianewsubclassesisaveryimportanttechniqueofobject-orientedprogramming.
Ifweaddfeaturesviasubclasses,wearesurethattheoriginaldeﬁnitionshavenotbeendisturbed. Wecan
becompletelyconﬁdentthataddinganewfeaturetoaprogramwillnotbreakoldfeatures.
25.2 State
Objectshavestatechanges. Oftentheprocessingthatanobjectperformsdependsonthestate. Innon-
object-orientedprogramminglanguages,thisstate-speciﬁcprocessingisaccomplishedwithlong,andsome-
timescomplexseriesof ifstatements. The Statedesignpatterngivesusanalternativedesign.
Asanexample,thegameofCrapshastwostates.Aplayer’sﬁrstdicerolliscalleda come outroll.Depending
onthenumberrolled, theplayerimmediatelywins, immediatelyloses, orthegametransitionstoa point
roll. Thegamestaysinthepointrollstateuntiltheplayermakestheirpointorcrapoutwithaseven. The
followingtableprovidesacompletepictureofthestatechangesandthedicerollsthatcausethosechanges.
Table25.1:CrapsStateChangeRules
State RollBetResolution NextState
PointOﬀ;theComeOutRoll;only
PassandDon’tPassbetsallowed.2,3,12“Craps”: Passbetslose,Don’t
Passbetswin.PointOﬀ
7,11“Winner”: Passbetswin,Don’t
Passbetslose.PointOﬀ
4,5,6,
8,9,10NoResolution PointOnthe
numberrolled,
p.
PointOn;anyadditionalbetsmaybe
placed.2,3,12NoResolution Pointstillon
11NoResolution Pointstillon
7“Loser”: allbetslose. Thetable
iscleared.PointOﬀ
Point, p“Winner”: pointismade,Pass
betswin,Don’tPassbetslose.PointOﬀ
Non- p
numberNothing;Comebetsare
activatedPointstillon
The Statedesignpatternisessentialtoalmostallkindsofprograms.Therootcauseofthehideouscomplexity
thatcharacterizesmanyprogramsisthefailuretoproperlyusethe Statedesignpattern.
TheCrapsClass. Theoverallgameofcrapscanberepresentedinanobjectofclass Craps. ACrapsobject
wouldhavea play1Round() functiontoinitializethegameinthecomeoutrollstate,rolldice,payoﬀbets,
andpossiblychangestates.
Followingthe Statedesignpattern,wewilldelegatestate-speciﬁcprocessingtoanobjectthatrepresentsjust
attributesandbehaviorsuniquetoeachstateofthegame. Wepantocreatea CrapsStateclasswithtwo
subclasses: CrapsStateComeOutRoll andCrapsStatePointRoll .
Theoverall Crapsobjectwillpassthedicerolltothe CrapsStateobjectforevaluation. The CrapsState
objectcallsmethodsintheoriginal Crapsobjecttopayorcollectwhenthereisawinorloss.The CrapsState
objectcanalsoreturnanobjectforthenextstate. Additionally,the CrapsStateobjectwillhavetoindicate
thenthegameactuallyends.
We’lllookatthe Crapsobjecttoseethecontextinwhichthevarioussubclassesof CrapsStatemustoperate.
310 Chapter 25. Some Design Patterns
Building Skills in Python, Release 2.6.5
craps.py
importdice
classCraps(object):
"""Simple game of craps."""
def__init__ (self):
self.state=None
self.dice=dice.Dice()
self.playing=False
defplay1Round (self):
"""Play one round of craps until win or lose."""
self.state=CrapsStateComeOutRoll()
self.playing=True
whileself.playing:
self.dice.roll()
self.state=self.state.evaluate( self,self.dice )
defwin(self):
"""Used by CrapsState when the roll was a winner."""
print"winner"
self.playing=False
deflose(self):
"""Used by CrapsState when the roll was a loser."""
print"loser"
self.playing=False
1.TheCrapsclassconstructor, __init__(),createsthreeinstancevariables: state,diceandplaying.
Thestatevariable will contain an instance of CrapsState, either a CrapsStateComeOutRoll or a
CrapsStatePointRoll . Thedicevariable contains an instance of the class Dice, deﬁned in Class
Deﬁnition: the class Statement . Theplayingvariableisasimpleswitchthatis Truewhilewethe
gameisplayingand Falsewhenthegameisover.
2.Theplay1Round() methodsetsthe statetoCrapsStateComeOutRoll ,andsetsthe playingvariable
toindicatethatthegameisinprogress. Thebasicloopistorollthediceandtheevaluatethedice.
Thismethodcallsthestate-speciﬁc evaluate()functionofthecurrent CrapsStateobject. Wegive
thismethodareferencetooverallgame,viathe Crapsobject. Thatreferenceallowsthe CrapsState
tocallthe win()orlose()methodinthe Crapsobject. The evaluate()methodof CrapsStateis
alsogiventhe Diceobject,soitcangetthenumberrolledfromthedice. Somepropositions(called
“hardways”)requirethatbothdicebeequal;forthisreasonwepasstheactualdiceto evaluate(),
notjustthetotal.
3.When the win()orlose()method is called, the game ends. These methods can be called by the
theevaluate()methodofthecurrent CrapsState. Theplayingvariableissetto Falsesothatthe
game’sloopwillend.
TheCrapsStateClassHierarchy . Eachsubclassof CrapsStatehasadiﬀerentversionofthe evaluate()
operation. Eachversionembodiesonespeciﬁcsetofrules. Thisgenerallyleadstoanicesimpliﬁcationof
thoserules;therulescanbestrippeddowntosimple ifstatementsthatevaluatethediceinonestateonly.
Noadditionalifstatementsarerequiredtodeterminewhatstatethegameisin.
classCrapsState (object):
"""Superclass for states of a craps game."""
defevaluate (self, crapsGame, dice ):
raiseNotImplementedError
def__str__(self):
returnself.__doc__
25.2. State 311
Building Skills in Python, Release 2.6.5
TheCrapsStatesuperclassdeﬁnesanyfeaturesthatarecommontoallthestates. Onecommonfeatureis
thedeﬁnitionofthe evaluate()method. Thebodyofthemethodisuniquelydeﬁnedbyeachsubclass. We
provideadeﬁnitionhereasaformalplace-holderforeachsubclasstooverride. InJava,wewoulddeclare
theclassandthisfunctionasabstract. Pythonlacksthisformalism,butitisstillgoodpracticetoinclude
aplaceholder.
SubclassesforEachState . Thefollowingtwoclassesdeﬁnetheuniqueevaluationrulesforthetwogame
states. Thesearesubclassesof CrapsStateandinheritthecommonoperationsfromthesuperclass.
classCrapsStateComeOutRoll ( CrapsState ):
"""Come out roll rules."""
defevaluate (self, crapsGame, dice ):
ifdice.total() in[7,11]:
crapsGame .win()
returnself
elifdice.total() in[2,3,12]:
crapsGame .lose()
returnself
returnCrapsStatePointRoll( dice .total() )
TheCrapsStateComeOutRoll providesan evaluate()functionthatdeﬁnesthecomeoutrollrules. Ifthe
rollisanimmediatewin(7or11),itcallsbacktothe Crapsobjecttousethe win()method. Iftherollis
animmediateloss(2,3or12),itcallsbacktothe Crapsobjecttousethe lose()method. Inallcases,it
returnsanobjectwhichisthenextstate;thismightbethesameinstanceof CrapsStateComeOutRoll ora
newinstanceof CrapsStatePointRoll .
classCrapsStatePointRoll ( CrapsState ):
"""Point roll rules."""
def__init__ (self, point ):
self.point=point
defevaluate (self, crapsGame, dice ):
ifdice.total() ==7:
crapsGame .lose()
returnNone
ifdice.total() ==self.point:
crapsGame .win()
returnNone
returnself
TheCrapsStatePointRoll providesan evaluate()methodthatdeﬁnesthepointrollrules. Ifasevenwas
rolled,thegameisaloss,andthismethodcallsbacktothe Crapsobjecttousethe lose()method,which
endthegame. Ifthepointwasrolled,thegameisawinner,andthismethodcallsbacktothe Crapsobject
tousethe win()method. Inallcases,itreturnsanobjectwhichisthenextstate. Thismightbethesame
instanceof CrapsStatePointRoll ` or a new instance of :class:`CrapsStateComeOutRoll .
ExtendingtheStateDesign . Whilethegameofcrapsdoesn’thaveanymorestates, wecanseehow
additionalstatesareadded. First,anewstatesubclassisdeﬁned. Then,themainobjectclassandtheother
statesareupdatedtousethenewstate.
Anadditionalfeatureofthestatepatternisitsabilitytohandlestate-speciﬁcconditionsaswellasstate-
speciﬁcprocessing. Continuingtheexampleofcraps,theonlybetsallowedonthecomeoutrollarepass
anddon’tpassbets. Allotherbetsareallowedonthepointrolls.
Wecanimplementthisstate-speciﬁcconditionbyaddinga validBet()methodtothe Crapsclass. This
willreturn Trueifthebetisvalidforthegivengamestate. Itwillreturn Falseifthebetisnotvalid. Since
thisisastate-speciﬁccondition,theactualprocessingmustbedelegatedtothe CrapsStatesubclasses.
312 Chapter 25. Some Design Patterns
Building Skills in Python, Release 2.6.5
25.3 Strategy
Objectscanoftenhavevariantalgorithms. Theusualtextbookexampleisanobjectthathastwochoices
foranalgorithm,oneofwhichisslow,butuseslittlememory,andtheotherisfast,butrequiresalotof
storageforallthatspeed. Inourexamples,wecanusethe Strategypatterntoisolatethedetailsofabetting
strategyfromtherestofacasinogamesimulation. Thiswillallowustofreelyaddnewbettingstrategies
withoutdisruptingthesimulation.
One strategy in Roulette is to always bet on black. Another strategy is to wait, counting red spins and
betonblackafterwe’veseensixormoreredsinarow. Thesearetwoalternateplayerstrategies. Wecan
separatethesebettingdecisionalgorithmsfromotherfeaturesofplayer.
Wedon’twanttocreateanentiresubclassofplayertoreﬂectthischoiceofalgorithms. TheStrategydesign
patternhelpsusbreaksomethingrathercomplex,likeaPlayer,intoseparatepieces. Theessentialfeatures
areinoneobject,andthealgorithm(s)thatmightchangeareinseparatestrategyobject(s). Theessential
featuresaredeﬁnedinthecoreclass,theotherfeaturesarestrategiesthatareusedbythecoreclass. Wecan
thencreatemanyalternatealgorithmsassubclassesoftheplug-inStrategyclass. Atruntime,wedecide
whichstrategyobjecttoplugintothecoreobject.
TheTwoApproaches . Asmentionedin Design Approaches , wehavetwoapproachesforextendingan
existing class: wrapping and inheritance. From an overall view of the collection of classes, the Strategy
designemphasizeswrapping. Ourcoreclassisakindofwrapperaroundtheplug-instrategyobject. The
strategyalternatives,however,usuallyformaproperclasshierarchyandareallpolymorphic.
Let’slookatacontrived,butsimpleexample. Wehavetwovariantalgorithmsforsimulatingtherolloftwo
dice. Oneisquickanddirtyandtheothermoreﬂexible,butslower.
First,wecreatethebasic Diceclass,leavingoutthedetailsofthealgorithm. Anotherobject,thestrategy
object,willholdthealgorithm
classDice(object):
def__init__ (self, strategy ):
self.strategy =strategy
self.lastRoll =None
defroll(self):
self.lastRoll =self.strategy .roll()
returnself.lastRoll
deftotal(self):
returnreduce(lambdaa,b:a+b,self.lastRoll, 0)
TheDiceclassrollsthedice,andsavestherollinaninstancevariable, lastRoll,sothataclientobjectcan
examinethelastroll. The total()methodcomputesthetotalrolledonthedice,irrespectiveoftheactual
strategyused.
TheStrategyClassHierarchy . Whenaninstanceofthe Diceclassiscreated,itmustbegivenastrategy
objecttowhichwehavedelegatedthedetailedalgorithm.Astrategyobjectmusthavetheexpectedinterface.
Theeasiestwaytobesureithastheproperinterfaceistomakeeachalternativeasubclassofastrategy
superclass.
importrandom
classDiceStrategy (object):
defroll(self):
raiseNotImplementedError
TheDiceStrategy classisthesuperclassforalldicestrategies. Itshowsthebasicmethodfunctionthatall
subclassesmustoverride. We’lldeﬁnetwosubclassesthatprovidealternatestrategiesforrollingdice.
Theﬁrst, DiceStrategy1 issimple.
25.3. Strategy 313
Building Skills in Python, Release 2.6.5
classDiceStrategy1 ( DiceStrategy ):
defroll(self):
return( random .randrange( 6)+1, random .randrange( 6)+1)
ThisDiceStrategy1 classsimplyusesthe randommoduletocreateatupleoftwonumbersintheproper
rangeandwiththeproperdistribution.
Thesecondalternatestrategy, DiceStrategy2 ,isquitecomplex.
classDiceStrategy2 ( DiceStrategy ):
classDie:
def__init__ (self, sides=6):
self.sides=sides
defroll(self):
returnrandom.randrange( self.sides)+1
def__init__ (self,set=2, faces=6):
self.dice=tuple( DiceStrategy2 .Die(faces) fordinrange(set) )
defroll(self):
returntuple( x.roll()forxinself.dice )
ThisDiceStrategy2 classhasaninternalclassdeﬁnition, Diethatsimulatesasinglediewithanarbitrary
numberoffaces. Aninstancevariable, sidesshowsthenumberofsidesforthedie;thedefaultnumberof
sidesissix. The roll()methodreturnsarerandomnumberinthecorrectrange.
TheDiceStrategy2 classcreatesanumberofinstancesof Dieobjectsintheinstancevariable dice. The
defaultistocreatetwoinstancesof Dieobjectsthathavesixfaces,givingusthestandardsetofdicefor
craps. The roll()function creates a tuple by applying a roll()method to each of the Dieobjects in
self.dice.
CreatingDicewithaPlug-InStrategy . Wecannowcreateasetofdicewitheitherofthesestrategies.
dice1=Dice( DiceStrategy1() )
dice2=Dice( DiceStrategy2() )
Thedice1instanceofDiceusesaninstanceofthe DiceStrategy1 class. Thisstrategyobjectisusedto
constucttheinstanceof Dice. Thedice2variableiscreatedinasimilarmanner,usinganinstanceofthe
DiceStrategy2 class.
Bothdice1anddice2areofthesameclass, Dice,butusediﬀerentalgorithmstoachievetheirresults. This
techniquegivesustremendousﬂexibilityindesigningaprogram.
MultiplePatterns . Constructionofobjectsusingthestrategypatternworkswellwitha F actorypattern,
touched on in F actory. We could, for instance, use a Factory Method to decode input parameters or
command-lineoptions. Thisgiveussomethinglikethefollowing.
classMakeDice (object):
defnewDice(self, strategyChoice ):
ifstrategyChoice ==1:
strat=DiceStrategy1()
else:
strat=DiceStrategy2()
returnDice( strat )
ThisallowsaprogramtocreatetheDicewithsomethinglikethefollowing.
dice = MakeDice().newDice( :replaceable:`someInputOption` )
314 Chapter 25. Some Design Patterns
Building Skills in Python, Release 2.6.5
Whenweaddnewstrategies,wecanalsosubclassthe MakeDiceclasstoincludethosenewstrategyalter-
natives.
25.4 Design Pattern Exercises
25.4.1 Alternate Counting Strategy
AsimplecardcountingstrategyinBlackjackistoscore+1forcardsofrank3to7,0forcardsofrank2,8
and9and-1forcards10toKingandAce. Theupdatestothe Cardclasshierarchyareshowninthetext.
Createasubclassof CardFactory,whichreplaces newCard()withaversionthatcreatesthecorrectsubclass
ofCard,basedontherank.
25.4.2 Six Reds
AcommonstrategyinRouletteistowaituntilsixredsinarowarespunandthenstartbettingononly
black. Therearethreeplayerbettingstates: waiting,countingandbetting.
Afullsimulationwillrequirea RouletteGame classtospinthewheelandresolvebets,a Wheelobjectto
produceasequenceofrandomspins, anda Tabletoholdtheindividualbets. We’dalsoneedaclassto
representthe Bets. We’llskimoverthefullgameandtrytofocusontheplayerandplayerstates.
APlayerhasa stakewhichistheircurrentpoolofmoney. The RouletteGame oﬀersthe Playeranoppor-
tunitytobet,andinformstheplayeroftheresultingspinofthewheel. The PlayerusesaSixRedsState
tocountredsandbetonblack.
Thevarious SixRedsState classeshavetwomethods, a bet()methoddecidestobetornotbet, andan
outcome()methodthatrecordstheoutcomeofthepreviousspin. Eachclassimplementsthesemethods
diﬀerently,becauseeachclassrepresentsadiﬀerentstateoftheplayer’sbettingpolicy.
countingInthecountingstate,theplayeriscountingthenumberofredsinarow. Ifaredwas
spunandthecountis<6,addonetoaredcounterandstayinthisstate. Ifaredisspun
andthecountis=6,addonetoaredcounterandtransitiontothebettingstate. Ifblack
orgreenisspun,resetthecounttozero.
:betting[Inthebettingstate,theplayeris]bettingonblack. Inamoreadvancedversion,theplayerwould
alsoincreasetheirbetforeachredcountoversix. Ifaredwasspun,addonetoaredcounterandstay
inthebettingstate. Ifblackwasspun,transitiontothecountingstate. Ifgreenwasspun,transition
tothecountingstate.
Caution:Caution
We’llfocusonthe SixRedsState design. Wewon’tspendtimeontheactualbettingorpayouts. For
now,wecansimplylogwinsandlosseswitha printstatement.
First,buildasimple Playerclass,thathasthefollowingmethods.
classPlayer()
__init__ (self, stake )
Setstheplayer’sinitialstake.Fornow,wewon’tdomuchwiththis.Inotherplayerstrategies,however,
thismayinﬂuencethebetting.
Moreimportantly,thiswillsettheinitialbettingstateofCounting.
__str__(self)
Returnsastringthatincludesthecurrentstakeandstateinformationfortheplayer.
25.4. Design Pattern Exercises 315
Building Skills in Python, Release 2.6.5
getBet(self)
Thiswillusethecurrentstatetodeterminewhatbet(ifany)toplace.
outcome(self, spin)
Thiswillprovidethecolorinformationtothecurrentstate. Itwillalsoupdatetheplayer’sbetting
statewithastateobjectreturnedthecurrentstate. Generally,eachstatewillsimplereturnacopyof
itself. However,thecountingstateobjectwillreturnabettingstateobjectwhensixredshavebeen
seeninarow.
Second,createarudimentary RouletteGame thatlookssomethinglikethefollowing.
classRouletteGame ()
__init__ (self, player )
ARouletteGame isgivena Playerinstancewhenitisconstructed.
__str__(self)
It’snotclearwhatwe’ddisplay. Maybetheplayer? Maybethelastspinofthewheel?
play1Round (self)
Theplay1Round() methodgetsabetfromthe Playerobject,spinsthewheel,andreportsthespin
backtothe Playerobject. Amorecompletesimulationwouldalsoresolvethebets,andincreasethe
player’sstakewithanywinnings.
Notethatcallingthe Player‘soutcome()methoddoestwothings. First,itprovidesthespintothe
player
playRounds (self, rounds=12 )
Asimpleloopthatcalls‘ self.play1Round ’asmanytimesasrequired.
Forguidanceondesigningthe Wheelusedbythe RouletteGame ,see Class V ariables and F unction Deﬁnition:
The def and return Statements .
StateClassHierarchy . Thebestapproachistogettheessentialfeaturesof RouletteGame ,Wheeland
Playertowork. Ratherthanwriteacompleteversionoftheplayer’s getBet()andoutcome()methods,
wecanusesimpleplace-holdermethodsthatsimplyprintoutthestatusinformation. Oncewehavethese
objectscollaborating,thenthethreestatescanbeintroduced.
Thesuperclass, SixRedsState ,aswellasthetwosubclasses,wouldallbesimilartothefollowing.
classSixRedsState ()
__init__ (self, player )
Thesuperclassinitializationsavestheplayerobject. Somesubclasseswillinitializeacounttozero.
__str__(self)
Thesuperclass __str__()methodshouldreturna NotImplemented value,toindicatethatthesuper-
classwasusedimproperly.
getBet(self)
ThegetBet()methodeitherreturns Noneinthewaitingandcountingstates,orreturnsabetonred
inthebettingstate. Thesuperclasscanreturn None,sincethat’sahandydefaultbehavior.
outcome(self, spin)
Theoutcome()methodisgivenatuplewithanumberandacolor.Basedontherulesgivenabove,each
subclassof SixRedsState willdoslightlydiﬀerentthings. Thesuperclasscanreturn NotImplemented .
Weneedtocreatetwosubclassesof SixRedState:
SixRedCounting Inthisstate,the getBet()methodreturns None;thisbehaviorisdeﬁnedby
thesuperclass,sowedon’tneedtoimplementthismethod. The outcome()methodchecks
thespin. IfitisRed,thisobjectincrementsthecountbyone. Ifitisblackitresetsthe
316 Chapter 25. Some Design Patterns
Building Skills in Python, Release 2.6.5
counttozero. Ifthecountissix,returnaninstanceof SixRedBetting . Otherwise,return
selfasthenextstate.
SixRedBetting Inthisstate,the getBet()methodreturnsabetonBlack;fornow,thiscan
bethestring "Black". Theoutcome()methodchecksthespin. IfitisRed, thisobject
incrementsthecountbyoneandreturns self. Ifthespinisblackitreturnsaninstanceof
SixRedCounting . Thiswillstopthebettingandstartcounting.
Oncewehavethevariousstatesdesigned,the Playercanthenberevisedtoinitializeitselfwithaninstance
ofthewatingclass,andthendelegatethe getBet()requestfromthegametothestateobject,anddelegate
theoutcome()informationfromthegametothestateobject.
25.4.3 Roulette Wheel Alternatives
There are several possible implementations of the basic Roulette wheel. One variation simply uses
random.randrange() togeneratenumbersintherangeof0to37,andtreats37asdoublezero. Toseparate
doublezerofromzero,it’sbesttousecharacterstringresults.
Anotherstrategyistocreateasequenceof38strings(‘00’,‘0’,‘1’,etc.) anduse random.choice() topick
anumberfromthesequence.
Createasuperclassfor WheelStrategy andtwosubclasseswiththesevariantalgorithms.
Createaclassfor Wheelwhichusesaninstanceof WheelStrategy togetthebasicnumber. Thisclassfor
Wheelshouldalsodeterminewhetherthenumberisred,blackorgreen. The Wheelclassspin()method
shouldreturnatuplewiththenumberandthecolor.
Createasimpletestprogramtocreateaninstanceof Wheelwithaninstanceof WheelStrategy . Collect
1000spinsandprintthefrequencydistribution.
25.4.4 Shuﬄing Alternatives
Shuﬄingrearrangesadeckorshoeofmultipledecks; therearemanypossiblealgorithms. First,youwill
needaCardclasstokeepbasicrankandsuitinformation. Next,youwillneedabasic Deckclasstohold
cards. See Playing Cards and Decks foradditionaldetails.
Welookedatshuﬄinginanearlierexercise, butpackageditaspartofthe Deckclass, notasaseparate
strategy. See Advanced Class Deﬁnition Exercises . Wecanreworkthoseexercisestoseparateshuﬀingfrom
Deck.
TheDeckclassmusthavea shuffle()function;butthisshouldsimplycallamethodoftheshuﬄestrategy
object. Becausethe Deckisacollectionof Cards,theDeckobjectshouldbepassedtotheshuﬄestrategy.
Thecallwouldlikesomethinglikethis:
class Deck( object ):
Other parts of Deck
def shuffle( self ): self.shuffleStrategy.shuffle( self )
Createasuperclassforshuﬄestrategies. Createasubclassforeachofthefollowingalgorithms:
•Foreachcardpositioninthedeck,exchangeitwithacardpositionselectedrandomly
•Foreven-numberedcardposition(positions0,2,4,6,etc.) exchangeitwithanodd-numberedcard
position,selectedrandomly(random.choicefrom1,3,5,7,9,etc.)
•Swaptworandomly-selectedpositions;dothis52times
Createasimpletestprogramthatcreatesa Deckwitheachoftheavailablea Shufflestrategyobjects.
25.4. Design Pattern Exercises 317
Building Skills in Python, Release 2.6.5
25.4.5 Shuﬄing Quality
Anopenissueintheshuﬄingexerciseisthestatisticalqualityoftheshuﬄingactuallyperformed. Statistical
testsofrandomsequencesaresubtle,andmoreadvancedthanwecancoverinthissetofexercises. What
wewanttotestisthateachcardisequallylikelytolandineachpositionofthedeck.
Wecancreateadictionary, withthekeyofeachcard, andtheitemassociatedwiththatkeyisalistof
positionsinwhichthecardoccured. Wecanevaluateashuﬄealgorithmasfollows.
T est A Shuﬄe
Setup. Createa Deck.
Createanemptydictionary, positionsforrecordingcardpositions.
Foreach CardintheDeck,insertthe Cardinthepositionsdictionary;thevalueassociatedwiththe Card
isauniqueempty listusedtorecordthepositionsatwhichthis Cardisfound.
ForEachStrategy . Performthefollowingevaluationforaninstanceofeach Shuffleclass, s.
CreateDeck. Setthe Deck‘scurrentshuﬄestrategyto s.
Shuﬄe. Shuﬄethe Deck.
RecordAllPositions . Foreachcardinthedeck, d.
RecordCardPosition . Locatethe Card‘spositionlistinthe positionsdictionary;
appendthepositionofthis Cardtothelistinthe positionsdictionary.
Chi-Squared . Thechi-squaredstatisticaltestcanbeusedtocomparetheactualfrequencyhistogramto
theexpectedfrequencyhistogram. Ifyoushuﬄeeachdeck520times,agivencardshouldappearineachof
thepositionsapproximately10times. Ideally,thedistributionisclosetoﬂat,butnotexactly.
Thechi-squaredtestcomparessequenceofactualfrequencies, a,andasequenceofexpectedfrequencies, e.
Itreturnsthechi-squaredmetricforthecomparisonofthesetwosequences. Bothsequencesmustbethe
samelengthandrepresentfrequenciesinthesameorder.
χ2=∑
0in(ai−ei)2
ei
Wecanusethebuilt-in zip()functiontointerleavethetwolists,creatingasequenceoftuplesof‘ ( actual,
expected )’. Thissequenceoftuplescanbeusedwiththemultiple-assignment forlooptoassignavalue
fromactualtoonevariable,andavaluefromexpectedtoanothervariable. Thisallowsasimple,elegant
forstatementtodrivethebasiccomparisonfunction.
318 Chapter 25. Some Design Patterns
CHAPTER
TWENTYSIX
CREA TING OR EXTENDING DA T A
TYPES
Whenweuseanoperator,like +or*,whathappensdependsonthetypesoftheobjectsinvolved. When
wesay‘c*2’,thevaluedependsonthetypeof c. Ifcisnumeric,then2mayhavetobeconvertedtothe
sametypeofnumberas c,andtheanswerwillbeanumber. If,however, cisasequence,theresultisanew
sequence.
>>>c=8.0
>>>c*2
16.0
>>>c="8.0"
>>>c*2
'8.08.0'
>>>c=(8,0)
>>>c*2
(8, 0, 8, 0)
Theselectionofappropriatebehaviorisaccomplishedbytherelativelysimplemechanismof special method
nameswithinPython. Eachclassofobjects,eitherbuilt-inorcreatedbyaprogrammer,canprovidethe
requiredspecialmethodnamestocreatetheintimaterelationshipbetweentheclass,thebuilt-infunctions
andthemathematicaloperators.
We’lllookatthegeneralprinciplesin Semantics of Special Methods .
Ifyouprovidespecialmethods,youcanmakeyourclassbehavelikeabuilt-inclass.Yourclasscanparticipate
seamlessly with built-in Python functions like str(),len(),repr(). These are basic special methods,
coveredin Basic Special Methods . We’lllookatsomespecialattributesin Special Attribute Names .
Yourclasscanalsoparticipatewiththeusualmathematicaloperatorslike‘ +’and‘*’. We’lllookatthisin
Numeric T ype Special Methods .
Additionally,yourclasscouldalsousethecollectionoperatorsinamannersimilartoa dict,set,tupleor
list. We’lllookatthisin Col lection Special Method Names ,Col lection Special Method Names for Iterators
and Iterable,Col lection Special Method Names for Sequences ,Col lection Special Method Names for Sets and
Col lection Special Method Names for Mappings .
We’lllookatafewexamplesin Mapping Example and Iterator Examples .
We’lllookatspecialnamesforhandlingattributesarehandledin Attributes, Properties and Descriptors .
Additionally, wecanextendbuilt-inclasses. Wedothisbyextendingsomeofthespecialmethodstodo
additionalordiﬀerentthings. We’llexaminethisin Extending Built-In Classes .
319
Building Skills in Python, Release 2.6.5
26.1 Semantics of Special Methods
Pythonhasanumberoflanguagefeaturesthatinteractwiththebuilt-indatatypes. Forexample,objects
ofallbuilt-intypescanbeconvertedtostrings. Youcanusethebuilt-in str()functiontoperformthese
conversions. The str()function invokes the __str__()special method of the given object. In eﬀect,
‘str(a)’isevaluatedas‘ a.__str__()’.
Whenyoucreateyourownclass,youmustsupplythespecially-namedmethod, __str__(),thatthebuilt-in
str()functioncanusetosuccessfullyconvertyourclassesvaluestostrings. Thedefaultimplementationof
__str__()isprettylame;you’llalwayswanttooverrideit.
In Special Method Names weintroducedafewspecialmethodnames. Welookedat __init__(),whichis
evaluatedimplicitlywhenanobjectiscreated. Welookedat __str__(),whichisusedbythe str()function
and__repr__()thatisusedbythe repr()function.
AhugenumberofPythonfeaturesworkthroughthesespecialmethodnames. Whenyouprovideappropriate
specialmethodsforyourclass,itbehavesmorelikeabuilt-inclass.
Youmaybesuspiciousthatthespecialmethodname __str__()matchesthebuilt-infunction str(). There
isnosimple,obviousrule. Manyofthebuilt-infunctionsinvokespecially-namedmethodsoftheclassthat
aresimilar. Theoperatorsandotherspecialsymbols,however,can’thaveasimpleruleforpairingoperators
withspecialmethodnames. You’llhavetoactuallyreadthedocumentationforbuilt-infunctions( Library
Reference,section2.1)andspecialmethodnames( Language Reference ,section3.3)tounderstandallofthe
relationships.
Categories of Special Method Names . The special methods fall into several broad categories. The
categoriesaredeﬁnedbythekindofbehavioryourclassshouldexhibit.
BasicObjectBehaviors A number of special method names make your object behave like
oherbuilt-inobjects. Thesespecialmethodsmakeyourclassrespondto str(),repr()and
variouscomparisonoperators. Thisalsoincludesmethodsthatallowyourobjecttorespond
tothehash()function,whichallowsinstancesofyourclasstobeakeytoamapping.
NumericBehaviors These special methods allow your class to respond to the artithmetic
operators: ‘ +’,‘-’,‘*’,‘/’,‘%’,‘**’,‘<<’,‘>>’,and,orandnot. Whenyouimplementthese
specialmethods,yourclasswillbehavelikethebuilt-innumerictypes.
ContainerBehaviors Ifyournewclassisacontainer(oracollection),thereareanumberof
methodsrequiredsothatyourclasscanbehavelikethebuilt-incollectiontypes(sequence,
set, mapping). Section 3.4.5 of the Python Language Reference calls them “containers”.
However,we’llcallthemcollectionsbelow.
IteratorBehavior Aniteratorhasauniqueprotcol.The forstatementrequiresan __iter__()
methodtoproductaniteratorforaniterableobject. Theiteratormustprovidethe next()
methodtoactuallydotheiteration. Whilethisisn’ttiedtoacollection,it’scommonlyused
withcollections,sowe’llshowthiswiththecollectionspecialnamesbelow.
AttributeHandlingBehavior Somespecialmethodscustomizehowyourclassrespondsto
the.operatorformanpulatingattributes. Forexample,whenyouevaluate object.attr.
Thisiscommonlyusedwhenattributemanipulationismorecomplexthansimplylocating
anattributethatwasdeﬁnedby __init__().
FunctionBehavior Youcanmakeyourobjectbehavelikeafunction. Whenyoudeﬁnethe
method__call__(),yourobjectis cal lable,andcanbeusedasifitwasafunction.
StatementInteraction Thereareafewspecialmethodsrequiredbystatements.
Theforstatementrequiresan __iter__()methodtoproductaniteratorforaniterable
object. Theiteratorobjectmustimplementa next()method.
320 Chapter 26. Creating or Extending Data T ypes
Building Skills in Python, Release 2.6.5
Thewithstatementrequires __enter__()and__exit__()methods.
26.2 Basic Special Methods
Inadditionto __init__()and__str__()thereareanumberofmethodswhichareappropriateforclasses
ofallkinds.
__init__ (self, args... )
Calledwhenanewinstanceoftheclassiscreated. Notethatthisoverridesanysuperclass __init__()
method; todosuperclassinitializationﬁrst, youmustevaluatethesuperclass __init__()likethis:
‘super( class, self ).__init__( args... ) ’. Thesuper()functionidentiﬁesthesuperclassof
yourclass, class.
__del__(self)
Calledwhenthethisobjectisnolongerreferencedanywhereintherunningprogram; theobjectis
abouttoberemovedbygarbagecollection. Thisisrarelyused. Notethatthisiscalledaspartof
Pythongarbagecollection;itisnotcalledbythe delstatement.
__repr__ (self)
Calledbythe repr()built-infunction. Typically, thestring returnedbythiswill looklikeavalid
Pythonexpressiontoreconstructtheobject.
__str__(self)
Calledbythe str()built-infunction. Thisiscalledimplicitlybythe printstatement(and print()
function)toconvertanobjecttoaconvenient,“pretty”stringrepresentation.
__eq__(self, other )
Calledby‘ ==’.
__ne__(self, other )
Calledby‘ !=’.
__lt__(self, other )
Calledby‘ <’.
__le__(self, other )
Calledby‘ <=’.
__gt__(self, other )
Calledby‘ >’.
__ge__(self, other )
Calledby‘ >=’.
__hash__ (self)
Calledduringdictionaryoperations,andbythebuilt-infunction hash()totransformanobjecttoa
unique32-bitintegerhashvalue. Objectswhichcompareequalshouldalsohavethesamehashvalue.
If a class does not deﬁne a __eq__()method it should not deﬁne a __hash__()operation either.
Classeswithmutableobjectscandeﬁne __eq__()butshouldnotdeﬁne __hash__(),orobjectswould
movearoundinthedictionary.
__nonzero__ (self)
Calledduringtruthvaluetesting;mustreturn0or1. Ifthismethodisnotdeﬁned,and __len__()is
deﬁned,then __len__()iscalledbasedontheassumptionthatthisisacollection. Ifneitherfunction
isdeﬁned,allvaluesareconsidered True.
26.2. Basic Special Methods 321
Building Skills in Python, Release 2.6.5
26.3 Special Attribute Names
Aspartofcreatingaclassdeﬁnition,Pythonaddsanumberofspecialattributes. Theseareinformational
innature,andcannotnotbeeasilybechangedexceptbyredeﬁningtheclassorfunction,orreimporting
themodule.
__class__ Thisobject’sclassname. Theclasshasa __name__attributewhichisthename
oftheclass.
__module__ Themoduleinwhichtheclasswasdeﬁned.
__dict__Thedictionarywhichcontainstheobject’sattributesandmethods.
__bases__ Thebaseclassesforthisclass. Thesearealsocalledsuperclasses.
__doc__Thedocumentationstring. Thisispartoftheresponseproducedbythe help()
function.
Here’sanexampleofhowtheclassdocstringisusedtoproducethe help()resultsforaclass.
importrandom
printrandom.Random.__doc__
help(random .Random)
26.4 Numeric T ype Special Methods
Whencreatinganewnumericdatatype,youmustprovidedeﬁnitionsfortheessentialmathematicaland
logicaloperators. Whenwewriteanexpressionusingtheusual‘ +’, ‘-’, ‘*’, ‘/’, ‘//’, ‘%’, or‘**’, Python
transformsthistomethodfunctioncalls.
Considerthefollowing:
v1=MyClass( 10,20)
v2=MyClass( 20,40)
x=v1+v2
Inthiscase,Pythonwillevaluateline3asifyouhadwritten:
x=v1.__add__( v2 )
Every arithmetic operator is transformed into a method function call. By deﬁning the numeric special
methods,yourclasswillworkwiththebuilt-inarithmeticoperators. Thereare,however,somesubtletiesto
this.
Forward, Reverse and In-Place Method Functions . There are as many as three variant methods
required to implement each operation. For example, ‘ *’ is implemented by __mul__(),__rmul__()and
__imul__(). Thereareforwardandreversespecialmethodssothatyoucanassurethatyouroperatoris
properlycommutative.Thereisanin-placespecialmethodsothatyoucanimplementaugmentedassignment
eﬀiciently(see Augmented Assignment ).
Youdon’tneedtoimplementallthreeversions. Ifyouimplementjusttheforwardversion,andyourprogram
doesnothingtoooddorunusual,everythingwillworkoutwell.Thereversenameisusedforspecialsituations
thatinvolveobjectsofmultipleclasses.
Pythonmakestwoattemptstolocateanappropriatemethodfunctionforanoperator. First,ittriesaclass
basedontheleft-handoperandusingthe“forward”name. Ifnosuitablespecialmethodisfound,ittries
thetheright-handoperand,usingthe“reverse”name.
322 Chapter 26. Creating or Extending Data T ypes
Building Skills in Python, Release 2.6.5
Additionally,wecanreturnthespecialvalue NotImplemented toindicatethataspeciﬁcversionofamethod
function is not implemented. This will cause Python to skip this method function and move on to an
alternative.
Considerthefollowing:
v1=MyClass( 10,20)
x=v1*14
y=28*v1
Bothlines2and3requireconversionsbetweenthebuilt-inintegertypeand MyClass. Forline2,theforward
nameisused. Theexpression‘ v1*14’isevaluatedasifitwas
x=v1.__mul__( 14)
Forline3,thereversenameisused. Theexpression‘ 28*v1’isevaluatedasifitwas
y=v1.__rmul__( 28)
Note:Python3andCoercion
Historically,asPythonhasevolved,sohavetheinsandoutsofargumentcoercionfromdatatypetodata
type. We’veomittedtherealdetailsofthecoercionrules.
InPython3.0,theoldernotionoftypecoercionandthe coerce()functionwillbedroppedaltogether,so
we’llfocusontheenduringfeaturesthatwillbepreserved.
Section3.4.8ofthe Python Language Reference coversthisinmoredetail;alongwiththecaveatthatthe
Python2ruleshavegottentoocomplex.
TheOperatorAlgorithm . Thealgorithmfordetermingwhathappenswith‘ x op y’isapproximatelyas
follows.
Notethataspecialmethodfunctioncanreturnthevalue NotImplemented . Thisindicatesthattheoperation
can’tworkdirectlyonlythevalues,andanotheroperationshouldbechosen. Therulesprovideforanumber
ofalternativeoperations,thisallowsaclasstobedesignedinawaythatwillcooperatesuccessfullywith
potentialfuturesubclasses.
1.Theexpression‘ string % anything ’isaspecialcaseandishandledﬁrst. Thisassuresusthatthe
valueof anythingisleftuntouchedbyanyotherrules. Generally, itisatupleoradictionary, and
shouldbeleftassuch.
2.If this is an augmented assignment statement (known as an in-place operator, e.g., ‘ variable $=
anything’)forsomeoperator,‘ $’.Iftheleftoperandimplements __iXopX__(),thenthat __iXopX__()
specialmethodisinvokedwithoutanycoercion. Thesein-placeoperatorspermityoutodoaneﬀicient
udpatetheleftoperandobjectinsteadofcreatinganewobject.
3.Asaspecialcase,thetwooperatorsare‘ superclass XopX subclass ’,thentherightoperand(the
subclass) __rXopX__()methodistriedﬁrst. Ifthisisnotimplementedorreturns NotImplemented
thenthetheleftoperand(thesuperclass) __XopX__()methodisused. Thisisdonesothatasubclass
cancompletelyoverridebinaryoperators,evenforbuilt-intypes.
4.For‘x op y’, ‘x.__op__(y)’istriedﬁrst. Ifthisisnotimplementedorreturns NotImplemented ,
‘y.__rop__(x) ’istriedsecond.
Thefollowingfunctionsarethe“forward”operations,usedtoimplementtheassociatedexpressions.
26.4. Numeric T ype Special Methods 323
Building Skills in Python, Release 2.6.5
methodfunction originalexpression
__add__(other)() ‘self + other ’
__sub__(other)() ‘self - other ’
__mul__(other)() ‘self * other ’
__div__(other)() ‘self / other ’classicalPython2division
__truediv__(other)() ‘self / other ’when‘from __future__ import division ’orPython3
__floordiv__(other)() ‘self // other ’
__mod__(other)() ‘self % other ’
__divmod__(other)() ‘divmod( self, other ) ’
__pow__(other [, modulo] )() ‘self ** other ’
__lshift__(other)() ‘self << other ’
__rshift__(other)() ‘self >> other ’
__and__(other)() ‘self & other ’
__or__(other)() ‘self | other ’
__xor__(other)() ‘self ^ other ’
Themethodfunctionsinthisgroupareusedtoresolveoperatorsbyattemptingthemusingareversedsense.
methodfunction originalexpression
__radd__(other)() ‘other + self ’
__rsub__(other)() ‘other - self ’
__rmul__(other)() ‘other * self ’
__rdiv__(other)() ‘other / self ’classicalPython2division
__rtruediv__(other)() ‘other / self ’when‘from __future__ import division ’orPython3
__rfloordiv__(other)() ‘other // self ’
__rmod__(other)() ‘other % self ’
__rdivmod__(other)() ‘divmod( other, self ) ’
__rpow__(other [,modulo])() ‘other ** self ’
__rlshift__(other)() ‘other << self ’
__rrshift__(other)() ‘other >> self ’
__rand__(other)() ‘other & self ’
__ror__(other)() ‘other | self ’
__rxor__(other)() ‘other ^ self ’
Themethodfunctionsinthisgroupareusedtoresolveoperatorsbyattemptingthemusinganincremental
sense.
methodfunction originalexpression
__iadd__(other)() ‘self += other ’
__isub__(other)() ‘self -= other ’
__imul__(other)() ‘self *= other ’
__idiv__(other)() ‘self /= other ’classicalPython2division
__itruediv__(other)() ‘self /= other ’when‘from __future__ import division ’orPython3
__ifloordiv__(other)() ‘self //= other ’
__imod__(other)() ‘self %= other ’
__ipow__(other [,modulo])() ‘self **= other ’
__ilshift__(other)() ‘self <<= other ’
__irshift__(other)() ‘self >>= other ’
__iand__(other)() ‘self &= other ’
__ior__(other)() ‘self |= other ’
__ixor__(other)() ‘self ^= other ’
Themethodfunctionsinthefollowinggroupimplementthebasicunaryoperators.
324 Chapter 26. Creating or Extending Data T ypes
Building Skills in Python, Release 2.6.5
methodfunction originalexpression
__neg__() ‘- self’
__pos__() ‘+ self’
__abs__() ‘abs( self )’
__invert__() ‘~ self’
__complex__() ‘complex( self ) ’
__int__() ‘int( self )’
__long__() ‘long( self ) ’
__float__() ‘float( self ) ’
__oct__() ‘oct( self )’
__hex__() ‘hex( self )’
__index__() ‘sequence[self] ’,usuallyaspartofaslicingoperationwhichrequiredintegers
RationalNumberExample . Considerasmallexampleofanumber-likeclass. The Rational Numbers
exercisein Classesdescribesthebasicstructureofaclasstohandlerationalmath,whereeverynumberis
representedasafraction. We’lladdsomeofthespecialmethodsrequiredtomakethisapropernumeric
type. We’llﬁnishthisintheexercises.
classRational (object):
def__init__ (self, num, denom =1L):
self.n=long(num)
self.d=long(denom)
def__add__(self, other ):
returnRational( self.n*other.d+other.n*self.d,
self.d*other.d )
def__str__(self):
return"%d/%d"%(self.n,self.d )
Thisclasshasenoughmethodsdeﬁnedtoallowustoaddfractionsasfollows:
>>>x=Rational( 3,4)
>>>y=Rational( 1,3)
>>>x+y
7/12
Inordertocompletethisclass,wewouldneedtoprovidemostoftherestofthebasicspecialmethodnames
(thereisalmostneveraneedtoprovideadeﬁnitionfor __del__()). Wewouldalsocompletethenumeric
specialmethodnames.
Additionally,wewouldhavetoprovidecorrectalgorithmsthatreducedfractions,plusanadditionalconver-
siontorespondwithamixednumberinsteadofanimproperfraction. We’llrevisitthisintheexercises.
ConversionsFromOtherTypes . Foryourclasstobeusedsuccessfully,yournewnumerictypeshould
workinconjunctionwithexistingPythontypes. Youwillneedtousethe isinstance() functiontoexamine
theargumentsandmakeappropriateconversions.
Considerthefollowingexpressions:
x=Rational( 22,7)
y=x+3
z=x+0.5
Ouroriginal __add__()methodassumedthatthe otherobjectisa Rationalobject. Butinthiscase,we’ve
provided intandfloatvaluesfor other. Generally, numericclassesmustbeimplementedwithtestsfor
variousotherdatatypesandappropriateconversions.
26.4. Numeric T ype Special Methods 325
Building Skills in Python, Release 2.6.5
Wehavetousethe isinstance() functiontoperformcheckslikethefollowing: ‘ isinstance( other, int
)’. ThisallowsustodetectthevariousPythonbuilt-intypes.
FunctionReferencevs. FunctionCall
Inthiscase,weareusingareferencetothe‘ int’function;wearenotevaluatingthe int()function.
Ifweincorrectlysaid‘ isinstance( other, int() ) ’,wewouldbeattemptingtoevaluatethe int()
functionwithoutprovidinganargument;thisisclearlyillegal.
Iftheresultof‘ isinstance( other, types ) ’isTrueinanyofthefollowingcases,sometypeofsimple
conversionshouldbedone,ifpossible.
•complex. ‘isinstance( other, complex ) ’. Youmaywanttoraiseanexceptionhere,sinceit’shard
toseehowtomakerationalfractionsandcomplexnumbersconformable. Ifthisisacommonsituation
inyourapplication,youmightneedtowriteanevenmoresophisticatedclassthatimplementscomplex
numbersasakindofrationalfraction. Anotherchoiceistowriteaversionofthe abs()functionof
thecomplexnumber,whichcreatesaproperrationalfractionforthecomplexmagnitudeofthegiven
value.
•ﬂoat. ‘isinstance( other, float ) ’. Onechoiceistotruncatethevalueof othertolong,using
thebuilt-in long()functionandtreatitasawholenumber,theotherchoiceistodetermineafraction
thatapproximatestheﬂoatingpointvalue.
•int or long. ‘isinstance( other, (int,long) ) ’. Any of these means that the othervalue is
clearlythenumeratorofafraction,withadenominatorof1.
•string. ‘isinstance( other, basestring ) ’. Wemighttrytoconvertthe othervaluetoa long
usingthebuilt-in long()function. Iftheconversionfails,wecouldtrya float. Theexceptionthat’s
thrownfromanyoftheattemptedconversionswillmaketheerrorobvious.
Thebasestringtype,bytheway,isthesuperclassforASCIIstrings( str)andUnicodestrings(
unicode).
•Rational. ‘isinstance( other, Rational ) ’. Thisindicatesthatthe othervalueisaninstanceof
ourRationalclass;wecandotheprocessingasexpected,knowingthattheobjecthasallthemethods
andattributesweneed.
Hereisaversionof __sub__()withanexampleoftypechecking. Ifthe otherargumentisaninstanceof
theclass Rational, wecanperformthesubtractoperation. Otherwise, weattempttoconvertthe other
argumenttoaninstanceof Rationalandattemptthesubtractionbetweentwo Rationals.
def__sub__(self, other ):
ifisinstance (other,Rational):
returnRational( self.n*other.d-other.n*self.d,self.d*other.d )
else:
returnself-Rational( long(other))
Analternativetothelastlineofcodeisthefollowing.
returnRational( self.n-long(other)*self.d,self.d )
While this second version performs somewhat quicker, it expresses the basic rational addition algorithm
twice,onceinthe if:suiteandagaininthe else:suite. Aprincipleofobjectorientedprogrammingisto
maximizereuseandminimizerestatinganalgorithm. Mypreferenceistostatethealgorithmexactlyonce
andreuseitasmuchaspossible.
Reverse Operators . In many cases, Python will reverse the two operands, and use a function like
__rsub__()or__rdiv__(). Forexample:
326 Chapter 26. Creating or Extending Data T ypes
Building Skills in Python, Release 2.6.5
def__rsub__ (self, other ):
ifisinstance (other,Rational):
returnRational( other .n*self.d-self.n*other.d,
self.d*other.d )
else:
returnRational( long(other)) -self
Youcanexplorethisbehaviorwithshorttestprogramslikethefollowing:
x=Rational( 3,4)
printx-5
print5-x
26.5 Collection Special Method Names
Thevariouscollectionspecialmethodnamescanbeorganizedseveraldiﬀerentways. Above,in Semantics of
Special Methods weclaimedthatabunchofspecialmethodnameswererelatedto“container”and“iterator”
behavior. Thesecategoriesfromthelanguagereferencedon’ttellthewholestory.
Pythongivesusadditionaltoolstocreateclassesthatbehavelikethebuilt-incollectionclasses. Wecanuse
theabstractbaseclassesinthe collectionsmoduletojump-startourdeﬁnitionofnewtypesofcollections.
Eachabstractbaseclass(ABC)inthe collectionsmoduleprovidesacommonfeature(orsetoffeatures)
withthemethodfunctionsthatarerequiredtoimplementthatfeature. Insomecases,thefeaturesbuildon
eachother,andanumberofmethodfunctionsarerequired.
SinceeachoftheABCclassesis abstract,they’remissingtheimplementationofoneormoremethods. To
usetheseclasses,you’llhavetoprovidethenecessarymethods.
Oneveryimportantconsequenceofusingthecollectionsbaseclassesisthatitcreatesstandardizednames
forthevariousfeatures. Thissimpliﬁestheassertionsthatmightberequiredwhencheckingtheargument
valuestoafunctionormethodfunction.
Formoreinformation,seesection9.3.1ofthePythonLibraryReference,aswellas PEP3119.
SomeFoundationalDeﬁnitions . We’lllookatsomefoundationalabstractclassesﬁrst. Eachofthese
deﬁnesasmallgroupoffundamentalfeatures. We’llusethisinthenextsectiontobuildmoresophisticated
classes.
We’lllookatthefollowing:
•Container. Whatmakesacontainer? The intestformembership. Extendthisclasstomakeobjects
ofyourclassacontainer.
•Hashable. This makessomething usableas a keyfor mappings orsets. Extend this classto make
objectsofyourclassahashablekey.
•Sized. Thismakessomethingreporthowmanyelementsithas. Extendthisclasstomakeobjectsof
yourclassrespondtothe len()functionwithasize.
•Callable. Extendthisclasstomakeobjectsofyourclassbehavelikeafunction.
classContainer ()
TobeaContainerobject,theclassmustprovidethe __contains__() method.
__contains__ (self, value )
Returntrueifthevalueisinthecontainer.
26.5. Collection Special Method Names 327
Building Skills in Python, Release 2.6.5
Thisexampleisalittlesilly,butitshowsatuple-likecontainerthatsecretlyaddsanadditionalitem.
class BonusContainer( collections.Container ):
def __init__( self, \*members ):
self.members= members + ( 'SecretKey', )
def __contains__( self, value ):
return value in self.members
classHashable ()
TobeaHashableobject,theclassmustprovidethe __hash__()method. Thisisarequirementfor
anyobjectwemightwanttouseasakeytoadictionary.
__hash__ (self)
ReturnahashforthisHashableobject. Theeasiestwasytocomputeahashistosumethehashes
ofthevariouselements.
Here’sanexampleofaclassthatcreatesahash,suitableforuseinadictionary.
classStockBlock ( collections .Hashable ):
def__init__ (self, name, price, shares ):
self.name=name
self.price=price
self.shares=shares
self._hash=hash(self.name)+hash(self.price)+hash(self.shares)
def__hash__ (self):
returnself._hash
classSized()
TobeaSizedobject,theclassmustprovidethe __len__()method.
__len__(self)
Returnthesizeofthiscollection. Thisisgenerallyunderstoodtobethenunberofitemsinthe
collection.
classCallable ()
TobeaCallableobject,theclassmustproviethe __call__()method.
Functionsarecallableobjects,butwecanalsodeﬁneaclassthatcreatescallableobjects,similartoa
functiondeﬁnition.
__call__ (self, parameters... )
Thismethodiscalledwhentheobjectisusedasifitwereafunction. Wemightcreateanduse
callableobjectwithsomethinglikethefollowing.
callable_object =MyCallable()
callable_object( argument, values )
Here’sanexampleofacallableclassdeﬁnition. Wecanusethistocreatecallableobjectsthatare–
essentially–functions.
classTimesX( collections .Callable ):
def__init__ (self, factor ):
self.factor=factor
def__call__ (self, argument ):
returnargument *self.factor
Wecanusethisclasstocreatecallableobjectsasfollows:
328 Chapter 26. Creating or Extending Data T ypes
Building Skills in Python, Release 2.6.5
>>>times_2=TimesX(2)
>>>times_2( 5)
10
>>>importmath
>>>times_pi =TimesX(math .pi)
>>>times_pi( 3*3)
28.274333882308138
1.Wecreatedacallableobject, times_2,asaninstanceof TimesXwithafactorof2.
2.Weappliedour times_2functiontoavalueof 5.
3.Wecreatedacallableobject, times_pi,asaninstanceof TimesXwithafactorof math.pi.
4.Weappliedour times_ifunctiontoavalueof‘ 3*3’.
26.6 Collection Special Method Names for Iterators and Iterable
Thefollowing collectionclassdeﬁnitionsintroducespecialmethodnamestomakeyourclassrespondto
theiteratorprotocolsusedbythe forstatement.
We’lllookatdeﬁningiterablecontainsanditeratorsindepthin Col lection Special Method Names for Iterators
and Iterable.
classIterable ()
TobeanIterableobject,theclassmustprovidethe __iter__()method.
__iter__ (self)
ReturnsanIteratorforthisIterableobject.
Generally,thiswilllooklikethefollowing.
importcollections
classMyIterable ( collections .Iterable ):
# all the other methods of the MyIterable collection
def__iter__ (self):
returnMyIteratorClass( self)
Thismeansthatwehaveaclassthatextends collections.Iterator whichwillcontroltheiteration
throughthegiven MyIterablecollection.
Thesetwoclassesaresometimescalled“friends”,sincethetheIteratoroftenhasdeeperaccesstothe
Iterable.
classIterator ()
TobeanIteratorobject,theclassmustprovidethe __next__()method. Additionally,anIteratoris
itselfIterable,soitmustprovidea __iter__()method.
Generally,the __iter__()methodjustdoes‘ return self’.
__next__ (self)
Advance the iterator and either return the next object from the iterable container or raise an
StopIteration exception.
26.6. Collection Special Method Names for Iterators and Iterable 329
Building Skills in Python, Release 2.6.5
Important: Python3
ThetheIteratormethodnameof __next__()isfocusedonPython3.
ForPython2compatability,youmightwanttoalsodeﬁned next().
defnext(self):
returnself.__next__()
__iter__ (self)
Additionallyaniteratorwillalsoprovideadeﬁnitionofthe __iter__()specialmethodname. This
willsimplyreturntheiteratoritself(‘ return self’). Thispreventssmallproblemswithredundant
callstothe iter()built-infunction.
Notetherearestillmorefeaturesofiterators. ThePythonEnhancementProposal( PEP342)describes
someconsiderablymoreadvancedfeaturesofiteratorsandthe yieldstatement.
26.7 Collection Special Method Names for Sequences
Thefollowing collectionclassdeﬁnitionsintroducespecialmethodnamestomakeyourclassbehavelike
aSequence( tuple)oraMutableSequence( list).
classSequence ()
ASequenceobject(essentiallyatuple)isbasedonthreemorefundamentaldeﬁnitions: Sized,Iterable
and Container. As such, the class must deﬁne a number of methods including __contains__() ,
__len__(),__iter__().
ASequencemustdeﬁnea __getitem__() method.
Additionally,methodslike __reversed__() ,index()andcount()arealsosensibleforthisclass. The
collections.Sequence providesdefaultsforthesemethods.
Since we’re talking about an object that’s like a tuple or frozenset, there aren’t any methods for
updatingormutatingthecontents.
Notealso,thatHashableisn’tpartofaSequence. YoumightwanttoaddHashableifyourSequence
cansupportaﬁxedhashvalue,suitableforuseasdictionarykey.
Thisclassprovidesadefaultimplementationof __iter__()thatisbasedonusingarangeofvalues
andcalling __getitem__() .
__getitem__ (self, index )
ReturnthevalueatthegivenindexintheSequence.
The__getitem__() methodfunctionshouldbepreparedforthe keytobeeitherasimpleintegerora
sliceobject. Whencalledwithaninteger,itreturnsanelementofthesequenceorraises IndexError.
Asliceisasimpleobjectwiththreeattributes: start,stopandstep. Whencalledwithaslice
object,itreturnsanotherSequence.
Thefollowingexamplesshowcommonslicesituations.
•The expression ‘ someSequence[1:5] ’ is transformed to ‘ someSequence.__getitem__(
slice(1,5) ) ’. The sliceobject has the following attribute values: key.start= 1,
key.stop=5,key.step=None.
•The expression ‘ someSequence[2:8:2] ’ is transformed to ‘ someSequence.__getitem__(
slice(2,8,2) ) ’. Thesliceobjecthasthefollowingattributevalues: key.start=2,key.stop
=8,key.step=2.
330 Chapter 26. Creating or Extending Data T ypes
Building Skills in Python, Release 2.6.5
•Theexpression‘ someSequence[1:3,5:8] ’istransformedinto‘ someSequence.__getitem__( (
slice(1,3), slice(5,8) ) ) ’. The keyargumentwillbeatupleof sliceobjects.
Here’sanexampleofasimpleclassthatbehaveslikeatuple,withsomerestrictions.
importcollections
classPoint( collections .Sequence ):
def__init__ (self, x, y ):
self.x=x
self.y=y
def__len__(self):
return2
def__contains__ (self, key ):
returnself.x==keyorself.y==key
def__getitem__ (self, position ):
ifposition in(0,-2):
returnself.x
elifposition in(1,-1):
returnself.y
else:
raiseIndexError
classMutableSequence ()
AMutableSequenceextedsaSequence.ItrequiresalloftheSequencemethodstobedeﬁned.Plusithas
someadditionalmethods.Tobemutable,itmusthaveawaytoupdateandremoveitems.Themethods
__setitem__() ,__delitem__() ,andinsert()mustbedeﬁnedtoupdateaMutableSequence.
Thereareofcourse,numerousadditionalmethodsthatareprovidedbydefault. Anyoftheoptional
methodsfromSequence, plus append(),reverse(),extend(),pop(),remove(), and__iadd__().
Youcanoverridethesedeﬁnitionsifyouwanttoimprovetheirperformance.
__getitem__ (self, index )
ReturnthevalueatthegivenindexintheSequence.
__setitem__ (self, index, value )
ReplacethevalueatthegivenindexintheSequence
__delitem__ (self, index, value )
RemovethevalueatthegivenindexintheSequence.
The__getitem__() ,__setitem__() and__delitem__() methodfunctionshouldbepreparedforthe index
tobeeitherasimpleinteger,a sliceobject,oratupleof sliceobjects.
insert(self, index, value )
InsertanewvaluebeforethegivenindexintheSequence.
26.8 Collection Special Method Names for Sets
Thefollowing collectionclassdeﬁnitionsintroducespecialmethodnamestomakeyourclassbehavelike
aSet(frozenset)oraMutableSet( set).
classSet()
ASet,likeabasicSequence,isbasedonthreemorefundamentaldeﬁnitions:Sized,Iterable,Container.
Thebasic collections.Set isanimmutableset;it’sthebasisforthebuilt-in frozenset. Amutable
setwillbuildonthisdeﬁnition.
As such, the class must deﬁne a number of methods including __contains__() ,__len__(),
__iter__().
26.8. Collection Special Method Names for Sets 331
Building Skills in Python, Release 2.6.5
Since,generally,asetsimplychecksformembership,wedon’tneedtoomuchmore.
The comparison operations ( __le__(),__lt__(),__eq__(),__ne__(),__gt__(),__ge__(),
__and__(),__or__(),__sub__(),__xor__(),andisdisjoint() )havedefaultdeﬁnitions. Youcan
overridetheseforperformancereasons.
classMutableSet ()
A MutableSet extends a Set. It requires all of the Set methods to be deﬁned. Plus it has some
additionalmethods. Tobemutable,itmusthavethemethods add()anddiscard()toupdatethe
MutableSet. The collections.MutableSet isisthebasisforthebuilt-in set.
Thecollections.MutableSet providesthefollowingmethodfunctions clear(),pop(),remove().
Thesearebasedonoursupplied add()anddiscard()
Also, the following operators are provided so that a MutableSet can be updated with another set:
__ior__(),__iand__(),__ixor__(),and__isub__().
add(self, item )
Updatesthesettoaddtheitem,ifitwasnotalreadyamember.
discard(self, item )
Updatesthesettoremovetheitem,ifitwasamember. Doesnothingifthememberwasnotalready
intheset.
26.9 Collection Special Method Names for Mappings
Thefollowing collectionclassdeﬁnitionsintroducespecialmethodnamestomakeyourclassbehavelike
aMappingoraMutableMapping( dict).
classMapping()
A Mapping, like a basic Sequence, is based on three more fundamental deﬁnitions: Sized, Iterable,
Container. Thebasic collections.Mapping isthedeﬁnitionofanimmutablemapping. Amutable
mapping(likea dict)willbuildonthisdeﬁnition.
As such, the class must deﬁne a number of methods including __contains__() ,__len__(),
__iter__().
AMappingmustdeﬁnea __getitem__() method.
Additionally, default methods will be provided for __contains__() ,keys(),items(),values(),
get(),__eq__(), and__ne__(). Theequalitytestcomparesthelistcreatedby items()toassure
thateachitemtuplehasthesamekeyandvalue.
__getitem__ (self, key)
Returnsthevaluecorrespondingtokey,orraises KeyError.
classMutableMapping ()
AMutableMappingextedsaMapping. ItrequiresalloftheSetmethodstobedeﬁned. Plusithas
someadditionalmethods. Tobemutable,themethods __setitem__() and__setitem__() mustbe
deﬁned.
Also,methodsareprovidedfor pop(),popitem(),clear(),update(),andsetdefault()
__getitem__ (self, key)
Returnsthevaluecorrespondingtokey,orraises KeyError.
Acollections.defaultdict doesnotraiseanexception. Forkeysthatdon’texist,thisversion
ofaMutableMappingcreatesadefaultvalueandthenreturnsthat.
332 Chapter 26. Creating or Extending Data T ypes
Building Skills in Python, Release 2.6.5
__setitem__ (self, key, value )
Putsanitemintothemapping;theitemhasthegivenkeyandvalue. Ifthekeydidnotexistit
isadded. Ifthekeydidexist,thepreviousvalueisreplaced.
__delitem__ (self, key)
Removesanitemfromthemapping,orraisesa KeyErroriftheitemdidnotexist.
Beyondthesetwobaseclasses,therearesomeadditionalclassesthathelpyoutodeﬁnea“view”that’sbased
onamapping.
classKeysView ()
AnobjectofthisclassisbuiltfromanexistingMapping,andbehaveslikeaSetthatcontainsthekeys
fromtheexstingMapping.
ThemethodsfromSized( __len__())andSet( __contains__() and__iter__())aredeﬁned.
classValuesView ()
An object of this class is built from an existing Mapping, and behaves likea Set that contains the
valuesfromtheexstingMapping.
UnlikeaproperSet,however,theremayappeartobemultiplecopiesofagivenvalue.
ThemethodsfromSized( __len__())andSet( __contains__() and__iter__())aredeﬁned.
classItemsView ()
An object of this class is built from an existing Mapping, and behaves like a Set that contains a
sequenceof(key,value)tuplesfromtheexstingMapping.
ThemethodsfromSized( __len__())andSet( __contains__() and__iter__())aredeﬁned.
Notethat __contains__() checksforthepresenceofa(key,value)2-tuple.
26.10 Mapping Example
Animmutablemappingisakindoftranslationfromkeytovalue. Themappingisﬁxedwhentheobjectis
createdandcannotbeupdated.
Here’sanexampleofasmallclasstodeﬁneanimmutablemappingthatwe’recallinga Translation.
Notethatourimmutablemappinghappenstohaveaplainold dictunderthehood.
classTranslation ( collections .Mapping ):
def__init__ (self,**kw ):
self._map=kw
def__len__(self):
returnlen(self._map)
def__contains__ (self, key ):
returnkeyinself._map
def__iter__ (self):
returniter(self._map)
def__getitem__ (self, key ):
returnself._map[key]
Here’satranscriptofusingour Translationclasstocreateanobjectthattranslatessomenamestonumeric
values.
>>>c=Translation( red =0, green=1, blue=2)
>>>c['red']
0
26.10. Mapping Example 333
Building Skills in Python, Release 2.6.5
>>>c['white']
Traceback (most recent call last):
File"<stdin>" , line1, in <module>
File"<stdin>" , line11, in __getitem__
KeyError : 'white'
>>>c['black']=3
Traceback (most recent call last):
File"<stdin>" , line1, in <module>
TypeError : 'Translation' object does not support item assignment
>>>fornminc:
... printnm
...
blue
green
red
26.11 Iterator Examples
Thebuilt-insequencetypes( list,tuple,string)allproduceiteratorobjectsforusebythe forstatement.
Theset,frozenset,dictandfileobjectsalsoproduceaniterator.
In addition to deﬁning ordinary generator methods by using the yieldstatement, your classes can also
produce iterator objects. This can make a program slightly simpler to read by assuring that loops are
simple,obviousforstatements.
EasyIterators . Whenwritingacollection-likeclass,youcansimplywritemethodfunctionsthatinclude
theyieldstatement.
class Deck( object ):
def __init__( self ):
# Create the self.cards container.
def deal( self ):
self.shuffle()
for c in self.cards:
yield c
Thedeal()methodisaniterator. Wecanusethisiteratorasfollows.
d=Deck()
forcardind.deal():
printc
Thisisthesametechniquecoveredin Iterators and Generators ,exceptusedwithmethodfunctionsinstead
ofstand-alonefunctions.
Unique Iterator Classes . Generally, an iterator is an object we’ve designed to help us use a more
complexcontainer. Consequently,thecontainerwillusuallycontainafactorymethodwhichcreatesiterators
associatedwiththecontainer.Acontainerwillimplementthespecialmethod __iter__()toemitaniterator
properlyconﬁguredtohandlethecontainer.
Whenweevaluate‘ iter( someList ) ’,theobject, someList,mustreturnaniteratorobjectreadytobe
usedwithaforstatement. Thewaythisworksisthe iter()functionevaluatesthe __iter__()method
functionoftheobject, someList. Theobjects __iter__()methodfunctioncreatestheobjecttobeusedas
aniterator. We’lldosomethingsimilarinourownclasses.
334 Chapter 26. Creating or Extending Data T ypes
Building Skills in Python, Release 2.6.5
In the following example classes, we’ll create a class which wraps a listand provides and a specialized
iteratorthatyieldsonlynon-zerovaluesofthecollection.
import collections
class DataSamples( collections.Iterable, collections.Sized ):
def __init__( self, aList=None ):
self.values= [] if aList is None or aList
def __iter__( self ):
return NonZeroIter( self )
def __len__( self ):
return len( self.values )
def __getitem__( self, index ):
return self.values[index]
1.Whenweinitializea DataSamplesinstance,wesaveanyprovidedsequenceofvalues.Thisclassbehaves
likeacollection. Wehaven’tprovidedallofthemethods,however,inordertokeeptheexampleshort.
Clearly,tobe list-like,we’llneedtoprovidean append()method.
2.Whenweevaluatethe iter()functionfora DataSamplesobject,the DataSamplesobjectwillcreatea
new,initialized NonZeroIter. Notethatweprovidethe DataSamplesobjecttothenew NonZeroIter,
thisallowstheiteratortoprocessthecollectionproperly.
classNonZeroIter ( collections .Iterator ):
def__init__ (self, aDataSamples ):
self.ds=aDataSamples
self.pos=-1
def__next__ (self):
whileself.pos+1!=len(self.ds)andself.ds[self.pos+1]==0:
self.pos+=1
ifself.pos+1==len(self.ds ):
raiseStopIteration
self.pos+=1
returnself.ds[self.pos]
defnext(self):
returnself.__next__()
def__iter__ (self):
returnself
1.When initialized, the NonZeroItersaves the collection that it works with. It also sets it’s current
state;inthisinstance,wehave possetto-1,justpriortotheelementwe’llreturn.
2.Thenext()functionoftheiteratorlocatesthenextnon-zerovalue. Ifthereisnonextvalueorno
nextnon-zerovalue,itraises StopIteration tonotifytheforstatement. Otherwise,itreturnsthe
nextnon-zerovalue. Itupdatesitsstatetoreﬂectthevaluejustreturned.
3.The__iter__()functionoftheiteratortypicallyreturns self.
Wecanmakeuseofthisiteratorasfollows.
ds=DataSamples( [ 0,1,2,0,3,0] )
forvalueinds:
printvalue
Theforstatementcalls‘ iter(ds)’implicitly,whichcalls‘ ds.__iter__() ’,whichcreatesthe NonZeroIter
instance. Theforstatement then calls the next()method of this iterator object to get the non-zero
valuesfromthe DataSamplesobject. Whentheiteratorﬁnallyraisesthe StopIteration exception,thefor
statementﬁnishesnormally.
26.11. Iterator Examples 335
Building Skills in Python, Release 2.6.5
26.12 Extending Built-In Classes
WecanextendallofPython’sbuilt-inclasses. Thisallowsustoaddormodifyfeaturesofthedatatypes
thatcomewithPython. Thismaysaveusfromhavingtobuildaprogramfromscratch.
Here’saquickexampleofaclasswhichextendsthebuilt-in listclassbyaddinganewmethod.
>>>classSumList(list):
... defsum(self):
... returnsum(self)
...
>>>x=SumList( [ 1,3,4] )
>>>x
[1, 3, 4]
>>>x.sum()
8
>>>x.append( 5)
>>>x.sum()
13
Clearly,wecanextendaclasslike listwithadditiona;methodsforvariousstatisticalcalculations. Each
functioncanbeaddedaseasilyasthe SumList.sum() functionintheaboveexample.
Here’s an exmaple of extending a dictionary with simple statistical functions. We based on dictionary
oncollections.defaultdict because it makes it very simple to create a frequency table. See Default
Dictionariesformoreinformationondefaultdictionaries.
>>>fromcollections importdefaultdict
>>>classStatDict ( defaultdict ):
... def__init__ (self, valueList =None):
... super( StatDict, self).__init__( int, valueList )
... defsum(self):
... returnsum( k*self[k]forkinself)
...
>>>x=StatDict( [ ( 2,1), (3,1), (4,2) ] )
>>>x.sum()
13
>>>x[5]+=1
>>>x.sum()
18
>>>x[5]+=1
>>>x.sum()
23
Each time we increment the frequency of a numeric value, the defaultdictwill add the integer count
automatically.
26.13 Special Method Name Exercises
26.13.1 Geometric Points
A2-dimensionalpointisacoordinatepair,anxandyvalue. Ifwelimittherangetotherange0to2**16,
wecandoafewextraoperationsquickly.
336 Chapter 26. Creating or Extending Data T ypes
Building Skills in Python, Release 2.6.5
Developthebasicroutinesfor __init__(),__repr__(),__str__(). The__hash__()functioncansimply
combinexandyvia‘ x<<16+y’.
Developatestroutinethatcreatesasequenceofpoints.
Also,besuretodevelopatestthatusespointsaskeysinadictionary.
26.13.2 Rational Numbers
Finishthe Rationalnumberclassbyaddingalloftherequiredspecialmethods. The Rational Numbers
exercisein Classesdescribesthebasicstructureofaclasstohandlerationalmath,whereeverynumberis
representedasafraction.
26.13.3 Currency and the Cash Drawer
Currencycomesindenominations. Forinstance, UScurrencycomesin$100, $50, $20, $10, $5, $1, $.50,
$.25,$.10,$.05,and$.01denominations. ParkerBrothersMonopoly™gamehascurrencyin500,100,50,
20,10,5and1. Priorto1971,Englishcurrencyhad£50,£20,£10,£5,£1,shillings(1/12ofapound)and
pence(1/20ofashilling). Anamountofmoneycanberepresentedasanappropriatetupleofintegers,each
ofwhichrepresentsthespeciﬁcnumbersofeachdenomination. Forinstance,onerepresentationfor$12.98
inUScurrencyis‘ (0, 0, 0, 1, 0, 2, 0, 3, 2, 0, 3) ’.
Eachsubclassof Currencyhasaspeciﬁcmixofdenominations. WemightdeﬁnesubclassesforUScurrency,
MonopolycurrencyoroldEnglishcurrency. Theseclasseswoulddiﬀerinthelistofcurrencies.
Anobjectofclasscurrencywouldbecreatedwithaspeciﬁcmixofdenominatioons. Thesuperclassshould
include operations to add and subtract Currencyobjects. An __iadd__( currency )() method, for
examplewouldaddthedenominationsin currencytothisobject’svariousdenominations. An __isub__(
currency )() method,forexamplewouldsubtractthedenominationsin currencytothisobject’svarious
denominations; in the event of attempting to subtract more than is available, the object would raise an
exception.
Besuretodeﬁnethevariousconversionstoﬂoat,intandlongsothatthetotalvalueofthecollectionof
billsandcoinscanbereportedeasily.
Aninterestingproblemistotranslateadecimalamountintoappropriatecurrency. Notethatnumberslike
0.10don’thaveapreciseﬂoating-pointrepresentation;ﬂoatingpointnumbersarebasedonpowersof2,and
0.10canonlybeapproximatedbyaﬁnite-precisionbinaryfraction. ForUScurrency,it’sbesttoworkin
pennies,representing$1.00as 100.
Developamethodwhichwilltranslateagiventargetamount, t,intoanappropriatemixtureofcurrency
denominations. Inthiscase,wecaniteratethroughthedenominationsfromlargesttosmallest,determining
thelargestquantity, qofadenomination, d,suchthat q×d≤t. Thisversiondoesn’tdependonthecurrent
valueofthe Currencyobject.
MoreAdancedSolution . Amoreadvancedversionistocreatea Currencyobjectwithagivenvalue;this
wouldrepresentthemoneyinacashdrawer,forexample. Amethodofthisobjectwouldmakeanamount
ofmoneyfromonlytheavailablecurrencyinthecashdrawer,orraiseanexceptionifitcouldnotbedone.
In this case, we iterate through the denominations, d, from largest to smallest, determining the largest
quantity, q,suchthat q×d≤t,consistentwithavailablemoneyinthecashdrawer. Ifwedon’thaveenough
ofagivendenomination,itmeansthatwewillbeusingmoreofthesmallerdenominations.
Onebasictestcaseistocreateacurrencyobjectwithalargeamountofmoneyavailableformakingchange.
Inthefollowingexample,wecreateacashdrawerwith$804.55. Weacceptapaymentof$10as1$5,4$1,
3$.25,2$.10and1$.05. Thenweacceptapaymentof$20,forabillof$15.24,meaningweneedtopay
out$4.76inchange.
26.13. Special Method Name Exercises 337
Building Skills in Python, Release 2.6.5
drawer=USCurrency( ( 5,2,6,5,5,5,5,5,5,5,5) )
drawer+=USCurrency(( 0,0,0,0,1,4,0,3,2,1,0))
drawer+=USCurrency(( 0,0,1,0,0,0,0,0,0,0,0))
drawer.payMoney( 4.76)
Interestingly,ifyouhave$186.91(oneofeachbillandcoin)youcanﬁnditalmostimpossibletomakechange.
Confrontedwithimpossiblesituations,thisclassshouldraisean UnableToMakeChange exception.
26.13.4 Sequences with Statistical Methods
Createasequenceclass, StatSeqthatcanholdasequenceofdatavalues. Thisclassmustbeasubclass
ofcollections.MutableSequence and deﬁne all of the usual sequence operators, including __add__(),
__radd__(),__iadd__(),butnot __mul__().
The__init__()function should accept a sequence to initialize the collection. The various __add__()
functions should append the values from a StatSeqinstance as well as from any subclass of
collections.Sequence (whichincludes listandtuple.)
Mostimportantly,thisclasssholddeﬁnetheusualstatisticalfunctionslikemeanandstandarddeviation,
described in the exercises after T uples,Sequence Processing F unctions: map(), ﬁlter() and reduce() and
Sample Class with Statistical Methods in Classes.
Sincethisclasscanbeusedeverywhereasequenceisused,interfaceshouldmatchthatofbuilt-insequences,
butextrafeaturesarenowreadilyavailable. Foratest,somethinglikethefollowingshouldbeused:
importrandom
samples =StatSeq( [ random .randrange( 6)foriinrange(100) ] )
printsamples.mean()
s2=StatSeq()
foriinrange(100):
ss.append( random .randrange( 6) )
# Also allow s2 += [ random.randrange(6) ]
prints2.mean()
Therearetwoapproachestothis,bothofwhichhaveprosandcons.
•Deﬁneasubclassof listwithafewadditionalmethods. Thiswillbedeﬁnedas‘ class StatSeq(
list ):’.
•Deﬁneanewclass(asubclassof object)thatcontainsaninternallist,andprovidesallofthesequence
specialmethods. Some(likeappend)willbedelegatedtotheinternallistobject. Others(likemean)
willbeperformedbytheStatSeqclassitself. Thiswillbedeﬁnedas‘ class StatSeq( object ): ’.
Notethatthevalueof mean()doesnothavetobecomputedwhenitisrequested. Itispossibletosimply
track the changing sum of the sequence and length of the sequence during changes to the values of the
sequence.
Thesumandlengtharebothsettozeroby __init__(). Thesumandlengthareincrementedbyevery
__add__(),append(),insert(). They are decremented by pop(),remove(), and and __delitem__() .
Finally,there’satwo-partchangefor __setitem__() : theoldvalueisdeductedandthenewvalueisadded.
Thiswaythecalculationofmeanissimplyadivisionoperation.
Keepingtrackofsumsandcountscanalsooptimizemodeandstandarddeviation. Asimilaroptimizationfor
medianisparticularlyinteresting,asitrequiresthatthesampledataisretainedbythisclassinsortedorder.
Thismeansthateachinsertmustpreservethesorteddatasetsothatthemedianvaluecanberetrieved
withoutﬁrstsortingtheentiresequenceofdata. Youcanusethe bisectmoduletodothis.
338 Chapter 26. Creating or Extending Data T ypes
Building Skills in Python, Release 2.6.5
Thereareanumberofalgorithmsformaintainingthedatasetinsortedorder. YoucanrefertoKnuth’s
The Art of Computer Programming [Knuth73],andCormen,Leiserson,Rivest Introduction to Algorithms
[Cormen90]whichcoverthistopiccompletely.
26.13.5 Chessboard Locations
Achessboardcanbethoughtofasamappingfromlocationnamestopieces. Therearetwocommonindexing
schemesfromchessboards: algebraicanddescriptive. Inalgebraicnotationthelocationshavearank-ﬁle
addressofanumberandaletter. Indescriptivenotationtheﬁleisgivenbythestartingpiece’sﬁle,rank
andplayer’scolor.
See Chess Game Notation foranextensiontothisexercise.
Thealgebraicdescriptionofthechessboardhas ﬁlesfroma-hgoingfromwhite’slefttoright. Ithas ranks
from1-8goingfromwhite’sside(1)toblack’sside(8). Board’sarealmostalwaysshownwithpositiona1
inthelowerleft-handcornerandh8intheupperright,whitestartsatthebottomofthepictureandblack
startsatthetop.
In addition to the simpliﬁed algebraic notation, there is also a descriptive notation, which reﬂects each
player’suniquepointofview. Thedescriptiveboardhasaqueen’sside(white’sleft,ﬁlesa-d)andaking’s
side(white’sright,ﬁlese-h). Eachrankisnumberedstartingfromtheplayer. Whitehasranks1-8going
fromwhitetoblack. Black,atthesametimeasranks1-8goingbacktowardwhite. Eachofthe64spaces
ontheboardhastwonames,onefromwhite’spointofviewandonefromblack’s.
Translation from descriptive to algebraic is straight-forward. Given the player’s color and a descriptive
location,itcanbetranslatedtoanalgebraiclocation. Theﬁlestranslatethrougharelativelysimplelookup
totransformQRtoa,QKttob,QBtoc,Qtod,Ktoe,KBtof,KKttog,KRtoh. Therankstranslate
throughasimplecalculation: white’sranksarealreadyinalgebraicnotation;forblack’srankof r,9−ris
thealgebraiclocation.
Createaclasstorepresentachessboard. You’llneedtosupportthespecialfunctionnamestomakethis
a kind of mapping. The __getitem__() function will locate the contents of a space on the board. The
__setitem__() functionwillplaceapieceataspaceontheboard. Ifthe keytoeitherfunctionisalgebraic
(2characters,lowercaseﬁlefroma-handdigitrankfrom1-8),locatethepositionontheboard. Ifthe key
isnotalgebraic,itshouldbetranslatedtoalgebraic.
The codes for pieces include the piece name and color. Piece names are traditionally “p” or nothing for
pawns, “R” for rook, “N” for knight, “B” for bishop, “Q” for queen and “K” for king. Pawns would be
simplythecolorcode“w”or“b”. Otherpieceswouldhavetwo-characternames: “Rb”forablackrook,
“Qw”forthewhitequeen.
The__init__()methodshouldsettheboardinthestandardstartingposition:
26.13. Special Method Name Exercises 339
Building Skills in Python, Release 2.6.5
Table26.1:ChessStartingPosition
piece algebraicdescriptive piececode
whiterooks a1,h1wQR1,wKR1 Rw
whiteknights b1,g1wQKt1,wKKt1 Nw
whitebishop c1,f1wQB1,wKB Bw
whitequeen d1wQ1 Qw
whiteking e1wK1 Kw
whitepawns a2-h2wQR2-wKR2 w
blackrooks a8,h8bQR1,bKR1 Rb
blackknights b8,g8bQKt1,bKKt1 Nb
blackbishops c8,f8bQB1,bKB1 Bb
blackqueen d8bQ1 Qb
blackking e8bK1 Kb
blackpawns a7-a7bQR2-bKR2 b
Here’sasampleﬁve-turngame. Itincludesafulldescriptionofeachmove,andincludestheabbreviated
chessgamenotation.
1.whitepawnfrome2toe4;K2toK5
blackpawnfrome7toe5;K2toK5
2.whiteknightfromg1tof3;KKt1toKB3
blackpawnfromd7tod6;Q2toQ3
3.whitepawnfromd2tod4;Q2toQ4
blackbishopfromc8tog4;QB1toKKt5
4.whitepawnatd4takespawnate5;Q4toK5
blackbishopatg4takesknightatf3;KKt5toKB6
5.whiteQatd1takesbishopatf3;Q1toKB3
blackpawnatd6takese5;Q3toK4
Themainprogramshouldbeabletoplaceandremovepieceswithsomethinglikethefollowing:
chess=Board()
# move pawn from white King 2 to King 5
chess['wK5']=chess['wK2']; chess[ 'wK2']=''
# move pawn from black King 2 to King 5
chess['bK5']=chess['bK2']; chess[ 'bK2']=''
# algebraic notation to print the board
forrankin['8','7','6','5','4','3','2','1']:
forfilein['a','b','c','d','e','f','g','h']:
print"%5s"%board[file+rank],
print
Thealgebraicoutputcanbechangedtothefollowing,whichsomepeopleﬁndsimpler.
forrankin('8','7','6','5','4','3','2','1'):
print"".join(
["%5s"%board[file+rank]
forfilein('a','b','c','d','e','f','g','h') ] )
Youshouldalsowritea move()functiontosimplifycreatingthetestgame. Amovetypicallyconsistsofthe
piecename,thefromposition,thetoposition,plusoptionalnotesregardingcheckandpawnpromotions.
340 Chapter 26. Creating or Extending Data T ypes
Building Skills in Python, Release 2.6.5
26.13.6 Relative Positions on a Chess Board
WhendecodingalogofachessgameinShortAlgebraicNotation(SAN),itisoftennecessarytosearchfor
apiecethatmadeagivenmove. We’lllookatthisproblemindetailin Chess Game Notation .
There are actually a number of search algorithms, each constrained by the rules for moving a particular
piece. Forexample,theknightmakesashort“L”-shapedmoveandthereareonly8positionsontheboard
fromwhichaknightcanstarttoendupatagivenspot. Thequeen,ontheotherhand,moveshorizontally,
verticallyordiagonallyanydistance,andthereareasmanyas24startingpositionsforthequeentoendup
atagivenspot.
Thissearchissimpliﬁedbyhavingiteratorsthatknowafewrulesofchessandangiveusasequenceof
appropriaterankandﬁlevalues. We’dliketobeabletosaysomethinglikethefollowing.
piece, move, toPos =("Q","x","f3")
forfromPos inaBoard.queenIter( toPos ):
ifaBoard[fromPos] =='Q':
print"Queen from ", fromPos, "takes", aBoard[toPos], "at", toPos
We’llreviewafewchessdeﬁnitionsforthisproblem. Youcanalsosee Chessboard Locations in Col lection
Special Method Names forsomeadditionalbackground.
Thealgebraicdescriptionofthechessboardhas ﬁlesfroma-hgoingfromwhite’slefttoright. Ithas ranks
from1-8goingfromwhite’sside(1)toblack’sside(8). Board’sarealmostalwaysshownwithpositiona1
inthelowerleft-handcornerandh8intheupperright,whitestartsatthebottomofthepictureandblack
startsatthetop.
Weneedthefollowingcollectionofspecial-purposeiterators.
•ThekingIter()methodhastoenumeratetheeightpositionsthatsurroundtheking.
•ThequeenIter()methodhastoenumerateallthepositionsinthesamerank,thesameﬁle,andon
thediagonals. Eachofthesemustbeexaminedfromthequeen’spositionmovingtowardtheedgeof
theboard. Thissearchfromthequeenoutwardallowsustolocateblockingpiecesthatwouldprevent
thequeenfrommakingaparticularmove.
•ThebishopIter() methodhastoenumerateallthepositionsonthediagonals. Eachofthesemust
beexaminedfromthebishop’spositionmovingtowardtheedgeoftheboard.
•TheknightIter() methodhastoenumeratetheeightpositionsthatsurroundtheknight,reﬂecting
the knight’s peculiar move of 2 spaces on one axis and 1 space on the other axis. There are four
combinationsoftworanksandoneﬁleandfourmorecombinationsoftwoﬁlesandonerankfromthe
endingposition. Aswiththeking,nopiececanblockaknight’smove,soorderdoesn’tmatter.
•TherookIter()methodhastoenumerateallthepositionsinthesamerankandthesameﬁle. Each
ofthesemustbeexaminedfromtherook’spositionmovingtowardtheedgeoftheboard.
•ThepawnIter()methodhastoenumerateafairlycomplexsetofpositions. Mostpawnmovesare
limitedtogoingforwardonerankinthesameﬁle.
Sinceweneedtoknowwhichdirectionisforward,weneedtoknowthecolorofthepawn. Forwhite
pawns,forwardmeanstheranksincreasefrom2to8. Forblackpawns,then,forwardmeanstheranks
decreasefrom7downto1.
Pawncapturesinvolvegoingforwardonerankinanadjacentﬁle. Furthercomplicatingtheanalysisis
theabilityforapawn’sﬁrstmovetobetworanksinsteadofone.
Wenotethatthequeen’siteratorisreallyacombinationofthebishopandtherook. We’lllookattherook’s
iterator,becauseitiscanbeadaptedtobeabishopiterator,andthenthosetwocombinedtocreatethe
queeniterator.
26.13. Special Method Name Exercises 341
Building Skills in Python, Release 2.6.5
Givenastartingpositionwitharankof randaﬁleof f,we’llneedtoexamineallranksstartingfrom r
and moving toward the edge of the board. These are r−1, r+ 1, r−2, r+ 2, r−3, r+ 3, .... Similarly,
weneedtoexaminealloftheﬁlesstartingfrom fandmovingtowardtheedgeoftheboard. Theseare
f−1, f+ 1, f−2, f+ 2, f−3, f+ 3, ....
Beforedoingancomparison,weneedtoﬁltertheﬁleandrankcombinationstoassurethattheyarelegal
positions. Additionally, we need to stop looking when we’ve encountered a piece of our own color or an
opposing piece that isn’t the one we’re searching for. These intervnening pieces “block” the intentended
move.
342 Chapter 26. Creating or Extending Data T ypes
CHAPTER
TWENTYSEVEN
A TTRIBUTES, PROPERTIES AND
DESCRIPTORS
When we reference an attribute of an object with something like ‘ someObject.someAttr ’, Python uses
severalspecialmethodstogetthe someAttrattributeoftheobject.
Inthesimplestcase,attributesaresimplyinstancevariables. Butthat’snotthewholestory. Toseehowwe
cancontrolthemeaningofattributes,wehavetoemphasizeadistinction:
•An attributeisanamethatappearsafteranobjectname. Thisisthesyntacticconstruct. Forexample,
‘someObj.name ’.
•An instance variable isanitemintheinternal __dict__ofanobject.
Thedefaultsemanticsofanattributereferenceistoprovideaccesstotheinstancevariable. Whenwesay
‘someObj.name ’,thedefaultbehavioriseﬀectively‘ someObj.__dict__['name'] ’.
Thisisnottheonlymeaninganattributenamecanhave.
In Semantics of Attributes we’lllookatthevariouswayswecancontrolwhatanattributenamemeans.
Theeasiesttechniqueforcontrollingthemeaningofanattributenameistodeﬁneaproperty. We’lllookat
thisin Properties.
Themostsophisticatedtechniqueistodeﬁneadescriptor. We’lllookatthisin Descriptors.
Themostﬂexibletechniqueistooverridethespecialmethodnamesandtakedirectcontroloverattribute
processing. We’lllookatthisin Attribute Access Exercises .
27.1 Semantics of Attributes
Fundamentally,anobjectencapsulatesdataandprocessingviait’sinstancevariablesandmethodfunctions.
Becauseofthisencapsulation,wecanthinkofaclassdeﬁnitionasprovidingbothaninterfacedeﬁnitionand
animplementationthatsupportsthedeﬁnedinterface.
Insomelanguages,theattributes aretheinstancevariables;anattributecannameexposetheprivatestate
of the object. Consequently, some languages suggest that attributes should not be part of the interface.
Further,somelanguages(C,C#,Javaareexamples)providesyntaxtodistinguishthepublicinterfacefrom
theprivateimplementation.
InPython,thisdistinctionbetweeninterfaceandimplementationisnotheavilyemphasizedinthesyntax,
sinceitcanoftenleadtowordy,complexprograms. Mostwell-designedclasses,however,tendtohaveaset
ofinterfacemethodsthatformtheinterfaceforcollaboratingwithobjectsofthatclass.
343
Building Skills in Python, Release 2.6.5
InPython,themethodnamesandinstancevariableswhichbeginwith‘ _’aretreatedaspartoftheprivate
implementationoftheclass. Thesenamesaren’tshowninthe help()function,forexample. Theremaining
elements(withoutaleading‘ _’)formthepublicinterface.
Encapsulation Therearetwocommonly-useddesignpatternsforencapsulatinganobject’sinstancevari-
ables.
•Getters and Setters . This design pattern can insulate each instance variable with some method
functionstogetandsetthevalueofthatinstancevariable.
When we do this, each access to an attribute of the object is via an explicit function:
‘anObject.setPrice( someValue ) ’and‘anObject.getPrice() ’.
•Attributes. Wecaninsulateaninstancevariablewithmoresophisticatedattributeaccess. Inthe
caseofPython,wehaveseveraltechniquesforhandlingattributeaccess.
PythonAttributes . InPython,theattributesdonothavetobeinstancevariables.
•Properties.Wecanbindgetter,setter(anddeleter)functionswithanattributename,usingthebuilt-
inproperty()functionor‘ @property’decorator. Whenwedothis,eachreferencetoanattributehas
thesyntaxofdirectaccesstoaninstancevariable,butitinvokesthegivenmethodfunction.
We’lllookatthisin Properties.
•Descriptors. Wecanimplementgetter,setter(anddeleter)functionsintoaseparatedescriptorclass.
Wethencreateaninstanceofthisclassastheobjectnamedbyanattribute. Whenwedothis,each
referencetoanattributehasthesyntaxofdirectaccesstoaninstancevariable,butitinvokesamethod
functionoftheDescriptorobject.
We’lllookatthisin Descriptors.
•SpecialMethodNames . Wecanoverridedeﬁnitionsforseveralspecialmethodnames. Thereare
several methods which plug into the standard algorithm. A fourth method, __getattribute__() ,
allowsyoutochangeattributeaccessinafundamentalway.
We’lllookatthisin Attribute Access Exercises .
Warning:Caution
Changingattributeaccessinradicalwayscaninterferewithhowpeopleunderstandtheoperation
ofyourclassesandobjects. Thedefaultassumptionisthatanattributeisaninstancevariable.
WhilewecanfundamentallyalterthemeaningofaPythonattribute,weneedtobecautiousabout
violatingthedefaultassumptionsofpeoplereadingoursoftware.
27.2 Properties
Theproperty()function gives us a handy way to implement an attribute that is more than a simple
referencetoaninstancevariable.
Throughthepropertyfunction,wecanassignasimpleattributenametoparameter-lessgetterandsetter
methodfunctions.
Thisallowsustocreateprogramsthatlooklikethefollowingexample.
>>>oven=Temperature()
>>>oven.farenheit =450
>>>oven.celsius
232.22222222222223
>>>oven.celsius=175
344 Chapter 27. Attributes, Properties and Descriptors
Building Skills in Python, Release 2.6.5
>>>oven.farenheit
347.0
Inthisexample,wesetoneattributeandthevalueofanotherattributechangestomirroritprecisely. We
candothisbydeﬁningsomemethodfunctionsandbindingthemtoattributenames.
PropertyDesignPattern . ThePropertydesignpatternhasanumberofmethodfunctionswhichare
boundtogetherwithasinglepropertyname. Themethodfunctionscanincludeanycombinationofagetter,
asetterandadeleter.
Tocreateaproperty,wedeﬁnetheinstancevariableandoneormoremethodfunctions. Thisisidentical
withthe Getter and Setter designpattern. Tomakeaproperty,weprovidethesemethodfunctionstothe
property()functiontobindthevariousmethodstoanattributename.
Here’sthedeﬁnitionofthe property()function.
property (fget, [fset, fdel, doc] )
Thisbindsthegivenmethodfunctionsintoapropertydeﬁnition. Usuallytheresultvalueisassigned
toanattributeofaclass.
Thefgetparametermustbeagetterfunction,oftheform‘ function(self)->value ’.
Thefsetparametermustbeasetterfunction,oftheform‘ function(self,value) ’.
Thefdelparametermustbeadeleterfunction,oftheform‘ function(self) ’. Thiscanbeusedto
deletetheattribute,andisevaluatedinresponseto‘ del object.attribute ’.
Thedocparameterbecomesthedocstringfortheattribute. Ifthisisnotprovidedthedocstringfrom
thegetterfunctionbecomesthedocstringfortheproperty.
classSomeClass (object):
defgetThis(self):
returnself._hidden_variable *2
defsetThis(self, value ):
self._hidden_variable =float(value) /2
this=property ( getThis, setThis )
Thiscreatesaproperty, named this: deﬁnedbytwomethodfunctions getThis()andsetThis().
Thefunctionsdoafairlysillycalculation,butthisshowshowanattributecanembodyacalculation.
Thepropertyfunctioncanalsobeusedasadecorator. We’lllookatdecoratorsindetailin Decorators.
Hereisaquicksampleoftheusingthethe property()withthedecoratosyntaxinsteadofthefunction
syntax.
classSomeClass (object):
@property
defthis(self):
returnself._hidden_variable *2
@this.setter
defthis(self, value ):
self._hidden_variable =float(value) /2
PropertyExample . Thefollowingexampleshowsaclassdeﬁnitionwithfourmethodfunctionsthatare
usedtodeﬁnetwoproperties.
27.2. Properties 345
Building Skills in Python, Release 2.6.5
property .py
classTemperature (object):
deffget(self):
returnself.celsius *9/5+32
deffset(self, value ):
self.celsius=(float(value)-32)*5/9
farenheit =property ( fget, fset )
defcset(self, value ):
self.cTemp=float(value)
defcget(self):
returnself.cTemp
celsius=property ( cget, cset, doc ="Celsius temperature ")
1.Wecreatethe farenheitpropertyfromthe fget()andfset()methodfunctions. Whenweusethe
farenheitattributeontheleftsideofanassignmentstatement,Pythonwillusethesettermethod.
Whenweusethisattributeinanexpression, Pythonwillusethegettermethod. Wedon’tshowa
deletermethod;itwouldbeusedwhentheattributeisusedina delstatement.
2.Wecreatethe celsiuspropertyfromthe cget()andcset()methodfunctions. Whenweusethe
celsiusattribute on the left side of an assignment statement, Python will use the setter method.
Whenweusethisattributeinanexpression,Pythonwillusethegettermethod.
Thedocstringprovidedforthe celsiusattributeisavailableas‘ Temperature.celsius.__doc__ ’.
27.3 Descriptors
ADescriptorisaclasswhichprovidesthedetailedget,setanddeletecontroloveranattributeofanother
object. Thisallowsyoutodeﬁneattributeswhicharefairlycomplexobjectsintheirownright. Theideais
thatwecanusesimpleattributereferencesinaprogram,butthosesimplereferencesareactuallymethod
functionsofadescriptorobject.
Thisallowsustocreateprogramsthatlooklikethefollowingexample.
>>>oven=Temperature()
>>>oven.farenheit =450
>>>oven.celsius
232.22222222222223
>>>oven.celsius=175
>>>oven.farenheit
347.0
Inthisexample,wesetoneattributeandthevalueofanotherattributechangestomirroritprecisely.
A common use for descriptors is in an object-oriented database (or an object-relational mapping). In a
databasecontext,gettinganattributevaluemayrequirefetchingdataobjectsfromtheﬁlesystem;thismay
involvecreatingandexecutingaqueryinadatabase.
Thiskindof“related-itemfetch”operationwillbesharedwidelyamongthepersistentclassesinanappli-
cation. Ratherthanattempttomanagethissharedfunctionalityviainheritanceofmethodfunctions,it’s
simplertosplititintoaseparateDescriptorclassandusethisdescriptortomanagetheaccessofrelated
objects.
DescriptorDesignPattern . TheDescriptordesignpatternhastwoparts: an Ownerandanattribute
Descriptor. The Owner is usually a relatively complex object that uses one or more Descriptors for its
346 Chapter 27. Attributes, Properties and Descriptors
Building Skills in Python, Release 2.6.5
attributes. ADescriptorclassdeﬁnesget, setanddeletemethodsforaclassofattributesoftheOwner.
EachDescriptorobjectmanagesaspeciﬁcattribute.
NotethatDescriptorswilltendtobereusable,genericclassesofattributes. TheOwnercanhavemultiple
instancesofeachDescriptorclasstomanageattributeswithsimilarbehaviors. EachDescriptorobjectisa
uniqueinstanceofaDescriptorclass,boundtoadistinctattributenamewhentheOwnerclassisdeﬁned.
ToberecognizedasaDescriptor,aclassmustimplementsomecombinationofthefollowingthreemethods.
__get__(self, instance, owner )
The instanceparameteristhe selfvariableofobjectbeingaccessed. The ownerparameteristhe
owningclassobject. Thismethodofthedescriptormustreturnthisattribute’svalue.
Ifthisdescriptorimplementsaclasslevelvariable,the instanceparametercanbeignored;theinstance
isirrelevantandmaybe None. The ownerparameterreferstotheclass.
__set__(self, instance, value )
The instanceargumentistheselfvariableoftheobjectbeingupdated. Thismethodofthedescriptor
mustsetthisattribute’svalue.
__delete__ (self, instance )
The instanceargumentistheselfvariableoftheobjectbeingaccessed. Thismethodofthedescriptor
mustdeletethisattribute’svalue.
Sometimes,aDescriptorclasswillalsoneedan __init__()methodfunctiontoinitializethedescriptor’s
internalstate. Lesscommonly,thedescriptormayalsoneed __str__()or__repr__()methodfunctionsto
displaytheinstancevariablecorrectly.
Youmustalsomakeadesigndecisionwhendeﬁningadescriptor. Youmustdeterminewheretheunderlying
instancevariableiscontained. Youhavetwochoices.
•TheDescriptorobjecthastheinstancevariable. Inthiscase,thedescriptorobject’s selfvariablehas
theinstancevariable.
Thisiscommonforattributesthatcanbeupdated.
•The Owner object contains the instance variable. In this case, the descriptor object must use the
instanceparametertoreferenceavalueintheowningobject.
Thisiscommonforattributesthatare“get-only”.
DescriptorExample . Here’sasimpleexampleofanobjectwithtwoattributesdeﬁnedbydescriptors.
Onedescriptor( Celsius)containsit’sownvalue. Theotherdesriptor( Farenheit),dependsonthe Celsius
value,showinghowattributescanbe“linked”sothatachangetoonedirectlychangestheother.
descriptor.py
classCelsius(object):
"""Fundamental Temperature Descriptor."""
def__init__ (self, value=0.0):
self.value=float(value)
def__get__(self, instance, owner ):
returnself.value
def__set__(self, instance, value ):
self.value=float(value)
classFarenheit (object):
"""Requires that the owner have a ``celsius`` attribute."""
27.3. Descriptors 347
Building Skills in Python, Release 2.6.5
def__get__(self, instance, owner ):
returninstance .celsius *9/5+32
def__set__(self, instance, value ):
instance .celsius=(float(value)-32)*5/9
classTemperature (object):
celsius=Celsius()
farenheit =Farenheit()
1.We’vedeﬁneda Celsiusdescriptor. TheCelsiusdescriptorhasan __init__()methodwhichdeﬁnes
theattribute’svalue. TheCelsiusdescriptorimplementsthe __get__()methodtoreturnthecurrent
valueoftheattribute,anda __set__()methodtochangethevalueofthisattribute.
2.TheFarenheitdescriptorimplementsanumberofconversionsbasedonthevalueofthecelsiusat-
tribute. The __get__()methodconvertstheinternalvaluefromCelsiustoFarenheit. The __set__()
methodconvertsthesuppliedvalue(inFarenheit)toCelsius.
Inaway,the Farenheitdescriptorisan“observer”oftheowningobjects’s celsiusattribute.
3.Theownerclass, Temperaturehastwoattributes, bothofwhicharemanagedbydescriptors. One
attribute, celsius, uses an instance of the Celsiusdescriptor. The other attribute, farenheit,
usesaninstanceofthe Fareheitdescriptor. Whenweuseoneoftheseattributesinanassignment
statement, the descriptor’s __set__()method is used. When we use one of these attributes in an
expression,thedescriptor’s __get__()methodisused. Wedidn’tshowa __delete__() method;this
wouldbeusedwhentheattributeisusedina delstatement.
Let’slookatwhathappenswhenwesetanattributevalue,forexample,using‘ oven.farenheit= 450 ’.
Inthiscase,the farenheitattributeisaDescriptorwitha __set__()method. This __set__()method
isevaluatedwith instancesettotheobjectwhichisbeingmodiﬁed(the ovenvariable)andownersetto
theTemperatureclass. The __set__()methodcomputesthecelsiusvalue,andprovidesthattothecelsius
attributeoftheinstance. TheCelsiusdescriptorsimplysavesthevalue.
Whenwegetanattributevalue,forexample,using‘ oven.celsius ’,thefollowinghappens. Since celsius
isaDescriptorwitha __get__()method,thismethodisevaluated,andreturnsthecelsiustemperature.
27.4 Attribute Handling Special Method Names
Fundamentally,attributeaccessworksthroughafewspecialmethodnames. Pythonhasadefaultapproach:
it checks the object for an instance variable that has the attribute’s name before using these attribute
handlingmethods.
Because Python uses these methods when an attribute is not already an instance variable, you can
easily create inﬁnite recursion. This can happen if you write ‘ self.someAttr ’ inside the body of a
__getattr__() or__setattr__() methodandtheattributeisnotintheobject’s __dict__,Pythonwill
usethe__getattr__() or__setattr__() methodtoresolvethename. Oops.
Within__getattr__() and__setattr__() ,youhavetousetheinternal __dict__explicitly.
Thesearethelow-levelattributeaccessmethods.
__getattr__ (self, name )
Returnsavalueforanattibutewhenthenameisnotaninstanceattributenorisitfoundinanyof
theparentclasses. nameistheattributename. Thismethodreturnstheattributevalueorraisesan
AttributeError exception.
__setattr__ (self, name, value )
Assignsavaluetoanattribute. nameistheattributename, valueisthevaluetoassigntoit.
348 Chapter 27. Attributes, Properties and Descriptors
Building Skills in Python, Release 2.6.5
Notethatifyounaivelydo‘ self.name= value ’inthismethod,youwillhaveaninﬁniterecursionof
__setattr__() calls.
To access the internal dictionary of attributes, __dict__, you have to use the following:
‘self.__dict__[name] = value ’.
__delattr__ (self, name )
Deletethenamedattributefromtheobject. nameistheattributename.
__getattribute__ (self, name )
Low-levelaccesstoanamedattribute. Ifyouprovidethis,itreplacesthedefaultapproachofsearching
foranattributeandthenusing __getattr__() ifthenamedattributeisn’taninstancevariableofthe
class.
If you want to extend the default approach, you must explicitly evaluate the superclass
__getattribute__() methodwith‘ super( Class,self ).__getattribute__( name ) ’. Thisonly
worksforclasseswhicharederivedfrom object.
27.5 Attribute Access Exercises
1.ReworkPreviousExercises . Refertoexercisesforpreviouschapters( Class Deﬁnition Exercises ,
Advanced Class Deﬁnition Exercises ,Design Pattern Exercises ,Special Method Name Exercises ). Re-
worktheseexercisestomanageattributeswithgettersandsetters. Usethepropertyfunctiontobind
apairofgetterandsetterfunctionstoanattributename. Thefollowingexamplesshowthe“before”
and“after”ofthiskindoftransformation.
classSomeClass (object):
def__init__ (self, someValue ):
self.myValue=someValue
Whenweintroducethegetterandsettermethodfunctions,weshouldalsorenametheoriginalattribute
tomakeitprivate. Whenwedeﬁnetheproperty,wecanusetheoriginalattribute’sname. Ineﬀect,
this set of transformations leaves the class interface unchanged. We have added the ability to do
additionalprocessingaroundattributegetandsetoperations.
classSomeClass (object):
def__init__ (self, someValue ):
self._myValue =someValue
defgetMyValue (self):
returnself._myValue
defsetMyvalue (self, someValue ):
self._myValue =someValue
myValue=property ( getMyValue, setMyValue )
Theclassinterfaceshouldnotchangewhenyoureplaceanattibutewithaproperty. Theoriginalunit
testsshouldstillworkperfectly.
2.ReworkPreviousExercises . Refertoexercisesforpreviouschapters( Class Deﬁnition Exercises ,
Advanced Class Deﬁnition Exercises ,Design Pattern Exercises ,Special Method Name Exercises ). Re-
worktheseexercisestomanageattributeswithDescriptors. DeﬁneaDescriptorclasswith __get__()
and__set__()methodsforanattribute. ReplacetheattributewithaninstanceoftheDescriptor.
Whenweintroduceadescriptor,ourclassshouldlooksomethinglikethefollowing.
27.5. Attribute Access Exercises 349
Building Skills in Python, Release 2.6.5
classValueDescr (object):
def__set__(self, instance, value ):
instance .value=value
def__get__(self, instance, owner ):
returninstance .value
classSomeClass (object):
def__init__ (self, someValue ):
self.myValue=ValueDescr()
Theclassinterfaceshouldnotchangewhenyoureplaceanattibutewithadescriptor. Theoriginal
unittestsshouldstillworkperfectly.
3.TradeoﬀsandDesignDecisions . WhatistheadvantageofPython’spreferenceforreferringto
attributesdirectlyinsteadofthroughgetterandsettermethodfunctions?
Whatistheadvantageofhavinganattributeboundtoapropertyordescriptorinsteadofaninstance
variable?
Whatarethepotentialproblemswiththeindirectioncreatedbypropertiesordescriptors?
350 Chapter 27. Attributes, Properties and Descriptors
CHAPTER
TWENTYEIGHT
DECORA TORS
Inadditiontoobject-orientedprogramming,Pythonalsosupportsanapproachcalled Aspect-Oriented Pro-
gramming. Object-orientedprogrammingfocusesonstructureandbehaviorofindividualobjects. Aspect-
orientedprogrammingreﬁnesobjectdesigntechniquesbydeﬁningaspectswhicharecommonacrossanumber
ofclassesormethods.
The focus of aspect-oriented programming is consistency. Toward this end Python allows us to deﬁne
“decorators”whichwecanapplytoclassdeﬁnitionsandmethoddeﬁnitionsandcreateconsistency.
Wehavetonotethatdecoratorscaneasilybeoverused. Theissueistostrikeabalancebetweentheobvious
programmingintheclassdeﬁnitionandthenot-obviousprogramminginthedecorator.Generally,decorators
shouldbetransparentlysimpleandsoobviousthattheyhardlybearexplanation.
We’lllookatwhatadecoratorisin Semantics of Decorators .
We’lllookatsomebuilt-indecoratorsin Built-in Decorators .
In Deﬁning Decorators we’lllookatdeﬁningourowndecorators.
Itispossibletocreatesomerathersophisticateddecorators. We’lllookattheissuessurroundingthisin
Deﬁning Complex Decorators .
28.1 Semantics of Decorators
Essentially,adecoratorisafunctionthatisappliedtoanotherfunction. Thepurposeofadecoratoristo
transformthefunctiondeﬁnitionwewrote(theargumentfunction)intoanother(morecomplex)function
deﬁnition. WhenPythonappliesadecoratortoafunctiondeﬁnition,anewfunctionobjectisreturnedby
thedecorator.
The idea of decorators is to allow us to factor out some common aspects of several functions or method
functions. Wecanthenwriteasimplerformofeachfunctionandhavethecommonaspectinsertedintothe
functionbythedecorator.
Whenwesay
@theDecorator
defsomeFunction ( anArg ):
pass# some function body
Wearedoingthefollowing:
1.Wedeﬁnedanargumentfunction, someFunction() .
351
Building Skills in Python, Release 2.6.5
2.Python applied the decorator function, theDecorator() , to our argument function. The decorator
functionwillreturnavalue;thisshouldbesomekindofcallableobject,eitheraclasswitha __call__()
methodorafunction.
3.Pythonbindstheresultofthedecoratorevaluationtotheoriginalfunctionname, someFunction() . In
eﬀect,wehaveamoresophisticatedversionof someFunction() createdforusbythe theDecorator()
function.
Cross-CuttingConcerns . Theaspectsthatmakessensefordecoratorsareaspectsthataretrulycommon.
These are sometimes called cross-cutting concerns because they cut across multiple functions or multiple
classes.
Generally,decoratorsfallintoanumberofcommoncategories.
•Simplifying Class Deﬁnitions . One common need is to create a method function which applies
to the class-level attributes, not the instance variables of an object. For information on class-level
variables,see Class V ariables .
The‘@staticmethod ’decoratorhelpsusbuildmethodfunctionsthatapplytotheclass,notaspeciﬁc
object. See Static Methods and Class Method .
Additionally,wemaywanttocreateaclassfunctionwhichappliestotheclassasawhole. Todeclare
thiskindofmethodfunction,thebuilt-in‘ @classmethod ’decoratorcanbeused.
IfyoulookatthePythonWikipagefordecorators( http://wiki.python.org/moin/PythonDecoratorLibrary ),
youcanﬁndseveralexamplesofdecoratorsthathelpdeﬁnepropertiesformanagingattributes.
•Debugging. Thereareseveralpopulardecoratorstohelpwithdebugging. Decoratorscanbeused
toautomaticallylogfunctionarguments,functionentranceandexit. Theideaisthatthedecorator
“wraps”yourmethodfunctionwithadditionalstatementstorecorddetailsofthemethodfunction.
OneofthemoreinterestingusesfordecoratorsistointroducesomeelementsoftypesafetyintoPython.
ThePythonWikipageshowsdecoratorswhichcanprovidesometypecheckingformethodfunctions
wherethisisessential.
Additionally,Pythonborrowstheconceptof deprecationfromJava. Adeprecatedfunctionisonethat
willberemovedinafutureversionofthemodule,classorframework. Wecandeﬁneadecoratorthat
usesthePython warningsmoduletocreatewarningmessageswhenthedeprecatedfunctionisused.
•Handling Database Transactions .In some frameworks, like Django
(http://www.djangoproject.org ), decorators are used to simplify deﬁnition of database transac-
tions. Rather than write explicit statements to begin and end a transaction, you can provide a
decoratorwhichwrapsyourmethodfunctionwiththenecessaryadditionalprocessing.
•Authorization . WebSecuritystandsonseverallegs;twoofthoselegsareauthenticationandautho-
rization. Authenticationisaseriousprobleminvolvingtransmissionandvalidationofusernamesand
passwordsorothercredentials. It’sbeyondthescopeofthisbook. Onceweknowwhotheuseris,the
nextquestioniswhataretheyauthorizedtodo? Decoratorsarecommonlyusedwebframeworksto
specifytheauthorizationrequiredforeachfunction.
28.2 Built-in Decorators
Pythonhasafewbuilt-indecorators.
staticmethod (function)
The‘@staticmethod ’decoratormodiﬁesamethodfunctionsothatitdoesnotuseany selfvariable.
Themethodfunctionwillnothaveaccesstoaspeciﬁcinstanceoftheclass.
352 Chapter 28. Decorators
Building Skills in Python, Release 2.6.5
Thiskindofmethodispartofaclass,butcanonlybeusedwhenqualiﬁedbytheclassnameoran
instancevariable.
Foranexampleofastaticmethod,see Static Methods and Class Method .
classmethod (function)
The‘@classmethod ’decoratormodiﬁesamethodfunctionsothatitreceivestheclassobjectasthe
ﬁrstparameterinsteadofaninstanceoftheclass. Thismethodfunctionwilhaveaccesstotheclass
objectitself.
property (fget, [fset, fdel, doc] )
The ‘@property’ decorator modiﬁes from one to three method functions to be a properties of the
class. Thereturnedmethodfunctionsinvokesthegivengetter,setterand/ordeleterfunctionswhen
theattributeisreferenced.
Here’sacontrivedexampleofusingintrospectiontodisplaysomefeaturesofaobject’sclass.
introspection.py
importtypes
classSelfDocumenting (object):
@classmethod
defgetMethods ( aClass ):
return[ (n,v.__doc__) forn,vinaClass.__dict__ .items()
iftype(v)==types.FunctionType ]
defhelp(self):
"""Part of the self-documenting framework"""
printself.getMethods()
classSomeClass ( SelfDocumenting ):
attr="Some class Value "
def__init__ (self):
"""Create a new Instance"""
self.instVar="some instance value "
def__str__(self):
"""Display an instance"""
return"%s%s"%(self.attr,self.instVar )
1.Weimportthe typesmoduletohelpusdistinguishamongthevariouselementsofaclassdeﬁnition.
2.We deﬁne a superclass that includes two methods. The classmethod, getMethods() , introspects a
class,lookingforthemethodfunctions. Theordinaryinstancemethod, help(),usestheintrospection
toprintalistoffunctionsdeﬁnedbyaclass.
3.Weusethe‘ @classmethod ’decoratortomodifythe getMethods() function.Makingthe getMethods()
intoaclassmethodmeansthattheﬁrstargumentwillbetheclassobjectitself,notaninstance.
4.Everysubclassof SelfDocumenting canprintalistofmethodfunctionsusinga help()method.
Here’sanexampleofcreatingaclassandcallingthehelpmethodwedeﬁned.Theresultofthe getMethods()
methodfunctionisalistoftupleswithmethodfunctionnamesanddocstrings.
>>>ac=SomeClass()
>>>ac.help()
[('__str__', 'Display an instance'), ('__init__', 'Create a new Instance')]
28.2. Built-in Decorators 353
Building Skills in Python, Release 2.6.5
28.3 Deﬁning Decorators
Adecoratorisafunctionwhichacceptsafunctionandreturnsanewfunction. Sinceit’safunction, we
mustprovidethreepiecesofinformation: thenameofthedecorator,aparameter,andasuiteofstatements
thatcreatesandreturnstheresultingfunction.
Thesuiteofstatementsinadecoratorwillgenerallyincludeafunction defstatementtocreatethenew
functionandareturnstatement.
Acommonalternativeistoincludea classdeﬁnitionstatement. Ifaclassdeﬁnitionisused,thatclassmust
deﬁneacallableobjectbyincludingadeﬁnitionforthe __call__()methodand(usually)beingasubclass
ofcollections.Callable .
Therearetwokindsofdecorators, decoratorswithoutargumentsanddecoratorswitharguments. Inthe
ﬁrstcase,theoperationofthedecoratorisverysimple. Inthecasewherethedecoratoracceptsareguments
thedeﬁnitionofthedecoratorisratherobscure,we’llreturntothisin Deﬁning Complex Decorators .
Asimpledecoratorhasthefollowingoutline:
def myDecorator( argumentFunction ):
def resultFunction( \*args, \*\*keywords ):
enhanced processing including a call to argumentFunction
resultFunction.__doc__= argumentFunction.__doc__
return resultFunction
Insomecases,wemayreplacetheresultfunctiondeﬁnitionwitharesultclassdeﬁnitiontocreateacallable
class.
Here’sasimpledecoratorthatwecanusefordebugging. Thiswilllogfunctionentry,exitandexceptions.
trace.py
def trace( aFunc ):
"""Trace entry, exit and exceptions."""
def loggedFunc( \*args, \*\*kw ):
print "enter", aFunc.__name__
try:
result= aFunc( \*args, \*\*kw )
except Exception, e:
print "exception", aFunc.__name__, e
raise
print "exit", aFunc.__name__
return result
loggedFunc.__name__= aFunc.__name__
loggedFunc.__doc__= aFunc.__doc__
return loggedFunc
1.Theresultfunction, loggedFunc() ,isbuiltwhenthedecoratorexecutes. Thiscreatesafresh,new
functionforeachuseofthedecorator.
2.Withintheresultfunction,weevaluatetheoriginalfunction. Notethatwesimplypasstheargument
valuesfromtheevaluationoftheresultfunctiontotheoriginalfunction.
3.Wemovetheoriginalfunction’sdocstringandnametotheresultfunction. Thisassuresusthatthe
resultfunctionlooksliketheoriginalfunction.
Here’saclasswhichusesour‘ @trace’decorator.
354 Chapter 28. Decorators
Building Skills in Python, Release 2.6.5
trace_client.py
classMyClass(object):
@trace
def__init__ (self, someValue ):
"""Create a MyClass instance."""
self.value=someValue
@trace
defdoSomething (self, anotherValue ):
"""Update a value."""
self.value+=anotherValue
Ourclassdeﬁnitionincludestwotracedfunctiondeﬁnitions. Here’sanexampleofusingthisclasswiththe
traced functions. When we evaulate one of the traced methods it logs the entry and exit events for us.
Additionally,ourdecoratedfunctionuseestheoriginalmethodfunctionoftheclasstodotherealwork.
>>>mc=MyClass( 23)
enter __init__
exit __init__
>>>mc.doSomething( 15)
enter doSomething
exit doSomething
>>>mc.value
38
28.4 Deﬁning Complex Decorators
Adecoratortransformsanargumentfunctiondeﬁnitionintoaresultfunctiondeﬁnition. Inadditiontoa
function, we can also provide argument values to a decorator. These more complex decorators involve a
two-stepdancethatcreatesanintermediatefunctionaswellastheﬁnalresultfunction.
Theﬁrststepevaluatestheabstractdecoratortocreateaconcretedecorator. Thesecondstepappliesthe
concretedecoratortotheargumentfunction. Thissecondstepiswhatasimpledecoratordoes.
Assumewehavesomequaliﬁeddecorator,forexample‘ @debug( flag ) ’,whereﬂagcanbe Truetoenable
debuggingand Falsetodisabledebugging. Assumeweprovidethefollowingfunctiondeﬁnition.
debugOption= True
class MyClass( object ):
@debug( debugOption )
def someMethod( self, args ):
real work
Here’swhathappenswhenPythoncreatesthedeﬁnitionofthe someMethod() function.
1.Deﬁnestheargumentfunction, someMethod() .
2.Evaluatetheabstractdecorator‘ debug( debugOption ) ’tocreateaconcretedecoratorbasedonthe
argumentvalue.
3.Applytheconcretedecoratorthetheargumentfunction, someMethod() .
4.Theresultoftheconcretedecoratoristheresultfunction,whichisgiventhename someMethod() .
Here’sanexampleofoneofthesemorecomplexdecorators. Notethatthesecomplexdecoratorsworkby
creating and return a concrete decorators. Python then applies the concrete decorators to the argument
function;thisdoestheworkoftransformingtheargumentfunctiontotheresultfunction.
28.4. Deﬁning Complex Decorators 355
Building Skills in Python, Release 2.6.5
debug.py
defdebug( theSetting ):
defconcreteDescriptor ( aFunc ):
iftheSetting:
defdebugFunc (*args,**kw ):
print"enter", aFunc.__name__
returnaFunc(*args,**kw )
debugFunc .__name__ =aFunc.__name__
debugFunc .__doc__=aFunc.__doc__
returndebugFunc
else:
returnaFunc
returnconcreteDescriptor
1.Thisistheconcretedecorators,whichiscreatedfromtheargument, theSetting.
2.IftheSettingisTrue, the concrete decorator will create the result function named debugFunc(),
whichprintsamessageandthenusestheargumentfunction.
3.IftheSettingisFalse,theconcretedescriptorwillsimplyreturntheargumentfunctionwithoutany
overhead.
28.5 Decorator Exercises
1.Mergethe‘@trace’and‘@debug’decorators. Combinethefeaturesofthe‘ @trace’decoratorwith
theparameterizationofthe‘ @debug’decorator. Thisshouldcreateabetter‘ @trace’decoratorwhich
canbeenabledordisabledsimply.
2.Create a‘@timing’decorator. Similar to the parameterized ‘ @debug’ decorator, the ‘ @timing’
decorator can be turned on or oﬀ with a single parameter. This decorator prints a small timing
summary.
356 Chapter 28. Decorators
CHAPTER
TWENTYNINE
MANAGING CONTEXTS: THE WITH
ST A TEMENT
Manyobjectsmanageresources,andmustimposearigidprotocolonuseofthatresource.
Forexample,aﬁleobjectinPythonacquiresandreleasesOSﬁles,whichmaybeassociatedwithdevicesor
networkinterfaces. Welookedatthewaythat fileobjectscanbemanagedbythe withstatementin File
Statements.
Inthissection,we’lllookatwaysinwhichthenew withstatementwillsimplifyﬁleordatabaseprocessing.
Wewilllookatthekindsofobjectdesignconsiderationswhicharerequiredtocreateyourownobjectsthat
workwellwiththe withstatement.
Important: Legacy
InversionsofPythonpriorto2.6,wemustenablethe withstatementbyusingthefollowingstatement.
from__future__ importwith_statement
29.1 Semantics of a Context
Whilemostuseofthe withstatementinvolveacquiringandreleasingspeciﬁcresources–likeOSﬁles–the
statementcanbeappliedsomewhatmoregenerally. Tomakethestatementmorewidelyapplicable,Python
workswitha context. Acontextisnotlimitedtoacquiringandreleasingaﬁleordatabaseconnection. A
contextcouldbeawebtransaction,auser’slogged-insession,aparticulartransactionoranyotherstateful
condition.
Generally, a context is a state which must endure for one or more statements, has a speciﬁc method for
enteringthestateandhasaspeciﬁcmethodforexitingthestate. Further,acontext’sexitmustbedone
withthedeﬁnedmethodirrespectiveofanyexceptionsthatmightoccurwithinthecontext.
Databaseoperationsoftencenterontransactionswhichmusteitherbecompleted(tomovethedatabaseto
anew,iternallyconsistentstate,)orrolledbacktoresetthedatabasetoapriorconsistentstate. Inthis
case,exceptionsmustbetoleratedsothatthedatabaseservercanbeinstructedtocommitthetransaction
orrollitback.
We’llalsouseacontexttobesurethataﬁleisclosed,oralockisreleased. Wecanalsouseacontexttobe
surethattheuserinterfaceisresetproperlywhenauserswitchestheirfocusoranerroroccursinacomplex
interaction.
Thedesignpatternhastwoelements: a Context Manager anda W orking Object . TheContextManager
isusedbythewithstatementtoenterandexitthecontext. Onethingthatcanhappenwhenenteringa
357
Building Skills in Python, Release 2.6.5
contextisthataWorkingObjectiscreatedaspartoftheentryprocess. TheWorkingObjectisoftenused
forﬁlesanddatabaseswhereweinteractwiththecontext. TheWorkingObjectisn’talwaysnecessary;for
exampleacquiringandreleasinglocksisdoneentirelybytheContextManager.
29.2 Using a Context
ThereareafewPythonlibraryclasseswhichprovidecontextinformationthatisusedbythe withstatement.
Themostcommonly-usedclassisthe fileclass.
Therearetwoformsofthe withstatement.Intheﬁrst,thecontextobjectdoesnotprovideacontext-speciﬁc
objecttoworkwith. Inthesecond,thecontextprovidesusanobjecttobeusedwithinthecontext.
withcontext :
suite
withcontext asvariable :
suite
We’lllookatthesecondform,sincethatishowthe fileclassworks. A fileobjectisakindofcontext
manager,andrespondstotheprotocoldeﬁnedbythe withstatement.
Whenweopenaﬁleforprocessing,wearecreatingacontext. Whenweleavethatcontext,wewanttobe
surethattheﬁleisproperlyclosed. Here’sthestandardexampleofhowthisisused.
withfile('someData.txt ','r')astheFile:
foraLineintheFile:
printaLine
# the file was closed by the context manager
1.Wecreatetheﬁle,whichcanbeusedasacontextmanager. The withstatemententersthecontext,
whichreturnsaﬁleobjectthatwecanuseforinputandoutputpurposes. The asclausespeciﬁesthat
theworkingobjectisassignedto theFile.
2.Thisisaprettytypical forstatementthatreadseachlineofaﬁle.
3.Thewithstatementalsoexitsthecontext,irrespectiveofthepresenceorabsenceofexceptions. In
thecaseofa filecontextmanager,thiswillclosetheﬁle.
Inthepreviousexample,wesawthattheﬁlefactoryfunctionisusedtocreateacontextmanager. Thisis
possiblebecauseaﬁlehasseveralinterfaces: itisacontextmanageraswellasbeingaworkingﬁleobject.
Thisispotentiallyconfusingbecauseitconﬂateﬁlecontextmanagerwiththeworkingﬁleobject. However,
italso
Thishastheadvantageofmakingthe withstatementoptional. Insomesimpleapplications, improperly
closedﬁleshavefewrealconsequences,andthecarefullymanagedcontextofa withstatementisn’tnecessary.
29.3 Deﬁning a Context Manager Function
Oneeasywaytocreateacontextmanageristowriteafunctionthathandlestheacquisitionandreleaseof
animportantresource.
Thecontextlibmodule provides a handy decorator that transforms a simple generator function into a
contextmanager.
358 Chapter 29. Managing Contexts: the with Statement
Building Skills in Python, Release 2.6.5
Conceptually,you’llbreakyourfunctionintotwophases:
•The__enter__()phaseacquirestheresources. Thisiswrittenasstatementsfromthestartofthe
function’ssuitetouptotheoneandonly yieldstatement. Thevaluethatisyieldedisthevaluethat’s
usedintheasclause.
Oncethefunctionyieldsthisvalue,thenthe withstatement’ssuitestartsprocessing.
Ifanexceptionoccursanywhereinthe withstatement,itwillberaisedbythe yieldstatement,and
mustbehandledbythefunctiontoassurethatresourcesarereleasedproperly.
•The__exit__()phasereleasesresources. Thisiswrittenasstatementsafterthe yieldstatement.
Here’sanexampleofacontextmanagerthatmanagesasubclassof file. TheFileWithCount hasanextra
methodthatwillappendasummarylinethatshowsifeverythinghasgoneproperly.
We’ll manage this object so that we are assured that ﬁle either has a summary, or is removed from the
directory.
importos
classFileWithCount (file):
def__init__ (self,*args,**kw ):
super( FileWithCount, self).__init__( *args,**kw )
self.count=0
defwrite(self, data ):
super( FileWithCount, self).write( data )
self.count+=data.count('\n')
defwritelines (self, dataList ):
fordindataList:
self.write( d )
defsummarize (self):
super( FileWithCount, self).write("\n:count:` %d`\n"%self.count )
1.Wedeﬁneda FileWithCount classthataddsaline-countingfeaturetothebuilt-in filetype.
2.Notethatwe’redeﬁningasubclassof filethataddsfeatures. Forthemostpart,wesimplypassthe
argumentstothesuperclassmethodfunctions.
3.Thewrite()methodcountsthenumberofnewlinecharacterswrittentotheﬁle.
4.Thesummarize()methodappendsalabelwithﬁnalcounttotheendoftheﬁle.
Here’sacontextmanagerthatusesour FileWithCount class.
fromcontextlib importcontextmanager
@contextmanager
deffile_with_count (*args,**kw ):
# The __enter__ processing
try:
counted_file =FileWithCount( *args,**kw )
yieldcounted_file
# The __exit__ processing -- if everything's ok
counted_file .summarize()
counted_file .close()
except:
# The __exit__ processing -- if there as an exception
counted_file .close()
os.remove( counted_file .name )
raise
29.3. Deﬁning a Context Manager Function 359
Building Skills in Python, Release 2.6.5
1.Wedeﬁnedacontextmanagerfunction, file_with_count() thatbuildsaninstanceof FileWithCount
andyieldsittoa withstatement.
2.Ifeverythingworksnormally,the‘ counted_file.summarize() ’statementisexecuted.
3.If there is an exception, then the ‘ counted_file.close() ’ statement is executed, and the ﬁle is
removed via ‘ os.remove()’. The is removed so that incomplete ﬁles are not left around to confuse
otherapplicationprogramsorusers.
Here’sanexampleofusingthiscontextmanagertocreateatemporarydirectory.
withfile_with_count( "file.data ","w")asresults:
results.write("this\nthat\n")
Thisyieldsaﬁlewiththefollowingcontent.
MacBook-5:Python-2.6 slott$ cat file.data
this
that
:count:`2`
Theﬁnal‘ :count:’ lineiswrittenautomaticallybythecontextmanager,simplifyingourapplication.
29.4 Deﬁning a Context Manager Class
Insomecases,aclassisboththeworkingobjectandthecontextmanager. The fileclassisthecentral
exampleofthis. Thetwodonothavetobetiedtogether. It’sclearerifwe’lllookatcreatingacontext
managerthatisseparatefromtheworkingobjectﬁrst.
AContextManagermustimplementtwomethodstocollaborateproperlywiththe withstatement.
__enter__ (self)
Thismethodiscalledonentrytothe withstatement. Thevaluereturnedbythismethodfunction
willbethevalueassignedtothe asvariable.
__exit__ (self, exc_type, exc_val, exc_tb )
Thismethodiscalledonexitfromthe withstatement.Ifthe exc_type,exc_valorexc_tbparameters
havevaluesotherthan None,thenanexceptionoccured.
•Areturnvalueof Falsewillpropagatetheexceptionafter __exit__()ﬁnishes.
•Areturnvalueof Truewillsuppressanyexceptionandﬁnishnormally.
Iftheexc_type,exc_valorexc_tbparametershavevaluesof None,thenthisisanormalconclusion
ofthewithstatement. Themethodshouldreturn True.
Hereisacontextmanagerclass,named FileCountManager ,whichincorporatesthe FileWithCount class,
shownabove. Tobeacontextmanager,thisclassimplementstherequired __enter__()and__exit__()
methods.
classFileCountManager (object):
def__init__ (self,*args,**kw ):
self.theFile=FileWithCount( *args,**kw )
def__enter__ (self):
returnself.theFile
def__exit__ (self, exc_type, exc_val, exc_tb ):
ifexc_type isnotNone:
360 Chapter 29. Managing Contexts: the with Statement
Building Skills in Python, Release 2.6.5
# Exception occurred
self.theFile.close()
os.remove( self.theFile.name )
returnFalse# Will raise the exception
self.theFile.summarize()
self.theFile.close()
returnTrue# Everything's okay
1.The__enter__()methodcreatesthe FileWithCount andreturnsitsothatthe asclausewillassign
thistoavariable.
2.The__exit__()methodcheckstoseeifitisendingwithanexception.
Incaseofanexception,weclosetheﬁleandremoveit. Wealsoreturn Falsetopermittheexception
topropagateoutsidethe withstatement.
Iftherewasnoexception,thenthe:class:FileWithCount.summarize‘isusedtowritethesummaryand
theﬁleisclosed.
Theoverallmainprogramcanhavethefollowingstructure. Wedon’tneedtomakespecialarrangementsin
themainprogramtobesurethatthelogisﬁnalizedcorrectly. Wehavedelegatedthosespecialarrangements
tothecontextmanagerobject,leavinguswithanunclutteredmainprogram.
withFileCountManager( "file.data ","w")asresults:
results.write("this\nthat\n")
29.5 Context Manager Exercises
1.Build a class with it’s own manager . Merge the methods from FileCountManager into
FileWithCount tocreateasingleclasswhichdoesbothsetsoffeatures.
2.ListwithaChecksum . Acryptoapplicationworkswithlists,butonlyliststhathaveachecksum
ofthevaluesinalistofnumbers.
Deﬁneaclass, ManageChecksum ,whichremovesandreplacesthelastelementinanon-emptylist.
•The__init__()methodacceptsasingleparameterwhichisalistorMutableSequenceobject.
•On__entry__(),givenazero-lengthlist,returnthelistobject.
•On__entry__(),givenalistwith1ormoreelements,popthelastelement. Assertthatthisis
thecryptologicalchecksumofthevaluesoftheotherelements. Returnthisupdatedlist.
•On__exit__(), computcryptologicalchecksumoftheelementsandappendthischecksumto
thelist.
For now, our cryptological checksum can be the simple sum, created with sum(). As an advanced
exercise,lookatusing hashlibtoputabetterchecksumonthelist.
Youshouldbeabletodothefollowingkindsoftest.
crypto_list =[]
withManageChecksum( crypto_list ) astheList:
theList.extend( [ 5,7,11] )
asserttheList ==[5,7,11]# no checksum in the with statement
theList.append( 13)
asserttheList[: -1]==[5,7,11,13]# checksum was added to prevent tampering
withManageChecksum( crypto_list) astheList:
29.5. Context Manager Exercises 361
Building Skills in Python, Release 2.6.5
theList.pop(0)
asserttheList[: -1]==[7,11,13]
Insidethewithstatement,thelistisanordinarylist.
Outsidethewithstatement,thelisthasananti-tamperingchecksumappended.
362 Chapter 29. Managing Contexts: the with Statement
Part V
Components, Modules and Packages
363

Building Skills in Python, Release 2.6.5
Organization and Deployment
ThebasicPythonlanguageisrichwithfeatures.Theseincludeseveralsophisticatedbuilt-indatatypes( Data
Structures),numerousbasicstatments( Language Basics ),avarietyofcommonarithmeticoperatorsanda
libraryofbuilt-infunctions. InordertokeepthebasicPythonkernelsmall,relativelyfeaturefeaturesare
built-in. AsmallkernelmeansthatPythoninterpreterscanbeprovidedinavarietyofsoftwareapplication,
extendingfunctionalityoftheapplicationwithoutbloatingduetoalargeandcomplexcommandlanguage.
ThemorepowerfulandsophisticatedfeaturesofPythonareseparatedintoextensionmodules. Thereare
severaladvantagestothis. First,itallowseachprogramtoloadonlytherelevantmodules,speedingstart-up.
Second,itallowsadditionalmodulestobeaddedeasily. Third,itallowsamoduletobereplaced,allowing
youtochooseamongcompetingsolutionstoaproblem.
Thesecondpointabove,easilyaddingmodules,issomethingthatneedstobeemphasized. InthePython
community,thisiscalledthe batteries included principle. TheidealistomakePythondirectlyapplicableto
justaboutanypracticalproblemyoumayhave.
Some modules have already been covered in other chapters. In The math Module we covered mathand
randommodules. In Stringswecoveredthe stringmodule.
Overview of this part . This part will cover selected features of a few modules. The objective is to
introducesomeofthepowerofkeyPythonmodulesandshowhowthemodulesareusedtosupportsoftware
development. This isn’t a reference, or even a complete guide to these modules. The standard Python
Librarydocumentationandotherbooksdescribeallavailablemodulesindetail. RememberthatPythonis
anopen-sourceproject: insomecases,you’llhavetoreadthemodule’ssourcetoseewhatitreallydoesand
howitworks.
ThispartprovidesageneraloverviewofhowtocreatePythonmodulesin Modules. We’lldistinguishpackage
andmodulein Packages.
We’lloverviewthePythonLibraryin The Python Library .
ModuleDetails . Wecoverseveralessentialmodulesinsomedetail.
• Complex Strings: the re Module covers regular expressions ,whichyoucanusetodostringmatching
andparsing.
• Dates and Times: the time and datetime Modules covershowtohandlethevagariesofourcalendar
withthe timeanddatetimemodules.
•We’llcovermanyaspectsofﬁlehandlingin File Handling Modules ;thisincludesmoduleslike: sys,
glob,fnmatch,fileinput,os,os.path,tempfile,andshutil.
•We’llalsolookatmodulesforreadingandwritingﬁlesinvariousformatsin File F ormats: CSV, T ab,
XML, Logs and Others .
– Comma-Separated V alues: The csv Module willcoverCommaSeparatedValues(CSV)ﬁles.
–Tab-delimitedﬁles,however,areasimplerproblem,anddon’trequireaseparatemodule.
– Property Files and Conﬁguration (or .INI ) Files: The ConﬁgParser Module willcoverparsing
Conﬁguration ﬁles, sometimes called .INIﬁles. An .INIﬁle is not the best way to handle
conﬁgurations,butthistechniqueiscommonenoughthatweneedtoshowit.
– Fixed F ormat Files, A COBOL Legacy: The codecs Module willcoverwaystohandleCOBOLﬁles
whichareina“ﬁxedlength”format,usingEBCDICdatainsteadofthemorecommonASCIIor
Unicode.
– XML Files: The xml.etree and xml.sax Modules willcoverthetechniquesforparsingXMLﬁles.
365
Building Skills in Python, Release 2.6.5
Programs–TheUltimateModules . Inasenseatop-levelprogramisamodulethatdoessomething
useful. It’s important understand “programs” as being reusable modules. Eventually most really useful
programsgetrewrittenandmergedintolarger,moresophisticatedprograms.
In Programs: Standing Alone thispartcoversmodulesessentialforcreatingpolished,completestand-alone
programs. Thisincludesthe getoptandoptparsemodules.
Theﬁnalchapter, Architecture: Clients, Servers, the Internet and the W orld Wide W eb coversintegration
amongprogramsusingtheclient-serverprogrammingmodel. Thisincludesanumberofmodulesthatare
essentialforcreatingnetworkedprograms.
•WecanusetheHTTPprotocolwithanumberofmodulescoveredin The W orld Wide W eb and the
HTTP protocol .
•WecanusetheRESTtocreateorusewebservices. Thisiscoveredin W eb Services.
•Using W riting W eb Clients: The url lib2 Module ,wecanleverageanumberofprotocolstoreadaﬁle
locatedanywhereontheWorld-WideWebviatheirUniformResourceLocator(URL).
•If none of these protocols are suitable, we can invent our own, using the low-level socket module,
coveredin Socket Programming .
366
CHAPTER
THIRTY
MODULES
A moduleallows us to group Python classes, functions and global variables. Modules are one level of
compositionofalargeprogramfromdiscretecomponents. Themoduleswedesigninonecontextcanoften
bereusedtosolveotherproblems.
In Module Semantics wedescribethebasicsemanticsofmodules. In Module Deﬁnition wedescribehowto
deﬁneamodule. We’llshowhowtouseamodulewiththe importstatementin Module Use: The import
Statement. A module must be found on the search path, we’ll brieﬂy talk about ways to control this in
Finding Modules: The Path .
Therearenumberofvariationsonthe importstatement; we’lllookatthesein V ariations on An import
Theme. We’llalsolookatthe execstatementin The exec Statement . Thischapterendswithsomestyle
notesin Style Notes.
30.1 Module Semantics
A moduleisaﬁlethatcontainsPythonprogramming. Amodulecanbebroughtintoanotherprogramvia
theimportstatement,oritcanbeexecuteddirectlyasthemainscriptofanapplicationprogram. There
aretwopurposesformodules;someﬁlesmaydoboth.
•Alibrary module isexpectedtocontaindeﬁnitionsofclasses,functionsandmodulevariables. Ifitdoes
anythingbeyondthis,itisgenerallyhardtounderstandandhardertouseproperly.
•A script(orapplicationor“main”module)doestheusefulworkofanapplication. Itwillhaveup
tothreedisctinctelements: importsofanymodulesonwhichitdepeds,mainfunctiondeﬁnitions,a
scriptthatdoestherealwork. Itgenerallyuseslibrarymodules.
Modulesgiveusalarger-scalestructuretoourprograms. WeseethefollowinglevelsofPythonprogramming:
•The individual statement. A statement makes a speciﬁc state change by changing the value of a
variable. Statechangesarewhatadvanceourprogramfromitsinitialstatetothedesiredendingstate.
•Multiplestatementsarecombinedinafunction. Functionsaredesignedtobeanindivisible,atomic
unitofwork. Functionscanbeeasilycombinedwithotherfunctions,butnevertakenapart. Functions
maybeassimpleasasinglestatement. Whilefunctionscouldbecomplex,it’simportantthattheybe
easilyunderstood,andthislimitstheircomplexity. Awell-chosenfunctionnamehelpstoclarifythe
processing.
•Multiplefunctionsandrelateddataareusedtodeﬁneaclassofobjects. Tobeuseful,aclassmust
have a narrowly deﬁned set of responsibilities. These responsibilities are characterized by the class
attributesandbehaviors.
367
Building Skills in Python, Release 2.6.5
•Multipleclosely-relatedclasses,functionsandvariablesarecombinedintomodules. Themodulename
istheﬁlename. Amoduleshouldprovideacloselyrelatedsetofclassesandfunctions. Sometimes,a
modulewillpackageasetofcloselyrelatedfunctions.
•Modules can be combined into packages. The directory structure deﬁnes the packages and their
constituentmodules. Additionally,packagescontainsomeadditionalﬁlesthatPythonusestolocate
alloftheelementsofthepackage.
•Theuser-orientedapplicationprogramdependonmodulesorpackages.
Theapplication–thefunctionalitythattheuserperceives–isusuallythetop-most“executable”scriptthat
doestheusefulwork. Therelationshipbetweenshellcommands(ordesktopicons,orweblinks)thatauser
seesandthepackagingofcomponentsthatimplementthosecommandscanbemurky. Forexample,asingle
applicationﬁlemayhavemultiplealiases,makingitappearlikeindependedcommands. Asinglescriptcan
processmultiplecommand-lineoptions.
Theapplication-levelview,sinceitispresentedtotheuser,mustfocusedonusability:theshellcommandsor
iconstheusersees. Thedesignofmodulesandpackagessouldbefocusedonmaintenanceandadaptability.
Themodulesaretheﬁlesthatyou,thedeveloper,mustusetokeepthesoftwareunderstandable.
Components: ClassandModule . Aclassisacontainerforattributes,methodfunctions,andnested
classdeﬁnitions. Similarly,amodulecanalsocontainattributes,functionsandclassdeﬁnitions.
Amoduleisdiﬀerentfromaclassinseveralways. First,amoduleisaphysicalﬁle;itistheunitofsoftware
constructionandconﬁgurationmanagement. Aclassisdeﬁnedwithinaﬁle. Additionally,aclassdeﬁnition
allowsustocreateanumberofclassinstances,orobjects. Amodule,onotherhand,canonlyhaveasingle
instance. Pythonwillonlyimportamoduleonetime;anyadditionalrequeststoimportamodulehaveno
eﬀect. Anyvariablesdeﬁnedbythemodule,similarly,willonlyhaveasingleinstance.
Beyondthistechnicaldistinction,wegenerallyunderstandmodulestobethebig,easy-to-understandcom-
ponentsoutofwhichareapplicationsarebuilt. Aclassisaﬁner-grainedpieceoffunctionality,whichusually
capturesasmall,verytightlyboundcollectionofattributeandoperations.
30.2 Module Deﬁnition
Amoduleisaﬁle;thenameofthemoduleistheﬁlename. The .pyextensionontheﬁlenameisrequiredby
theoperatingsystem,andgracefullyignoredbyPython. Wecancreateaﬁlenamed roulette.py,include
numerousdeﬁnitionsofclassesandfunctionsrelatedtothegameofroulette.
NotethatamodulenamemustbeavalidPythonname. Operatingsystemﬁlenamesdon’thavethesame
restrictionsontheirnames. Therulesforvariablenamesarein V ariables. Amodule’snameislimitedto
letters,digitsand‘ _’‘s.
Standard ﬁle systems are case-sensitive. Filenames are traditionally all lower-case. Consequently, most
Pythonmoduleﬁlenamesarealllower-caseletters.
NotethattheWindowsﬁlesystemhasverycomplexﬁlenamingrulesinwhichtherearelongversionsof
namesandshortversionsofnames. Further,Windowsisﬂexibleregardingcasematchingofﬁlenames. It
helpstoavoidtheseproblemsbyusingrelativelyshort,alllower-caseﬁlenamesinWindows,also.
Theﬁrstlineofamoduleisusuallya‘ #!’ comment;thisistypically‘ #!/usr/bin/env python ’. Thenext
fewlinesareatriple-quotedmoduledocstringthatdeﬁnesthecontentsofthemoduleﬁle. Aswithother
Python doc strings, the ﬁrst line of the string is a summary of the module. This is followed by a more
completedeﬁnitionofthemodule’scontents,purposeandusage.
Also,amodulemayincludethe __all__variable.Thisliststhenameswhicharecreatedbyan‘ from module
import *’. Absentthe __all__variable,allnamesthatdon’tbeginwith‘ _’arecreated.
Example. Forexample,wecancreatethefollowingmodule,called dice.py.
368 Chapter 30. Modules
Building Skills in Python, Release 2.6.5
dice.py
#!/usr/bin/env python
"""dice - basic definitions for Die and Dice.
Die - a single die
Dice - a collection of one or more dice
roll - a function to roll a pair of dice"""
fromrandomimport*
classDie(object):
"""Simulate a 6-sided die."""
def__init__ (self):
self.value=None
defroll(self):
self.value=randrange( 6)+1
deftotal(self):
returnself.value
classDice:
"""Simulate a pair of 6-sided dice."""
def__init__ (self):
self.value=( Die(), Die() )
defroll(self):
map(lambdad: d.roll(), self.value )
defdice(self):
returntuple( [d.valuefordinself.value] )
pair=Dice()
defroll():
pair.roll()
returnpair.dice()
1.A“main”scriptﬁlemustincludetheshellescapetorunnicelyinaPosixorMacOSenvironment.
Otherﬁles,eveniftheyaren’tmainscripts,canincludethistomarkthemasPython.
2.Ourdocstringisaminimalsummary. Well-writtendocstringsprovidemoreinformationontheclasses,
variablesandfunctionsthataredeﬁnedbythemodule.
3.Manymodulesdependsonothermodules. NotethatPythonoptimizestheseimports;ifsomeother
modulehasalreadyimportedagivenmodule,itissimplymadeavailabletoourmodule. Ifthemodule
hasnotbeenimportedalready,itisimportedforusebyourmodule.
4.Asistypicalofmanymodules,thismoduleprovidessomeclassdeﬁnitions.
5.Thismoduledeﬁnesamodule-globalvariable, pair. Thisvariableispartofthemodule;itappears
globaltoallclassesandfunctionswithinthismodule. Itisalsoavailabletoeveryclientofthismodule.
Sincethisvariableispartofthemodule,everyclientissharingasinglevariable.
6.Thismoduledeﬁnesahandyfunction, roll(),whichusesthemoduleglobalvariable, pair.
Conspicuousbyitsabsenceisanymainscripttodoanythingmoreusefulthancreateasinglemoduleglobal
variable. Thismoduleisapurelibrarymodule.
30.2. Module Deﬁnition 369
Building Skills in Python, Release 2.6.5
30.3 Module Use: The import Statement
SinceamoduleisjustaPythonﬁle,therearetwowaystouseamodule. Wecan importthemodule,to
makeuseofit’sdeﬁnitions,orwecanexecuteitasascriptﬁletohaveitdousefulwork. Westartedlooking
atexecutionofscriptsbackin Script Mode,andhavebeenusingitheavily.
Welookedbrieﬂyatthe importstatementin Using Modules . Thereareseveralvariationsonthisstatement
thatwe’lllookatinthenextsection. Inthissection,we’lllookatmorefeaturesofthe importstatement.
Theessentialimportstatementhasthefollowingsyntax:
importmodule
ThemodulenameisthePythonﬁlenamewiththe .pyﬁleextensionremoved.
Pythondoesthefollowing.
1.Searchtheglobalnamespaceforthemodule. Ifthemoduleexists,ithadalreadybeenimported;for
thebasicimport,nothingmoreneedstobedone.
2.If the module doesn’t exist, search the Python path for a ﬁle; the ﬁle name is the module name
plusthe .pyextension. Thesearchpathhasadefaultvalue,andcanbemodiﬁedbycommand-line
argumentsandbyenvironmentvariables. Ifthemodulenamecan’tbefoundanywhereonthepath,
anImportErrorexceptionisraised.
3.Iftheﬁlewasfound,createthemodule’snew,uniquenamespace;thisisthecontainerinwhichthe
module’sdeﬁnitionsandmodule-levelvariableswillbecreated. Executethestatementsinthemodule,
usingthemodule’snamespacetostorethevariablesanddeﬁnitions.
We’lllookalittlemorecloselyatnamespacesbelow.
ThemostimportanteﬀectofimportingamoduleisthatthePythondeﬁnitionsfromthemodulearenow
partoftherunningPythonenvironment. Eachclass,functionorvariabledeﬁnedinthemoduleisavailable
foruse. Sincetheseobjectsarecontainedinthemodule’snamespace,Thenamesofthoseelementsmustbe
qualiﬁedbythemodule’sname.
Inthefollowingexample,weimportthe dicemodule. Pythonwillsearchformodule dice,thenfortheﬁle
dice.pyfromwhichtocreatethemodule. Afterimporting,createaninstanceofthe Diceclassandcalled
thatinstance craps. Wequaliﬁedtheclassnamewiththemodulename: ‘ dice.Dice’.
>>>importdice
>>>craps=dice.Dice()
>>>craps.roll()
>>>craps.dice()
(3, 5)
Namespaces. Pythonmaintainsanumberoflocalnamespacesandoneglobalnamespace. Auniquelocal
namespace is used when evaluating each function or method function. In eﬀect, a variable created in a
function’snamespaceisprivatetothatfunction;itonlyexistsonlywhilethefunctionexecutes.
Typically, when a module is imported, the module’s namespace is the only thing created in the global
namespace. Allofthemodule’sobjectsareinsidethemodule’snamespace.
Youcanexplorethisbyusingthebuilt-in dir()function. Dothefollowingsequenceofsteps.
1.Createasmallmoduleﬁle(likethe dice.pyexample,above).
2.Startafreshcommand-linePythoninterpreterinthesamedirectoryasyourmoduleﬁle. Startingthe
intepreterinthesamedirectoryisthesimplestwaytobesurethatyourmodulewillbefoundbythe
importstatement.
370 Chapter 30. Modules
Building Skills in Python, Release 2.6.5
3.Evalute‘dir()’toseewhatisintheinitialglobalnamespace.
4.Importyourmodule.
5.Evaluate‘ dir()’toseewhatgotaddedtothenamespace.
6.Evaluate‘ dir(your module) ’toseewhat’sinyourmodule’snamespace.
ScriptsandModules . TherearetwowaystouseaPythonﬁle. Wecanexecuteitasascriptorwecan
importitasalibrarymodule. WeneedtokeepthisdistinctionclearwhenwecreateourPythonapplications.
Theﬁlethatauserexecuteswilldousefulwork,andmustbeascriptofsomekind. Thisscriptcanbean
iconthattheuserdouble-clicked,oracommandthattheusertypedatacommandprompt;ineithercase,
asinglePythonscriptinitiatestheprocessing.
Aﬁlethatisimportedwillprovidedeﬁnitions. We’llemphasizethisdistinction.
Important: BadBehavior
Thestandardexpectationisthatalibrarymodulewillcontainonlydeﬁnitions. Somemodulescreatemodule
globalvariables;thismustbefullydocumented. Itisbadbehaviorforanimportedmoduletoattemptto
doanyrealworkbeyondcreatingdeﬁnitions. Anyrealworkthatalibrarymoduledoesmakesreuseofthat
modulenearlyimpossible.
Importingamodulemeansthemoduleﬁleisexecuted. Thiscreatesisaninherent,butimportantambiguity.
Agivenﬁlecanbeusedasascriptorusedasalibrary;anyﬁlecanbeusedeitherway. Here’sthecomplete
setofalternatives.
•Atop-levelscript . Youexecuteascriptwiththe RunModule menuiteminIDLE.Youcanalso
executeascriptfromyouroperatingsystemcommandprompt. Forexample,‘ python file.py ’will
executethegivenﬁleasascript. Also,youcansetupmostoperatingsystemssothatentering ﬁle.py
atthecommandpromptwillexecutetheﬁleasascript. Also, youcansetupmostGUI’ssothat
double-clickingthe file.pyiconwilllaunchPythonandexecutethegivenﬁleasascript.
•import. Youcanimportalibrarymodule. Asdescribedabove, Pythonwillnotimportamodule
morethanonce. Ifthemodulewasnotpreviouslyimported,Pythoncreatesanamespaceandexecutes
theﬁle. Thenamespaceissaved.
•exec. Python’sexecstatementissimilartothe importstatement,withanimportantdiﬀerence: The
execstatementexecutesaﬁleinthecurrentnamespace. The execstatementdoesn’tcreateanew
namespace. We’lllookatthisin The exec Statement .
TheMain-ImportSwitch . Sinceaﬁlecanbeusedasscriptorlibrary,wecanintentionallycreateﬁles
thatareboth. Wecancreateascriptwhichcanalsobeusedasalibrary. Andwecancreatealibrarywhich
hasausefulbehaviorwhenusedasascript. Thispromotesreuseoflibraries.
Pythonprovidesaglobalvariablethathelpstodiﬀerentiatebetweenamainprogramscriptandamodule
librarymodule. Theglobal __name__variableisequalto "__main__"whentheinitial(or“top-level”or
“outermost”or“main”)ﬁleisbeingprocessed. Whenyouhaveanexecutablescript,andyourunthatscript
fromthecommandline, thatscriptsees __name__equalto "__main__". However, whenanimportisin
process,the __name__variableisthenameofthemodulebeingimported.
Asanexample,wecanmakeuseofthistoprovidestand-aloneunittestingforalibrarymodule. Whenwe
writeamodulethatisprimarilydeﬁnitional,wecanhaveitexecuteit’sownunittestswhenitisusedasa
mainprogram. Thismakestestingalibrarymodulesimple: weimportitanditrunsitsunittest. Wedo
thisbyexaminingthe __name__variable.
if__name__ =="__main__ ":
unittest .main()
30.3. Module Use: The import Statement 371
Building Skills in Python, Release 2.6.5
Whensomeotherscriptimportsamodule(forexample,named dice.py),the__name__variableis "dice"
andnothingspecialisdone. Whentesting,however,wecanexecutethemodulebyitself;inthiscasethe
__name__variableis "__main__"andthetestfunctionisexecuted.
30.4 Finding Modules: The Path
Formodulestobeavailableforuse,thePythoninterpretermustbeabletolocatethemoduleﬁle. Python
hasasetofdirectoriesinwhichitlooksformoduleﬁles. Thissetofdirectoriesiscalledthe search path,and
isanalogoustothe PATHenvironmentvariableusedbyanoperatingsystemtolocateanexecutableﬁle.
Python’ssearchpathisbuiltfromanumberofsources:
•PYTHONHOME isusedtodeﬁnedirectoriesthatarepartofthePythoninstallation. Ifthisenvi-
ronmentvariableisnotdeﬁned,thenastandarddirectorystructureisused.ForWindows,thestandard
locationisbasedonthedirectoryintowhichPythonisinstalled. FormostLinuxenvironments,Python
isinstalledunder /usr/local,andthelibrariescanbefoundthere. ForMacOS,thehomedirectory
isunder/Library/Frameworks/Python.framework .
•PYTHONPATH isusedtoadddirectoriestothepath. Thisenvironmentvariableisformattedlike
theOSPATHvariable,withaseriesofﬁlenamesseparatedby‘ :’‘s(or‘;’‘sforWindows).
•ScriptDirectory. IfyourunaPythonscript,thatscript’sdirectoryisplacedﬁrstonthesearchpath
sothatlocally-deﬁnedmouleswillbeusedinsteadofbuilt-inmodulesofthesamename.
•Thesitemodule’slocationsarealsoadded. (ThiscanbedisabledbystartingPythonwiththe‘ -S’
option.) The sitemodulewillusethe PYTHONHOME location(s)tocreateuptofouradditional
directories. Generally,themostinterestingoneisthe site-packages directory. Thisdirectoryisa
handyplacetoputadditionalmodulesyou’vedownloaded. Additionally, thisdirectorycancontain
.pthﬁles. The sitemodulereads .pthﬁlesandputsthenameddirectoriesontothesearchpath.
The searchpath is deﬁned bythe pathvariablein the sysmodule. If we‘ import sys’, wecan display
sys.path. Thisisveryhandyfordebugging. Whendebuggingshellscripts,itcanhelptorun‘ python -c
'import sys; print sys.path' ’justtoseepartsofthePythonenvironmentsettings.
Installingamodule,then,isamatterofassuringthatthemoduleappearsonthesearchpath. Thereare
fourcentralmethodsfordoingthis.
•Somepackageswillsuggestyoucreateadirectoryandplacethepackageinthatdirectory. Thismay
bedonebydownloadingandunzippingaﬁle. ItmaybedonebyusingSubversionandsychronizing
yoursubversioncopywiththecopyonaserver. Eitherway, youwilllikelyonlyneedtocreatean
operatingsystemlinktothisdirectoryandplacethatlinkin site-packages directory.
•Some packages will suggest you download (or use subversion) to create a temporary copy. They
will provide you with a script – typically based on setup.py– which moves ﬁles into the correct
locations. Thisiscalledthe distutilsdistribution. Thiswillgenerallycopythemoduleﬁlestothe
site-packages directory.
•Some packages will rely on setuptools.This is a package from the
http://peak.telecommunity.com/DevCenter/setuptools Python Enterprise Application Kit that
extendsdistuilstofurtherautomatesdownloadandinstallation. Thistool,also,worksbymoving
theworkinglibrarymodulestothe site-packages directory.
•Extendingthesearchpath. Eithersetthe PYTHONPATH environmentvariable,orput .pthﬁles
inthesite-packagesdirectory.
Tip:WindowsEnvironment
IntheWindowsenvironment, the Python_Path symbolintheWindowsregistryisalsousedtolocate
modules. This,however,isnotportableorstandardized,sotrytoavoidusingit.
372 Chapter 30. Modules
Building Skills in Python, Release 2.6.5
30.5 Variations on An import Theme
Thereareseveralvariationsonthe importstatement. Welookedatthesebrieﬂyin The math Module . In
thissection,we’llcoverthevariationsavailableonthe importstatement.
•BasicImport. Thisiscoveredin Module Use: The import Statement .
•ImportAs. Thisallowsustoimportamodule,andassignitanewname.
•From Module Import Names. This allows us to import a module, making some names part of the
globalnamespace.
•CombinedFromandAsimport.
30.5.1 Import As
Ausefulvariationinthe importstatementistorenameamoduleusingthe asclause.
importmoduleasname
Thismodulerenamingisusedintwosituations.
•Wehavetwoormoreinterchangableversionsofamodule.
•Themodulenameisratherlongandpainfultotype.
There are number of situations where we have interchangable versions of a module. One example is the
built-inosmodule. This module gives us a number of functions that behave identically on most major
operatingsystems. Thewaythisisdoneistocreateanumberofvariantimplementationsofthesefunctions,
andthenuseasappropriate asclausetogivethemaplatform-neutralname.
Here’sasummaryofhowthe osmoduleusesimportas.
if'posix'in_names:
importposixpath aspath
elif'nt'in_names:
importntpathaspath
elif'mac'in_names:
importmacpath aspath
Afterthisif-statement,oneofthevariousplatform-speciﬁcmoduleswillhavebeenimported,anditwill
havetheplatform-independentnameof os.path.
Inthecaseofsomemodules,thenameisratherlong. Forexample, sqlalchemyislongandeasytomisspell.
It’ssomewhatsimplertousethefollowingtechnique.
importsqlalchemy assa
db=sa.create_engine( 'sqlite:///file.db ')
Thisallowsustouse saasthemodulename.
30.5.2 From Module Import Names
Two other variations on the importstatement introduce selected names from the module into the local
namespace. Oneformpicksspeciﬁcnamestomakeglobal.
30.5. Variations on An import Theme 373
Building Skills in Python, Release 2.6.5
from module import name 〈 , ... 〉
Thisversionofimportaddsastepafterthemoduleisimported. Itaddsthegivenlistofnamesintothe
localnamespace,makingthemavailablewithoutusingthemodulenameasaqualiﬁer.
Forexample:
from math import sin, cos, tan
print dir(math)
['__doc__', '__name__', 'acos', 'asin', 'atan', 'atan2', 'ceil', 'cos',
'cosh', 'e', 'exp', 'fabs', 'floor', 'fmod', 'frexp', 'hypot', 'ldexp',
'log', 'log10', 'modf', 'pi', 'pow', 'sin', 'sinh', 'sqrt', 'tan',
'tanh']
print locals()
{'math': <module 'math' (built-in)>, '__doc__': None,
'__version__': '1.0',
'__file__': 'Macintosh HD:SWdev:Jack:Python:Mac:Tools:IDE:PythonIDE.py',
'__name__': '__main__',
'__builtins__': <module '__builtin__' (built-in)>,
'inspect': <function inspect at 0x0d084310>,
'sin': <built-in function sin>, 'cos': <built-in function cos>,
'tan': <built-in function tan>}
In this example, the locals()value shows that the sin(),cos()andtan()functions are now directly
partofthenamespace. Wecanusethesefunctionswithoutreferringtothemathmodule. Wecanevaluate
‘sin(0.7854)’,ratherthanhavingtosay‘ math.sin(0.7854) ’.
Thisisdiscouragedbecauseittendstoconcealtheoriginofobjects.
Anothervariationon importmakesallnamesinthemodulepartofthelocalnamespace. Thisimporthas
theform:
frommoduleimport*
Thismakesallnamesfromthemoduleavailableinthelocalnamespace.
30.5.3 Import and Rename
Finally,wecancombinethe fromandasoptionstobothimportselecteditemsandprovidemoreunder-
standablenamesforthem.
Wecansaythingslike:
from module importname as name
Inthiscase,we’rebothconcealingthesourceoftheitemandit’soriginalname. We’dbesthaveaverygood
reasonforthis. Thinkoftheconfusionthatcanbecausedby
frommathimportsqrtassin
Thismustbeusedcautiouslytopreventcreatingmoreproblemsthanitappearstosolve.
374 Chapter 30. Modules
Building Skills in Python, Release 2.6.5
30.6 The exec Statement
Theimportstatement, in eﬀect, executes the module ﬁle. Typically, the ﬁles we import are deﬁned as
sequencesofdeﬁnitions. Sinceourmainprogramoftenbeginswithaseriesof importstatements, these
modules are imported into the global namespace. Python also optimizes the modules brought in by the
importstatementsothattheyareonlyimportedonce.
Theexecstatementcanexecuteaﬁle,astringofPythoncode,aswellasa codecreatedbythe compile()
function. Unlikethe importstatement, itdoesn’toptimizemoduledeﬁnitionsorcreateandsaveanew
namespace.
execexpression
Thefunctions eval()andexecfile()doessentiallythesamething.
Warning:FundamentalAssumptions
Theexecstatement, eval()functionand execfile()functionsaredangeroustools. Thesebreakone
oftheFundamentalAssumptions: thesourceyouarereadingisthesourcethatisbeingexecuted. A
programthatusesthe execstatementor eval()functionisincorpratingothersourcestatementsinto
theprogramdynamically. Thiscanbehardtofollow,maintainorenhance.
Generally,theexecstatementissomethingthatmustbeusedwithsomecare. Themostcommonuse
istobringinasetofconﬁgurationparameterswrittenassimplePythonassignmentstatements. For
example,wemightuseaﬁlelikethefollowingastheconﬁgurationparamatersforaprogram.
db_server ="dbs_prod_01 "
db_port="3306"
db_name="PROD"
30.7 Module Exercises
30.7.1 Refactor a Script
Averycommonsituationistotakeascriptﬁleapartandcreateaformalmoduleofthedeﬁnitionsand
aseparatemoduleofthescript. Ifyoureferbacktoyourpreviousexercisescripts, you’llseethatmany
ofyourﬁleshavedeﬁnitionsfollowedbya“main”scriptwhichdemonstratesthatyourdeﬁnitionsactually
work. Whenrefactoringthese,you’llneedtoseparatethedeﬁnitionsfromthetestscript.
Let’sassumeyouhavethefollowingkindofscriptastheresultofapreviousexercise.
# Some Part 3 Exercise.
class X( object ):
does something
class Y( X ):
does something a little different
x1= X()
x1.someMethod()
y2= Y()
y2.someOtherMethod()
30.6. The exec Statement 375
Building Skills in Python, Release 2.6.5
You’llneedtocreatetwoﬁlesfromthis. Themodulewillbethesimplesttoprepare,assumetheﬁlename
ismyModule.py
#!/usr/bin/env python
class X( object ):
does something
class Y( X ):
does something a little different
Yournewnewdemonstationapplicationwilllooklikethisbecauseyouwillhavetoqualifytheclassand
functionnamesthatarecreatedbythemodule.
#!/usr/bin/env python
importmyModule
x1=myModule .X()
x1.someMethod()
y2=myModule .Y()
y2.someOtherMethod()
Youroriginaltestscripthadanimplicitassumptionthatthedeﬁnitionsandthetestscriptwereallinthe
same namespace. This will no longer be true. While you can ﬁnesse this by using ‘ from myNewModule
import *’,thisisnotthebestprogrammingstyle. Itisbettertorewritethetestscripttoexplicitlyqualify
nameswiththemodulename.
Thereareanumberofrelatedclassdeﬁnitionsinpreviousexercisesthatcanbeusedtocreatemodules.
•Anyoftheexercisesin Class Deﬁnition Exercises containsanumberofrelatedclasses.
•The exercise in Shuﬄing Method for the Deck class has two parts: deﬁnitions of Deckand related
material,andaprocedureforcomparingdiﬀerentshuﬄingalgorithms. Thisshouldberepackagedto
separatetheperformancemeasurementscriptfromthebasicdeﬁnitions.Youshouldbeabletoseparate
theDeckandthevariousshuﬄingstrategiesinamoduleseparatefromtheperformancemeasurement
script.
•The simulation built in Statecan be formalized into two modules. The lowest-level module deﬁnes
thebasicgameofRouletteincludingthe WheelandRouletteGame . Anothermoduleimportsthisand
deﬁnesthe Playerandthestates. Finally,themainscriptimportsthegame,theplayerandrunsthe
simulationtoproducealogofwinsandlosses.
•Therationalnumberclass,builtin Numeric T ype Special Methods canbeformalizedintoamodule. A
scriptcanimportthismoduleanddemonstratethevariousoperationsonrationalnumbers.
•Thesequencewithadditionalstatisticalmethods,builtin Sample Class with Statistical Methods can
beformalizedintoamodule. Ascriptcanimportthismoduleanddemonstratethevariousstatistical
operationsonsampledata.
30.7.2 Install a New Module
Createasimplemoduleﬁlewithsomedeﬁnitions. Preferrably,thisisasolutionto Refactor a Script . Install
thedeﬁnitionalpartintothePYTHONPATH.Besuretorenameorremovethelocalversionofthisﬁle. Be
suretouseeachinstallationmethod.
1.Movethemoduleﬁletothesite-packagesdirectory. Besurethatitisremoved(orrenamed)inyour
localdirectory.
2.Movethemoduleﬁletoanotherdirectoryandcreateahardlink(usingtheLinuxlnorequivalent
Windowsutility)fromsite-packagestotheotherdirectoryyoucreated.
376 Chapter 30. Modules
Building Skills in Python, Release 2.6.5
3.Removethehardlinkandputa .pthﬁleinthesite-packagesdirectory.
4.Remove the .pthﬁle and update the PYTHONPATH environment variable to reference the new
directory.
30.7.3 Planning for Maintenance and Upgrades
Thereareanumberofmoduleinstallationscenarios;eachofthesewillrequireadiﬀerenttechnique.Compare
andcontrastthesetechniquesfromseveralpointsofview: costtodeploy,securityofthedeployment,ease
ofdebugging,andcontroloverwhattheuserexperiences.
•You have to provide modules and an application on a number of desktop PC’s. Python must be
installedoneachindividualdesktop. However, theapplicationthatusesPythoncouldbeputona
shared network drive. What are the pros and cons of installing a Python-based application locally
versusonanetworkdrive?
–Howwouldyouhandletheinitialsetup?
–HowwouldyouhandleanupgradetoPythonitself? Forexample,howwouldyouinstallPython
3.1soastopreserveyourmodulesandapplication?
–HowwouldyoucontrolanupgradetoaPython-basedapplication? Forexample,youhaveanew
moduleﬁlethatneedstobemadeavailabletoallusers.
•Youhavetoprovidemodulesandanapplicationonaserver,sharedbyanumberofusers. Python
isinstalledontheserver,asisthePython-basedapplication. Whatsecurityconsiderationsshouldbe
putintoplace?
–HowwouldyouhandleinitialinstallationofPythonandyourserver-basedapplication?
–HowwouldyouhandleanupgradetoPythononthissharedserver?
–HowwouldyoucontrolanupgradetothePython-basedapplicationonthissharedserver?
30.8 Style Notes
Modules are a critical organizational tool for ﬁnal delivery of Python programming. Python software is
deliveredasasetofmoduleﬁles. Oftenalargeapplicationwillhaveoneormoremoduleﬁlesplusamain
scriptthatinitiatestheapplication. Thereareseveralconventionsfornaminganddocumentingmoduleﬁles.
Module names are python identiﬁers as well as ﬁle names. Consequently, they can only use “_” as a
punctuationmark. MostmoduleshavenamesthataremixedCase,beginningwithlowercaseletters. This
conformstotheuseageonmostﬁlesystems. MacOSuserswoulddowelltokeeptheirmodulenamestoa
singleword,andendwith .py. Thispromotesportabilitytooperatingsystemswhereﬁlenamesaremore
typicallysinglewords. Windows,inparticular,canhavetroublewithspacesinﬁlenames.
SomePythonmodulesareawrapperforaC-languagemodule. InthiscasetheC/C++moduleisnamed
inalllowercaseandhasaleadingunderscore(e.g. _socket).
Amodule’scontentsstartwithadocstring. Afterthedocstringcomesanyversioncontrolinformation. The
bulkofamoduleistypicallyaseriesofdeﬁnitionsforclasses,exceptionsandfunctions.
Amodule’sdocstringshouldbeginwithaone-linepithysummaryofthemodule. Thisisusuallyfollowed
byininventoryofthepublicclasses,exceptionsandfunctionsthismodulecreates. Detailedchangehistory
doesnotbelonghere,butinaseparateblockofcommentsoranadditionaldocstring.
IfyouuseCVSorsvntotracktheversionsofyoursourceﬁles,followingstyleisrecommended. Thismakes
theversioninformationavailableasastring,andvisibleinthe .pysourceaswellasany .pycworkingﬁles.
30.8. Style Notes 377
Building Skills in Python, Release 2.6.5
"""My Demo Module.
This module is just a demonstration of some common styles."""
__version__ ="$Revision: 1.3$ "
Notethatthemodule’snamewillqualifteverythingcreatedinthemodule, itisnevernecessarytohave
apreﬁxinfrontofeachnameinsidethemoduletoshowitsorigin. Forexample,consideramodulethat
contains classes and functions related to statistical analysis, called stats.py. Thestatsmodule might
containaclassfortrackingindividualsamples.
PoorNames. Wedon’tincludeextranamepreﬁxeslike statsSampleorstats_sample .
Better Names . We would call our internal sample class Sample. A client application that contains an
importstats statement,wouldrefertotheclassas stats.Sample .
Thisneedlessover-qualiﬁcationofnamessometimesdevolvestosillines, withclassnamesbeginningwith
c_,functionnamesbeginningwith f_,theexpecteddatatypeindicatedwithaletter,andthescope(global
variables, local variables and function parameters) all identiﬁed with various leading and trailing letters.
ThisisnotdoneinPythonprogramming. Classnamesbeginwithuppercaseletters,functionsbeginwith
lowercase. Global variables are identiﬁed explicitly in globalstatements. Most functions are kept short
enoughthatthattheparameternamesarequiteobvious.
Anyelementofamodulewithanamethatbeginswith _single_leading_underscore isnotcreatedinthe
namespaceoftheclientmodule. Whenweuse‘ from stats import * ’,thesenamesthatbeginwith_are
notinsertedintheglobalnamespace. Whileusablewithinthemodule,thesenamesarenotvisibletoclient
modules,makingthemtheequivalentofJava’s‘ private’declaration.
ErrorsandExceptions . Acommonfeatureofmodulesistocreateamodule-wideexceptionclass. The
usuallapproachlookslikethefollowing. Withinamodule,youwoulddeﬁnean Errorclassasfollows:
classError(Exception ):pass
Youcanthenraiseyourmodule-speciﬁcexceptionwiththefollowing.
raiseError,"additional notes "
Aclientmoduleorprogramcanthenreferencethemodule’sexceptionina trystatementas module.Error .
Forexample:
import aModule
try:
aModule.aFunction()
except: aModule.Error, ex:
print "problem", ex
raise
Withthisstyle,theoriginoftheerrorisshownclearly.
378 Chapter 30. Modules
CHAPTER
THIRTYONE
P ACKAGES
A packageisacollectionofPythonmodules. Packagesallowustostructureacollectionofmodules. In
Package Semantics wedescribethebasicsemanticsofpackages. In Package Deﬁnition wedescribehowto
deﬁneapackage. We’lllookatusingapackagein Package Use.
31.1 Package Semantics
A packageisadirectorythatcontainsmodules. Havingadirectoryofmodulesallowsustohavemodules
containedwithinothermodules. Thisallowsustousequaliﬁedmodulenames,clarifyingtheorganization
ofoursoftware.
We can, for example, have several simulations of casino games. Rather than pile all of our various ﬁles
intoasingle,ﬂatdirectory,wemighthavethefollowingkindofdirectorystructure. (Thisisn’ttechnically
complete,itneedsafewadditionalﬁles.)
casino/
craps/
dice.py
game.py
player.py
roulette/
wheel.py
game.py
player.py
blackjack/
cards.py
game.py
player.py
srategy/
basic.py
martingale.py
bet1326.py
cancellation.py
Giventhisdirectorystructure,ouroverallsimulationmightincludestatementslikethefollowing.
importcraps.game ,craps.player
importstrategy.basic asbetting
classMyPlayer ( craps.player.Player ):
def__init__ (self, stake, turns ):
betting.initialize( self)
379
Building Skills in Python, Release 2.6.5
Weimportedthe gameandplayermodulesfromthe crapspackage. Weimportedthe basicmodulefrom
thestrategypackage. We deﬁned a new player based on a class named Playerin thecraps.player
package.
Wehaveanumberofalternativebettingstrategies, allcollectedunderthe strategypackage. Whenwe
import a particular betting strategy, we name the module betting. We can then change to a diﬀerent
bettingstrategybychangingthe importstatement.
Therearetworeasonsforusingapackageofmodules.
•Therearealotofmodules,andthepackagestructureclariﬁestherelationshipsamongthemodules. If
wehaveseveralmodulesrelatedtothegameofcraps,wemighthavetheurgetocreateacraps_game.py
moduleandacraps_player.pymodule. Assoonaswestartstructuringthemodulenamestoshowa
relationship,wecanuseapackageinstead.
•Therearealternativeimplementations,andthepackagecontainspolymorphicmodules. Inthiscase,
wewilloftenusean‘ import package.alternative as interface ’kindofimportstatement. This
isoftenusedforinterfacesanddriverstoisolatetheinterfacedetailsandprovideauniformAPItothe
restofthePythonapplication.
It is possible to go overboard in package structuring. The general rule is to keep the package structure
relativelyﬂat. Havingonlyonemoduleatthebottomofdeeply-nestedpackagesisn’treallyveryinformative
orhelpful.
31.2 Package Deﬁnition
InorderforPythontomakeuseofadirectoryaspackage,thedirectorymusthaveanamethatisavalid
Python identiﬁer and contain a special module named __init__. Valid Python names are composed of
letters,digitsandunderscores. See V ariablesformoreinformation.
The__init__moduleisoftenanemptyﬁle, __init__.pyinthepackagedirectory. Nothingelseisrequired
tomakeadirectoryintoapackage. The __init__.pyﬁle,however,isessential. Withoutit,you’llgetan
ImportError.
Forexample,consideranumberofmodulesrelatedtothedeﬁnitionofcards. Wemighthavethefollowing
ﬁles.
cards/
__init__.py
standard.py
blackjack.py
poker.py
Thecards.standard modulewouldprovidethebasedeﬁnitionofcardasanobjectwithsuitandrank. The
cards.blackjack modulewouldprovidethesubclassesofcardsthatwelookedatin Blackjack Hands . The
cards.pokermodulewouldprovidedthesubclassesofcardsthatwelookedatin Poker Hands.
Thecards.blackjackmoduleandthecards.pokermoduleshouldbothimportthecards.standardmoduleto
getthebasedeﬁnitionforthe CardandDeckclasses.
The__init__module. The__init__moduleisthe“initialization”moduleinapackage. Itisprocessed
theﬁrsttimethatapackagenameisencounteredinan importstatement. Ineﬀect,itinitializesPython’s
understandingofthepackage. Sinceitisalwaysloaded,itisalsoeﬀectivelythedefaultmoduleinapackage.
Thereareanumberofconsequencestothis.
•Wecanimportthepackage,withoutnamingaspeciﬁcmodule. Inthiscasewe’veimportedjustthe
initializationmodule, __init__. Ifthisispartofourdesign,we’llputsomekindofdefaultortop-level
deﬁnitionsinthe __init__module.
380 Chapter 31. Packages
Building Skills in Python, Release 2.6.5
•We can import a speciﬁc module from the package. In this case, we also import the initialization
modulealongwiththerequestedmodule. Inthiscase,the __init__modulecanprovideadditional
deﬁnitions;oritcansimplybeempty.
Inourcardsexample,above,wewoulddowelltomakethe __init__moduledeﬁnethebasic CardandDeck
classes. Ifweimportthepackage, cards,wegetthedefaultmodule, __init__,whichgivesus cards.Card
andcards.Deck. Ifweimportaspeciﬁcmodulelike cards.blackjack ,wegetthe __init__moduleplus
thenamedmodulewithinthepackage.
31.3 Package Use
Ifthe__init__moduleinapackageisempty,thepackageislittlemorethanacollectionofmoduleﬁles.
Inthiscase,wedon’tgenerallymakedirectuseofapackage. Wemerelymentionitinanimportstatement:
‘import cards.poker ’.
Onotherhand,ifthe __init__modulehassomedeﬁnitions,wecanimportthepackageitself. Importinga
packagejustimportsthe __init__modulefromthepackagedirectory. Inthiscase,wementionthepackage
inanimportstatement: ‘ import cards ’.
Evenifthe __init__modulehassomedeﬁnitionsinit,wecanalwaysimportaspeciﬁcmodulefromwithin
the package. Indeed, it is possible for the __init__module in a package is to do things like adjust the
searchpathpriortolocatingindividualmoduleﬁles.
31.4 Package Exercises
1.CreateaPackage . Inthepreviouschapter’sexercises(see Refactor a Script )aresomesuggestions
forcreatingasimplemodule. Themodulesdecribedinthatexercisearesosmallthataddingmodules
doesnotseemnecessary. However,it’sthebestexampleofhowpackagesarisewhensolvingpractical
problems.
Pickamodulethatyou’vealreadycreated. Addasecondﬁlewithafewsimpleclassesthatdolittle
realwork. Thesearebestdescribedas“HelloWorld”classes,sincetheydon’tdoanythingmoreuseful
thanprovideasimpleresponsetoindicatethatthemodulewasimportedcorrectly.
Createapackgedirectorywiththenecessary __init__.pyﬁle.
Createademonstrationscriptwhichimportsandexercisesbothmodulesfromthispackage.
31.5 Style Notes
Sinceapackage,likeamodule,isbothaﬁlesystemlocationandaPythonconstruct,thenamemustbe
a valid Python name, using just letters, numbers and ‘ _’‘s. Additionally, some ﬁle systems are cavalier
aboutmaintainingtheoriginalcaseoftheﬁlename. TheoldMacOS(preMacOSX),andmanyoftheold
Windowsvariantswouldcasuallyalterthecaseofﬁlenames.
Consequently,packageandmodulenamesshouldbealllowercase. Thisway,thereisnoambiguityabout
theintendedcaseofthemodulename.
Packagestructuresshouldberelativelyﬂat. Thegeneralruleistokeepthepackagestructurerelativelyﬂat.
Havingonlyonemoduleatthebottomofdeeply-nestedpackagesisn’treallyveryinformativeorhelpful.
Whileitmayseemlike‘ import casino.games.definitions.tablegames.dicegames.craps ’leaveslotsof
roomforexpansion,therejustaren’tenoughcasinogamestomakethisimmenselydeepstructureusable.
31.3. Package Use 381
Building Skills in Python, Release 2.6.5
Packagesaregenerallyusedfortwothings:
•Collectingrelatedmodulestogetherinadirectorytosimplifyinstallation,maintenenaceanddocumen-
tation.
•Deﬁningalternativeimplementationsassimplyaspossible.
Ifallofyourmodulesaremore-or-lessunique,thenapackagestructureisn’tgoingtohelp. Similarly,ifyou
don’thavealternateimplementationsofsomedriverorinterface,apackagestructureisn’tuseful.
382 Chapter 31. Packages
CHAPTER
THIRTYTWO
THE PYTHON LIBRARY
ConsistentwiththePythonic“BatteriesIncluded”philopsophyofPython,therearehundredsofextension
modules. It can be diﬀicult to match a programming need with a speciﬁc module. The Python Library
Referencedocumentcanbehardtopickthroughtolocateanappropriatemodule. We’llstartatthetopof
thelibraryorganizationandworkourwaydowntoausefulsubsetofthetremendouswealththatisPython.
In Overview of the Python Library we’ll take a very high level overview of what’s in the Python library.
We’llcloselyatthe50orsomostusefulmodulesin Most Useful Library Sections .
32.1 Overview of the Python Library
The Python Library Reference organizes modules into the following sections. The current version of the
Librarydocumentationstrivestoprsentthemoduleswiththemostusefulnearthefrontofthelist. The
ﬁrst23chapters,pluschapter26arethemostuseful. Fromchapter24andbelow(exceptforchapter26),
themodulesaretoohighlyspecializedtocoverinthisbook.
1.Introduction
2.Built-inObjects. Thischapterprovidescompletedocumentationofthebuilt-infunctions,exceptions
andconstants.
3.Built-inTypes. Allofthedatatypeswe’velookedataredocumentedcompletelyinthischapterofthe
libraryreference. Ofcourse,thereareadditionaltypesinthePythonreferencethatwehaven’tlooked
at.
4.StringServices. Thischapterincludesalmostadozenmodulesforvariouskindsofstringandtexthan-
dling. Thisincludesregularexpressionpatternmatching,Unicodecodecsandotherstring-processing
modules.
5.DataTypes. Thischapterhasalmost20modulesprovidingadditionaldatatypes,including datetime.
6.NumericandMathematicalModules. Thischapterdescribes math,decimalandrandommodules.
7.InternetDataHandling. Onesecretbehindtheinternetistheuseofstandardizedsophisticateddata
objects,likeemailmessageswithattachments. Thischaptercoversoveradozenmodulesforhandling
datapassedthroughtheinternet.
8.StructuredMarkupProcessingTools. XML,HTMLandSGMLareallmarkuplanguages.Thischapter
coverstoolsforparsingtheselanguagestoseparatethecontentfromthemarkup.
9.FileFormats. ThischaptercoversmodulesforparsingﬁlesinformatlikeCommaSeparatedValues
(CSV).
10.CryptographicServices. Thischapterhasmoduleswhichcanbeusedtodevelopandcomparesecure
messagehashes.
383
Building Skills in Python, Release 2.6.5
11.FileandDirectoryAccess. ThischapteroftheLibraryReferencecoversmanyofthemoduleswe’ll
lookatin File Handling Modules .
12.DataCompressionandArchiving. Thischapterdescribesmodulesforreadingandwritingzipﬁles,tar
ﬁlesandBZ2ﬁles. We’llcoverthesemodulesin File Handling Modules ,also.
13.DataPersistence. Objectscanbewrittentoﬁles,socketsordatabasessothattheycanpersistbeyond
theprocessingofonespeciﬁcprogram. Thischaptercoversanumberofpackagesforpicklingobjects
sotheyarepreserved. TheSQLite3relationaldatabaseisalsodescribedinthismodule.
14.GenericOperatingSystemServices. AnOperatingSystemprovidesanumberofservicestoourap-
plicationprograms, includingaccesstodevicesandﬁles, consistentnotionsoftime, waystohandle
command-lineoptions,logging,andhandlingoperatingsystemerrors.We’lllooksomeofthesemodules
in Programs: Standing Alone .
15.OptionalOperatingSystemServices. Thissectionincludesoperatingsystemservicesthatarecommon
tomostLinuxvariants,butnotalwaysavailableinWindows.
16.Unix Speciﬁc Services. There are a number of Unix and Linux-speciﬁc features provided by these
modules.
17.InterprocessCommunicationandNetworking. Largerandmorecomplexapplicationprogramsoften
consist of multiple, cooperating components. The World Wide Web, speciﬁcally, is based on the
interactionbetweenclientandserverprograms. Thischapterdescribesmodulesthatprovideabasis
forcommuncatingamongtheOSprocessesthatexecuteourprograms.
18.InternetProtocolsandSupport. Thischapterdescribesovertwodozenmodulesthatprocessawide
varietyofinternet-relateddatastructures. ThisvariesfromtherelativelysimpleprocessingofURL’s
totherelativelycomplexprocessingofXML-basedRemoteProcedureCalls(XML-RPC).
19.MultimediaServices.Multimediaincludessoundsandimages;thesemodulescanbeusedtomanipulate
soundorimageﬁles.
20.Graphical User Interfaces with Tk. The Tkinter module is one way to build a graphical desktop
application. TheGTKlibrariesarealsowidelyusedtobuildrichlyinteractivedesktopapplications;
tomakeuseofthem,you’llneedtodownloadthepyGTKpackage.
21.Internationalization. Thesepackageshelpyouseparatingyourmessagestringsfromtherestofyour
applicationprogram. Youcanthentranslateyourmessagesandprovidelanguage-speciﬁcvariantsof
yoursoftware.
22.ProgramFrameworks. Thesearemodulestohelpbuildcommand-lineapplications.
23.Development Tools. These modules are essential to creating polished, high-quality software: they
supportthecreationofusabledocumentsandreliabletestsforPythonprograms.
24.ThePythonDebugger
25.ThePythonProﬁlers
26.PythonRuntimeServices. Thischapterdescribesthe sysmodule,whichprovidesanumberofuseful
objects.
27.CustomPythonInterpreters
28.RestrictedExecution
29.ImportingModules
30.PythonLanguageServices
31.Pythoncompilerpackage
32.AbstractSyntaxTrees
384 Chapter 32. The Python Library
Building Skills in Python, Release 2.6.5
33.MiscellaneousServices
34.SGIIRIXSpeciﬁcServices
35.SunOSSpeciﬁcServices
36.MSWindowsSpeciﬁcServices
32.2 Most Useful Library Sections
Thissectionwilloverviewabout50ofthemostusefullibarymodules. Thesemodulesareproventechnology,
widelyused,heavilytestedandconstantlyimproved. Thetimespentlearningthesemoduleswillreducethe
timeittakesyoutobuildanapplicationthatdoesusefulwork.
We’lldigmoredeeplyintojustafewofthesemodulesinsubsequentchapters.
Tip:LessonsLearned
Asaconsultant,we’veseenfartoomanyprogrammerswritingmoduleswhichoverlapthese. Therearetwo
causes: ignoranceandhubris. Inthissection,wehopetotackletheignorancecause.
Pythonincludesalargenumberofpre-builtmodules. Themoreyouknowaboutthese,thelessprogramming
youhavetodo.
Hubrissometimescomesfromthefeelingthatthelibrarymoduledoesn’tﬁtouruniqueproblemwellenough
tojustifystudyingthelibrarymodule. Inotherlanguageswecan’treadthelibrarymoduletoseewhatit
real lydoes. InPython,however,thedocumentationisonlyanintroduction;we’reencouragedtoactually
readthelibrarymodule. Thisiscalledthe “Use the Source, Luke” principle.
Weﬁndthathubrisismostcloselyassociatedwithcalendricalcalcuations. Itisn’tclearwhyprogrammers
investsomuchtimeandeﬀortwritingbuggycalendricalcalculations. Pythonprovidesmanymodulesfor
dealingwithtimes,datesandthecalendar.
8. StringServices . TheStringServicesmodulescontainsstring-relatedfunctionsorclasses. See Strings
formoreinformationonstrings.
reTheremoduleisthecoreoftextpatternrecognitionandprocessing. A regular expression is
aformulathatspeciﬁeshowtorecognizeandparsestrings. The remoduleisdescribedin
detailin Complex Strings: the re Module .
structTheavowedpurposeofthe structmoduleistoallowaPythonprogramtoaccessC-
language API’s; it packs and unpacks C-language struct object. It turns out that this
modulecanalsohelpyoudealwithﬁlesinpackedbinaryformats.
diﬄibThedifflibmodule contains the essential algorithms for comparing two sequences,
usuallysequencesoflinesoftext. ThishasalgorithmssimilartothoseusedbytheUnix
diﬀcommand(theWindow COMPcommand).
StringIO
cStringIOTherearetwovariationson StringIOwhichprovideﬁle-likeobjectsthatreadfrom
orwritetoastringbuﬀer. The StringIOmoduledeﬁnestheclass StringIO,fromwhich
subclassescanbederived. The cStringIOmoduleprovidesahigh-speedC-languageimple-
mentationthatcan’tbesubclassed.
Notethatthesemoduleshaveatypicalmixed-casenames.
textwrapThisisamoduletoformatplaintext. Whiletheword-wrappingtaskissometimes
handledbywordprocessors,youmayneedthisinotherkindsofprograms. Plaintextﬁles
arestillthemostportable,standardwaytoprovideadocument.
32.2. Most Useful Library Sections 385
Building Skills in Python, Release 2.6.5
codecsThismodulehashundredsoftextencodings. ThisincludesthevastarrayofWindows
codepagesandtheMacintoshcodepages.ThemostcommonlyusedarethevariousUnicode
schemes (utf-16 and utf-8). However, there are also a number of codecs for translating
betweenstringsoftextandarraysofbytes. Theseschemesincludebase-64,zipcompression,
bz2compression,variousquotingrules,andeventhesimplerot_13substitutioncipher.
9. DataTypes . TheDataTypesmodulesimplementanumberofwidely-useddatastructures. These
aren’tasusefulassequences,dictionariesorstrings–whicharebuilt-intothelanguage. Thesedatatypes
includedates,generalcollections,arrays,andscheduleevents. Thismoduleincludesmodulesforsearching
lists,copyingstructuresorproducinganicelyformattedoutputforacomplexstructure.
datetimeThedatetimehandlesdetailsofthecalendar,includingdatesandtimes.Additionally,
thetimemoduleprovidessomemorebasicfunctionsfortimeanddateprocessing. We’ll
coverbothmodulesindetailin Dates and Times: the time and datetime Modules .
Thesemodulesmeanthatyouneverneedtoattemptyourowncalendricalcalculations. One
oftheimportantlessonslearnedinthelate90’swasthatmanyprogrammerslovetotackle
calendricalcalculations,buttheireﬀortshadtobetestedandreworkedpriortoJanuary1,
2000,becauseofinnumerablesmallproblems.
calendarThismodulecontainsroutinesfordisplayingandworkingwiththecalendar. Thiscan
helpyoudeterminethedayoftheweekonwhichamonthstartsandends;itcancountleap
daysinanintervalofyears,etc.
collectionsThis package contains some handy data types, plus the Abstract Base Classes
thatweusefordeﬁningourowncollections. Datatypesincludethe collections.deque
– a “double-ended queue” – that can be used as stack (LIFO) or queue (FIFO). The
collections.defaultdict class, which can return a default value instead of raising an
exception for missing keys. The collections.namedtuple function helps us to create a
small,specializedclassthatisatuplewithnamedpositions.
Wemadeuseofthislibraryin Creating or Extending Data T ypes .
bisectThebisectmodulecontainsthe bisect()functiontosearchasortedlistforaspeciﬁc
value. Italsocontainsthe insort()fucntiontoinsertanitemintoalistmaintainingthe
sortedorder. Thismoduleperformsfasterthansimplyappendingvaluestoalistandcalling
thesort()methodofalist. Thismodule’ssourceisinstructiveasalessoninwell-crafted
algorithms.
arrayThearraymodulegivesyouahigh-performance,highlycompactcollectionofvalues. It
isn’tasﬂexibleasalistoratuple,butitisfastandtakesuprelativelylittlememory. This
ishelpfulforprocessingmedialikeimageorsoundﬁles.
schedTheschedmodulecontainsthedeﬁnitionforthe schedulerclassthatbuildsasimple
taskscheduler. Whenascheduleriscontructed,itisgiventwouser-suppliedfunctions: one
returns the “time” and the other executes a “delay” waiting for the time to arrive. For
real-time scheduling, the timemoduletime()andsleep()functions can be used. The
schedulerhasamainloopthatcallsthesuppliedtimefunctionandcomparesthecurrent
timewiththetimeforscheduledtasks;itthencallsthesuppliedadelayfunctionforthe
diﬀerenceintime. Itrunsthescheduledtask,andcallsthedelayfunctionwithaduration
ofzerotoreleaseanyresources.
Clearly,thissimplealgorithmisveryversatile. Bysupplyingcustomtimefunctionsthat
workinminutesinsteadofseconds,andadelayfunctionthatdoesadditionalbackground
processingwhilewaitingforthescheduledtime,aﬂexibletaskmanagercanbeconstructed.
copyThecopymodulecontainsfunctionsformakingcopiesofcomplexobjects. Thismodule
containsafunctiontomakea shal low copyofanobject,whereanyobjectscontainedwithin
the parent are not copied, but references are inserted in the parent. It also contains a
386 Chapter 32. The Python Library
Building Skills in Python, Release 2.6.5
functiontomakea deep copyofanobject,whereallobjectscontainedwithintheparent
objectareduplicated.
NotethatPython’ssimpleassignmentonlycreatesavariablewhichisalabel(orreference)
toanobject,notaduplicatecopy. Thismoduleistheeasiestwaytocreateanindependent
copy.
pprintThepprintmodulecontainssomeusefulfunctionslike pprint.pprint() forprinting
easy-to-readrepresentationsofnestedlistsanddictionaries. Italsohasa PrettyPrinter
classfromwhichyoucanmakesubclassestocustomizethewayinwhichlistsordictionaries
orotherobjectsareprinted.
10. Numeric and Mathematical Modules . These modules include more specialized mathemathical
functionsandsomeadditionalnumericdatatypes.
decimalThedecimalmoduleprovidesdecimal-basedarithmeticwhichcorrectlyhandlessignif-
icantdigits,roundingandotherfeaturescommontocurrencyamounts.
mathThemathmodulewascoveredin The math Module . Itcontainsthemathfunctionslike
sine,cosineandsquareroot.
randomTherandommodulewascoveredin The math Module .
11. FileandDirectoryAccess . We’lllookatmanyofthesemodulesin File Handling Modules . These
arethemoduleswhichareessentialforhandlingdataﬁles.
os.pathTheos.pathmoduleiscriticalforcreatingportablePythonprograms. Thepopular
operating systems (Linux, Windows and MacOS) each have diﬀerent approaches to ﬁle
names. APythonprogramthatdependson os.pathwillbehavemoreconsistentlyinall
environments.
ﬁleinputThefileinputmodulehelpsyourprogamprocessalargenumberofﬁlessmoothly
andsimply.
glob
fnmatchTheglobandfnmatchmoduleshelpaWindowsprogramhandlewild-cardﬁlenames
inastandardmanner.
shutilTheshutilmoduleprovidesshell-likeutilitiesforﬁlecopy,ﬁlerename,directorymoves,
etc. Thismoduleletsyouwriteshort,eﬀectivePytthonprogramsthatdothingsthatare
typicallydonebyshellscripts.
WhyusePythoninsteadoftheshell? Pythonisfareasiertoread,farmoreeﬀicient,andfar
morecapableofwritingmoderatelysophisticatedprograms. UsingPythonsavesyoufrom
havingtowritelong,painfulshellscripts.
12. DataPersistence . Thereareseveralissuesrelatedtomakingobjectspersistent. InChapter12ofthe
PythonReference,thereareseveralmodulesthathelpdealwithﬁlesinvariouskindsofformats. We’lltalk
aboutthesemodulesindetailin File F ormats: CSV, T ab, XML, Logs and Others .
Thereareseveraladditionaltechniquesformanagingpersistence. Wecan“pickle”or“shelve”anobject. In
thiscase,wedon’tdeﬁneourﬁleformatindetail,insteadweleaveittoPythontopersistourobjects.
Wecanmapourobjectstoarelationaldatabase. Inthiscase, we’llusetheSQLlanguagetodeﬁneour
storage,createandretrieveourobjects.
pickle
shelveThepickleandshelvemodulesareusedtocreatepersistentobjects;objectsthatpersist
beyondtheone-timeexecutionofaPythonprogram. The picklemoduleproducesaserial
textrepresentationofanyobject,howevercomplex;thiscanreconstituteanobjectfromits
textrepresentation. The shelvemoduleusesa dbmdatabasetostoreandretrieveobjects.
32.2. Most Useful Library Sections 387
Building Skills in Python, Release 2.6.5
Theshelvemoduleisnotacompleteobject-orienteddatabase,asitlacksanytransaction
managementcapabilities.
sqlite3ThismoduleprovidesaccesstotheSQLiterelationaldatabase. Thisdatabaseprovidesa
signiﬁcantsubsetofSQLlanguagefeatures,allowingustobuildarelationaldatabasethat’s
compatiblewithproductslikeMySQLorPostgres.
13. DataCompressionandArchiving . Thesemoduleshandlethevariousﬁlecompressionalgorithms
thatareavailable. We’lllookatthesemodulesin File Handling Modules .
tarﬁle
zipﬁleThesetwomodulescreatearchiveﬁles,whichcontainanumberofﬁlesthatarebound
together. TheTARformatisnotcompressed,wheretheZIPformatiscompressed. Often
aTARarchiveiscompressedusingGZIPtocreatea.tar.gzarchive.
zlib
gzip
bz2Thesemodulesemplioyediﬀerentcompressionalgorithms. Theyallhavesimilarfeaturesto
compressoruncompressﬁles.
14. FileFormats . Thesearemodulesforreadingandwritingﬁlesinafewoftheamazingvarietyofﬁle
formatsthatareincommonuse. Inadditiontothesecommonformats,modulesinchapter20,Structured
MarkupProcessigToolsarealsoimportant.
csvThecsvmodulehelpsyouparseandcreateComma-SeparatedValue(CSV)dataﬁles. This
helpsyouexchangedatawithmanydesktoptoolsthatproduceorconsumeCSVﬁles. We’ll
lookatthisin Comma-Separated V alues: The csv Module .
ConﬁgParser Conﬁgurationﬁlescantakeanumberofforms. Thesimplestapproachistousea
Pythonmoduleastheconﬁgurationforalarge,complexprogram.Sometimesconﬁgurations
areencodedinXML.
ManyWindowslegacyprogramsuse .INIﬁles. TheConﬁgParsercangracefullyparsethese
ﬁles.
15. CryptographicServices . Thesemodulesaren’tspeciﬁcallyencryptionmodules. Manypopularen-
cryptionalgorithmsareprotectedbypatents. Often,encryptionrequirescompiledmodulesforperformance
reasons. Thesemodulescomputesecuredigestsofmessagesusingavarietyofalgorithms.
hashlibComputeasecurehashordigestofamessagetoensurethatitwasnottamperedwith.
Thehashlib.md5class creates an MD5 hash, which is often used for validating that a
downloadedﬁlewasrecievedcorrectlyandcompletely.
16.GenericOperatingSystemServices .Thefollowingmodulescontainbasicfeaturesthatarecommon
toalloperatingsystems. MostofthiscommonalityisacheivedbyusingtheCstandardlibraries. Byusing
this module, you can be assured that your Python application will be portable to almost any operating
system.
osTheos(andos.path) modules provide access to a number of operating system features.
TheosmoduleprovidescontroloverProcesses,FilesandDirectories. We’lllookat osand
os.pathin The os Module and The os.path Module .
timeThetimemodule provides basic functions for time and date processing. Additionally
datetimehandlesdetailsofthecalendarmoregracefullythan timedoes. We’llcoverboth
modulesindetailin Dates and Times: the time and datetime Modules .
Havingmoduleslike datetimeandtimemeanthatyouneverneedtoattemptyourown
calendricalcalculations. Oneoftheimportantlessonslearnedinthelate90’swasthatmany
388 Chapter 32. The Python Library
Building Skills in Python, Release 2.6.5
programmerslovetotacklecalendricalcalculations,buttheireﬀortshadtobetestedand
reworkedbecauseofinnumerablesmallproblems.
getopt
optparseA well-written program makes use of the command-line interface. It is conﬁgured
throughoptionsandarguments, aswellaspropertiesﬁles. We’llcover optparsein Pro-
grams: Standing Alone .
Command-line programs for Windows will also need to use the globmodule to perform
standardﬁle-nameglobbing.
loggingOften,youwantasimple,standardizedlogforerrorsaswellasdebugginginformation.
We’lllookatloggingindetailin Log Files: The logging Module .
17. Optional Operating System Services . This section includes less-common modules for handling
threadingotherfeaturesthataremore-or-lessunavailableinWindows.
18. InterprocessCommunicationandNetworking . Thissectionincludesmodulesforcreatingpro-
cessesanddoingsimple interprocess communication (IPC)usingthestandardsocketabstraction.
subprocessThesubprocessmoduleprovidestheclassrequiredtocreateaseparateprocess.
Thestandardapproachiscalled forkingasubprocess. UnderWindows,similarfunctionality
isprovided.
Using this, you can write a Python program which can run any other program on your
computer. Thisisveryhandyforautomatingcomplextasks,anditallowsyoutoreplace
clunky,diﬀicultshellscriptswithPythonscripts.
socketThisisaPythonimplementationofthestandardsocketlibrarythatsupportstheTCP/IP
protocol.
19. InternetDataHandling . TheInternetDataHandlingmodulescontainanumberofhandyalgo-
rithms. AgreatdealofdataisdeﬁnedbytheInternetRequestforComments(RFC).Sincetheseeﬀectively
standardizedataontheInternet,ithelpstohavemodulesalreadyinplacetoprocessthisstandardizeddata.
Mostofthesemodulesarespecialized,butafewhavemuchwiderapplication.
mimify
base64
binascii
binhex
quopri
uuThesemodulesallprovidevariouskindsofconversions,ecapesorquotingsothatbinarydata
canbemanipulatedassafe, universalASCIItext. Thenumberofthesemodulesreﬂects
thenumberofdiﬀerentcleversolutionstotheproblemofpackingbinarydataintoordinary
emailmessages.
20. StructuredMarkupProcessingTools . Thefollowingmodulescontainalgorithmsforworkingwith
structuredmarkup: StandardGeneralMarkupLanaguage(SGML),HypertextMarkupLanguage(HTML)
and Extensible Markup Language (XML). These modules simplify the parsing and analysis of complex
documents. Inadditiontothesemodules,youmayalsoneedtousetheCSVmoduleforprocessingﬁles;
that’sinchapter9,FileFormats.
htmllibOrdinaryHTMLdocumentscanbeexaminedwiththe htmllibmodule. Thismodule
basedonthe sgmllibmodule.Thebasic HTMLParserclassdeﬁnitionisasuperclass;youwill
typicallyoverridethevariousfunctionstodotheappropriateprocessingforyourapplication.
32.2. Most Useful Library Sections 389
Building Skills in Python, Release 2.6.5
One problem with parsing HTML is that browsers – in order to conform with the ap-
plicable standards – must accept incorrect HTML. This means that many web sites
publish HTML which is tolerated by browsers, but can’t easily be parsed by htmllib.
When confronted with serious horrors, consider downloading the Beautiful Soup module
(http://www.crummy.com/software/BeautifulSoup/ ). ThishandleserroneousHTMLmore
gracefullythan htmllib.
xml.sax
xml.dom
xml.dom.minidom Thexml.saxandxml.dommodulesprovidetheclassesnecessarytocon-
venientlyreadandprocessXMLdocuments. ASAXparserseparatesthevarioustypesof
contentandpassesaseriesofeventsthehandlerobjectsattachedtotheparser. ADOM
parserdecomposesthedocumentintotheDocumentObjectModel(DOM).
Thexml.dommodulecontainstheclasseswhichdeﬁneanXMLdocument’sstructure. The
xml.dom.minidom modulecontainsaparserwhichcreatesaDOMobject.
Additionally,the formattermodule,inchapter24(MiscellaneousModules)goesalongwiththese.
21. Internet Protocols and Support . The following modules contain algorithms for responding the
several of the most common Internet protocols. These modules greatly simplify developing applications
basedontheseprotocols.
cgiThecgimodulecanbeusedforwebserverapplicationsinvokedasCommonGatewayInter-
face(CGI)scripts. ThisallowsyoutoputPythonprogramminginthe cgi-bindirectory.
When the web server invokes the CGI script, the Python interpreter is started and the
Pythonscriptisexecuted.
wsgirefTheWebServicesGatewayInterface(WSGI)standardprovidesamuchsimplerframe-
workforwebapplicationsandwebservices. See PEP333formoreinformation.
Essentially, thissubsumesallofCGI,plusaddsseveralfeaturesandasystematicwayto
composelargerapplicationsfromsmallercomponents.
urllib
urllib2
urlparseThesemodulesallowyoutowriterelativelysimpleapplicationprogramswhichopen
aURLasifitwereastandardPythonﬁle. Thecontentcanbereadandperhapsparsed
withtheHTMLorXMLparsermodules, describedbelow. The urllibmoduledepends
on thehttplib,ftplibandgopherlibmodules. It will also open local ﬁles when the
scheme of the URL is file:. Theurlparsemodule includes the functions necessary to
parse or assemble URL’s. The urllib2module handles more complex situations where
thereisauthenticationorcookiesinvolved.
httplib
ftplib
gopherlibThehttplib,ftplibandgopherlibmodulesincluderelativelycompletesupport
for building client applications that use these protocols. Between the htmlmodule and
httplibmodule, asimplecharacter-orientedwebbrowserorwebcontentcrawlercanbe
built.
poplib
imaplibThepoplibandimaplibmodulesallowyoutobuildmailreaderclientapplications.
ThepoplibmoduleisformailclientsusingthePost-OﬀiceProtocol,POP3(RFC1725),to
390 Chapter 32. The Python Library
Building Skills in Python, Release 2.6.5
extractmailfromamailserver. The imaplibmoduleisformailserversusingtheInternet
MessageAccessProtocol,IMAP4(RFC2060)tomanagemailonanIMAPserver.
nntplibThenntplibmoduleallowsyoutobuildanetworknewsreader. Thenewsgroups,like
comp.lang.python ,areprocessedbyNNTPservers. Youcanbuildspecial-purposenews
readerswiththismodule.
SocketServer TheSocketServer module provides the relatively advanced programming re-
quired to create TCP/IP or UDP/IP server applications. This is typically the core of a
stand-aloneapplicationserver.
SimpleHTTPServer
CGIHTPPServer
BaseHTTPServer TheSimpleHTTPServer andCGIHTTPServer modules rely on the ba-
sicBaseHTTPServer andSocketServer modules to create a web server. The
SimpleHTTPServer moduleprovidestheprogrammingtohandlebasicURLrequests. The
CGIHTTPServer moduleaddsthecapabilityforrunningCGIscripts;itdoesthiswiththe
fork()andexec()functionsofthe osmodule,whicharenotnecessarilysupportedonall
platforms.
asyncore
asynchatTheasyncore(andasynchat) modules help to build a time-sharing application
server. Whenclientrequestscanbehandledquicklybytheserver,complexmulti-threading
andmulti-processingaren’treallynecessary. Instead,thismodulesimplydispatcheseach
clientcommunicationtoanappropriatehandlerfunction.
22. MultimediaServices . Thisisbeyondthescopeofthisbook.
23. Internationalization .Awell-writtenapplicationavoidsincludingmessagesasliteralstringswithinthe
programtext. Instead,allmessages,prompts,labels,etc.,arekeptasaseparateresource. Theseseparate
stringresourcescanthenbetranslated.
localeThelocalemodulefetchesthecurrentlocale’sdate,time,numberandcurrencyformat-
tingrules. Thisprovidesfunctionswhichwillformatandparsedates,times,numbersand
currencyamounts.
Ausercanchangetheirlocalewithsimpleoperatingsystemsettings,andyourapplication
canworkconsistentlywithallotherprograms.
24. ProgramFrameworks . We’lltalkaboutanumberofprogram-relatedissuesin Programs: Standing
Aloneand Architecture: Clients, Servers, the Internet and the W orld Wide W eb . Muchofthisgoesbeyond
thestandardPythonlibrary.Withinthelibraryaretwomodulesthatcanhelpyoucreatelarge,sophisticated
command-lineapplicationprograms.
cmdThecmdmodulecontainsasuperclassusefulforbuildingthemaincommand-readingloop
ofaninteractiveprogram. Thestandardfeaturesincludeprintingaprompt,readingcom-
mands, providing help and providing a command history buﬀer. A subclass is expected
toprovidefunctionswithnamesoftheform do_command() . Whentheuserentersaline
beginningwith command,theappropriate do_command() functioniscalled.
shlexTheshlexmodulecanbeusedtotokenizeinputinasimplelanguagesimilartotheLinux
shell languages. This module deﬁnes a basic shlexclass with parsing methods that can
separatewords,quotesstringsandcomments,andreturnthemtotherequestingprogram.
25. GraphicalUserInterfaceswithTk . Thisisbeyondthescopeofthisbook.
26. DevelopmentTools . Thetestingtoolsarecentraltocreatingreliable,completeandcorrectsoftware.
32.2. Most Useful Library Sections 391
Building Skills in Python, Release 2.6.5
doctestWhen a function or a class docstring includes a snippet of interactive Python, the
doctestmodulecanusethissnippettoconﬁrmthatthefunctionorclassworksasadvertised.
Forexample:
defmyFunction ( a, b ):
""">>> myFunction( 2, 3 )
6
>>> myFunction( 5.0, 7.0 )
35.0
"""
returna*b
The‘>>> myFunction( 2, 3 ) ’linesareparsedbydoctest. Theyareevaluated,andthe
actualresultcomparedwiththedocstringcomment.
unittestThis is more sophisticated testing framework in which you create TestCases which
deﬁneaﬁxture,anoperationandexpectedresults.
2to3ThismoduleisusedtoconvertPython2ﬁlestoPython3.
Priortousingthis,youshouldrunyourPythonprogramswiththe‘ -3’optiontoidentify
any potential incompatibilities. Once you’ve ﬁxed all of the incompatibilities, you can
conﬁdentlyconvertyourprogramtoPython3.
Donot“tweak”theoutputfromthisconversion. Ifyourconvertedprogramdoesn’twork
underPython3,it’salmostalwaysaproblemwithyouroriginalprogramplayingfastand
loosewithPythonrules.
Intheunlikelyeventthatthismodulecannotconvertyourprogram,youshouldprobably
rewriteyourprogramtoeliminatethe“features”thatarecausingproblems.
27. DebuggingandProﬁling . Debuggingisanimportantskill,asisperformanceproﬁling. Muchofthis
isbeyondthescopeofthisbook.
timeitThisisahandymodulethatletsyougettiminginformationtocompareperformanceof
alternativeimplementationsofanalgorithm.
28. PythonRuntimeServices . ThePythonRuntimeServicesmodulesareconsideredtosupportthe
Pythonruntimeenvironment.
sysThesysmodulecontainsexecutioncontextinformation.Ithasthecommand-linearguments
(insys.argv)usedtostartthePythoninterpreter. Ithasthestandardinput,outputand
errorﬁledeﬁnitions. Ithasfunctionsforretrievingexceptioninformation. Itdeﬁnesthe
platform,byteorder,modulesearchpathandotherbasicfacts. Thisistypicallyusedbya
mainprogramtogetrun-timeenvironmentinformation.
Mostoftheremainingsectionsofthelibrary,withoneexception,aretooadvancedforthisbook.
•1.CustomPythonInterpreters
•1.RestrictedExecution
•1.ImportingModules
•1.PythonLanguageServices
•1.Pythoncompilerpackage
34. MiscellaneousServices . Thisisavaguecatch-allthatonlyhasonemodule.
formatterTheformattermodulecanbeusedinconjunctionwiththeHTMLandXMLparsers.
A formatter instance depends on a writer instance that produces the ﬁnal (formatted)
output. Itcanalsobeusedonitsowntoformattextindiﬀerentways.
392 Chapter 32. The Python Library
Building Skills in Python, Release 2.6.5
TheHTMLparsercanproduceaplain-textversionofawebpage. Todothis,itusesthe
formattermodule.
32.3 Library Exercises
1.Whyaretheremultipleversionsofsomepackages ? Lookatsomeplaceswheretherearetwo
moduleswhichclearlydothesameoralmostthesamethings. Examplesinclude timeanddatetime,
urllibandurllib2,pickleandcPickle,StringIOandcStringIO,subprocessandpopen2,getopt
andoptparse.
Whyallowthisduplication? Whynotpicka“best”moduleanddiscardtheothers?
2.Isitbettertobuildanapplicationaroundthelibraryorsimplydesigntheapplication
and ignore the library ? Assuming that we have some clear, detailed requirements, what is the
beneﬁtoftimespentsearchingthroughthelibrary? Whatifmostlibrarymodulesareanear-miss?
Shouldwealterourdesigntoleveragethelibrary,orjustwritetheprogramwithoutconsideringthe
library?
3.Which library modules are deprecated or disabled ? Why are these still documented in the
library?
32.3. Library Exercises 393
Building Skills in Python, Release 2.6.5
394 Chapter 32. The Python Library
CHAPTER
THIRTYTHREE
COMPLEX STRINGS: THE RE
MODULE
Thereareanumberofrelatedproblemswhenprocessingstrings. Whenwegetstringsasinputfromﬁles,
weneedtorecognizetheinputasmeaningful. Oncewe’resureit’sintherightform,weneedtoparsethe
inputs,sometimeswe’llahvetoconvertsomepartsintonumbers(orotherobjects)forfurtheruse.
Forexample,aﬁlemaycontainlineswhicharesupposedtobelike "Birth Date: 3/8/85" . Wemayneed
todetermineifagivenstringhastherightform. Then,wemayneedtobreakthestringintoindividual
elementsfordateprocessing.
We can accomplish these recognition, parsing and conversion operations with the remodule in Python.
A regular expression (RE)isaruleorpatternusedformatchingstrings. Itdiﬀersfromthefairlysimple
“wild-card”rulesusedbymanyoperatingsystemsfornamingﬁleswithapattern. Thesesimpleoperating
systemﬁle-namematchingrulesareembodiedintwosimplerpackages: fnmatchandglob.
We’lllookatthesemanticsofaregularexpressionin Semantics. We’lllookatthesyntaxfordeﬁningaRE
in Creating a Regular Expression . In Using a Regular Expression we’llputtheregularexpressiontouse.
33.1 Semantics
Onewaytolookatregularexpressionsisasaproductionruleforconstructingstrings. Inprinciple,such
arulecoulddescribeaninﬁnitenumberofstrings. Therealpurposeisnottoenumerateallofthestrings
describedbytheproductionrule,buttomatchacandidatestringagainsttheproductionruletoseeifthe
rulecouldhaveconstructedthegivenstring.
Forexample,arulecouldbe "aba". Allstringsoftheform "aba"wouldmatchthissimplerule. Thisrule
producesonlyasinglestring. Determiningamatchbetweenagivenstringandtheonestringproducedby
thisruleisprettysimple.
Amorecomplexrulecouldbe "ab*a". Theb*meanszeroormorecopiesof b. Thisruleproducesaninﬁnite
setofstringsincluding "aa","aba","abba",etc. It’salittlemorecomplextoseeifagivenstringcould
havebeenproducedbythisrule.
ThePython remoduleincludesPythonconstructsforcreatingregularexpressions(REs),matchingcandi-
datestringsagainstRE’s,andexaminingthedetailsofthesubstringsthatmatch. Thereisalotofpower
andsubtletytothispackage. Acompletetreatmentisbeyondthescopeofthisbook.
395
Building Skills in Python, Release 2.6.5
33.2 Creating a Regular Expression
Therearealotofoptionsandclausesthatcanbeusedtocreateregularexpressions. Wecan’tpretendto
coverthemallinasinglechapter. Instead,we’llcoverthebasicsofcreatingandusingRE’s.
Thefullsetofrulesisgiveninsection8.2.1RegularExpressionSyntaxofthe Python Library Reference
document. Additionally,therearemanyﬁnebooksdevotedtothissubject.
•Anyordinarycharacter,byitself,isanRE .Example:‘ "a"’isanREthatmatchesthecharacter a
inthecandidatestring. Whiletrivial,itiscriticaltoknowthateachordinarycharacterisastand-alone
RE.
Somecharactershavespecialmeanings. Wecan escapethatspecialmeaningbyusinga‘ \’infront
ofthem. Forexample,‘ *’isaspecialcharacter,but‘ \*’escapesthespecialmeaningandcreatesa
single-characterREthatmatchesthecharacter‘ *’.
Additionally,someordinarycharacterscanbemadespecialwith‘ \’. Forinstance‘ \d’isanydigit,‘ \s’
isanywhitespacecharacter. ‘ \D’isanynon-digit,‘ \S’isanynon-whitespacecharacter.
•Thecharacter ‘.’isanREthatmatchesanysinglecharacter . Example: ‘ "x.z"’isanRE
thatmatchesthestringslike xazorxbz,butdoesn’tmatchstringslike xabz.
•Thebrackets, ‘"[...]"’,createaREthatmatchesanycharacterbetweenthe[]’s . Example:
‘"x[abc]z"’matchesanyof xaz,xbzorxcz. Arangeofcharacterscanbespeciﬁedusinga‘ -’,for
example‘ "x[1-9]z"’. Toincludea‘ -’,itmustbeﬁrstorlast. ‘ ^’cannotbeﬁrst. Multiplerangesare
allowed,forexample‘ "x[A-Za-z]z" ’. Here’sacommonREthatmatchesaletterfollowedbyaletter,
digitor_: ‘"[A-Za-z][A-Za-z1-9_]" ’.
•Themodiﬁedbrackets, "[^...]",createaregularexpressionthatmatchesanycharacter
except those between the [ ]’s . Example: ‘ "a[^xyz]b"’ matches strings like a9banda$b, but
don’tmatch axb. Aswith‘ [ ]’,arangecanbespeciﬁedandmultiplerangescanbespeciﬁed.
•A regular expression can be formed from concatenating regular expressions . Example:
‘"a.b"’isthreeregularexpressions,theﬁrstmatches a,thesecondmatchesanycharacter,thethird
matchesb.
•Aregularexpressioncanbeagroupofregularexpressions,formedwith()’s . Example:
‘"(ab)c"’ is a regular expression composed of two regular expressions: ‘ "(ab)"’ (which, in turn, is
composed of two RE’s) and ‘ "c"’. ‘()’‘s also group RE’s for extraction purposes. The elements
matched within ‘ ()’ are remembered by the regular expression processor and set aside in a Match
object.
•Aregularexpressioncanberepeated . Severalrepeatconstructsareavailable: ‘ "x*"’repeats
‘"x"’ zero or more times; ‘ "x+"’ repeats ‘ "x"’ 1 or more times; ‘ "x?"’ repeats ‘ "x"’ zero or once.
Example: ‘ "1(abc)*2"’matches‘ 12’or‘1abc2’or‘1abcabc2’, etc. Theﬁrstmatch, against 12, is
oftensurprising;buttherearezerocopiesof abcbetween1and2.
Theabove(‘ *’,‘+’and‘?’) arecalled“greedy”repeatsbecausetheywillmatchthelongeststringof
repeats.
Thereareversionswhicharenotgreedy: ‘ *?’,‘+?’ willmatchtheshorteststringofrepeats.
•Thecharacter "^"isanREthatonlymatchesthebeginningoftheline ,"$"isanREthat
onlymatchestheendoftheline . Example: "^$"matchesacompletelyemptyline.
Herearesomeexamples.
r"[_A-Za-z][_A-Za-z1-9]* "
396 Chapter 33. Complex Strings: the re Module
Building Skills in Python, Release 2.6.5
Matches a Python identiﬁer. This embodies the rule of starting with a letter or ‘ _’, and containing any
numberofletters,digitsor‘ _’‘s. Notethatanynumberincludes0occurances,soasingleletteror‘ _’isa
valididentiﬁer.
r"^\s*import \s"
Matchesasimple importstatement. Itmatchesthebeginningofthelinewith ^,zeroormorewhitespace
characterswith \s*,thesequenceofletters import;andonemorewhitespacecharacter. Thispatternwill
ignoretherestoftheline.
r"^\s*from\s+[_A-Za-z][_A-Za-z1-9]* \s+import \s"
Matchesa‘ from module import ’statement. Aswiththesimpleimport,itmatchesthebeginningofthe
line(^),zeroormorewhitespacecharacters( \s*),thesequenceofletters from,aPythonmodulename,one
ormorewhitespacecharacters( \s+),thesequence import,andonemorewhitespacecharacter.
r"(\d+):(\d+):(\d+\.?\d*)"
Matchesaoneormoredigits,a :,oneormoredigits,a :,anddigitsfollowedbyoptional .andzeroor
moreotherdigits. Forexample 20:07:13.2wouldmatch,aswould 13:04:05
Further,the()’sgroupthedigitstringsforconversionandfurtherprocessing. Theresulting Matchobject
willhavefourgroups. ‘ group(0)’istheentirematch;‘ group(1)’willbetheﬁrststringofdigits.
r"def\s+([_A-Za-z][_A-Za-z1-9]*) \s+\([^)]*\):"
Matches Python function deﬁnition lines. It matches the letters def; a string of 1 or more whitespace
characters( s);anidentiﬁer,surroundedby()’stocapturetheentireidentiﬁerasamatch. Itmatchesa (
;we’veused (toescapethemeaningof(andmakeitanordinarycharacter. Itmatchesastringofnon-
)characters,whichwouldbetheparameterlist. Theparameterlistendswitha );we’veused )tomake
escapethemeaningof )andmakeitanordinarycharacter. Finally,weneedtyoseethe :.
33.3 Using a Regular Expression
Thereareseveralmethodswhicharecommonlyusedwithregularexpressions. Themostcommonﬁrststep
istocompiletheREdeﬁnitionstringtomakean Patternobject. TheresultingPatternobjectcanthenbe
usedtomatchorsearchcandidatestrings. Asuccessfulmatchreturnsa Matchobjectwithdetailsofthe
matchingsubstring.
Theremoduleprovidesthe compile()function.
compile(expr)
Createa PatternobjectfromanREstring, expr. ThePatternisusedforallsubsequentsearchingor
matchingoperations. APatternhasseveralmethods,including match()andsearch().
Generally,rawstringnotation( r"pattern")isusedtowriteaRE.Thissimpliﬁesthe \‘srequired. Without
therawnotation,each \inthestringwouldhavetobeescapedbya \,makingit \\. Thisrapidlygets
cumbersome. Therearesomeotheroptionsavailablefor re.compile() ,seethe Python Library Reference ,
section4.2,formoreinformation.
Thefollowingmethodsarepartofa Patternobjectcreatedbythe re.compile() function.
match(string)
Matchthecandidatestringagainstthecompiledregularexpression(aninstanceof Pattern).Matching
33.3. Using a Regular Expression 397
Building Skills in Python, Release 2.6.5
meansthattheregularexpressionandthecandidatestringmustmatch,startingatthebeginningof
thecandidatestring. A Matchobjectisreturnedifthereismatch,otherwise Noneisreturned.
search(string)
Search a candidate string for the compiled regular expression (an instance of Pattern). Searching
meansthattheregularexpressionmustbefoundsomewhereinthecandidatestring. A Matchobject
isreturnedifthepatternisfound,otherwise Noneisreturned.
Ifsearch()ormatch()ﬁndsthepatterninthecandidatestring,a Matchobjectiscreatedtodescribethe
partofthecandidatestringwhichmatched. Thefollowingmethodsarepartofa Matchobject.
group(number)
Retrievethestringthatmatchedaparticular‘ ()’groupingintheregularexpression. Groupzeroisa
tupleofeverythingthatmatched. Group1isthematerialthatmatchedtheﬁrstsetof‘ ()’‘s.
Here’samorecompleteexample. Thissampledecodesacomplexinputvalueintoﬁeldsandthencomputes
asingleresult.
>>>importre
>>>raw_input ="20:07:13.2 "
>>>hms_pat =re.compile( r'(\d+):(\d+):(\d+\.?\d*)')
>>>hms_match =hms_pat.match(raw_input )
>>>hms_match .group(0,1,2,3)
('20:07:13.2', '20', '07', '13.2')
>>>
>>>h,m,s=map(float, hms_match .group(1,2,3) )
>>>h
20.0
>>>m
7.0
>>>
>>>s
13.199999999999999
>>>seconds=((h*60)+m)*60+s
>>>seconds
72433.199999999997
1.Theimportstatementincorporatesthe remodule.
2.Theraw_inputvariableissampleinput,perhapsfromaﬁle,perhapsfrom input().
3.Thehms_patvariableisthecompiledregularexpressionobjectwhichmatchesthreenumbers,using
‘"(d+)"’,separatedby‘ :’‘s.
Thedigit-sequenceRE’saresurroundby()’ssothatthematerialthatmatchedisreturnedasagroup.
Thiswillleadtofourgroups: group0iseverythingthatmatched,groups1,2,and3aresuccessive
digitstrings.
4.Thehms_matchvariableisa Matchobjectthatindicatessuccessorfailureinmatching. If hms_match
isNone,nomatchoccurred. Otherwise,the hms_match.group() methodwillrevealtheindividually
matchedinputitems.
5.The statement that sets h,m, andsdoes three things. First is uses hms_match.group() to create
atupleofrequesteditems. Eachiteminthetuplewillbeastring,sothe map()functionisusedto
applythebuilt-in float()functionagainsteachstringtocreateatupleofthreenumbers. Finally,this
statementreliesonthemultiple-assignmentfeaturetosetallthreevariablesatonce. Finally, seconds
iscomputedasthenumberofsecondspastmidnightforthegiventimestamp.
398 Chapter 33. Complex Strings: the re Module
Building Skills in Python, Release 2.6.5
33.4 Regular Expression Exercises
1.ParseOldStockprices . Createafunctionthatwilldecodetheold-stylefractionalstockprice. The
pricecanbeasimpleﬂoatingpointnumberoritcanbeafraction,forexample, 4 5/8.
Developtwopatterns,onefornumberswithoptionaldecimalplacesandanotherforanumberwitha
spaceandafraction. Writeafunctionthatacceptsastringandchecksbothpatterns,returningthe
correctdecimalpriceforwholenumbers(e.g.,14),decimalprices(e.g.,5.28)andfractionalprices( 27
1/4).
2.ParseDates. CreateafunctionthatwilldecodeafewcommonAmericandateformats. Forexample,
3/18/87isMarch18,1987. Youmightwanttodo18-Mar-87asanalternativeformat. Sticktotwoor
threecommonformats;otherwise,thiscanbecomequitecomplex.
Developtherequiredpatternsforthecandidatedateformats. Writeafunctionthatacceptsastring
andchecksallpatterns. Itwillreturnthedateasatupleof(year,month,day).
33.4. Regular Expression Exercises 399
Building Skills in Python, Release 2.6.5
400 Chapter 33. Complex Strings: the re Module
CHAPTER
THIRTYFOUR
DA TES AND TIMES: THE TIME AND
DATETIME MODULES
Whenprocessingdatesandtimes,wehaveanumberofproblems. Mostoftheseproblemsstemfromthe
irregularitiesandspecialcasesintheunitsweusetomeasuretime.Wegenerallymeasuretimeinanumberof
compatibleaswellasincompatibleunits. Forexample,weeks,days,hours,minutesandsecondsaregenerally
compatible,withtheexceptionofleap-secondhandling. Months,andyears,howeverareincompatiblewith
daysandrequiresophisticatedconversion.
Problemswhichmixmonth-orienteddatesandnumbersofdaysareparticularlydiﬀicult. Thenumberof
daysbetweentwodates,oradatewhichis90daysinthefuturearenotoriouslydiﬀiculttocomputecorrectly.
Weneedtorepresentapointintime,adate,atimeofdayoradate-timestamp. Weneedtobeableto
doarithmeticonthispointintime. And,weneedtorepresentthispointintimeasaproperly-punctuated
string.
Thetimemodulecontainsanumberofportablefunctionsneededtoformattimesanddates. The datetime
modulebuildsonthistoprovidearepresentationthatisslightlymoreconvenientforsomethings. We’ll
lookatthedeﬁnitionofamomentintimein Semantics: What is Time? .
34.1 Semantics: What is Time?
TheGregoriancalendarisextremelycomplex. Someofthatcomplexitystemsfromtryingtoimposeaﬁxed
“year” on the wobbly, irregular orbit of our planet. There are several concesssions required to impose a
calendaryearwithintegernumbersofdaysthatwillmatchtheastronomialyearofapproximately365.2425
days.TheGregoriancalendar’sconcessionistheperiodicadditionofaleapdaytoapproximatethisfractional
day. Theerrorisjustunder.25,sooneleapdayeachfouryearsgetsclosetotheactualdurationoftheyear.
Someadditionalcomplexitystemsfromtryingtobreaktheyearintoasequenceofmonths. Fixed-length
monthsdon’tworkwellbecausetheyearis73 ×5dayslong: therearen’tmanypleasantfactorsthatdivide
thislength. Iftheyearwereonly360dayslong,we’dbeabletocreateﬁxed-lengthmonths. TheGregorian
calendar’sconcessiontotheindividibilityoftheyearis12monthsof28,29,30or31daysinlength.
Wehaveseveralsystemsofunitsavailabletousforrepresentingapointintime.
•Secondsaretheleastcommondenominator. Wecaneasilyderivehoursandminutesfromseconds.
Thereare24×60×60=86,400secondsinaday. (Astronomerswillperiodicallyaddaleapsecond,
sothisisnotabsolutelytrue.) Wecanusesecondsasasimplerepresentationforapointintime. We
canpicksomeepochandrepresentanyotherpointintimeasthenumberofsecondsaftertheepoch.
Thismakesarithmeticverysimple. However,it’shardtoread;whatmonthcontainssecondnumber
1,190,805,137?
401
Building Skills in Python, Release 2.6.5
•Daysareanothercommondenominatorinthecalendar. Therearesevendaysinaweek,and(usually)
86,400secondsinday, sothoseconversionsaresimple. Wecanpicksomeepochandrepresentany
otherpointintimeasthenumberofdaysaftertheepoch. Thisalsomakesarithmeticverysimple.
However,it’shardtoread;whatmonthcontainsdaynumber732,945?
•Monthsareseriousproblem. Ifweworkwiththeconventionaldatetripleofyear,month,andday,we
can’tcomputeintervalsbetweendatesverywellatall. Wecan’tlocateadate90daysinthefuture
withoutarathercomplexalgorithm.
LocalTime. Wealsotohaveacknowledgethesubtletyoflocaltimeandthepotentialdiﬀerencesbetween
localstandardtimeandlocaldaylighttime(orsummertime). Sincetheclockshifts,sometimenumbers
(1:30AM,forexample)willappeartorepeat,thiscanrequirethetimezonehinttodecodethetimenumber.
ThemoregeneralsolutionistodoallworkinUTC.Inputisacceptedanddisplayedinthecurrentlocaltime
fortheconvenienceofusers. Thishastheadvantageofbeingtimezoneneutral,anditmakestimevalues
monotonicallyincreasingwithnoconfusingrepeatsofagiventimeofdayduringthehourinwhichtheclock
isshifted.
ThetimeSolution. Thetimemoduleusestwodiﬀerentrepresentationsforapointintime,andprovides
numerousfunctionstohelpusconvertbackandforthbetweenthetworepresentations.
•Afloatsecondsnumber. ThisistheUNIXinternalrepresentationfortime. (Thenumberisseconds
pastanepoch;theepochhappenstoJanuary1st,1970.) Inthisrepresentation,adurationbetween
pointsintimeisalsoa floatnumber.
•Astruct_timeobject. ThisobjecthasnineattributesforrepresentingapointintimeasaGregorian
calendardateandtime. We’lllookatthisstructureindetailbelow. Inthisrepresentation,thereisno
representationforthedurationbetweenpointsintime. Youneedtoconvertbackandforthbetween
struct_timeandsecondsrepresentations.
ThedatetimeSolution. Thedatetimemodulecontainalloftheobjectsandmethodsrequiredtocorrectly
handle the sometimes obscure rules for the Gregorian calendar. Additionally, it is possible to use date
information in the datetimeto usefully conver among the world’s calendars. For details on conversions
betweencalendarsystems,see Calendrical Calculations [Dershowitz97] .
Thedatetimemodule has just one representation for a point in time. It assigns an ordinal number to
eachday. Thenumbersarebasedonanepochaldate,andalgorithmstoderivetheyear,monthandday
information for that ordinal day number. Similarly, this class provides algorithms to convert a calendar
datetoanordinaldaynumber. (Note: theGregoriancalendarwasnotdeﬁneduntil1582,alldatesbefore
theoﬀicialadoptionaretermed proleptic. Further,thecalendarwasadoptedatdiﬀerenttimesindiﬀerent
countries.)
Therearefourclassesinthismodulethathelpushandledatesandtimesinauniformandcorrectmanner.
We’llskipthemoreadvancedtopicofthe datetime.tzinfo class.
datetime.time Aninstanceof datetime.time hasfourattributes: hour,minute,secondandmicrosecond.
Additionally,itcanalsocarryaninstanceof tzinfowhichdescribesthetimezoneforthistime.
datetime.date An instance of datetime.date has three attributes: year, month and day. There are a
numberofmethodsforcreating datetime.date objects, andconverting datetime.date objectssto
variousotherforms,likeﬂoating-pointtimestamps,9-tuplesforusewiththe timemodule,andordinal
daynumbers.
datetime.datetime An instance of datetime.datetime combines datetime.date anddatetime.time .
There are a number of methods for creating datetime.datetime objects, and converting
datetime.datetime s to various other forms, like ﬂoating-point timestamps, 9-tuples for use with
thetimemodule,andordinaldaynumbers.
datetime.timedelta Adatetime.timedelta is the duration between two dates, times or datetimes. It
hasavalueindays,secondsandmicroseconds. Thesecanbeaddedtoorsubtractedfromdates,times
402 Chapter 34. Dates and Times: the time anddatetime Modules
Building Skills in Python, Release 2.6.5
ordatetimestocomputenewdates,timesordatetimes.
34.2 Some Class Deﬁnitions
Atime.struct_time objectbehaveslikeanobjectaswellasatuple. Youcanaccesstheattributesofthe
structurebypositionaswellasbyname. Notethatthisclasshasnomethodsofit’sown;youmanipulate
theseobjectsusingfunctionsinthe timemodule.
tm_yearTheyear. Thiswillbeafullfourdigityear,e.g. 1998.
tm_monThemonth. Thiswillbeintherangeof1to12.
tm_mdayThedayofthemonth. Thiswillbeintherangeof1tothenumberofdaysinthe
givenmonth.
tm_hourThehouroftheday,intherange0to23.
tm_minTheminutesofthehour,intherange0to59.
tm_secThesecondsoftheminute,intherange0to61becauseleapsecondsmaybeincluded.
Notallplatformssupportleapseconds.
tm_wdayThedayoftheweek. Thiswillbeintherangeof0to6. 0isMonday,6isSunday.
tm_ydayThedayoftheyear,intherange1to366.
tm_isdstIsthetimeinlocaldaylightsavingstime. 0meansthatthisisstandardtime;1means
daylighttime. Ifyouarecreatingthisobject,youcanprovide-1;the time.mktime() can
thendetermineDSTbasedonthedateandtime.
We’llfocusonthe datetime.datetime class, sinceitincludes datetime.date anddatetime.time . This
classhasthefollowingattributes.
MINYEAR
MAXYEAR Thesetwoattributesbracketthetimespanforwhichdatetimeworkscorrectly.
Thisisyear1toyear9999,whichcoverstheforseeablefutureaswellasaprolepticpastthe
predatestheinventionoftheGregoriancalendarin1582.
min
maxTheearliestandlaterstrepresentable datetimes. Ineﬀecttheseare‘ datetime(MINYEAR,
1, 1, tzinfo=None) ’and‘(MAXYEAR, 12, 31, 23, 59, 59, 999999, tzinfo=None) ’.
resolutionThe smallest diﬀerences between datetimes. This is typically equaly to
‘timedelta(microseconds=1) ’.
yearTheyear. Thiswillbeafullfourdigityear,e.g. 1998. Itwillalwaysbebetween MINYEAR
andMAXYEAR,inclusive.
monthThemonth. Thiswillbeintherange1to12.
dayTheday. Thiswillbeintherange1tothenumberofdaysinthegivenmonth.
hourThehour. Thiswillbeintherange0to23.
minuteTheminute. Thiswillbeintherange0to59.
secondThesecond. Thiswillbeintherange0to59.
microsecond Themicrosecond(millionthsofasecond). Thiswillintherange0to999,999.
Someplatformsdon’thaveasystemclockwhichisthisaccurate.However,theSQLstandard
imposesthisresolutiononmostdatetimevalues.
34.2. Some Class Deﬁnitions 403
Building Skills in Python, Release 2.6.5
Togetfractionsofasecond,you’llcompute‘ second+microsecond/1000000. ’
tzinfoThedatetime.tzinfo objectthatwasprovidedtotheinitial datetime.datetime con-
structor. Otherwiseitwillbe None.
34.3 Creating a Date-Time
Therearetwousecasesforcreating date,time,struct_timeordatetimeinstances. Inthesimplestcase,
we’reaskingouroperatingsystemforthecurrentdate-timeorthedate-timeassociatedwithsomeresource
orevent. Inthemorecomplexcase,weareaskingauserforinput(perhapsonaninteractiveGUI,aweb
form,orreadingaﬁlepreparedbyaperson);weareparsingsomeuser-suppliedvaluestoseeiftheyarea
validdate-timeandusingthatvalue.
FromTheOS .WeoftengettimefromtheOSwhenwewantthecurrenttime, orwewantoneofthe
timestampsassociatedwithasystemresourcelikeaﬁleordirectory. Here’sasamplingoftechniquesfor
gettingadate-time.
time()
Returns the current moment in time as a floatseconds number. See File Handling Modules for
examples of getting ﬁle timestamps; these are always a floatseconds value. We’ll often need to
convertthistoa struct_timeordatetimeobjectsothatwecanprovideformattedoutputforusers.
The functions time.localtime() ortime.gmtime() will convert this value to
astruct_time.The class methods datetime.datetime.fromtimestamp() , and
datetime.datetime.utcfromtimestamp() willcreatea datetimeobjectfromthistimevalue.
Then,wecanuse time.strftime() ortime.asctime() toformatanddisplaythetime.
ctime()
Returns a string representation of the current time. These values aren’t terribly useful for further
calculation,buttheyarehandy,standardizedtimestampstrings.
asctime()
Returns a string representation of the current time. These values aren’t terribly useful for further
calculation,buttheyarehandy,standardizedtimestampstrings.
localtime ()
Whenevaluatedwithnoargumentvalue,thiswillcreatea struct_timeobjectfromthecurrenttime.
Since we can’t do arithmetic with these values, we often need to convert them to something more
useful.
Thistimeisconvertedtolocaltimeusingyourcurrentlocalesettings.
gmtime()
Whenevaluatedwithnoargumentvalue,thiswillcreatea struct_timeobjectfromthecurrenttime.
Since we can’t do arithmetic with these values, we often need to convert them to something more
useful.
Thetime.mktime() functionwillconvertthe struct_timetoafloatsecondstime.
Wehavetousethe datetime.datetime constructortocreateadatetimefroma struct_time. This
canbelong-winded,itwilllooklike‘ datetime.date( ts.tm_year, ts.tm_month, ts.tm_day ) ’.
today()
now()
utcnow()
All of these are class methods of the datetimeclass; the create a datetimeobject. The today()
function uses the simple ‘ time.time()’ notion of the current moment and returns local time. The
404 Chapter 34. Dates and Times: the time anddatetime Modules
Building Skills in Python, Release 2.6.5
now()functionmayuseahigher-precisiontime,butitwillbelocaltime. The utcnow()functionuses
high-precisiontime,andreturnsUTCtime,notlocaltime.
Wecan’tdirectlygeta floatsecondsnumbernumberfromadatetimevalue. However, wecando
arithmeticdirectlywith datetimevalues,makingthe floatsecondsvaluesuperﬂous.
We can get the struct_timevalue from a datetime, using the timetuple()orutctimetuple()
methodfunctionsofthedatetimeobject.
Getting Time From A User . Human-readable time information generally has to be parsed from one
ormorestringvalues. Human-readabletimecanincludeanyoftheendlessvarietyofformatsincommon
use. Thiswillincludesomecombinationofyears,days,months,hours,minutesandseconds,andtimezone
names.
Therearetwogeneralapproachestoparsingtime. Inmostcases,itissimplesttouse datetime.strptime()
toparseastringandcreateadatetimeobject. Inothercases,wecanuse time.strptime() . Inthemost
extremecase,wehavetoeitherusethe remodule( Complex Strings: the re Module ),orsomeotherstring
manipulation,andthencreatethedate-timeobjectdirectly.
strptime (string, [format] )
This function will use the given format to attempt to parse the input string. If the value doesn’t
matchtheformat,itwillraisea ValueErrorexception. Iftheformatisnotacompletedatetime,then
defaultsareﬁlledin. Thedefaultyearis1900,thedefaultmonthis1thedefaultdayis1. Thedefault
timevaluesareallzero.
We’lllookattheformatstringunderthe time.strftime() function,below.
strptime (string, [format] )
Thisfunctionwillusethegivenformattoattempttoparsetheinputstring. Ifthevaluedoesn’tmatch
theformat,itwillraisea ValueErrorexception. Iftheformatisnotacompletetime,thendefaults
areﬁlledin. Thedefaultyearis1900,thedefaultmonthis1thedefaultdayis1. Thedefaulttime
valuesareallzero.
We’lllookattheformatstringunderthe time.strftime() function,below.
struct_time (9-tuple)
Createsa struct_timefroma9-valuedtuple: ‘ (year, month, day, hour, minute, second, day
of week, day of year, dst-flag) ’. Generally,youcansupply0fordayofweekanddayofyear.
Thedstﬂagis0forstandardtime,1fordaylight(orsummer)time,and-1whenthedateitselfwill
deﬁneifthetimeisstandardordaylight.
This constructor does no validation; it will tolerate invalid values. If we use the time.mktime()
functiontodoaconversion,thismayraisean OverflowError ifthetimevalueisinvalid.
Typically, you’llbuildthis9-tuplefromuser-suppliedinputs. Wecouldparseastringusingthe re
module,orwecouldbecollectinginputfromﬁeldsinaGUIorthevaluesenteredinaweb-basedform.
Thenyouattempta time.mktime() conversiontoseeifitisvalid.
datetime (year, month, day, [hour, minute, second, microsecond, timezone] )
Createsa datetimefromindividualparametervalues. Notethatthetimeﬁeldsareoptional;ifomitted
thetimevalueis0:00:00,whichismidnight.
Thisconstructorwillnottolerateabaddate. Itwillraisea ValueErrorforaninvaliddate.
34.4 Date-Time Calculations and Manipulations
Therearetwocommonclassesofdate-timecalculations:
34.4. Date-Time Calculations and Manipulations 405
Building Skills in Python, Release 2.6.5
•Durationor intervalcalculations in days(or seconds), where the month, weekand yearboundaries
don’tmatter. The timerepresentationasasingleﬂoating-pointnumberofsecondsworkswellforthis.
Also,the datetimeprovidesa datetime.timedelta thatworkswellforthis.
•Calendarcalculationswherethemonth,weekofmonthanddayofweekmatter. The timerepresenta-
tionasa9-element struct_timestructureworkswellforthis. Generally,weuse datetime.datetime
forthis.
Duration or interval calculations in days (or seconds) . In this case, the month, week and year
boundaries don’t matter. For example, the number of hours, days or weeks between two dates doesn’t
dependonmonthsoryearboundaries. Similarly,calculatingadate90daysinthefutureorpastdoesn’t
depen on month or year considerations. Even the diﬀerence between two times is properly a date-time
calculationsothatwecanallowforrolloverpastmidnight.
Wehavetwowaystodothis.
•We can use floatseconds information, as produced by the timemodule. When we’re using this
representation, adayis 24×60×60 = 86 ,400seconds, andaweekis 7×24×60×60 = 604 ,800
seconds. Forthefollowingexamples, t1andt2andfloatsecondstimes.
‘(t2-t1)/3600 ’isthenumberofhoursbetweentwotimes.
‘(t2-t1)/86400 ’isthedaysbetweentwodates.
‘t1+90*86400’isthedate90daysinthefuture.
•Wecanalsouse datetimeobjectsforthis,since datetimeobjectscorrectlyhandlearithmeticopera-
tions. Whenwe’reusingthisrepresentation,we’llalsoworkwith datetime.timedelta objects;these
havedays,secondsandmicrosecondsattributes. Forthefollowingexamples, t1andt2anddatetime
objects.
Inarelativelysimplecase,thehoursbetweentwodatetimesis‘ (t2-t1).seconds/3600 ’. Thisworks
whenwe’resurethattheresillbelessthan24hoursbetweenthetwo datetimes.
Inthemoregeneralcase, wehaveatwo-partcalculation: Firstwegetthe timedeltabetweentwo
datetimeswith‘td = t2-t1’.
‘td= (t2-t1); seconds= td.days*86400+td.seconds ’issecondsbetweentwodates.
‘td= (t2-t1); secdonds= td.days*86400+td.seconds+td.microseconds/1000000.0 ’ is seconds
downtothe datetime.resolution .
‘td= (t2-t1); seconds= td.days+td.seconds/86400.0 ’isdaysbetweentwodates.
Calendarcalculationswherethemonth,weekofmonthanddayofweekmatter. Forexample,
thenumberofmonthsbetweentwodatesrarelyinvolvesthedayofthemonth. Adatethatis3monthsin
thefuture,willlandonthesamedayofthemonth,exceptinunusualcaseswhereitwouldbethe30thof
February. Forthesesituations,highlyproblem-speciﬁcruleshavetobeapplied;there’snogeneralprinciple.
Wehavetwowaystodothis.
•Wecanuse struct_timeobjectsasproducedbythe timemodule. Wecanreplaceany struct_time
ﬁelds,andpossiblycreateaninvaliddate. Wemayneedtouse time.mktime() tovalidatetheresulting
struct_timeobject. Inthefollowingexamples, t1isastruct_timeobject.
Addingsome offsetinmonths,correctlyallowingforyear-endrollover,isdoneasfollows.
monthSequence =(t1.tm_year*12+t1.tm_mon-1)+offset
futureYear, futureMonth0 =divmod( monthSequence, 12)
t1.tm_year=futureYear
t1.tm_month =futureMonth0 +1
406 Chapter 34. Dates and Times: the time anddatetime Modules
Building Skills in Python, Release 2.6.5
•Wecanalsouse datetimeobjectsforthis. Inthiscase,wewe’llusethe replace()methodtoreplace
avalueina datetimewithothervalues. Inthefollowingexamples, t1isadatetimeobject.
Addingsome offsetinmonths,correctlyallowingforyear-endrollover,isdoneasfollows.
monthSequence =(t1.year*12+t1.month-1)+offset
futureYear, futureMonth0 =divmod( monthSequence, 12)
t1=t1.replace( year =futureYear, month =futureMonth0 +1)
Thefollowingmethodsreturninformationaboutagiven datetimeobject. Inthefollowingdeﬁnitions, dt
isadatetimeobject.
date()
Returnanew dateobjectfromthedateﬁeldsofthis datetimeobject.
time()
Returnanew timeobjectfromthetimeﬁeldsofthis datetimeobject.
replace([year, month, day, hour, minute, second, microsecond] )
Returnanew datetimeobjectfromthecurrent datetimeobjectafterreplacinganyvaluesprovided
bythekeywordarguments.
toordinal ()
Returntheordinaldaynumberforthis datetime. Thisauniquedaynumber.
weekday()
Returnthedayoftheweek. Monday=0,Sunday=6.
isoweekday ()
ReturntheISOdayoftheweek. Monday=1,Sunday=7.
isocalendar ()
Returnatuplewith(ISOyear,ISOweek,ISOweekday).
34.5 Presenting a Date-Time
To format human-readable time, we have a number of functions in the timemodule, and methods of a
datetimeobject. Herearethefunctionsinthe timemodule.
strftime (format, time_struct )
Convert a struct_timeto a string according to a format speciﬁcation. The speciﬁcation rules are
providedbelow.
Thisisanexampleofhowtoproduceatimestampwiththefewestimplicitassumptions.
time.strftime( "%x%X", time.localtime( time .time() ) )
Thislineofcodeshowsastandardizedandportablewaytoproduceatimestamp. The time.time()
functionproducesthecurrenttimeinUTC(CoordinatedUniversalTime). Timeisrepresentedasa
ﬂoatingpointnumberofsecondsafteranepoch.
asctime(time_struct )
Converta struct_timetoastring,e.g. ‘SatJun0616:26:111998’. Thisisthesameasatheformat
string"%a %b %d %H:%M:%S %Y" .
ctime(seconds)
Convert a time in seconds since the Epoch to a string in local time. This is equivalent to
‘asctime(localtime(seconds)) ’.
34.5. Presenting a Date-Time 407
Building Skills in Python, Release 2.6.5
Adatetimeobjecthasthefollowingmethodsforproductingformattedoutput. Inthefollowingdeﬁnitions,
dtisadatetimeobject.
isoformat ([separator] )
Return string representing this date in ISO 8601 standard format. The separatorstring is used
betweenthedateandthetime;thedefaultvalueis“T”.
>>>d=datetime .datetime .now()
>>>d.isoformat()
'2009-11-08T09:34:17.945641'
ctime()
Return string representing this date and time. This is equivalent to ‘ time.ctime(time.mktime(
dt.timetuple())) ’forsome datetimeobject,dt.
strftime (format)
Returnstringrepresentingthisdateandtime,formattedusingthegivenformatstring. Thisisequiv-
alent to ‘ time.strftime( format, time.mktime( dt.timetuple() ) ’ for some datetimeobject,
dt.
34.6 Formatting Symbols
Thetime.strftime() andtime.strptime() functions use the following formatting symbols to convert
betweentime_structordatetime.datetime andstrings.
Formatting symbols like %c,%xand%Xproduce standard formats for whole date-time stamps, dates or
time. Othersymbolsformatpartsofthedateortimevalue. Thefollowingexamplesshowaparticulardate
(Satuday,August4th)formattedwitheachoftheformattingstrings.
408 Chapter 34. Dates and Times: the time anddatetime Modules
Building Skills in Python, Release 2.6.5
Table34.1:TimeFormattingSymbols
"%a"Locale’s3-letterabbreviatedweekdayname. ‘Sat’
"%A"Locale’sfullweekdayname. ‘Saturday’
"%b"Locale’s3-letterabbreviatedmonthname. ‘Aug’
"%B"Locale’sfullmonthname. ‘August’
"%c"Locale’sappropriatefulldateandtimerepresentation. ‘SaturdayAugust
0417:11:202001’
"%d"Dayofthemonthasa2-digitdecimalnumber. ‘04’
"%H"Hour(24-hourclock)asa2-digitdecimalnumber. ‘17’
"%I"Hour(12-hourclock)asa2-digitdecimalnumber. ‘05’
"%j"Dayoftheyearasa3-digitdecimalnumber. ‘216’
"%m"Monthasa2-digitdecimalnumber. ‘08’
"%M"Minuteasa2-digitdecimalnumber. ‘11’
"%p"Locale’sequivalentofeitherAMorPM. ‘pm’
"%S"Secondasa2-digitdecimalnumber. ‘20’
"%U"Weeknumberoftheyear(Sundayastheﬁrstdayoftheweek)asa2-digit
decimalnumber. AlldaysinanewyearprecedingtheﬁrstSundayare
consideredtobeinweek0.‘30’
"%w"Weekdayasadecimalnumber,0=Sunday. ‘6’
"%W"Weeknumberoftheyear(Mondayastheﬁrstdayoftheweek)asa2-digit
decimalnumber. AlldaysinanewyearprecedingtheﬁrstMondayare
consideredtobeinweek0.‘31’
"%x"Locale’sappropriatedaterepresentation. ‘SaturdayAugust
042001’
"%X"Locale’sappropriatetimerepresentation. ‘17:11:20’
"%y"Yearwithoutcenturyasa2-digitdecimalnumber. ‘01’
"%Y"Yearwithcenturyasadecimalnumber. ‘2001’
"%Z"Timezonename(or‘’ifnotimezoneexists). ‘’
"%%"Aliteral‘%’character. ‘%’
34.7 Time Exercises
1.ReturnonInvestment . Returnoninvestment(ROI)isoftenstatedonanannualbasis. Ifyoubuy
andsellstockovershorterorlongerperiodsoftime,theROImustbeadjustedtobeafullyear’stime
period. Thebasiccalculationisasfollows:
Giventhesaledate,purchasedate,saleprice, sp,andpurchaseprice, pp.
Computetheperiodtheassetwasheld: use time.mktime() tocreateﬂoatingpointtimevaluesfor
saledate, s,andpurchasedate, p. Theweighting, w,iscomputedas
w=(86400*365.2425 )/( s-p )
WriteaprogramtocomputeROIforsomeﬁctitiousstockholdings. Besuretoincludestocksheld
bothmorethanoneyearandlessthanoneyear. See Stock V aluation in Classesforsomeadditional
informationonthiskindofcalculation.
2.SurfaceAirConsumptionRate . WhendoingSACRcalculations(see Surface Air Consumption
Rate,and Dive Logging and Surface Air Consumption Rate )we’vetreatedthetimerathercasually. In
theeventofanightdivethatbeginsbeforemidnightandendsaftermidnightthenextday,ourquick
anddirtytimeprocessingdoesn’tworkcorrectly.
34.7. Time Exercises 409
Building Skills in Python, Release 2.6.5
Reviseyoursolutiontouseamorecompletedate-timestampforthestartandendtimeofthedive.
Usethetimemoduletoparsethosedate-timestampsandcomputetheactualdurationofthedive.
34.8 Additional time Module Features
Herearesomeadditionalfunctionsinthe timemodule.
sleep(seconds)
Delayexecutionforagivennumberofseconds. Theargumentmaybeaﬂoatingpointnumberfor
subsecondprecision.
accept2dyear (arg)
Ifnon-zero,2-digityearsareaccepted. 69-99istreatedas1969to1999,0to68istreatedas2000to
2068. Thisis1bydefault,unlessthe PYTHONY2K environmentvariableisset;thenthisvariable
willbezero.
timezone
DiﬀerenceinsecondsbetweenUTCandlocaltime. Oftenamultipleof3600(allUStimezonesarein
wholehours).
Forexample,ifyourlocaleisUSEasternTime,thisis18000(5hours).
altzone
Diﬀerence in seconds between UTC and local alternate time (“Daylight Savings Time”). Often a
multipleof3600(UStimezonesareinwholehours).
Forexample,ifyourlocalewassettoUSEasternTime,thiswouldbe14400(4hours).
daylight
Non-zeroifthecurrentlocaleusesdaylightsavingstime. Zeroifitdoesnot.
tzname
Thenameofthetimezone.
410 Chapter 34. Dates and Times: the time anddatetime Modules
CHAPTER
THIRTYFIVE
FILE HANDLING MODULES
Thereareanumberofoperationscloselyrelatedtoﬁleprocessing. Deletingandrenamingﬁlesareexamples
ofoperationsthatchangethedirectoryinformationthattheoperatingsystemmaintainstodescribeaﬁle.
Pythonprovidesnumerousmodulesfortheseoperatingsystemoperations.
Wecan’tbegintocoverallofthevariouswaysinwhichPythonsupportsﬁlehandling. However,wecan
identifytheessentialmodulesthatmayhelpyouavoidreinventingthewheel. Further,thesemodulescan
provideyouaviewofthePythonicwayofworkingwithdatafromﬁles.
Thefollowingmoduleshavefeaturesthatareessentialforsupportingﬁleprocessing. We’llcoverselected
featuresofeachmodulethataredirectlyrelevanttoﬁleprocessing. We’llpresenttheseintheorderyou’d
ﬁndtheminthePythonlibrarydocumentation.
Chapter11–FileandDirectoryAccess . Chapter11oftheLibraryreferencecoversmanymodules
whichareessentialforreliableuseofﬁlesanddirectories. We’lllookcloselyatthefollowingmodules.
os.pathThismodulehasfunctionsfornumerouscommonpathnamemanipulations. Usethesefunctionsto
splitandjoinfulldirectorypathnames. Thisisoperating-systemneutral,withacorrectimplementa-
tionforalloperatingsystems.
One of the most obvious diﬀerences among operating systems is the way that ﬁles are named. In
particular,the path separator canbeeitherthePOSIXstandard‘ /’,orthewindows‘ \’. Ratherthan
makeeachprogramawareoftheoperatingsystemrulesforpathconstruction, Pythonprovidesthe
os.pathmoduletomakeallofthecommonﬁlenamemanipulationscompletelyconsistent.
OS-SpeciﬁcPaths
Programmersarefacedwithadilemmabetweenwritinga“simple”hacktostrippathsorextensions
fromﬁlenamesandusingthe os.pathmodule. Someprogrammersarguethatthe os.pathmodule
is too much overhead for such a simple problem as removing the .htmlfrom a ﬁle name. Other
programmersrecognizethatmosthacksareafalseeconomy: inthelongruntheydonotsavetime,
butratherleadtocostlymaintenancewhentheprogramisexpandedormodiﬁed.
fileinputThismodulehasfunctionswhichwilliterateoverlinesfrommultipleinputstreams. Thisallows
youtowriteasingle,simpleloopthatprocesseslinesfromanynumberofinputﬁles.
tempfileThismodulehasaclassandfunctionstogeneratetemporaryﬁlesandtemporaryﬁlenames. This
isthemostsecurewaytogenerateatemporaryﬁle.
globThismoduleprovidesshellstylepathnamepatternexpansion. Unixshellstranslatenamepatternslike
*.pyintoalistofﬁles. Thisiscalled globbing. TheglobmoduleimplementsthiswithinPython,
whichallowsthisfeaturetoworkeveninWindowswhereitisn’tsupportedbytheOSitself.
411
Building Skills in Python, Release 2.6.5
fnmatchThismoduleprovidesUNIXshellstyleﬁlenamepatternmatching. Thisimplementstheglob-style
rulesusing‘ *’,‘?’ and‘[]’. ‘*’matchesanynumberofcharacters,‘ ?’ matchesanysinglecharacter,
‘[chars]’. enclosesa listofallowedcharacters,‘ [!chars]’enclosesa listofdisallowedcharacters.
shutilThismodulehasusefule,high-levelﬁleoperations,includingcopy,renameandremove. Theseare
thekindsofthingsthattheshellhandleswithsimplecommandslike cporrm. Thismodulemakes
thesefeaturesavailabletoaPythonprogramorscript.
Chapter12–DataPersistence . Thereareseveralissuesrelatedtomakingobjectspersistent. We’lllook
atthesemodulesindetailin File F ormats: CSV, T ab, XML, Logs and Others .
pickle shelve Thepickleandshelvemodulesareusedtocreatepersistentobjects;objectsthatpersist
beyondtheone-timeexecutionofaPythonprogram. The picklemoduleproducesaserialtextrepre-
sentationofanyobject,howevercomplex;thiscanreconstituteanobjectfromitstextrepresentation.
Theshelvemoduleusesa dbmdatabasetostoreandretrieveobjects. The shelvemoduleisnota
completeobject-orienteddatabase,asitlacksanytransactionmanagementcapabilities.
sqlite3ThismoduleprovidesaccesstotheSQLiterelationaldatabase. Thisdatabaseprovidesasigniﬁcant
subset of SQL language features, allowing us to build a relational database that’s compatible with
productslikeMySQLorPostgres.
Chapter13–DataCompressionandArchiving . DataCompressioniscoveredinChapter12ofthe
Libraryreferece. We’lllookcloselyatthefollowingmodules.
tarfile zipfile These modules helps you read and write archive ﬁles; ﬁles which are an archive of a
complexdirectorystructure. ThisincludesGNU/Linuxtapearchive( .tar)ﬁles,compressedGZiptar
ﬁles(.tgzﬁlesor.tar.gzﬁles)sometimescalledtarballs,andZIPﬁles.
zlib gzip bz2 Thesemodulesareallvariationsonacommonthemeofreadingandwritingﬁleswhichare
compressedtoremoveredundantbytesofdata. The zlibandbz2moduleshaveamoresophisticated
interface,allowingyoutousecompressionselectivelywithinamorecomplexapplication. The gzip
modulehasadiﬀerent(andsimpler)interfacethatonlyappliesonlytocompleteﬁles.
Chapter14–FileFormats . Thesearemodulesforreadingandwritingﬁlesinafewoftheamazing
varietyofﬁleformatsthatareincommonuse. We’llfocusonjustafew.
csvThecsvmodulehelpsyouparseandcreateComma-SeparatedValue(CSV)dataﬁles. Thishelpsyou
exchange data with many desktop tools that produce or consume CSV ﬁles. We’ll look at this in
Comma-Separated V alues: The csv Module .
Chapter16-GenericOperatingSystemServices . Thefollowingmodulescontainbasicfeaturesthat
arecommontoalloperatingsystems
osMiscellaneous OS interfaces. This includes parameters of the current process, additional ﬁle object
creation,manipulationsofﬁledescriptors,managingdirectoriesandﬁles,managingsubprocesses,and
additionaldetailsaboutthecurrentoperatingsystem.
timeThetimemoduleprovidesbasicfunctionsfortimeanddateprocessing.Additionally datetimehandles
detailsofthecalendarmoregracefullythan timedoes. We’llcoverbothmodulesindetailin Dates
and Times: the time and datetime Modules .
loggingOften,youwantasimple,standardizedlogforerrorsaswellasdebugginginformation. We’lllook
atloggingindetailin Log Files: The logging Module .
Chapter28-PythonRuntimeServices .ThesemodulesdescribedinChapter26oftheLibraryreference
includesomethatareusedforhandlingvariouskindsofﬁles. We’lllookcloselyasjustone.
sysThis module has several system-speciﬁc parameters and functions, including deﬁnitions of the three
standardﬁlesthatareavailabletoeveryprogram.
412 Chapter 35. File Handling Modules
Building Skills in Python, Release 2.6.5
35.1 Theos.path Module
Theos.pathmodule contains more useful functions for managing path and directory names. A serious
mistakeistouseordinary stringfunctionswithliteral stringsforthepathseparators. AWindowsprogram
using\astheseparatorwon’tworkanywhereelse. Alessseriousmistakeistouse os.pathsepinsteadof
theroutinesinthe os.pathmodule.
Theos.pathmodulecontainsthefollowingfunctionsforcompletelyportablepathandﬁlenamemanipula-
tion.
basename (path)
Returnthebaseﬁlename,thesecondhalfoftheresultcreatedby‘ os.path.split( path ) ’.
dirname(path)
Returnthedirectoryname,theﬁrsthalfoftheresultcreatedby‘ os.path.split( path ) ’.
exists(path)
ReturnTrueifthepathnamereferstoanexistingﬁleordirectory.
getatime (path)
Returnthelastaccesstimeofaﬁle, reportedby os.stat(). Seethe timemoduleforfunctionsto
processthetimevalue.
getmtime (path)
Returnthelastmodiﬁcationtimeofaﬁle,reportedby os.stat(). Seethe timemoduleforfunctions
toprocessthetimevalue.
getsize(path)
Returnthesizeofaﬁle,inbytes,reportedby os.stat().
isdir(path)
ReturnTrueifthepathnamereferstoanexistingdirectory.
isfile(path)
ReturnTrueifthepathnamereferstoanexistingregularﬁle.
join(string, ... )
Joinpathcomponentsusingtheappropriatepathseparator.
split(path)
Splitapathintotwoparts: thedirectoryandthebasename(theﬁlename,withoutpathseparators,in
thatdirectory). Theresult‘ (s, t)’issuchthat‘ os.path.join( s, t ) ’yieldstheoriginalpath.
splitdrive (path)
Splitapathnameintoadrivespeciﬁcationandtherestofthepath. UsefulonDOS/Windows/NT.
splitext (path)
Splitapathintorootandextension. Theextensioniseverythingstartingatthelastdotinthelast
componentofthepathname;therootiseverythingbeforethat. Theresult‘ (r, e)’issuchthat‘ r+e’
yieldstheoriginalpath.
Thefollowingexampleistypicalofthemanipulationsdonewith os.path.
import sys, os.path
def process( oldName, newName ):
Some Processing...
for oldFile in sys.argv[1:]:
dir, fileext= os.path.split(oldFile)
file, ext= os.path.splitext( fileext )
if ext.upper() == '.RST':
35.1. The os.path Module 413
Building Skills in Python, Release 2.6.5
newFile= os.path.join( dir, file ) + '.HTML'
print oldFile, '->', newFile
process( oldFile, newFile )
1.Thisprogramimportsthe sysandos.pathmodules.
2.Theprocess()functiondoessomethinginterestingandusefultotheinputﬁle. Itistherealheartof
theprogram.
3.Theforstatementsetsthevariable oldFiletoeachstring(aftertheﬁrst)inthesequence sys.argv.
4.Eachﬁlenameissplitintothepathnameandthebasename.Thebasenameisfurthersplittoseparate
theﬁlenamefromtheextension. The os.pathdoesthiscorrectlyforalloperatingsystems,savingus
havingtowriteplatform-speciﬁccode. Forexample, splitext()correctlyhandlesthesituationwhere
alinuxﬁlehasmultiple‘.’sintheﬁlename.
5.The extension is tested to be ‘.RST’. A new ﬁle name is created from the path, base name and a
newextension(‘.HTML’).Theoldandnewﬁlenamesareprintedandsomeprocessing,deﬁnedinthe
process(),usesthe oldFileandnewFilenames.
35.2 Theos Module
Theosmodulecontainsaninterfacetomanyoperatingsystem-speciﬁcfunctionstomanipulateprocesses,
ﬁles,ﬁledescriptors,directoriesandother“lowlevel”featuresoftheOS.Programsthatimportanduse os
standabetterchanceofbeingportablebetweendiﬀerentplatforms. Portableprogramsmustdependonly
onfunctionsthataresupportedforallplatforms(e.g., unlink()andopendir()),andperformallpathname
manipulationwith os.path.
Theosmoduleexportsthefollowingvariablesthatcharacterizeyouroperatingsystem.
name
Anamefortheoperatingsystem,forexample 'posix','nt','dos','os2','mac',or'ce'. Note
thatMacOSXhasan os.nameof'posix'; butsys.platform is'darwin'. WindowsXPhasan
os.nameof'nt'.
curdir
Thestringwhichrepresentsthecurrentdirectory( '.',generally).
pardir
Thestringwhichrepresentstheparentdirectory( '..',generally).
sep
altsep
The(oramostcommon)pathnameseparator( '/'or':'or'\')andthealternatepathnameseparator
(Noneor'/'). Most of the Python library routines will translate '/'to the correct value for the
operatingsystem(typically, '\'onWindows.)
Itisbesttoalwaysuse os.pathratherthantheselow-levelconstants.
pathsep
ThecomponentseparatorusedintheOSenvironmentvariable $PATH(':'isthestandard, ';'is
usedforWindows).
linesep
Thelineseparatorintextﬁles( 'n'isthestandard; 'rn'isusedforWindowss). Thisisalreadypart
ofthereadlines()function.
414 Chapter 35. File Handling Modules
Building Skills in Python, Release 2.6.5
defpath
Thedefaultsearchpathforexecutables. Thestandardis ':/bin:/usr/bin' or'.;C:\bin'forWin-
dows.
Theosmodulehasalargenumberoffunctions. Manyofthesearenotdirectlyrelatedtoﬁlemanipula-
tion. However, a few are commonly used to create and remove ﬁles and directories. Beyond these basic
manipulations,the shutilmodulesupportsavarietyofﬁlecopyoperations.
chdir(path)
Changethecurrentworkingdirectorytothegivenpath. ThisisthedirectorywhichtheOSusesto
transformarelativeﬁlenameintoanabsoluteﬁlename.
getcwd()
Returnsthepathtothecurrentworkingdirectory. ThisisthedirectorywhichtheOSusetotransform
arelativeﬁlenameintoanabsoluteﬁlename.
listdir(path)
Returnsa listofallentriesinthegivendirectory.
mkdir(path, [mode] )
Createthegivendirectory. InGU/Linux,themodecanbegiventospecifythepermissions;usually
thisisanoctalnumber. Ifnotprovided,thedefaultof0777isused,afterbeingupdatedbytheOS
umaskvalue.
rename(source, destination )
Renamethesourceﬁlenametothedestinationﬁlename. Thereareanumberoferrorsthatcanoccur
ifthesourceﬁledoesn’texistorthedestinationﬁlealreadyexistsorifthetwopathsareondiﬀerent
devices. EachOShandlesthesituationsslightlydiﬀerently.
remove(ﬁle)
Remove(alsoknownasdeleteorunlink)theﬁle. Ifyouattempttoremoveadirectory,thiswillraise
OSError. If the ﬁle is in use, the standard behavior is to remove the ﬁle when it is ﬁnally closed;
Windows,however,willraiseanexception.
rmdir(path)
Remove(alsoknownasdeleteorunlink)thedirectory. ifyouattempttoremoveanordinaryﬁle,this
willraise OSError.
Here’sashortexampleshowingsomeofthefunctionsinthe osmodule.
>>>importos
>>>os.chdir("/Users/slott ")
>>>os.getcwd()
'/Users/slott'
>>>os.listdir(os .getcwd())
['.bash_history', '.bash_profile',
'.bash_profile.pysave', '.DS_Store',
'.filezilla', '.fonts.cache-1', '.fop', '.idlerc', '.isql.history',
'.lesshst', '.login_readpw',
'.monitor', '.mozilla', '.sh_history', '.sqlite_history',
'.ssh', '.subversion', '.texlive2008', '.Trash', '.viminfo', '.wxPyDemo',
'.xxe', 'Applications', 'argo.user.properties', 'Burn Folder.fpbf',
'Desktop', 'Documents', 'Downloads', 'Library', 'Movies',
'Music', 'Pictures', 'Public', 'Sites']
35.2. The os Module 415
Building Skills in Python, Release 2.6.5
35.3 Thefileinput Module
Thefileinputmoduleinteractswith sys.argv. Thefileinput.input() functionopensﬁlesbasedonall
thevaluesof‘ sys.argv[1:] ’. Itcarefullyskips‘ sys.argv[0]’,whichisthenameofthePythonscriptﬁle.
Foreachﬁle,itreadsallofthelinesastext,allowingaprogramtoreadandprocessmultipleﬁles,likemany
standardUnixutilities.
Thetypicalusecaseis:
importfileinput
forlineinfileinput .input():
process(line)
Thisiteratesoverthelinesofallﬁleslistedin‘ sys.argv[1:] ’,withadefaultof sys.stdinifthelistis
empty. Ifaﬁlenameis -itisalsoreplacedby sys.stdinatthatpositioninthelistofﬁles. Tospecify
analternativelistofﬁlenames,passitastheargumentto input(). Asingleﬁlenameisalsoallowedin
additiontoalistofﬁlenames.
Whileprocessinginput,severalfunctionsareavailableinthe fileinputmodule:
input()
Iteratoroveralllinesfromthecumulativecollectionofﬁles.
filename ()
Theﬁlenameofthelinethathasjustbeenread.
lineno()
Thecumulativelinenumberofthelinethathasjustbeenread.
filelineno ()
Thelinenumberinthecurrentﬁle.
isfirstline ()
Trueifthelinejustreadistheﬁrstlineofitsﬁle.
isstdin()
Trueifthelinewasreadfrom sys.stdin.
nextfile ()
Closethecurrentﬁlesothatthenextiterationwillreadtheﬁrstlinefromthenextﬁle(ifany);lines
notreadfromtheﬁlewillnotcounttowardsthecumulativelinecount;theﬁlenameisnotchanged
untilaftertheﬁrstlineofthenextﬁlehasbeenread.
close()
Closestheiterator.
All ﬁles are opened in text mode. If an I/O error occurs during opening or reading a ﬁle, the IOError
exceptionisraised.
Example. WecanuseﬁleinputtowriteaPythonversionofthecommonUnixutility, grep. Thegrep
utilitysearchesa listofﬁlesforagivenpattern.
Fornon-Unixusers,the greputilitylooksforthegivenregularexpressioninanynumberofﬁles. Thename
grepisanacronymofGlobalRegularExpressionPrint. ThisissimilartotheWindowscommand ﬁnd.
416 Chapter 35. File Handling Modules
Building Skills in Python, Release 2.6.5
greppy .py
#!/usr/bin/env python
importsys
importre
importfileinput
pattern=re.compile( sys .argv[1] )
forlineinfileinput .input(sys .argv[2:]):
ifpattern.match( line ):
printfileinput .filename(), fileinput .filelineno(), line
1.Thesysmoduleprovidesaccesstothecommand-lineparameters. The remoduleprovidesthepat-
ternmatching. The fileinputmodulemakessearchinganarbitrary listofﬁlessimple. Formore
informationon re,see Complex Strings: the re Module .
2.The ﬁrst command line argument ( ‘ sys.argv[0]’ ) is the name of the script, which this program
ignores.
Thesecondcommand-lineargumentisthepatternthatdeﬁnesthetargetofthesearch.
Theremainingcommand-lineargumentsaregivento fileinput.input() sothatallthenamedﬁles
willbeexamined.
3.Thepatternregularexpressionismatchedagainsteachindividualinputline.
Ifmatch()returnsNone,thelinedidnotmatch. If match()returnsanobject,theprogramprintsthe
currentﬁlename,thecurrentlinenumberoftheﬁleandtheactualinputlinethatmatched.
Afterwedoa‘ chmod +x greppy.py ’,wecanusethisprogramasfollows. Notethatwehavetoprovide
quotestopreventtheshellfromdoingglobbingonourpattern string.
$greppy.py 'import.*random' *.py
demorandom.py 2 import random
dice.py 1 import random
functions.py 2 import random
Windows
WindowsuserswillbedisappointedbecausetheGNU/Linuxshelllanguagesallhandleﬁlewild-card
processing(“globbing”)automatically. Theshellusestheﬁle-namepatternstocreateacompletelist
ofﬁlenamesthatmatchthepatterntotheapplication.
Windowsdoesnotsupplylistsofﬁlenamesthatmatchpatternstoapplicationprograms. Therefore,
wehavetousethe globmoduletotransform‘ sys.argv[2:] ’ fromapatterntolistsofﬁles.
Also,Windowsuserswillhavetouse‘ ""’aroundthepattern,whereUnixandMacOSshelluserswill
typicallyuse‘ ''’. ThisisadiﬀerencebetweentheUnixshellquotingrulesandtheWindowsquoting
rules.
35.4 Theglob andfnmatch Modules
Theglobmodule adds a necessary Unix shell capability to Windows programmers. The globmodule
includesthefollowingfunction
35.4. The glob andfnmatch Modules 417
Building Skills in Python, Release 2.6.5
glob(wildcard)
Returna listofﬁlenamesthatmatchthegivenwild-cardpattern. The fnmatchmoduleisusedfor
thewild-cardpatternmatching.
Acommonusefor globissomethinglikethefollowingunderWindows.
importglob,sys
forarginsys.argv[1:]:
forfinglob.glob(arg):
process( f )
This makes Windows programs process command line arguments somewhat like Unix programs. Each
argumentispassedto glob.glob()toexpandanypatternsintoa listofmatchingﬁles. Iftheargument
isnotawild-cardpattern,globsimplyreturnsa listcontainingthisoneﬁlename.
Thefnmatchmodulehasthealgorithmforactuallymatchingawild-cardpatternagainstspeciﬁcﬁlenames.
ThismoduleimplementstheUnixshellwild-cardrules. Thesearenotthesameasthemoresophisticated
regularexpressionrules. Themodulecontainsthefollowingfunction:
fnmatch(ﬁlename, pattern )
ReturnTrueiftheﬁlenamematchesthepattern.
Thepatternsuse *tomatchanynumberofcharacters, ?tomatchanysinglecharacter. [letters]matches
anyoftheseletters,and [!letters]matchesanyletterthatisnotinthegivensetofletters.
>>>importfnmatch
>>>fnmatch.fnmatch( 'greppy.py ','*.py')
True
>>>fnmatch.fnmatch( 'README','*.py')
False
35.5 Thetempfile Module
Onecommonproblemistoopenauniquetemporaryﬁletoholdintermediateresults. The tempfilemodule
providesusahandywaytocreatetemporaryﬁlesthatwecanwritetoandreadfrom.
Thetempfilemodule creates a temporary ﬁle in the most secure and reliable manner. The tempfile
moduleincludesaninternalfunction, mkstemp()whichdioesthehardworkofcreatingauniquetemporary
ﬁle.
TemporaryFile (mode=’w+b’, bufsize=-1, suﬀix=”, preﬁx=’tmp’, dir=None )
Thisfunctioncreatesaﬁlewhichisautomaticallydeletedwhenitisclosed. Alloftheparametersare
optional. Bydefault,themodeis‘ 'w+b'’: writewithreadinbinarymode.
Thebufsizeparameterhasthesamemeaningasitdoesforthebuilt-in open()function.
Thekeywordparameters suffix,prefixanddirprovidesomestructuretothenameassignedtothe
ﬁle. The suffixshouldincludethedot,forexample‘ suffix='.tmp' ’.
NamedTemporaryFile (mode=’w+b’, bufsize=-1, suﬀix=”, preﬁx=’tmp’, dir=None, delete=T rue )
Thisfunctionissimilarto TemporaryFile() ;itcreatesaﬁlewhichcanbeautomaticallydeletedwhen
itisclosed. Thetemporaryﬁle,however,isguaranteedtobevisibleontheﬁlesystemwhiletheﬁleis
open.
Theparametersarethesameasa tempfile.TemporaryFile() .
Ifthedeleteparameteris False,theﬁleisnotautomaticallydeleted.
418 Chapter 35. File Handling Modules
Building Skills in Python, Release 2.6.5
mkstemp(suﬀix=”, preﬁx=’tmp’, dir=None, text=F alse) -> ( fd, name )
Thisfunctiondoestheessentialjobofcreatingatemporaryﬁle. Itreturnstheinteranlﬁledescriptor
aswellasthenameoftheﬁle. Theﬁleisnotautomaticallydeleted. Ifnecessary,theﬁlecreatedby
thisfunctioncanbeexplicitlydeletedwith os.remove().
import tempfile, os
fd, tempName = tempfile.mkstemp( '.d1' )
temp= open( tempName, 'w+' )
Some Processing...
Thisfragmentwillcreateauniquetemporaryﬁlenamewithanextensionof .d1. Sincethenameisguar-
anteedtobeunique,thiscanbeusedwithoutfearofdamagingoroverwritinganyotherﬁle.
35.6 Theshutil Module
Theshutilmodule helps you automate copying ﬁles and directories. This saves the steps of opening,
reading,writingandclosingﬁleswhenthereisnoactualprocessing,simplymovingﬁles.
copy(source, destination )
Copydataandmodebits;basicallytheunixcommand‘ cp src dst’. Ifdestinationisadirectory,
aﬁlewiththesamebasenameas sourceiscreated. If destinationisafullﬁlename,thisisthe
destinationﬁle.
copyfile (source, destination )
Copydatafrom sourcetodestination. Bothnamesmustbeﬁles.
copytree (source, destination )
Recursivelycopytheentiredirectorytreerootedat sourcetodestination.destinationmustnot
alreadyexist. Errorsarereportedtostandardoutput.
rmtree(path)
Recursivelydeleteadirectorytreerootedat path.
Notethatremovingaﬁleisdonewith os.remove()(oros.unlink()).
ThismoduleallowsustobuildPythonapplicationsthatarelikeshellscripts. Therearealotofadvantages
towritingPythonprogramsratherthanshellscriptstoautomatemundanetasks.
First,Pythonprogramsareeasiertoreadthanshellscripts. Thisisbecausethelanguagedidnotevolvein
waythatemphasizedtersness;theshellscriptlanguagesuseaminimumofpunctuation,whichmakethem
hardtoread.
Second,Pythonprogramshaveamoresophisticatedprogrammingmodel,withclassdeﬁnitions,andnumer-
oussophisticateddatastructures. Theshellworkswithsimpleargumentlists;ithastoresorttorunning
thetestorexprprogramstoprocess stringsornumbers.
Finally, Python programs have direct access to more of the operating system’s features than the shell.
Generally,manyofthebasicGNU/LinuxAPIcallsareprovidedviainnumerablesmallprograms. Rather
thanhavingtheshellrunasmallprogramtomakeanAPIcall,PythoncansimplymaketheAPIcall.
35.7 The File Archive Modules: tarfile andzipfile
An archive ﬁle contains a complex, hierarchical ﬁle directory in a single sequential ﬁle. The archive ﬁle
includestheoriginaldirectoryinformationaswellasathecontentsofalloftheﬁlesinthosedirectories.
Thereareanumberofarchiveﬁleformats,Pythondirectorysupportstwo: tarandziparchives.
35.6. The shutil Module 419
Building Skills in Python, Release 2.6.5
Thetar(TapeArchive)formatiswidelyusedintheGNU/Linuxworldtodistributeﬁles. ItisaPOSIX
standard,makingitusableonawidevarietyofoperatingsystems. Atarﬁlecanalsobecompressed,often
withtheGZiputility,leadingto .tgzor.tar.gzﬁleswhicharecompressedarchives.
TheZipﬁleformatwasinventedbyPhilKatzatPKWareasawaytoarchiveacomplex,hierarchicalﬁle
directoryintoacompactsequentialﬁle. TheZipformatiswidelyusedbutisnotaPOSIXstandard. Zipﬁle
processingincludesachoiceofcompressionalgorithms;theexactalgorithmusedisencodedintheheaderof
theﬁle,notinthenameofﬁle.
Creatinga TarFileoraZipFile. Sinceanarchiveﬁleisstill–essentially–asingleﬁle, itisopened
withavariationonthe open()function. Sinceanarchiveﬁlecontainsdirectoryandﬁlecontents,ithasa
numberofmethodsaboveandbeyondwhatasimpleﬁlehas.
open(name=None, mode=’r’, ﬁleobj=None, bufsize=10240 )
Thismodule-levelfunctionopensthegiventarﬁleforprocessing. The nameisaﬁlename string;it
isoptionalbecausethe ﬁleobjcanbeusedinstead. The ﬁleobjectisaconventionalﬁleobject,which
canbeusedinsteadofthe name;itcanbeastandardﬁlelike sys.stdin. The buﬀersizeislikethe
built-inopen()function.
The modeissimilartothebuilt-in open()function;ithasnumerousadditionalcharacterstospecify
thecompressionalgorithms,ifany.
ZipFile(ﬁle, mode=”r”, compression=ZIP_STORED, al lowZip64=F alse )
Thisclassconstructoropensthegivenzipﬁleforprocessing. The nameisaﬁlename string. The
modeissimilartothebuilt-in open()function. The compressionisthecompressioncode. Itcanbe
zipfile.ZIP_STORED orzipfile.ZIP_DEFLATED .A compressionofZIP_STOREDusesnocompression;
avalueof ZIP_DEFLATED usestheZlibcompressionalgorithms.
TheallowZip64optionisusedwhencreatingnew,emptyZipFiles. Ifthisissetto True,thenthis
willcreateﬁleswiththeZIP64extensions. Ifthisisleftat False,anytimeaZIP64extensionwould
berequiredwillraiseanexception.
Theopenfunctioncanbeusedtoreadorwritethearchiveﬁle. Itcanbeusedtoprocessasimpledisk
ﬁle,usingtheﬁlename. Or,moreimportantly,itcanbeusedtoprocessanon-diskﬁle: thisincludestape
devicesandnetworksockets. Inthenon-diskcase,aﬁleobjectisgivento tarfile.open() .
Fortarﬁles,themodeinformationisrathercomplexbecausewecandomorethansimplyread,writeand
append. Themode stringadressesthreeissues:thekindofopening(reading,writing,appending),thekind
ofaccess(blockorstream)andthekindofcompression.
Forzipﬁles,however,themodeissimplythekindofopeningthatisdone.
Opening-Bothzipandtarﬁles . Aziportarﬁlecanbeopenedinanyofthreemodes.
‘r’Opentheﬁleforreadingonly.
‘w’Opentheﬁleforwritingonly.
‘a’Openanexistingﬁleforappending.
Access-tarﬁlesonly . Atarﬁlecanhaveeitheroftwofundamentallydiﬀerentkindsofaccess. Ifatar
ﬁleisadiskﬁle,whichsupportsseekandtelloperations,thenyouweaccessthetarﬁleinblockmode. If
thetarﬁleisastream,networkconnectionorapipeline,whichdoesnotsupportseekortelloperations,
thenwemustaccessthearchiveinstreammode.
‘:’Blockmode. Thetarﬁleisandiskﬁle,andseekandtelloperationsaresupported. Thisistheassumed
default,ifneither‘ :’ or‘|’arespeciﬁed.
‘|’Streammode. Thetarﬁleisastream,socketorpipeline,andcannotrespondtoseekortelloperations.
Notethatyoucannotappendtoastream,sothe‘ 'a|'’combinationisillegal.
Thisaccessdistinctionisn’tmeaningfulforzipﬁles.
420 Chapter 35. File Handling Modules
Building Skills in Python, Release 2.6.5
Compression-tarﬁlesonly . AtarﬁlemaybecompressedwithGZiporBZip2algorithms,oritmay
beuncompressed. Generally,youonlyneedtoselectcompressionwhenwriting. Itdoesn’tmakesenseto
attempttoselectcompressionwhenappendingtoanexistingﬁle,orwhenreadingaﬁle.
(nothing)Thetarﬁlewillnotbecompressed.
‘gz’ThetarﬁlewillbecompressedwithGZip.
‘bz2’ThetarﬁlewillbecompressedwithBZip2.
This compression distinction isn’t meaningful for zip ﬁles. Zip ﬁle compression is speciﬁed in the
zipfile.ZipFile constructor.
TarFileExamples . Themostcommonblockmodesfortarﬁlesare‘ r’,‘a’,‘w:’,‘w:gz’,‘w:bz2’. Note
thatreadandappendmodescannotmeaningfullyprovidecompressioninformation,sinceit’sobviousfrom
theﬁleifitwascompressed,andwhichalgorithmwasused.
For stream modes, however, the compression information mustbe provided. The modes include all six
combinations: ‘ r|’,‘r|gz’,‘r|bz2’,‘w|’,‘w|gz’,‘w|bz2’.
DirectoryInformation . Eachindividualﬁleinatararchiveisdescribedwitha TarInfoobject. Thishas
name,size,accessmode,ownershipandotherOSinformationontheﬁle. Anumberofmethodswillretrieve
memberinformationfromanarchive.
getmember (name)
Readsthroughthearchiveindexlookingforthegivenmember name. Returnsa TarInfoobjectfor
thenamedmember,orraisesa KeyErrorexception.
getmembers ()
Returnsa listofTarInfoobjectsforallofthemembersinthearchive.
next()
Returnsa TarInfoobjectforthenextmemberofthearchive.
getNames ()
Returnsa listofmembernames.
Eachindividualﬁleinaziparchiveisdescribedwitha ZipInfoobject. Thishasname,size,accessmode,
ownershipandotherOSinformationontheﬁle. Anumberofmethodswillretrievememberinformation
fromanarchive.
getinfo(name)
Locatesinformationaboutthegivenmember name. Returnsa ZipInfoobjectforthenamedmember,
orraisesa KeyErrorexception.
infolost ()
Returnsa listofZipInfoobjectsforallofthemembersinthearchive.
namelist ()
Returnsa listofmembernames.
ExtractingFilesFromanArchive . Ifatararchiveisopenedwith‘ r’,thenyoucanreadthearchive
andextractﬁlesfromit. Thefollowingmethodswillextractmemberﬁlesfromanarchive.
extract(member, [path] )
The membercanbeeithera stringmembernameora TarInfoforamember. Thiswillextractthe
ﬁle’scontentsandreconstructtheoriginalﬁle. If pathisgiven,thisisthenewlocationfortheﬁle.
extractfile (member)
The membercan be either a stringmember name or a TarInfofor a member. This will open
a simple ﬁle for access to this member’s contents. The member access ﬁle has only read-oriented
methods,limitedto read(),readline(),readlines(),seek(),tell().
35.7. The File Archive Modules: tarfile andzipfile 421
Building Skills in Python, Release 2.6.5
Ifaziparchiveisopenedwith‘ r’,thenyoucanreadthearchiveandextractthecontentsofaﬁlefromit.
read(member)
The memberisastringmembername. Thiswillextractthemember’scontents,decompressthemif
necessary,andreturnthebytesthatconsitutethemember.
CreatingorExtendinganArchive . Ifatararchiveisopenedwith‘ w’or‘a’,thenyoucanaddﬁlesto
it. Thefollowingmethodswilladdmemberﬁlestoanarchive.
add(name, [arcname, recursive=T rue] )
Adds the ﬁle with the given nameto the current archive ﬁle. If arcnameis provided, this is the
name the ﬁle will have in the archive; this allows youto build an archivewhich doesn’t reﬂect the
sourcestructure. Generally, directoriesareexpanded; using‘ recursive=False ’preventsexpanding
directories.
addfile(tarinfo, ﬁleobj )
Creates an entry in the archive. The description comes from the tarinfo, an instance of TarInfo,
createdwiththe gettarinfo() function. The ﬁleobjisanopenﬁle,fromwhichthecontentisread.
Notethatthe TarInfo.size ﬁeldcanoverridetheactualsizeoftheﬁle. Foragivenﬁlename, fn,this
mightlooklikethefollowing: ‘ tf.addfile( tf.gettarinfo(fn), open(fn,"r") ) ’.
close()
Closesthearchive. Forarchivesbeingwrittenorappended,thisaddstheblockofzeroesthatdeﬁnes
theendoftheﬁle.
gettarinfo (name, [arcname, ﬁleobj] )
Createsa TarInfoobjectforaﬁlebasedeitheron name,orthe ﬁleobj. Ifa nameisgiven,thisisa
localﬁlename. The arcnameisthenamethatwillbeusedinthearchive,allowingyoutomodifylocal
ﬁlesystemnames. Ifthe ﬁleobjisgiven,thisﬁleisinterrogatedtogatherrequiredinformation.
Ifaziparchiveisopenedwith‘ w’or‘a’,thenyoucanaddﬁlestoit.
write(ﬁlename, [arcname, compress] )
The ﬁlenameisastringﬁlename. Thiswillreadtheﬁle,compressit,andwriteittothearchive. If
the arcnameisgiven,thiswillbethenameinthearchive;otherwiseitwillusetheoriginal ﬁlename.
The compressparameteroverridesthedefaultcompressionspeciﬁedwhenthe ZipFilewascreated.
writestr (arcname, bytes )
The arcnameisastringﬁlenameora ZipInfoobjectthatwillbeusedtocreateanewmemberin
thearchive. Thiswillwritethegivenbytestothearchive. Thecompressionusedisspeciﬁedwhenthe
ZipFileiscreated.
AtarfileExample. Here’sanexampleofaprogramtoexamineatarﬁle,lookingfordocumentationlike
.htmlﬁlesorREADMEﬁles. Itwillprovidealistof .htmlﬁles,andactuallyshowthecontentsofthe README
ﬁles.
readtar.py
#!/usr/bin/env python
"""Scan a tarfile looking for *.html and a README."""
importtarfile
importfnmatch
archive=tarfile.open("SQLAlchemy-0.3.5.tar.gz ","r")
formeminarchive.getmembers():
iffnmatch.fnmatch( mem .name,"*.html"):
printmem.name
eliffnmatch.fnmatch( mem .name.upper(), "*README* "):
printmem.name
422 Chapter 35. File Handling Modules
Building Skills in Python, Release 2.6.5
docFile=archive.extractfile( mem )
printdocFile.read()
AzipfileExample. Here’s an example of a program to create a zipﬁle based on the .xmlﬁles in a
particulardirectory.
writezip.py
importzipfile,os,fnmatch
bookDistro =zipfile.ZipFile( 'book.zip ','w', zipfile .ZIP_DEFLATED )
fornminos.listdir( '..'):
iffnmatch.fnmatch(nm, '*.xml'):
full=os.path.join('..', nm )
bookDistro .write( full )
bookDistro .close()
35.8 Thesys Module
Thesysmoduleprovidesaccesstosomeobjectsusedormaintainedbytheinterpreterandtofunctionsthat
interactstronglywiththeinterpreter.
ThesysmodulealsoprovidesthethreestandardﬁlesusedbyPython.
sys.stdinStandard input ﬁle object; used by raw_input()andinput(). Also available via
‘sys.stdin.read() ’andrelatedmethodsoftheﬁleobject.
sys.stdoutStandard output ﬁle object; used by the printstatement. Also available via
‘sys.stdout.write() ’andrelatedmethodsoftheﬁleobject.
sys.stderrStandarderrorobject;usedforerrormessages,typicallyunhandledexceptions.Avail-
ablevia‘ sys.stderr.write() ’andrelatedmethodsoftheﬁleobject.
Aprogramcanassignanotherﬁleobjecttooneoftheseglobalvariables. Whenyouchangetheﬁleforthese
globals,thiswillredirectalloftheinterpreter’sI/O.
Command-Line Arguments . One important object made available by this module is the variable
sys.argv. This variable has the command line arguments used to run this script. For example, if we
hadapythonscriptcalledportfolio.py,andexecuteditwiththefollowingcommand:
python portfolio.py -xvb display.csv
Thenthe sys.argv listwouldbe ["portfolio.py", "-xvb", "display.csv"] . Sophisticatedargument
processingisdonewiththe optparsemodule.
Afewotherinterestingobjectsinthe sysmodulearethefollowingvariables.
sys.versionTheversionofthisinterpreterasa string. Forexample, '2.6.3 (r263:75184,
Oct 2 2009, 07:56:03) n[GCC 4.0.1 (Apple Inc. build 5493)]'
sys.version_info Versioninformationasa tuple,forexample: (2, 6, 3, 'final', 0) .
sys.hexversion Version information encoded as a single integer. Evaluating
‘hex(sys.hexversion) ’ yields'0x20603f0'. Each byte of the value is version infor-
mation.
sys.copyright Copyrightnoticepertainingtothisinterpreter.
35.8. The sys Module 423
Building Skills in Python, Release 2.6.5
sys.platform Platformidentiﬁer,forexample, 'darwin','win32'or'linux2'.
sys.preﬁxFile Path preﬁx used to ﬁnd the Python library, for example '/usr',
'/Library/Frameworks/Python.framework/Versions/2.5' or'c:\Python25' .
35.9 Additional File-Processing Modules
ThereareseveralotherchaptersofthePythonLibraryReferencethatcoverwithevenmoreﬁleformats.
We’llidentifythembrieﬂyhere.
Chapter 7 – Internet Data Handling . Reading and processing ﬁles of Internet data types is very
common. Internetdatatypeshaveformaldeﬁnitionsgovernedbytheinternetstandards,calledRequests
forComment(RFC’s). ThefollowingmodulesareforhandlingInternetdatastructures. Thesemodulesand
therelatedstandardsarebeyondthescopeofthisbook.
emailHelpsyouhandleemailMIMEattachments.
mailcapMailcapﬁlehandling.
mailboxReadvariousmailboxformats.
mhlibManipulateMHmailboxesfromPython.
mimetoolsToolsforparsingMIME-stylemessagebodies.
mimetypesMappingofﬁlenameextensionstoMIMEtypes.
MimeWriterGenericMIMEﬁlewriter.
mimifyMimiﬁcationandunmimiﬁcationofmailmessages.
multifileSupportforreadingﬁleswhichcontaindistinctparts,suchassomeMIMEdata.
rfc822ParseRFC822stylemailheaders.
base64EncodeanddecodeﬁlesusingtheMIMEbase64data.
binhexEncodeanddecodeﬁlesinbinhex4format.
binasciiToolsforconvertingbetweenbinaryandvariousASCII-encodedbinaryrepresentations.
quopriEncodeanddecodeﬁlesusingtheMIMEquoted-printableencoding.
uuEncodeanddecodeﬁlesinuuencodeformat.
Chapter 13 - Data Persistence . Many Python programs will also deal with Python objects that are
exported from memory to external ﬁles or retrieved from ﬁles to memory. Since an external ﬁle is more
persistent than the volatile working memory of a computer, this process makes an object persistent or
retrievesapersistentobject. Onemechanismforcreatingapersistentobjectiscalledserialization,andis
supportedbyseveralmodules,whicharebeyondthescopeofthisbook.
pickleConvertPythonobjectstostreamsofbytesandback.
cPickleFasterversionofpickle,butnotsubclassable.
copy_regRegisterpicklesupportfunctions.
shelvePythonobjectpersistence.
marshalConvertPythonobjectstostreamsofbytesandback(withdiﬀerentconstraints).
MorecomplexﬁlestructurescanbeprocessedusingthestandardmodulesavailablewithPython.Thewidely-
usedDBMdatabasemanagerisavailable,plusadditionalmodulesareavailableonthewebtoprovideODBC
424 Chapter 35. File Handling Modules
Building Skills in Python, Release 2.6.5
accessortoconnecttoaplatform-speciﬁcdatabaseaccessroutine. ThefollowingPythonmodulesdealwith
thesekindsofﬁles. Thesemodulesarebeyondthescopeofthisbook.
anydbmGenericinterfacetoDBM-styledatabasemodules.
whichdbGuesswhichDBM-stylemodulecreatedagivendatabase.
dbmThestandarddatabaseinterface,basedonthendbmlibrary.
gdbmGNU’sreinterpretationofdbm.
dbhashDBM-styleinterfacetotheBSDdatabaselibrary.
bsddbInterfacetoBerkeleyDBdatabaselibrary
dumbdbmPortableimplementationofthesimpleDBMinterface.
Additionally,Pythonprovidesarelationaldatabasemodule.
sqlite3Averypleasant, easy-to-userelationaldatabase(RDBMS).ThishandlesawidevarietyofSQL
statements.
35.10 File Module Exercises
1.SourceLinesofCode . Onemeasureofthecomplexityofanapplicationisthecountofthenumber
oflinesofsourcecode. Often,thiscountdiscardscommentlines. We’llwriteanapplicationtoread
Pythonsourceﬁles,discardingblanklinesandlinesbeginningwith #,andproducingacountofsource
lines.
We’lldevelopafunctiontoprocessasingleﬁle. We’llusethe globmoduletolocateallofthe *.py
ﬁlesinagivendirectory.
Developa fileLineCount( name )() whichopensaﬁlewiththegiven nameandexaminesallofthe
linesoftheﬁle. Eachlineshouldhave strip()appliedtoremoveleadingandtrailingspaces. Ifthe
resultinglineisoflengthzero,itwaseﬀectivelyblank,andcanbeskipped. Iftheresultinglinebegins
with#thelineisentirelyacomment,andcanbeskipped. Allremaininglinesshouldbecounted,and
fileLineCount() returnsthiscount.
Developa directoryLineCount( path )() functionwhichusesthepathwiththe glob.glob()to
expandallmatchingﬁlenames. Eachﬁlenameisprocessedwith fileLineCount( name )() toget
thenumberofnon-commentsourcelines. Writethistoatab-delimitedﬁle;eachlineshouldhavethe
form‘filenametlines ’.
Forasampleapplication,lookinyourPythondistributionfor Lib/idelib/*.py .
2.SummarizeaTab-DelimitedFile . Thepreviousexerciseproducedaﬁlewhereeachlinehasthe
form‘filenametlines ’. Readthistab-delimitedﬁle,producinganicer-lookingreportthathascolumn
titles,ﬁleandlinecounts,andatotallinecountattheendofthereport.
3.FileProcessingPipeline . Theprevioustwoexercisesproducedprogramswhichcanbepartofa
processingpipeline. Theﬁrstexerciseshouldpshouldproduceit’soutputon sys.stdout. Thesecond
exerciseshouldgatherit’sinputfrom sys.stdin. Oncethiscapabilityisinplace,thepipelinecanbe
invokedusingacommandlikethefollowing:
$python lineCounter.py | python lineSummary.py
35.10. File Module Exercises 425
Building Skills in Python, Release 2.6.5
426 Chapter 35. File Handling Modules
CHAPTER
THIRTYSIX
FILE FORMA TS: CSV, T AB, XML,
LOGS AND OTHERS
Welookedatgeneralfeaturesoftheﬁlesystemin Files. Inthischapterwe’lllookatPythontechniquesfor
handlingﬁlesinafewoftheinnumeraableformatsthatareincommonuse. Mostﬁleformatsarerelatively
easytohandlewithPythontechniqueswe’vealreadyseen. Comma-SeparatedValues(CSV)ﬁles,XMLﬁles
andpackedbinaryﬁles,however,arealittlemoresophisticated.
Thisonlythetipoftheiceberginthefarlargerproblemcalled persistence. Inadditiontosimpleﬁlesystem
persistence, wealso havethe possibilityof object persistence using an object database. In this case, the
databseprocessingliesbetweenourprogramandtheﬁlesystemonwhichthedatabaseresides. Thisarea
alsoincludesobject-relationalmapping,whereourprogramreliesonamapper;themapperusestodatabase,
andthedatabasemanagestheﬁlesystem. Wecan’texplorethewholepersistenceprobleminthischapter.
Inthischapterwe’llpresentaconceptualoverviewofthevariousapproachestoreadingandwritingﬁles
in Overview. We’ll look at reading and writing CSV ﬁles in Comma-Separated V alues: The csv Module ,
tab-delimited ﬁles in T ab Files: Nothing Special . We’ll look reading property ﬁles in Property Files and
Conﬁguration (or .INI ) Files: The ConﬁgParser Module . We’lllookatthesubletiesofprocessinglegacy
COBOLﬁlesin Fixed F ormat Files, A COBOL Legacy: The codecs Module . We’llcoverthebasicsofreading
XMLﬁlesin XML Files: The xml.etree and xml.sax Modules .
Mostprogramsneedawaytowritesophisticated,easy-to-controllogﬁleswhatcontainstatusanddebugging
information. For simple one-page programs, the printstatement is ﬁne. As soon as we have multiple
modules,whereweneedmoresophisticateddebugging,weﬁndaneedforthe loggingmodule. Ofcourse,
anyprogramthatrequirescarefulauditingwillbeneﬁtfromthe loggingmodule. We’lllookatcreating
standardlogsin Log Files: The logging Module .
36.1 Overview
Whenweintroducedtheconceptofﬁlewementionedthatwecouldlookataﬁleontwolevels.
•Aﬁleisasequenceofbytes. ThisistheOS’sviewofviews,asitisthelowest-commondenominator.
•Aﬁleisasequenceofdataobjects,representedassequencesofbytes.
A ﬁle formatistheprocessingrulesrequiredtotranslatebetweenusablePythonobjectsandsequencesof
bytes. Peoplehaveinventedinnumerabledistinctﬁleformats. We’lllookatsometechniqueswhichshould
covermostofthebases.
We’lllookatthreebroadfamiliesofﬁles: text,binaryandpickledobjects. Eachhassomeadvantagesand
processingcomplexities.
427
Building Skills in Python, Release 2.6.5
•Textﬁlesaredesignedsothatapersoncaneasilyreadandwritethem. We’lllookatseveralcommon
textﬁleformats,includingCSV,XML,Tab-delimited,property-format,andﬁxedposition. Sincetext
ﬁlesareintendedforhumanconsumption,theyarediﬀiculttoupdateinplace.
•Binaryﬁlesaredesignedtooptimizeprocessingspeedortheoverallsizeoftheﬁle. Mostdatabases
useverycomplexbinaryﬁleformatsforspeed. AJPEGﬁle,ontheotherhand,usesabinaryformat
tominimizethesizeoftheﬁle. Abinary-formatﬁlewilltypicallyplacedataatknownoﬀsets,making
itpossibletododirectaccesstoanyparticularbyteusingthe seek()methodofaPythonﬁleobject.
•PickledObjectsareproducedbyPython’s pickleorshelvemodules. Thereareseveralpickleproto-
colsavailable,includingtextandbinaryalternatives. Moreimportantly,apickledﬁleisnotdesigned
tobeseenbypeople,norhavewespentanydesigneﬀortoptimizngperformaceorsize. Inasense,a
pickledobjectrequirestheleastdesigneﬀort.
36.2 Comma-Separated Values: The csv Module
Often,wehavedatathatisinComma-SeparatedValue(CSV)format. Thisusedbymanyspreadsheetsand
isawidely-usedstandardfordataﬁles.
In Reading a CSV File the Hard W ay weparsedCSVﬁlesusingsimple stringmanipulations. The csv
moduledoesafarbetterjobatparsingandcreatingCSVﬁlesthantheprogrammingweshowedinthose
examples.
About CSV Files . CSV ﬁles are text ﬁles organized around data that has rows and columns. This
formatisusedtoexchangedatabetweenspread-sheetprogramsordatabases. ACSVﬁleusesanumberof
punctuationrulestoencodethedata.
•Eachrowisdelimitedbyaline-endingsequenceofcharacters. ThisisusuallytheASCIIsequence‘ rn’.
Sincethismaynotbethedefaultwaytoprocesstextﬁlesonyourplatform,youhavetoopenﬁles
usingthe“rb”and“wb”modes.
•Withinarow,columnsaredelimitedbya‘ ,’. Tohandlethesituationwhereacolumn’sdatacontains
a‘,’,thecolumndatamaybequoted;surroundedby‘ "’characters. Ifthecolumncontainsa‘ "’,there
aretwocommonrulesused. OneCSVdialectusesanescapecharacter,usually‘ \"’. Theotherdialect
usesdouble‘ ""’.
Intheidealcase,aCSVﬁlewillhavethesamenumberofcolumnsineachrow,andtheﬁrstrowwillbe
columntitles. Almostaspleasantisaﬁlewithoutcolumntitles,butwithaknownsequenceofcolumns. In
themorecomplexcases,thenumberofcolumnsperrowvaries.
ThecsvModule. TheCSVmoduleprovidesyouwithreadersorwriters;theseareobjectswhichusean
existingfileobject,createdwiththe file()oropen()function. ACSVreaderwillreadaﬁle,parsingthe
commasandquotes,deliveringyouthedataelementsofeachrowinasequenceormapping. ACSVwriter
willcreateaﬁle,addingthenecessarycommasandquotestocreateavalidCSVﬁle.
The following constructors within the csvmodule are used to create a reader,DictReader,writeror
DictWriter.
reader(csvﬁle)
Createsa readerobjectwhichcanparsethegivenﬁle,returningasequenceofvaluesforeachlineof
theﬁle. The csvfilecanbeanyiterableobject.
Thiscanbeusedasfollows.
rdr=csv.reader( open("file.csv ","rb") )
forrowinrdr:
printrow
428 Chapter 36. File Formats: CSV, T ab, XML, Logs and Others
Building Skills in Python, Release 2.6.5
writer(csvﬁle)
Createsa writerobjectwhichcanformatasequenceofvaluesandwritethemtoalineoftheﬁle.
Thecsvfilecanbeanyobjectwhichsupportsa write()method.
Thiscanbeusedasfollows.
target=open("file.csv ","wb")
wtr=csv.writer( target )
wtr.writerow( [ "some","list","of","values"] )
target.close()
It’sveryhandytousethe withstatementtoassurethattheﬁleisproperlyclosed.
withopen("file.csv ","wb")astarget:
wtr=csv.writer( target )
wtr.writerow( [ "some","list","of","values"] )
DictReader (csvﬁle, [ﬁeldnames] )
Createsa DictReaderobjectwhichcanparsethegivenﬁle,returningadictionaryofvaluesforeach
lineoftheﬁle. Thedictionarykeysaretypicallytheﬁrstlineoftheﬁle. Youcan,optionally,provide
theﬁeldnamesiftheyarenottheﬁrstlineoftheﬁle. The csvfilecanbeanyiterableobject.
DictWriter (csvﬁle, [ﬁeldnames] )
Createsa DictWriterobjectwhichcanformatadictionaryofvaluesandwritethemtoalineofthe
ﬁle. Youmustprovideasequenceofﬁeldnameswhichisusedtoformateachindividualdictionary
entry. The csvfilecanbeanyobjectwhichsupportsa write()method.
ReaderFunctions . Thefollowingfunctionswithina reader(orDictReader)objectwillreadandparse
theCSVﬁle.
WriterFunctions . Thefollowingfunctionswitha writer(orDictWriter)objectwillformatandwritea
CSVﬁle.
BasicCSVReadingExample .
The basic CSV reader processing treats each line of the ﬁle as data. This is typical for ﬁles which lack
columntitles,orﬁleswhichhavesuchacomplexformatthatspecialparsingandanalysisisrequired. In
somecases,aﬁlehasasimple,regularformatwithasinglerowofcolumntitles,whichcanbeprocessedby
aspecialreaderwe’lllookatbelow.
We’llrevisethe readquotes.py programfrom Reading a CSV File the Hard W ay . Thiswillproperlyhandle
allofthequotingrules,eliminatinganumberofirritatingproblemswiththeexampleinthepreviouschapter.
readquotes2.py
importcsv
qFile=file("quotes.csv ","rb")
csvReader =csv.reader( qFile )
forqincsvReader:
try:
stock, price, date, time, change, opPrc, dHi, dLo, vol =q
printstock,float(price), date, time, change, vol
exceptValueError :
pass
qFile.close()
1.Weopenourquotesﬁle, quotes.csv,forreading,creatinganobjectnamed qFile.
36.2. Comma-Separated Values: The csv Module 429
Building Skills in Python, Release 2.6.5
2.Wecreatea csv.readerobjectwhichwillparsethisﬁleforus,transformingeachlineintoasequence
ofindividualcolumnvalues.
3.Weuseaforstatementtoiteratethroughthesequenceoflinesintheﬁle.
4.Intheunlikelyeventofaninvalidnumberfortheprice,wesurroundthiswitha trystatement. The
invalidnumberlinewillraisea ValueErrorexception,whichiscaughtinthe exceptclauseandquietly
ignored.
5.Eachstockquote, q,isasequenceofcolumnvalues. Weusemultipleassignmenttoassigneachﬁeld
toarelevantvariable. Wedon’tneedtostripwhitespace,splitthestring,orhandlequotes;thereader
alreadydidthis.
6.Sincethepriceisastring,weusethe float()functiontoconvertthisstringtoapropernumericvalue
forfurtherprocessing.
ColumnHeadersasDictionaryKeys Insomecases,youhaveasimple,regularﬁlewithasinglelineof
columntitles. Inthiscase,youcantransformeachlineoftheﬁleintoadictionary. Thekeyforeachﬁeldis
thecolumntitle. Thiscanleadtoprogramswhicharemoreclear,andmoreﬂexible. Theﬂexibilitycomes
fromnotassumingaspeciﬁcordertothecolumns.
We’llrevisethe readportfolio.py programfrom Reading “Records” . Thiswillproperlyhandleallofthe
quotingrules,eliminatinganumberofirritatingproblemswiththeexampleinthepreviouschapter. Itwill
makeuseofthecolumntitlesintheﬁle.
readportfolio2.py
importcsv
quotes=open("display.csv ","rb")
csvReader =csv.DictReader( quotes )
invest=0
current=0
fordataincsvReader:
printdata
invest+=float(data["Purchase Price "])*float(data["# Shares "])
current +=float(data["Price"])*float(data["# Shares "])
printinvest, current, (current -invest)/invest
1.Weopenourportfolioﬁle, display.csv,forreading,creatingaﬁleobjectnamed quotes.
2.Wecreatea csv.DictReader objectfromour quotesﬁle. Thiswillreadtheﬁrstlineoftheﬁletoget
thecolumntitles;eachsubsequentlinewillbeparsedandtransformedintoadictionary.
3.Weinitializetwocounters, investandcurrenttozero. Thesewillaccumulateourinitialinvestment
andthecurrentvalueofthisportfolio.
4.Weuseaforstatementtoiteratethroughthelinesin quotesﬁle. Eachlineisparsed,andthecolumn
titlesareusedtocreateadictionary,whichisassignedto data.
5.Eachstockquote, q,isastring.Weusethe strip()operationtoremoveexcesswhitespacecharacters;
thestringwhichiscreatedthenperformsthe split()methodtoseparatetheﬁeldsintoa list. We
assignthis listtothevariable values.
6.Weperformsomesimplecalculationsoneach dict. Inthiscase,weconvertthepurchasepricetoa
number,convertthenumberofsharestoanumberandmultiplytodeterminehowmuchwespenton
thisstock. Weaccumulatethesumoftheseproductsinto invest.
Wealsoconvertthecurrentpricetoanumberandmultiplythisbythenumberofsharestogetthe
currentvalueofthisstock. Weaccumulatethesumoftheseproductsinto current.
430 Chapter 36. File Formats: CSV, T ab, XML, Logs and Others
Building Skills in Python, Release 2.6.5
7.Whentheloophasterminated,wecanwriteoutthetwonumbers,andcomputethepercentchange.
WritingCSVFiles ThemostgeneralcaseforwritingCSVisshowninthefollowingexample. Assume
we’vegotalistofobjects, named someList. Further, let’sassumethateachobjecthasthreeattributes:
this,thatandaKey.
import csv
myFile= open( " :replaceable:`result` ", "wb" )
wtr= csv.writer( myFile )
for someData in :replaceable:`someList` :
aRow= [ someData.this, someData.that, someData.aKey, ]
wtr.writerow( aRow )
myFile.close()
Inthiscase,weassemblethelistofvaluesthatbecomesarowintheCSVﬁle.
InsomecaseswecanprovidetwomethodstoallowourclassestoparticipateinCSVwriting. Wecandeﬁne
acsvRow()methodaswellasa csvHeading() method. Thesemethodswillprovidethenecessarytuplesof
headingordatatobewrittentotheCSVﬁle.
Forexample,let’slookatthefollowingclassdeﬁnitionforasmalldatabaseofsailboats. Thisclassshows
howthecsvRow()andcsvHeading() methodsmightlook.
classBoat(object):
csvHeading =["name","rig","sails"]
def__init__ ( aBoat, name, rig, sails ):
self.name=name
self.rig=rig
self.sails=sails
def__str__(self):
return"%s(%s,%r)"%(self.name,self.rig,self.sails )
defcsvRow(self):
return[self.name,self.rig,self.sails ]
IncludingthesemethodsinourclassdeﬁnitionssimpliﬁestheloopthatwritestheobjectstoaCSVﬁle.
Insteadofbuildingeachrowasalist,wecandothefollowing: ‘ wtr.writerow( someData.csvRow() ) ’.
Here’sanexamplethatleverageseachobject’sinternaldictionary( __dict__)todumpobjectstoaCSV
ﬁle.
db=[
Boat("KaDiMa","sloop", ("main","jib") ),
Boat("Glinda","sloop", ("main","jib","spinnaker ") ),
Boat("Eillean Glas ","sloop", ("main","genoa") ),
]
test=file("boats.csv ","wb")
wtr=csv.DictWriter( test, Boat .csvHeading )
wtr.writerow( dict(zip( Boat.csvHeading, Boat .csvHeading ) ) )
fordindb:
wtr.writerow( d .__dict__ )
test.close()
36.3 T ab Files: Nothing Special
Tab-delimitedﬁlesaretextﬁlesorganizedarounddatathathasrowsandcolumns. Thisformatisusedto
exchangedatabetweenspread-sheetprogramsordatabases. Atab-delimitedﬁleusesjustrwopunctuation
36.3. T ab Files: Nothing Special 431
Building Skills in Python, Release 2.6.5
rulestoencodethedata.
•Eachrowisdelimitedbyanordinarynewlinecharacter. Thisisusuallythestandard‘ n’. Ifyouare
exchangingﬁlesacrossplatforms,youmayneedtoopenﬁlesforreadingusingthe“rU”modetoget
universalnewlinehandling.
•Withinarow,columnsaredelimitedbyasinglecharacter,often‘ t’. Thecolumnpunctuationcharacter
thatischosenisonethatwillneveroccurinthedata. Itisusually(butnotalways)anunprintable
characterlike‘ t’.
Intheidealcases,aCSVﬁlewillhavethesamenumberofcolumnsineachrow,andtheﬁrstrowwillbe
columntitles. Almostaspleasantisaﬁlewithoutcolumntitles,butwithaknownsequenceofcolumns. In
themorecomplexcases,thenumberofcolumnsperrowvaries.
Whenwehaveasingle,standardpunctuationmark,wecansimplyusetwooperationsinthe stringand
listclassestoprocessﬁles. Weusethe split()methodofa stringtoparsetherows. Weusethe join()
methodofa listtoassembletherows.
Wedon’tactuallyneedaseparatemoduletohandletab-delimitedﬁles.
Reading. ThemostgeneralcaseforreadingTab-delimiteddataisshowninthefollowingexample.
myFile=open(":replaceable:`somefile` ","rU")
foraRowinmyFile:
printaRow.split('\t')
myFile.close()
Eachrowwillbea listofcolumnvalues.
Writing. Thewritingcaseistheinverseofthereadingcase. Essentially,weusea‘ "t".join( someList
)’tocreatethetab-delimetedrow. Here’soursailboatexample,doneastab-delimiteddata.
test=file("boats.tab ","w")
test.write("\t".join( Boat .csvHeading ) )
test.write("\n")
fordindb:
test.write("\t".join(map(str, d.csvRow() ) ) )
test.write("\n")
test.close()
Notethatsomeelementsofourdataobjectsaren’tstringvalues. Inthiscase,thevalueforsailsisatuple,
whichneedstobeconvertedtoaproperstring. Theexpression‘ map(str, someList ) ’appliesthe str()
functiontoeachelementoftheoriginallist,creatinganewlistwhichwillhaveallstringvalues. See Sequence
Processing F unctions: map(), ﬁlter() and reduce() .
36.4 Property Files and Conﬁguration (or .INI ) Files: The
ConfigParser Module
Apropertyﬁle,alsoknownasaconﬁguration(or .INI)ﬁledeﬁnespropertyorconﬁgurationvalues. Itis
usuallyjustacollectionofsettings. Theessentialproperty-ﬁleformathasasimplerow-orientedformatwith
onlytwovaluesineachrow. Aconﬁguration(or .INI)ﬁleorganizesasimplelistofpropertiesintooneor
morenamedsections.
Apropertyﬁleusesafewpunctuationrulestoencodethedata.
•Linesbeginingwith‘ #’or‘;’areignored. Insomedialectsthecommentsare‘ #’and‘!’.
432 Chapter 36. File Formats: CSV, T ab, XML, Logs and Others
Building Skills in Python, Release 2.6.5
•Eachpropertysettingisdelimitedbyanordinarynewlinecharacter. Thisisusuallythestandard‘ n’.
If you are exchanging ﬁles across platforms, you may need to open ﬁles for reading using the “rU”
modetogetuniversalnewlinehandling.
•Each property is a simple name and a value. The name is a string characters that does not use a
separatorcharacterof‘ :’ or‘=’. Thevalueiseverythingafterthepunctuationmark,withleadingand
trailingspacesremoved. Insomedialectsspaceisalsoaseparatorcharacter.
Somepropertyﬁledialectsallowavaluetocontinueontothenextline. Inthiscase,alinethatendswith
‘\’(thecwo-charactersequence‘ \’‘\n’)escapestheusualmeaningof‘ \n’. Ratherbeingtheendofaline,
‘\n’isdemotedtojustanotherwhitespacecharacter.
Apropertyﬁleisanextensiontothebasictab-delimitedﬁle. Ithasjusttwocolumnsperline,andsome
space-strippingisdone. However,itdoesn’thaveaconsistentseparator,soitisslightlymorecomplexto
parse.
Theextrafeatureintroducedinaconﬁgurationﬁleisnamedsections.
•Alinebeginningwith‘ [’,endingwith‘ ]’,isthebeginningofasection. The‘ []’‘ssurroundthesection
name. Allofthelinesfromheretothenextsectionheaderarecollectedtogether.
ReadingaSimplePropertyFile . Here’sanexampleofreadingthesimplestkindofpropertyﬁle. In
thiscase,we’llturntheentireﬁleintoadictionary. Pythondoesn’tprovideamodulefordoingthis. The
processingisasequencestringmanipulationstoparsetheﬁle.
propFile =file(r"C:\Java\jdk1.5.0_06 \jre\lib\logging.properties ","rU")
propDict =dict()
forpropLine inpropFile:
propDef=propLine .strip()
iflen(propDef) ==0:
continue
ifpropDef[ 0]in('!','#'):
continue
punctuation =[ propDef .find(c) forcin':=']+[len(propDef) ]
found=min( [ pos forposinpunctuation ifpos!=-1] )
name=propDef[:found] .rstrip()
value=propDef[found:] .lstrip(":=").rstrip()
propDict[name] =value
propFile .close()
printpropDict
printpropDict[ 'handlers ']
Theinputlineissubjecttoanumberofprocessingsteps.
1.Firsttheleadingandtrailingwhitespaceisremoved. Ifthelineisempty,nothingmoreneedstobe
done.
2.Ifthelinebeginswith‘ !’ or‘#’(‘;’insomedialects)itisignored.
3.Weﬁndthelocationofallrelevantpuncuationmarks. Insomedialects,spaceisnotpermitted. Note
thatwethroughthelengthofthelineontheendtopermitasinglewordtobeavalidpropertyname,
withanimplicitvalueofazero-lengthstring.
4.By discarding punction positions of -1, we are only processing the positions of punctuation marks
whichactuallyoccurinthestring. Thesmallestofthesepositionsistheleft-mostpunctuationmark.
5.Thenameiseverythingbeforethepunctuationmarkwithwhitespaceremove.
6.Thevalueiseverythingafterthepunctuaionmark. Anyadditionalseparatorsareremoved,andany
trailingwhitespaceisalsoremoved.
36.4. Property Files and Conﬁguration (or .INI ) Files: The ConfigParser Module 433
Building Skills in Python, Release 2.6.5
ReadingaConﬁgFile . TheConfigParser modulehasanumberofclassesforprocessingconﬁguration
ﬁles. You initialize a ConﬁgParse object with default values. The object can the read one or more a
conﬁgurationﬁles. Youcanthenusemethodstodeterminewhatsectionswerepresentandwhatoptions
weredeﬁnedinagivensection.
importConfigParser
cp=ConfigParser .RawConfigParser( )
cp.read(r"C:\Program Files \Mozilla Firefox \updater.ini ")
printcp.sections()
printcp.options( 'Strings')
printcp.get('Strings','info')
EschewingObfuscation . Whileapropertyﬁleisrathersimple, itispossibletosimplifypropertyﬁles
further. TheessentialpropertydeﬁnitionsyntaxissoclosetoPython’sownsyntaxthatsomeapplications
useasimpleﬁleofPythonvariablesettings. Inthiscase,thesettingsﬁlewouldlooklikethis.
settings.py
# Some Properties
TITLE="The Title String "
INFO="""The information string.
Which uses Python 's ordinary techniques
for long lines. """
Thisﬁlecanbeintroducedinyourprogramwithonestatement: ‘ import settings ’. Thisstatementwill
createmodule-levelvariables, settings.TITLE andsettings.INFO .
36.5 Fixed Format Files, A COBOL Legacy: The codecs Module
FilesthatcomefromCOBOLprogramshavethreecharacteristicfeatures:
•The ﬁle layout is deﬁned positionally. There are no delimiters or separators on which to base ﬁle
parsing. Theﬁlemaynotevenhave‘ n’charactersattheendofeachrecord.
•They’reusuallyencodedinEBCDIC,notASCIIorUnicode.
•Theymayincludepackeddecimalﬁelds;thesearenumericvaluesrepresentedwithtwodecimaldigits
(oradecimaldigitandasign)ineachbyteoftheﬁeld.
Theﬁrstproblemrequiresﬁguringthestartingpositionandsizeofeachﬁeld. Insomecases,thereareno
gaps(orﬁller)betweenﬁelds;inthiscasethesizesofeachﬁeldareallthatarerequired. Oncewehavethe
positionandsize,however,wecanuseastringsliceoperationtopickthosecharactersoutofarecord. The
codeissimply‘ aLine[start:start+size] ’.
Wecantacklethesecondproblemusingthe codecsmoduletodecodetheEBCDICcharacters. Theresult
of‘codecs.getdecoder('cp037') ’isafunctionthatyoucanuseasanEBCDICdecoder.
The third problem requires that our program know the data type as well as the position and oﬀset of
eachﬁeld. Ifweknowthedatatype,thenwecandoEBCDICconversionorpackeddecimalconversionas
appropriate. Thisisamuchmoresubtlealgorithm, sincewehavetwostrategiesforconvertingthedata
ﬁelds. See Strategyforsomereasonswhywe’ddoitthisway.
InordertomirrorCOBOL’slargelydecimalworld-view, wewillneedtousethe decimalmoduleforall
numbersandairthmetic.
434 Chapter 36. File Formats: CSV, T ab, XML, Logs and Others
Building Skills in Python, Release 2.6.5
Wenotethatthepresenceofpackeddecimaldatachangestheﬁlefromtexttobinary. We’llbeginwith
techniquesforhandlingatextﬁlewithaﬁxedlayout. However,sincethisoftenslidesovertobinaryﬁle
processing,we’llmoveontothattopic,also.
ReadinganAll-TextFile . IfweignoretheEBCDICandpackeddecimalproblems,wecaneasilyprocess
aﬁxed-layoutﬁle. Thewaytodothisistodeﬁneahandystructurethatdeﬁnesourrecordlayout. Wecan
usethisstructuretoparseeachrecord,transformingtherecordfromastringintoadictionarythatwecan
useforfurtherprocessing.
Inthisexample,wealsouseageneratorfunction, yieldRecords() ,tobreaktheﬁleintoindividualrecords.
Weseparatethisfunctionalityoutsothatourprocessingloopisasimple forstatement,asitiswithother
kindsofﬁles. Inprinciple,thisgeneratorfunctioncanalsocheckthelengthof recBytesbeforeityieldsit.
Iftheblockofdataisn’ttheexpectedsize,theﬁlewasdamagedandanexceptionshouldberaised.
layout=[
('field1',0,12),
('field2',12,4),
('anotherField ',16,20),
('lastField ',36,8),
]
reclen=44
defyieldRecords ( aFile, recSize ):
recBytes =aFile.read(recSize)
whilerecBytes:
yieldrecBytes
recBytes =aFile.read(recSize)
cobolFile =file('my.cobol.file ','rb')
forrecBytes inyieldRecords(cobolFile, reclen):
record=dict()
forname, start, size inlayout:
record[name] =recBytes[start:start +len]
ReadingMixedDataTypes . IfwehavetotacklethecompleteEBCDICandpackeddecimalproblem,
wehavetouseaslightlymoresophisticatedstructureforourﬁlelayoutdeﬁnition. First,weneedsomedata
conversionfunctions,thenwecanusethosefunctionsaspartofpickingapartarecord.
Wemayneedseveralconversionfunctions,dependingonthekindofdatathat’spresentinourﬁle.Minimally,
we’llneedthefollowingtwofunctions.
display(bytes)
This function is used to get character data. In COBOL, this is called display data. It will be in
EBCDICifourﬁlesoriginatedonamainframe.
defdisplay(bytes):
returnbytes
packed(bytes)
Thisfunctionisusedtogetpackeddecimaldata. InCOBOL,thisiscalled‘ COMP-3’data. Inourexam-
ple,wehavenotdealtwiththeinsertofthedecimalpointpriortothecreationofa decimal.Decimal
object.
importcodecs
display =codecs.getdecoder( 'cp037')
defpacked(bytes):
n=['']
forbinbytes[:-1]:
hi, lo=divmod(ord(b),16)
36.5. Fixed Format Files, A COBOL Legacy: The codecs Module 435
Building Skills in Python, Release 2.6.5
n.append( str(hi) )
n.append( str(lo) )
digit, sign =divmod(ord(bytes[-1]),16)
n.append( str(digit) )
ifsignin(0x0b,0x0d):
n[0]='-'
else:
n[0]='+'
returnn
Giventhesetwofunctions,wecanexpandourhandyrecordlayoutstructure.
layout=[
('field1',0,12, display ),
('field2',12,4, packed ),
('anotherField ',16,20, display ),
('lastField ',36,8, packed ),
]
reclen=44
Thischangesourrecorddecodingtothefollowing.
cobolFile =file('my.cobol.file ','rb')
forrecBytes inyieldRecords(cobolFile, reclen):
record=dict()
forname, start, size, convert inlayout:
record[name] =convert( recBytes[start:start +len] )
ThisexampleunderscoressomeofthekeyvaluesofPython. Simplethingscanbekeptsimple. Thelayout
structure,whichdescribesthedata,isbotheasytoread,andwritteninPythonitself. Theevolutionofthis
exampleshowshowaddingasophisticatedfeaturecanbedonesimplyandcleanly.
Atsomepoint,ourrecordlayoutwillhavetoevolvefromasimpletupletoaproperclassdeﬁnition. We’ll
needtotakethisevolutionarystepwhenwewanttoconvertpackeddecimalnumbersintovaluesthatwe
canuseforfurtherprocessing.
36.6 XML Files: The xml.etree andxml.sax Modules
XMLﬁlesaretextﬁles,intendedforhumanconsumption,thatmixmarkupwithcontent. Themarkupuses
anumberofrelativelysimplerules. Additionally,therearestructuralrequirementsthatassurethatanXML
ﬁlehasaminimallevelofvalidity. Thereareadditionalrules(eitheraDocumentTypeDeﬁntion,DTD,or
anXMLSchemaDeﬁnition,XSD)thatprovideadditionalstructuralrules.
ThereareseveralXMLparsersavailablewithPython.
xml.expatWe’llignorethisparser,notforanyparticularlygoodreason.
xml.saxWe’lllookattheSAXparserbecauseitprovidesusawaytobreakgiganticXMLﬁlesintomore
manageablechunks.
xml.domThisisadocumentobjectmodel(DOM)forXML.
xml.minidom Thisisastripped-downimplementationoftheXMLdocumentobjectmodel, alongwitha
parsertobuildthedocumentobjectsfromXML.
xml.pulldom ThismoduleusesSAXtocreateadocumentobjectsfromaportionofalargerXMLdocument.
436 Chapter 36. File Formats: CSV, T ab, XML, Logs and Others
Building Skills in Python, Release 2.6.5
xml.etreeThis is a more useful DOM-oriented parser that allows sophisticated XPATH-like searching
throughtheresultingdocumentobjects.
xml.saxParsing. TheStandardAPIforXML(SAX)parserisdescribedasaneventparser. Theparser
recognizesdiﬀerentelementsofanXMLdocumentandinvokesmethodsinahandlerwhichyouprovide.
Yourhandlerwillbegivenpiecesofthedocument,andcandoappropriateprocessingwiththosepieces.
For most XML processing, your program will have the following outline: This parser will then use your
ContentHandler asitparses.
1.Deﬁneasubclassof xml.sax.ContentHandler . Themethodsofthisclasswilldoyouruniqueprocess-
ingwillhappen.
2.Requestthemoduletocreateaninstanceofan xml.sax.Parser .
3.Createaninstanceofyourhandlerclass. Providethistotheparseryoucreated.
4.Setanyfeaturesoroptionsintheparser.
5.Invoketheparseronyourdocument(orincomingstreamofdatafromanetworksocket).
Here’sashortexamplethatshowstheessentialsofbuildingasimpleXMLparserwiththe xml.saxmodule.
Thisexampledeﬁnesasimple ContentHandler thatprintsthetagsaswellascountingtheoccurancesof
the‘<informaltable> ’tag.
importxml.sax
classDumpDetails ( xml.sax.ContentHandler ):
def__init__ (self):
self.depth=0
self.tableCount =0
defstartElement (self, aName, someAttrs ):
printself.depth*''+aName
self.depth+=1
ifaName=='informaltable ':
self.tableCount +=1
defendElement (self, aName ):
self.depth-=1
defcharacters (self, content ):
pass# ignore the actual data
p=xml.sax.make_parser()
myHandler =DumpDetails()
p.setContentHandler( myHandler )
p.parse("../p5-projects.xml ")
printmyHandler .tableCount, "tables"
Sincetheparsingisevent-driven,yourhandlermustaccumulateanycontextrequiredtodeterminewherethe
individualtagsoccur. Insomecontentmodels(likeXHTMLandDocBook)therearetwolevelsofmarkup:
structuralandsemantic. Thestructuralmarkupincludesbooks,parts,chapters,sections,listsandthelike.
Thesemanticmarkupissometimescalled“inline”markup,anditincludestagstoidentifyfunctionnames,
classnames,exceptionnames,variablenames,andthelike. Whenprocessingthiskindofdocument,you’re
applicationmustdeterminethewhichtagiswhich.
AContentHandler Subclass. TheheartofaSAXparseristhesubclassof ContentHandler thatyoudeﬁne
inyourapplication. Thereareanumberofmethodswhichyoumaywanttooverride. Minimally, you’ll
overridethe startElement() andcharacters() methods. Thereareothermethodsofthisclassdescribed
insection20.10.1ofthe Python Library Reference .
setDocumentLocator (locator)
Theparserwillcallthismethodtoprovidean xml.sax.Locator object. ThisobjecthastheXML
36.6. XML Files: The xml.etree andxml.sax Modules 437
Building Skills in Python, Release 2.6.5
documentIDinformation,pluslineandcolumninformation. Thelocatorwillbeupdatedwithinthe
parser,soitshouldonlybeusedwithinthesehandlermethods.
startDocument ()
Theparserwillcallthismethodatthestartofthedocument. Itcanbeusedforinitializationand
resettinganycontextinformation.
endDocument ()
Thismethodispairedwiththe startDocument() method;itiscalledoncebytheparserattheend
ofthedocument.
startElement (name, attrs )
Theparsercallsthismethodwitheachtagthatisfound,innon-namespacemode. The nameisthe
stringwiththetagname.
Theattrsparameterisan xml.sax.Attributes object. Thisobjectisreusedbytheparser; your
handlercannotsavethisobject.
Thexml.sax.Attributes objectbehavessomewhatlikeamapping. Itdoesn’tsupportthe‘ []’opera-
torforgettingvalues,butdoessupport get(),has_key(),items(),keys(),andvalues()methods.
endElement (name)
Theparsercallsthismethodwitheachtagthatisfound,innon-namespacemode. The nameisthe
stringwiththetagname.
startElementNS (name, qname, attrs )
Theparsercallsthismethodwitheachtagthatisfound,innamespacemode. Yousetnamesacemode
byusingtheparser’s‘ p.setFeature( xml.sax.handler.feature_namespaces, True ) ’. Thename
isatuplewiththeURIforthenamespaceandthetagname. The qnameisthefullyqualiﬁedtext
name.
Theattrsisdescribedaboveunder ContentHandler.startElementNS() .
endElementNS (name, qname )
Theparsercallsthismethodwitheachtagthatisfound,innamespacemode. The nameisatuple
withtheURIforthenamespaceandthetagname. The qnameisthefullyqualiﬁedtextname.
characters (content)
Theparserusesthismethodtoprovidecharacterdatatothe ContentHandler .Theparsermayprovide
characterdatainasinglechunk,oritmayprovidethecharactersinseveralchunks.
ignorableWhitespace (whitespace )
The parser will use this method to provide ignorable whitespace to the ContentHandler . This is
whitespacebetweentags,usuallylinebreaksandindentation. Theparsermayprovidewhitespacein
asinglechunk,oritmayprovidethecharactersinseveralchunks.
processingInstructions (target, data )
Theparserwillprovideall‘ <? target data ?> ’processinginstructionstothismethod. Notethat
theinitial‘ <?xml version="1.0" encoding="UTF-8"?> ’isnotreported.
xml.etreeParsing. TheDocumentObjectModel(DOM)parsercreatesadocumentobjectmodelfrom
yourXMLdocument. TheparsertransformsthetextofanXMLdocumentintoaDOMobject. Onceyour
programhastheDOMobject,youcanexaminethatobject.
Here’s a short example that shows the essentials of building a simple XML parser with the xml.etree
module. Thisexamplelocatesallinstancesofthe‘ <informaltable> ’tagintheXMLdocumentandprints
partsofthistag’scontent.
#!/usr/bin/env python
fromxml.etree importElementTree
438 Chapter 36. File Formats: CSV, T ab, XML, Logs and Others
Building Skills in Python, Release 2.6.5
dom1=ElementTree .parse("../PythonBook-2.5/p5-projects.xml ")
fortindom1.getiterator( "informaltable "):
printt.attrib
forrowint.find('thead').getiterator( 'tr'):
print"head row "
forheader_col inrow.getiterator( 'th'):
printheader_col .text
forrowint.find('tbody').getiterator( 'tr'):
forbody_col inrow.getiterator( 'td'):
printbody_col .text
TheDOMObjectModel . TheheartofaDOMparseristheDOMclasshierarchy.
Thereisawidely-usedXMLDocumentObjectModeldeﬁnition.ThisstandardappliestobothJavaprograms
aswellasPython. The xml.dompackageprovidesdeﬁnitionswhichmeetthisstandard.
The standard doesn’t address how XML is parsed to create this structure. Consequently, the xml.dom
packagehasnooﬀicialparser. Youcould,forexample,useaSAXparsertoproduceaDOMstructure. Your
handlerwouldcreateobjectsfromtheclassesdeﬁnedin xml.dom.
Thexml.dom.minidom packageisanimplementationoftheDOMstandard,whichisslightlysimpliﬁed. This
implementationofthestandardisextendedtoincludeaparser.Theessentialclassdeﬁnitions,however,come
fromxml.dom.
Thestandardelementhierarchyisrathercomplex. There’sanoverviewoftheDOMmodelin The DOM
Class Hierarchy .
TheElementTreeDocumentObjectModel . Whenusing xml.etreeyourprogramwillworkwitha
numberof xml.etree.ElementTree objects. We’lllookatafewessentialclassesoftheDOM.Thereare
otherclassesinthismodel,describedinsection20.13ofthe Python Library Reference . We’llfocusonthe
mostcommonly-usedfeaturesofthisclass.
classElementTree ()
parse(source)
Generally,ElementTreeprocessingstartswithparsinganXMLdocument. Thesourcecaneither
beaﬁlenameoranobjectthatcontainsXMLtext.
TheresultofparsingisanobjectthatﬁtstheElementTreeinterface,andhasanumberofmethods
forexaminingthestructureofthedocument.
getroot()
ReturntherootElementofthedocument.
find(match)
Return the ﬁrst child element matching match. This is a handy shortcut for
‘self.getroot().find(match) ’. SeeElement.find() .
findall(match)
Locate all child elements matching match.This is a handy shortcut for
‘self.getroot().findall(match) ’. SeeElement.findall() .
Returnsaniterableyieldingallmatchingelementsindocumentorder.
findtext (condition, [default=None] )
Locate the ﬁrst child element matching match. This is a handy shortcut for
‘self.getroot().findtext(match) ’. SeeElement.findtext() .
getiterator ([tag=None] )
Createsatreeiteratorwiththecurrentelementastheroot. Theiteratoriteratesoverthiselement
36.6. XML Files: The xml.etree andxml.sax Modules 439
Building Skills in Python, Release 2.6.5
andallelementsbelowit,indocument(depthﬁrst)order. IftagisnotNoneor‘*’,onlyelements
whosetagequalstagarereturnedfromtheiterator.
SeeElement.getiterator() .
classElement()
TheElementTreeisacollectionofindividualElements.EachElementiseitheranElement,aComment,
oraProcessingInstruction. Generall,CommentsandProcessingInstructionsbehavelikeElements.
tag
ThetagforthiselementintheXMLstucture.
text
Generally,thisisthetextfoundbetweentheelementtags.
tail
Thisholdsthetextfoundafteranelement’sendtagandbeforethenexttag. Oftenthisissimply
thewhitespacebetweentags.
attrib
Amutablemappingcontainingtheelement’sattributes.
get(name, [default=None] )
Fetchthevalueofanattribute.
items()
Returnallattributesinalistas(name,value)tuples.
keys()
Returnalistofallattributenames.
find(match)
Return the ﬁrst child element matching match. Thematchmay be a simple tag name or and
XPathexpression. Returnsan Elementinstanceor None.
findall(match)
Locateallchildelementsmatching match. ThematchmaybeasimpletagnameorandXPath
expression.
Returnsaniterableyieldingallmatchingelementsindocumentorder.
findtext (condition, [default=None] )
Locate the ﬁrst child element matching match. Thematchmay be a simple tag name or and
XPathexpression. Returnsthetextvalueoftheﬁrstmatchingelement. Iftheelementisempty,
thetextwillbeazero-lengthstring. Return defaultifnoelementwasfound.
getiterator ([tag=None] )
Createsatreeiteratorwiththecurrentelementastheroot. Theiteratoriteratesoverthiselement
andallelementsbelowit,indocument(depthﬁrst)order. IftagisnotNoneor‘*’,onlyelements
whosetagequalstagarereturnedfromtheiterator.
getchildren ()
Iteratethroughallchildren. Theelementsarereturnedindocumentorder.
Whenusing Element.find() ,Element.findall() andElement.findtext() ,asimpleXPATH-likesyntax
canbeused.
Matchqueriescanhavetheform‘ "tag/tag/tag" ’tospecifyaspeciﬁcgrant-parent-parent-childnestingof
tags. Additionally,“*”canbeusedasawildcard.
Forexample,here’saquerythatlooksforaspeciﬁcnestingoftags.
440 Chapter 36. File Formats: CSV, T ab, XML, Logs and Others
Building Skills in Python, Release 2.6.5
fromxml.etree importElementTree
dom1=ElementTree .parse("../PythonBook-2.5/p5-projects.xml ")
fortindom1.findall( "chapter/section/informaltable "):
printt
NotethatfullXPATHsyntaxisaccepted,butmostofitisignored.
36.7 Log Files: The logging Module
Mostprogramsneedawaytowritesophisticated,easy-to-controllogﬁleswhatcontainstatusanddebugging
information. Any program that requires careful auditing will beneﬁt from using the loggingmodule to
createaneasy-to-readpermanentlog. Also,whenwehaveprogramswithmultiplemodules,andneedmore
sophisticateddebugging,we’llﬁndaneedforthe loggingmodule.
Thereareseveralcloselyrelatedconceptsthatdeﬁnealog.
1.Your program will have a hierarchical tree of Loggers. Each Loggeris used to do two things. It
createsLogRecordobject with your messages about errors, or debugging information. It provides
theseLogRecordstoHandlers.
Generally,eachmajorcomponentwillhaveit’sownlogger. Thevariousloggerscanhaveseparateﬁlter
levelssothatdebuggingorwarningmessagescanbeselectivelyenabledordisabled.
2.Yourprogramwillhaveasmallnumberof Handlers, whicharegiven LogRecords. AHandlercan
ignoretherecords,writethemtoaﬁleorinsertthemintoadatabase.
It’s common to have a handler which creates a very detailed log in a persistent ﬁle, and a second
handlerthatsimplyreportserrorsandexceptionstothesystem’sstderrﬁle.
3.EachHandlercanmakeuseofa Formattertoprovideanice, readableversionofeach LogRecord
message.
4.Also,youcanbuildsophisticated Filtersifyouneedtohandlecomplexsituations.
Thedefaultconﬁgurationgivesyouasingle Logger,named‘ ""’,whichusesa StreamHandler conﬁgured
towritetostandarderrorﬁle,stderr.
Advantages. Whiletheloggingmodulecanappearcomplex,itgivesusanumberofdistinctadvatages.
•MultipleLoggers . Wecaneasilycreatealargenumberofseparateloggers. Thishelpsustomanage
large,complexprograms. Eachcomponentoftheprogramcanhaveit’sown,indepenentlogger.
Wecanconﬁgurethecollectionofloggerscentrally, however, supportingsophisticatedauditingand
debuggingwhichisindependentofeachindividualcomponent.
Also,alltheloggerscanfeedasingle,commonlogﬁle.
Each logger can also have a severity level ﬁlter. This allows us to selectively enable debugging or
disablewarningsonalogger-by-loggerbasis.
•HierarchyofLoggers . EachLoggerinstancehasaname,whichisa‘ .’-separatedstringofnames.
Forexample,‘ 'myapp.stock' ’,‘'myapp.portfolio' ’.
Thisformsanaturalhierarchyof Loggers. Eachchildinheritstheconﬁgurationfromitsparent,which
simpliﬁesconﬁguration.
If,forexample,wehaveaprogramwhichdoesstockportfolioanalysis,wemighthaveacomponent
whichdoesstockpricesandanothercomponentwhichdoesoverallportfoliocalculations. Eachcom-
ponent,then,couldhaveaseparate Loggerwhichusescomponentname. Bothofthese Loggersare
childrenofthe‘ ""’Logger;theconﬁgurationforthetop-most Loggerwouldapplytobothchildren.
36.7. Log Files: The logging Module 441
Building Skills in Python, Release 2.6.5
Some components deﬁne their own Loggers. For example SQLAlchemy, has a set of Loggers with
‘'sqlalchemy' ’astheﬁrstpartoftheirname. Youcanconﬁgureallofthembyusingthattop-level
name. For speciﬁc debugging, you might alter the conﬁguration of just one Logger, for example,
‘'sqlalchemy.orm.sync' ’.
•MultipleHandlers . EachLoggercanfeedanumberof Handlers. Thisallowsyoutoassurethat
a single important log messages can go to multiple destinations. A common setup is to have two
Handlers for log messages: a FileHandlerwhich records everything, and a StreamHandler which
writesonlysevereerrormessagestostderr.
Forsomekindsofapplications,youmayalsowanttoaddthe SysLogHandler (inconjunctionwitha
Filter)tosendsomemessagestotheoperatingsystem-maintainedsystemlogaswellastheapplica-
tion’sinternallog.
Anotherexampleisusingthe SMTPHandlertosendselectedlogmessagesviaemailaswellastothe
application’slogandstderr.
•LevelNumbersandFilters . EachLogRecordincludesamessagelevelnumber,andadestination
Loggername(aswellasthetextofthemessageandargumentswithvaluestoinsertintothemessage).
Thereareanumberofpredeﬁnedlevelnumberswhichareusedforﬁltering. Additionally,a Filter
objectcanbecreatedtoﬁlterbydestination Loggername,oranyothercriteria.
Thepredeﬁnedlevelsare CRITICAL,ERROR,WARNING,INFO,andDEBUG.Thesearecodedwithnumeric
valuesfrom50to10.
Criticalmessagesusuallyindicateacompletefailureoftheapplication,theyareoftenthelastmessage
sentbeforeitstopsrunning; errormessagesindicateproblemswhicharenotfatal,butprecludethe
creation of usable results; warnings are questions or notes about the results being produced. The
informationmessagesarethestandardmessagestodescribesuccessfulprocessing,anddebugmessages
provideadditionaldetails.
By default, all Loggers will show only messages which have a level number greater than or equal
toWARNING, which is generally 30. When enabling debugging, we rarely want to debug an entire
application. Instead,weusuallyenabledebuggingonspeciﬁcmodules. Wedothisbychangingthe
levelofaspeciﬁc Logger.
Youcancreateadditionallevelnumbersorchangethelevelnumbers. ProgrammersfamiliarwithJava,
forexample,mightwanttochangethelevelsto SEVERE,WARNING,INFO,CONFIG,FINE,FINER,FINEST,
usinglevelnumbersfrom70through10.
Module-LevelFunctions . Thefollowingmodule-levelfunctionswillgeta Loggerthatcanbeusedfor
logging. Additionally,therearefunctionscanalsobeusedtocreate Handlers,FiltersandFormattersthat
canbeusedtoconﬁgurea Logger.
getLogger (name)
Returnsa Loggerwiththegivenname. Thenameisa‘ .’-separatedstringofnames(e.g.,‘ "x.y.z"’)
IftheLoggeralreadyexists,itisreturned. Ifthe Loggerdidnotexist,itiscreatedandreturned.
addLevelName (level, name )
Deﬁnes(orredeﬁnes)alevelnumber,provinganamethatwillbedisplayedforthegivenlevelnumber
Generally, you will parallel these deﬁnitions with your own constants. For example, ‘ CONFIG=20;
logging.addLevelName(CONFIG,"CONFIG") ’
basicConfig (...)
Conﬁgures the logging system. By default this creates a StreamHandler directed to stderr, and a
defaultFormatter. Also,bydefault,allLoggersshowonly WARNINGorhighermessages. Therearea
numberofkeywordparametersthatcanbegivento basicConfig() .
Parameters
442 Chapter 36. File Formats: CSV, T ab, XML, Logs and Others
Building Skills in Python, Release 2.6.5
• ﬁlename–Thiskeywordprovidestheﬁlenameusedtocreatea FileHandlerinstead
ofaStreamHandler . Thelogwillbewrittentothegivenﬁle.
• ﬁlemode–Ifaﬁlenameisgiven,thisisthemodetoopentheﬁle. Bydefault,aﬁle
isopenedwith‘ 'a'’,appendingthelogﬁle.
• format–Thisistheformatstringforthe Handlerthatiscreated. A Formatter
objecthasa format()methodwhichexpectsadictionaryofvalues;theformatstring
uses‘"%(key)s"’conversionspeciﬁcations. See String F ormatting with Dictionaries
formoreinformation. Thedictionaryprovidedtoa FormatteristheLogRecord,
whichhasanumberofﬁeldsthatcanbeinterpolatedintoalogstring.
• datefmt–Thedate/timeformattousefortheasctimeattributeofa LogRecord.
Thisisaformatstringbasedonthetimepackage time.strftime() function. See
Dates and Times: the time and datetime Modules for more information on this
formatstring.
• level–Thisisthedefaultmessagelevelforallloggers. Thedefaultis WARNING,30.
Messageswithalowerlevel(i.e.,INFOandDEBUG)arenotshow.
• stream–Thisisastreamthatwillbeusedtoinitializea StreamHandler insteadof
aFileHandler. Thisisincompatiblewith filename. Ifboth filenameandstream
areprovided,streamisignored.
Typically,you’llusethisinthefollowingform: ‘ logging.basicConfig( level=logging.INFO ) ’.
fileConfig (ﬁle)
Conﬁgurestheloggingsystem. Thiswillreadaconﬁgurationﬁle,whichdeﬁnestheloggers,handlers
andformattersthatwillbebuiltinitially. Oncetheloggersarebuiltbytheconﬁguration,thenthe
logging.getLogger() functionwillreturnoneofthesepre-builtloggers.
shutdown ()
Finishesloggingbyﬂushingallbuﬀersandclosingallhandlers,whichgenerallyclosesanyinternally
createdﬁlesandstreams. Anapplicationmustdothislasttoassurethatalllogmessagesareproperly
recordedinthelog.
Logger Method Functions . The following functions are used to create a LogRecordin aLogger; a
LogRecordisthenprocessedbythe Handlersassociatedwiththe Logger.
Many of these functions have essentially the same signature. They accept the text for a message as the
ﬁrstargument. Thismessagecanhavestringconversionspeciﬁcations,whichareﬁlledinfromthevarious
arguments. Ineﬀect,theloggerdoes‘ message % ( args ) ’foryou.
Youcanprovideanumberofargumentvalues,oryoucanprovideasingleargumentwhichisadictionary.
Thisgivesustwoprinciplemethodsforproducinglogmessages.
•‘log.info( "message %s, %d", "some string", 2 ) ’
•‘log.info( "message %(part1)s, %(anotherpart)d", "part1" : "some string",
"anotherpart": 2 ) ’
These functions also have an optional argument, exc_info, which can have either of two values. You
can provide the keyword argument ‘ exc_info= sys.exc_info() ’. As an alternative, you can provide
‘exc_info=True ’,inwhichcasetheloggingmodulewillcall sys.exc_info() foryou.
debug(message, args, ... )
Createsa LogRecordwithlevel DEBUG,thenprocessesthis LogRecordonthisLogger. Themessageis
themessagetext;the argsaretheargumentswhichareprovidedtotheformattingoperator,‘ %’.
info(message, args, ... )
Createsa LogRecordwithlevel INFOonthislogger. Thepositionalargumentsﬁllinthemessage;a
singlepositionalargumentcanbeadictionary.
36.7. Log Files: The logging Module 443
Building Skills in Python, Release 2.6.5
warning(message, args, ... )
Createsa LogRecordwithlevel WARNINGonthislogger. Thepositionalargumentsﬁllinthemessage;
asinglepositionalargumentcanbeadictionary.
error(message, args, ... )
Createsa LogRecordwithlevel ERRORonthislogger. Thepositionalargumentsﬁllinthemessage;a
singlepositionalargumentcanbeadictionary.
critical (message, args, ... )
Createsa LogRecordwithlevel CRITICALonthislogger. Thepositionalargumentsﬁllinthemessage;
asinglepositionalargumentcanbeadictionary.
log(level, message, args, ... )
Createsa LogRecordwiththegiven lvlonthislogger. Thepositionalargumentsﬁllinthemessage;a
singlepositionalargumentcanbeadictionary. Theexc_infokeywordargumentcanprovideexception
information.
exception (message, args, ... )
Createsa LogRecordwithlevel ERRORonthislogger. Thepositionalargumentsﬁllinthemessage;a
singlepositionalargumentcanbeadictionary.
Exceptioninfoisaddedtotheloggingmessage,asifthekeywordparameter‘ exc_info=True ’. This
methodshouldonlybecalledfromanexceptionhandler.
isEnabledFor (level)
ReturnsTrueifthisLoggerwillhandlemessagesofthislevelorhigher. Thiscanbehandytoprevent
creatingreallycomplexdebuggingoutputthatwouldonlygetignoredbythelogger. Thisisrarely
needed,andisusedinthefollowingstructure:
iflog.isEnabledFor(logging .DEBUG):
log.debug("some complex message ")
Thefollowingmethodfunctionsareusedtoconﬁgurea Logger. Generally,you’llconﬁgureLoggersusing
themodulelevel basicConfig() andfileConfig() functions. However,insomespecializedcircumstances
(likeunittesting),youmaywantﬁnercontrolwithouttheoverheadofaconﬁgurationﬁle.
propagte
When set to True, all the parents of a given Loggermust also handle the message. This assures
consistencyforauditpurposes.
WhenFalse, the parents will not handle the message. A Falsevalue might be used for keeping
debuggingmessagesseparatefromothermessages. Bydefaultthisisa Truevalue.
setLevel (level)
Setsthelevelforthis Logger; messageslesssevereareignored. Messagesofthisseverityorhigher
arehandled. Thespecialvalueof logging.NOTSET indicatesthatthis Loggerinheritsthesettingfrom
theparent. Therootloggerhasadefaultvalueof logging.WARNING .
getEffectiveLevel ()
ets the level for this Logger. If this Loggerhas a setting of logging.NOTSET (the default for all
Loggers)thenitinheritsthelevelfromitsparent.
addFilter (ﬁlter)
Addsthegiven Filterobjecttothis Logger.
removeFilter (ﬁlter)
Removesthegiven Filterobjectfromthis Logger.
addHandler (handler)
Addsthegiven Handlerobjecttothis Logger.
444 Chapter 36. File Formats: CSV, T ab, XML, Logs and Others
Building Skills in Python, Release 2.6.5
removeHandler (handler)
Removesthegiven Handlerobjectfromthis Logger.
Therearealsosomefunctionswhichwouldbeusedifyouwerecreatingyourownsubclassof Loggerformore
specializedloggingpurposes. Thesemethodsinclude log.filter() ,log.handle() andlog.findCaller() .
UsingaLogger . Generally,thereareanumberofwaysofusinga Logger. Inamodulethatispartof
alargerapplication,wewillgetaninstanceofa Logger,andtrustthatitwasconﬁguredcorrectlybythe
overallapplication. Inthetop-levelapplicationwemaybothconﬁgureandusea Logger.
ThisexampleshowsasimplemoduleﬁlewhichusesaLogger.
logmodule.py
importlogging,sys
logger=logging.getLogger(__name__)
defsomeFunc ( a, b ):
logger.debug("someFunc( %d,%d)", a, b )
try:
return2*int(a)+int(b)
exceptValueError , e:
logger.warning( "ValueError in someFunc( %r,%r)", a, b, exc_info =True)
defmainFunc (*args ):
logger.info("Starting mainFunc ")
z=someFunc( args[ 0], args[ 1] )
printz
logger.info("Ending mainFunc ")
if__name__ =="__main__ ":
logging.fileConfig( "logmodule_log.ini ")
mainFunc( sys .argv[1:] )
logging.shutdown()
1.Weimportthe loggingmoduleandthe sysmodule.
2.We ask the logging module to create a Loggerwith the given name. We use the Python assigned
‘__name__’name. Thisworkwellforallimportedlibrarymodulesandpackages.
Wedothisthroughafactoryfunctiontoassurethattheloggerisconﬁguredcorrectly. Thelogging
moduleactuallykeepsapoolof Loggers,andwillassurethatthereisonlyoneinstanceofeachnamed
Logger.
3.This function has a debugging message and a warning message. This is typical of most function
deﬁnitions. Ordinarily,thedebugmessagewillnotshowupinthelog;wecanonlyseeitifweprovide
aconﬁgurationwhichsetstheloglevelto DEBUGfortherootloggerorthe logmodule Logger .
4.Thisfunctionhasapairofinformationalmessages. Thisistypicalof“main”functionswhichdrivean
overallapplicationprogram. Applicationswhichhaveseverallogicalstepsmighthaveinformational
messagesforeachstep. Sinceinformationalmessagesarelowerlevelthanwarnings,thesedon’tshow
up by default; however, the main program that uses this module will often set the overall level to
‘logging.INFO ’toenableinformationalmessages.
36.7. Log Files: The logging Module 445
Building Skills in Python, Release 2.6.5
36.8 File Format Exercises
1.CreateAnOﬀiceSuiteResult . Backin Iteration Exercises weusedtheforstatementtoproduce
tabulardisplaysofdatainanumberofexercises. Thisincluded“HowMuchEﬀorttoProduceSoft-
ware?”, “WindChillTable”, “CelsiustoFahrenheitConversionTables”and“DivePlanningTable”.
UpdateoneoftheseprogramstoproduceaCSVﬁle. Ifyouhaveadesktopoﬀicesuite,besuretoload
theCSVﬁleintoaspreadsheetprogramtobesureitlookscorrect.
2.ProperFileParsing . Backin File Module Exercises webuiltaquickanddirtyCSVparser. Fix
theseprogramstousetheCSVmoduleproperly.
3.ConﬁgurationProcessing . In Stock V aluation ,welookedataprogramwhichprocessedblocksof
stock. Oneofthespeciﬁcprogramswasananalysisreportwhichshowedthevalueoftheportfolioon
agivendateatagivenprice. Wemakethisprogrammoreﬂexiblebyhavingitreadaconﬁguration
ﬁlewiththecurrentdateandstockprices.
4.OﬀiceSuiteExtraction . MostoﬀicesuitesoftwarecansaveﬁlesinXMLformataswellastheirown
proprietaryformat. TheXMLiscomplex,butyoucanexamineitinpiecesusingPythonprograms.
It helps to work with highly structured data, like an XML version of a spreadsheet. For example,
your spreadsheet may use tags like ‘ <Table>’, ‘<Row>’ and ‘<Cell>’ to organize the content of the
spreadsheet.
First,writeasimpleprogramtoshowthetop-levelelementsofthedocument. Itoftenhelpstoshow
thetextwithinthoseelementssothatyoucancorrelatetheXMLstructurewiththeoriginaldocument
contents.
Onceyoucandisplaythetop-levelelements,youcanfocusontheelementsthathavemeaningfuldata.
Forexample,ifyouareparsingspreadsheetXML,youcanassembledthevaluesofallofthe‘ <Cell>’‘s
ina‘<Row>’intoaproperrowofdata,perhapsusingasimplePython list.
36.9 The DOM Class Hierarchy
Thisissomesupplementalinformationonthe xml.domandxml.minidomobjectmodelsforXMLdocuments.
classNode()
TheNodeclassisthesuperclassforallofthevariousDOMclasses. Itdeﬁnesanumberofattributes
andmethodswhicharecommontoallofthevarioussubclasses. Thisclassshouldbethoughtofas
abstract: itisnotuseddirectly;itexiststoprovidecommonfeaturestoallofthesubclasses.
Herearetheattributeswhicharecommontoallofthevariouskindsof Nodeobjects.
nodeType
Thisisanintegercodethatdiscriminatesamongthesubclassesof Node. Thereareanumberof
helpfulsymbolicconstantswhichareclassvariablesinxml.dom.Node. Theseconstantsdeﬁnethe
varioustypesofNodes.
ELEMENT_NODE ,ATTRIBUTE_NODE ,TEXT_NODE,CDATA_SECTION_NODE ,ENTITY_NODE,
PROCESSING_INSTRUCTION_NODE ,COMMENT_NODE ,DOCUMENT_NODE ,DOCUMENT_TYPE_NODE ,
NOTATION_NODE .
attributes
This is a map-like collection of attributes. It is an instance of xml.dom.NamedNodeMap . It
has method functions including get(),getNamedItem() ,getNamedItemNS() ,has_key()
,item(),items(),itemsNS(),keys(),keysNS(),length(),removeNamedItem() ,
removeNamedItemNS() ,setNamedItem() ,setNamedItemNS() ,values(). Theitem()and
length()methodsaredeﬁnedbythestandardandprovidedforJavacompatibility.
446 Chapter 36. File Formats: CSV, T ab, XML, Logs and Others
Building Skills in Python, Release 2.6.5
localName
If there is a namespace, then this is the portion of the name after the colon. If there is no
namespace,thisistheentiretagname.
prefix
If there is a namespace, then this is the portion of the name before the colon. If there is no
namespace,thisisanemptystring.
namespaceURI
Ifthereisanamespace,thisistheURIforthatnamespace. Ifthereisnonamespace,thisis None
.
parentNode
Thisistheparentofthis Node. TheDocument Nodewillhave Noneforthisattribute,sinceitis
theparentofall Nodesinthedocument. Forallother Nodes,thisisthecontextinwhichthe
Nodeappears.
previousSibling
SiblingNodes share a common parent. This attribute of a Nodeis theNodewhich precedes it
within a parent. If this is the ﬁrst Nodeunder a parent, the previousSibling will beNone.
Often,thepreceeding Nodewillbea Textcontainingwhitespace.
nextSibling
SiblingNodesshareacommonparent. Thisattributeofa NodeistheNodewhichfollowsitwithin
a parent. If this is the last Nodeunder a parent, the nextSiblingwill beNone. Often, the
following NodewillbeTextcontainingwhitespace.
childNodes
ThelistofchildNodesunderthisNode. Generally,thiswillbea xml.dom.NodeList instance,
notasimplePython list. ANodeListbehaveslikea list,buthastwoextramethods: item()
andlength(),whicharedeﬁnedbythestandardandprovidedforJavacompatibility.
firstChild
Theﬁrst NodeinthechildNodeslist,similartochildNodes[:1]. Itwillbe NoneifthechildNodes
listisalsoempty.
lastChild
ThelastNodeinthechildNodeslist,similartochildNodes[-1:]. Itwillbe NoneifthechildNodes
listisalsoempty.
Herearesomeattributeswhichareoverriddenineachsubclassof Node. Theyhaveslightlydiﬀerent
meaningsforeachnodetype.
nodeName
Astringwiththe“name”forthis Node. Foran Element,thiswillbethesameasthe tagName
attribute. Insomecases,itwillbe None.
nodeValue
Astringwiththe“value”forthis Node. ForanText,thiswillbethesameasthe dataattribute.
Insomecases,itwillbe None.
Herearesomemethodsofa Node.
hasAttributes ()
Thisfunctionreturns Trueifthereareattributesassociatedwiththis Node.
hasChildNodes ()
ThisfunctionreturnsTrueiftherechild Nodesassociatedwiththis Node.
classDocument (Node)
Thisisthetop-leveldocument,theobjectreturnedbytheparser. Itisasubclassof Node,soitinherits
36.9. The DOM Class Hierarchy 447
Building Skills in Python, Release 2.6.5
allofthoseattributesandmethods. The Documentclassaddssomeattributesandmethodfunctions
totheNodedeﬁnition.
documentElement
This attribute refers to the top-most Elementin the XML document. A Documentmay con-
tainDocumentType ,ProcessingInstruction andComment Nodes,also. Thisattributesavesyou
havingtodigthroughthe childNodeslistforthetop Element.
getElementsByTagName (tagName)
This function returns a NodeListwith each Elementin thisDocumentthat has the given tag
name.
getElementsByTagNameNS (namespaceURI, tagName )
Thisfunctionreturnsa NodeListwitheach ElementinthisDocumentthathasthegivennames-
paceURIandlocaltagname.
classElement(Node)
This is a speciﬁc element within an XML document. An element is surrounded by XML tags. In
‘<para id="sample">Text</para> ’, thetagis‘ <para>’, whichprovidesthenameforthe Element.
MostElementswillhavechildren,somewillhave Attributesaswellaschildren. The Elementclass
addssomeattributesandmethodfunctionstothe Nodedeﬁnition.
tagName
Thefullnameforthetag. Ifthereisanamesace,thiswillbethecompletename,includingcolons.
Thiswillalsobein nodeValue.
getElementsByTagName (tagName)
Thisfunctionreturnsa NodeListwitheach ElementinthisElementthathasthegiventagname.
getElementsByTagNameNS (namespaceURI, tagName )
Thisfunctionreturnsa NodeListwitheach ElementinthisElementthathasthegivennamespace
URIandlocaltagname.
hasAttribute (name)
ReturnsTrueifthisElementhasanAttrwiththegivenname.
hasAttribute (namespaceURI, localName )
ReturnsTrueif thisElementhas anAttrwith the given name based on the namespace and
localName.
getAttribute (name)
Returnsthestringvalueofthe Attrwiththegivenname. Iftheattributedoesn’texist,thiswill
returnazero-lengthstring.
getAttributeNS (namespaceURI, localName )
Returnsthestringvalueofthe Attrwiththegivenname. Iftheattributedoesn’texist,thiswill
returnazero-lengthstring.
getAttributeNode (name)
Returnsthe Attrwiththegivenname. Ifthenamedattributedoesn’texist,thismethodreturns
None.
getAttributeNodeNS (namespaceURI, localName )
Returnsthe Attrwiththegivenname. Ifthenamedattributedoesn’texist,thismethodreturns
None.
classAttr(Node)
Thisisanattribute,withinanElement. In‘ <para id="sample">Text</para> ’,thetagis‘ <para>’;
thistaghasanattributeof‘ id’withavalueof‘ sample’. Generally, the nodeType,nodeNameand
nodeValueattributesareallthatareused. The Attrclassaddssomeattributestothe Nodedeﬁnition.
448 Chapter 36. File Formats: CSV, T ab, XML, Logs and Others
Building Skills in Python, Release 2.6.5
name
The full name of the attribute, which may include colons. The Nodeclass deﬁnes localName,
prefixandnamespaceURI whichmaybenecessaryforcorrectlyprocessingthisattribute.
value
Thestringvalueoftheattribute. Alsonotethat nodeValuewillhaveacopyoftheattribute’s
value.
classText(Node)
classCDATASection (Node)
Thisisthetextwithinanelement. In‘ <para id="sample">Text</para> ’,thetextis‘ Text’. Note
thatendoflinecharactersandindentationalsocountas Textnodes. Further,theparsermaybreak
upalargepieceoftextintoanumberofsmaller Textnodes. The Textclassaddsanattributetothe
Nodedeﬁnition.
data
Thetext. Alsonotethat nodeValuewillhaveacopyofthetext.
classComment(Node)
Thisisthetextwithinacomment. The‘ <!--’and‘-->’charactersarenotincluded. The Comment
classaddsanattributetothe Nodedeﬁnition.
data
Thecomment. Alsonotethat nodeValuewillhaveacopyofthecomment.
36.9. The DOM Class Hierarchy 449
Building Skills in Python, Release 2.6.5
450 Chapter 36. File Formats: CSV, T ab, XML, Logs and Others
CHAPTER
THIRTYSEVEN
PROGRAMS: ST ANDING ALONE
ThischapterwillcoveradditionalaspectsofcreatingsomecommonkindsofprogramsinPython. We’llsur-
veythelandscapein Kinds of Programs . Then,in Command-Line Programs: Servers and Batch Processing
willtheessenceofprogramstartupusingcommand-lineoptionsandoperands.
We’lllookatparsingcommandlineoptionsin The optparse Module
Interactive graphical user interfaces are beyond the scope of this book. There are several handy graphic
frameworks, including Tkinter and GTK that help you write graphical user interfaces. However, GUI
programsarestillstartedfromthecommandline,sothissectionisrelevantforthosekindsofprograms.
37.1 Kinds of Programs
Therearemanydesignpatternsforourapplicationprograms. Wecanidentifyanumberoffeaturesthat
distinguishdiﬀerentkindsofprograms. Wecancreateataxonomyofprogramdesignsbasedonhowwe
interact with them. We could also create a taxonomy based on the program’s internal structure or its
interfaces.
Wecanlookatprogramsfromanumberofperspectives.
•Thetypeofinteraction(command-linevs. userinteraction).
•Thetypeofarchitecture(stand-alonevs. client-server).
Interaction. Wecanlookataprogrambasedonthetypeofinteractionthatithaswithaperson. There’s
aspectrumofinteraction.
•Aprogramcanbestartedfromthecommandlineandhavenofurtherinteractionwiththehumanuser.
Wecancallthesebatchprogramsbecausetheyusuallyprocessabatchofindividualtransactions. We
canalsocallthemcommand-lineprogramsbecauseouronlyinteractionisatthecommandprompt.
Alargenumberofdataanalysisandbusiness-orientedprogramsworkwithbatchesofdata. Addition-
ally,wecandescribeserversasbeingsimilartobatchprograms. Thisisafocusforthischapter.
•A program can have very sophisticated interaction with the human user. The interaction may be
character-oriented,oritcanhaveagraphicuserinterface(GUI)andbestartedbydouble-clickingan
icon. What’simportantisthattheuserdrivestheprocessing,notthebatchofdata. T
ypically,aprogramwithrichuserinteractionwillbeaclientofoneormoreservices. Theseprograms
arebeyondthescopeofthisbook.
Architecture . Wecanalsolookatprogramsbasedontheirarchitectureandhowtheyinteractwithother
programs.
451
Building Skills in Python, Release 2.6.5
•Someprogramsstandalone. Theyhaveanexecutableﬁlewhichstartsthingsoﬀ,andperhapsincludes
somelibraries. Oftenaclientprogramisastand-aloneprogramthatrunsonsomeone’sdesktop. This
isafocusforthischapter.
•Someprogramsplugintoalargerandmoresophisticatedframeworks. Theframeworkis,essentially,
a closely related collection of libraries and interfaces. Most web applications are built as programs
whichplugintoawebserverframework. Thereisatremendousamountofverycommonprocessingin
handlingawebtransaction. There’slittlevalueinrepeatingthisprogramming,soweinherititfrom
theframework.
Wecandistinguishprogramsinhowtheyinteractwithotherprogramstocreatealargersystem. We’llturn
tothistopicinthenextchapter, Architecture: Clients, Servers, the Internet and the W orld Wide W eb .
•Someprogramsareclients. Theyrelyonservicesprovidedbyotherprograms. Theserviceitrelieson
mightbeawebserveroradatabaseserver. Insomecases,theclientprogramhasrichuserinteraction
andstandsalone.
•Someprogramsareservers. Theyprovideservicestootherprograms. Theservicemightbedomain
names, time, oranyofamyriadofservicesthatareanessentialpartofLinuxandotheroperating
systems.
•Someprogramsarebothserversandclientsofotherservices. Mostservershavenointeraction;they
arecommand-lineprogramswhichareclientsofothercommand-lineprograms. Awebservertypically
haspluginwebapplicationswhichusedatabaseservers. Adatabaseservermaymakeuseofother
serviceswithinanoperatingsystem.
Combinations . Many programs combine interaction with being a client of one or more services. Most
browsers, like Firefox, are clients for servers which use a number of protocols, including HTTP, POP3,
IMAP4, FTP, NNTP, and GOPHER. Besides being a client, a browser also provides graphics, handling
numerousMIMEdatatypesfordiﬀerentkindsofimagesandsounds.
Theseinteractive,client-sideapplicationsarethemostcomplex,andwecan’tbegintocovertheminthis
book.
Inordertocoverthebasics,wehavetofocusoncommand-lineprogramswhichstand-alone. Fromtherewe
canbranchouttocommand-lineclientsandservers.
Command-LineSubspecies . Stand-alone,command-lineprogramshaveanumberofdesignpatterns.
•Someprogramsare ﬁltersthatreadaninputﬁle,performanextractoracalculationandproducea
resultﬁlethatisderivedfromtheinput.
•Programscanbe compilers, performingextremelycomplextransformationsfromoneormoreinput
ﬁlestocreateanoutputﬁle.
•Programscanbe interpreters,wherestatementsinalanguagearereadandprocessed. Someprograms,
liketheUnixawkutility,combineﬁlteringandinterpreting.
Somecommand-lineprogramsare clientsofservices.AnFTPclientprogrammaydisplaycontentsofanFTP
server,acceptingusercommandsthroughagraphicaluserinterface(GUI)andtransferringﬁles. AnIMAP
clientprogrammayextractdatafrommailboxesonamailserver,acceptingcommandsandtransferringor
displayingmailmessages.
Yetanothercommontypeofcommand-lineprogramisa server. Theseprogramsarealsointeractive,but
theyinteractwithclientprograms,notapersonthroughaGUI.AnHTTPserverlikeApache,forinstance,
respondstobrowserrequestsforwebpages. AnFTPserverrespondstoFTPclientrequestsforﬁletransfers.
Aserverisoftenakindofbatchprogram,sinceitisleftrunningforindeﬁniteperiodsoftime,andhasno
userinteraction.
452 Chapter 37. Programs: Standing Alone
Building Skills in Python, Release 2.6.5
37.2 Command-Line Programs: Servers and Batch Processing
Many programs have minimal or no user interaction at all. They are run from a command-line prompt,
performtheirfunction,andexitgracefully. Theymayproducealog;theymayreturnastatuscodetothe
operatingsystemtoindicatesuccessforfailure.
AlmostallofthecoreLinuxutilities( cp,rm,mv,ln,ls,df,du,etc.) areprogramsthatdecodecommand-
line parameters, perform their processing function and return a status code. Except for a few explicitly
interactiveprogramslikeeditors( ex,vi,emacs,etc.),almostallofthecoreelementsofLinuxareﬁlter-like
programs.
Therearetwocriticalfeaturesthatmakeacommand-lineprogramwell-behaved. First,theprogramshould
accept the arguments in a standard manner. Second the program should generally limit output to the
standardoutputandstandarderrorﬁlescreatedbytheenvironment. Whenanyotherﬁlesarewrittenit
mustbebyuserrequestandpossiblyrequireinteractiveconﬁrmation.
CommandLineOptionsandOperands . Thestandardhandlingofcommand-lineargumentsisgiven
as13rulesforUNIXcommands,asshowninthe introsectionofUNIXmanpages. Theserulesdescribe
theprogramnames(rules1-2),simpleoptions(rules3-5),optionsthattakeargumentvalues(rules6-8)and
operands(rules9and10)fortheprogram.
1.The program name should be between two and nine characters. This is consistent with most ﬁle
systemswheretheprogramnameisaﬁlename. InthePythonenvironment,theprogramﬁlemust
haveextensionof .py.
2.Theprogramnameshouldincludeonlylower-caselettersanddigits. Theobjectiveistokeepnames
relativelysimpleandeasytotypecorrectly. Mixed-casenamesandnameswithpunctuationmarks
canintroducediﬀicultiesintypingtheprogramnamecorrectly. Tobeusedasamoduleorpackagein
Python,theprogramﬁlename mustbejustletters,digitsand‘ _’‘s.
3.Optionnamesshouldbeonecharacterlong. Thisisdiﬀiculttoachieveincomplexprograms. Often,
optionshavetwoforms: asingle-charactershortformandamulti-characterlongform.
4.Single-character options are preceded by ‘ -’. Multiple-character options are preceeded by ‘ --’. All
optionshaveaﬂagthatindicates thatthisis anoption, notanoperand. Singlecharacteroptions,
again,areeasiertotype,butmaybehardtorememberfornewusersofaprogram.
5.Optionswithnoargumentsmaybegroupedafterasingle‘ -’. Thisallowsaseriesofone-character
optionstobegiveninasimplecluster,forexample‘ ls -ldai bin’clustersthe‘ -l’,‘-d’,‘-a’and‘-i’
options.
6.Options that accept an argument value use a space separator. The option arguments are not run
togetherwiththeoption. Withoutthisrule,itmightbediﬀiculttotellaoptionclusterfromanoption
witharguments. Withoutthisrule‘ cut -ds’couldbeanargumentvalueof sforthe‘-d’option,or
itcouldbeclusteredsingle-characteroptions‘ -d’and‘-s’.
7.Option-argumentscannotbeoptional. Ifanoptionrequiresanargumentvalue,presenceoftheoption
means that an argument value will follow. If the presence of an option is somehow diﬀerent from
supplyingavaluefortheoption,twoseparateoptionsmustbeusedtospecifythesevariousconditions.
8.Groupsofoption-argumentsfollowinganoptionmustbeasingleword;eitherseparatedbycommas
orquoted. Forexample: ‘ -d "9,10,56" ’. Aspacewouldmeananotheroptionorthebeginningofthe
operands.
9.Alloptionsmustprecedeanyoperandsonthecommandline. Thisbasicprincipleassuresasimple,
easytounderstanduniformitytocommandprocessing.
10.Thestring‘ --’maybeusedtoindicatetheendoftheoptions. Thisisparticularlyimportantwhen
anyoftheoperandsbeginwith‘ -’andmightbemistakenforanoption.
37.2. Command-Line Programs: Servers and Batch Processing 453
Building Skills in Python, Release 2.6.5
11.Theorderoftheoptionsrelativetooneanothershouldnotmatter. Generally,aprogramshouldabsorb
alloftheoptionstosetuptheprocessing.
12.The relative order of the operands (or arguments) may be signiﬁcant. This depends on what the
operandsmeanandwhattheprogramdoes.
13.Theoperand‘ -’precededandfollowedbyaspacecharactershouldonlybeusedtomeanstandard
input. Thismaybepassedasanoperand,toindicatethatthestandardinputﬁleisprocessedatthis
time. Forexample,‘ cat file1 - file2 ’willprocessﬁle1,standardinputandﬁle2.
Theserulesarehandledbythe optparsemodule.
OutputControl . Awell-behavedprogramdoesnotoverwritedatawithoutanexplicitdemandfromauser.
Programswithaassumed,defaultorimplicitoutputﬁleareapronblemwaitingtohappen. Awell-behaved
programshouldworkasfollows.
1.A well-designed program has an obvious responsibility that is usually tied to creating one speciﬁc
output. This can be a report, or a ﬁle of some kind. In a few cases we may ﬁnd it necessary to
optimizeprocessingsothatanumberofunrelatedoutputsareproducedbyasingleprogram.
2.Thebestpolicyforthisoutputistowritetheresultingﬁletostandardoutput( sys.stdout,whichis
thedestinationforthe printstatement.) Anylogging,statusorerrorreportingissentto sys.stderr.
Ifthisisdone,thensimpleshellredirectionoperatorscanbeusedtocollectthisoutputinanobvious
way.
python someProgram.py >this_file_gets_written
3.Insomecases,thereareactuallytwooutputs:detailsandausefulsummary. Inthiscase,thesummary
shouldgotostandardoutput,andanoptionspeciﬁesthedestinationofthedetails.
python aProgram.py -o details.dat >summary.txt
ProgramStartupandtheOperatingSystemInterface . Theessentialoperatingsysteminterfaceto
ourprogramsisrelativelysimple. TheoperatingsystemwillstartthePythonprogram,providingitwith
thethreestandardﬁles(stdin,stdout,stderr;see File Semantics formoreinformation),andthecommand
linearguments. Inresponse,Pythonprovidesastatuscodebacktotheoperatingsystem. Generallyastatus
codeof0meansthingsworkedperfectly. Statuscodeswhicharenon-zeroindicatesomekindofproblemor
failure.
Whenwerunsomethinglike
python casinosim.py -g craps
The operating system command processor (the Linux shellor Windowscmd.exe) breaks this line into
acommand(python)andasequenceofargumentvalues. Theshellﬁndstherelevantexecutableﬁleby
searchingit’sPATH,andthenstartstheprogram, providingtherestofthecommandlineasargument
valuestothatprogram.
APythonprogramwillseethecommandlineargumentsassignedto sys.argvas["casinosim.py", "-g",
"craps"].argv[0]isthenameofthemainmodule,thescriptPythoniscurrentlyrunning.
Whenthescriptin casinosym.py ﬁnishesrunning,thePythoninterpreteralsoﬁnishes,andreturnsastatus
codeof0totheoperatingsystem.
Toreturnanon-zerostatuscode,usethe sys.exit()function.
Reuse and The Main-Import Switch . In Module Use: The import Statement we talked about the
Main-Importswitch. Theglobal __name__variableisessentialfordetermingthecontextinwhichamodule
isused.
454 Chapter 37. Programs: Standing Alone
Building Skills in Python, Release 2.6.5
Awell-writtenapplicationmoduleoftenincludesnumeroususefulclassandfunctiondeﬁnitions. Whencom-
biningmodulestocreateapplicationprograms,itmaybedesirabletotakeamodulethathadbeenoriginally
designedasastand-aloneprogramandcombineitwithotherstomakealargerandmoresophisticatedpro-
gram. Insomecases,amodulemaybebothamainprogramforsomeusecasesandalibrarymodulefor
otherusecases.
The__name__variabledeﬁnesthecontextinwhichamoduleisbeingused. Duringevaluationofaﬁle,when
‘__name__ == "__main__" ’,thismoduleisthe mainmodule,startedbythePythoninterpreter. Otherwise,
__name__willbethenameoftheﬁlebeingimported. If __name__isnotthestring "__main__",thismodule
isbeingimported,andshouldtakenoactionofanykind.
Thistestisdonewiththeasfollows:
if__name__ =="__main__ ":
main()
Thiskindofreuseassuresthatprogrammingisnotduplicated. Itisnotoriouslydiﬀiculttomaintaintwo
separateﬁlesthataresupposedtocontainthesameprogramtext. Thiskindof“cutandpastereuse”isa
terribleburdenonprogrammers. Pythonencouragesreusethroughbothclassesandmodules. Allmodules
canbecoﬁguredasimportableandreusableprogramming.
37.3 Theoptparse Module
Thecommandlineargumentsfromtheoperatingsystemareputintothe sys.argvvariableasasequence
ofstrings. Lookingatthesyntaxrulesforcommandlineoptionsandoperandsintheprevioussectionwe
canseethatitcanbechallengingtoparsethissequenceofstrings.
Theoptparsemodulehelpsusparsetheoptionsandoperandsthatareprovidedtoourprogramonthe
commandline. Thismodulehastwoveryimportantclassdeﬁnitions: OptionParser() andValues.
AnOptionParser objectdoestwothings:
•It contais a complete map of your options, operands and any help strings or documentation. This
modulecan,therefore,produceacomplete,standard-lookingcommandsynopsis. The -hand--help
optionswilldothisbydefault.
•It parses the ‘ sys.argv[1:] ’ list of strings and creates a Valuesobject with the resulting option
values.
TheOptionParser hasthefollowingmethodsandattributes. Thereareanumberoffeatureswhichareused
byapplicationswhichneedtocreateaspecializedsubclass. We’llfocusonthebasicusecaseandignore
someofthefeaturesfocusedonextensibility.
classOptionParser (keywords... )
Theconstructorforan optparse.OptionParser hasanumberofkeywordargumentsthatcanbeused
todeﬁnetheprogram’soptions.
Parameters
• usage–Thiskeywordparametersetstheusagesummarythatwillprintwhenthe
optionscannotbeparsed,orhelpisrequested. Ifyoudon’tprovidethis,thenyour
program’s name will be taken from ‘ sys.argv[0]’ . You can suppress the usage
informationbysettingthistothespecialconstant optparse.SUPPRESS_USAGE .
• version–Thiskeywordparameterprovidesaversionstring. Italsoaddstheoption
of ‘-version’ which displays this string. This string can contain the formatting
characters‘ %prog’whichwillbereplacedwiththeprogram’sname.
37.3. The optparse Module 455
Building Skills in Python, Release 2.6.5
• description–Aparagraphoftextwithanoverviewofyourprogram. Thisisdis-
playedinresposetoahelprequest.
• add_help_option – This is Trueby default; it adds the ‘ -h’ and ‘-help’ options.
Youcansetthisto Falsetopreventaddingthehelpoptions.
• prog–Thenameofyourprogram. Usethisifyoudon’twant‘ sys.argv[0]’tobe
used.
add_option (string, keywords... )
Thismethodofan OptionParser deﬁnesanoption. Thepositionalargumentvaluesarethevarious
optionstringsforthisoption. Therecanbeanymixtureofshort(‘ -X’)andlong(‘ --long’)option
strings. Thisisfollowedbyanynumberofkeywordargumentstoprovideadditionaldetailsaboutthis
option. Itisrare,butpossibletohavemultipleshortoptionstringsforthesameoption.
Here’sanexample:
importoptparse
parser=optparse .OptionParser()
parser.add_option( "-o","--output ","-w", dest="output_file ", metavar ="output")
Thisdeﬁnes three diﬀerent variations that set a single destination value, output_file. In the help
text,thestring“‘ output”’willbeusedtoidentifythethreealternativeoptionstrings.
Parameters
• action–Thiskeywordparametertakesastring. Itdeﬁneswhattodowhenthis
optionappearsonthecommandline. Thedefaultactionis "store". Choicesinclude
"store","store_const" ,"store_true" ,"store_false" ,"append","count",
"callback"and"help".
Thestoreactionsstoretheoption’svalue.
Theappendactionaccumulatesalistofvalues.
Thecountactioncountsoccurancesoftheoption. Countisoftenusedsothat -vis
verboseand -vvisevenmoreverbose.
• type– This keyword parameter takes a string. It deﬁnes what type of value this
optionuses. Thedefaulttypeis“string”. Choicesinclude "string","int","long",
"choice","float"and"complex".
Foranactionof "count",thetypeisdeﬁnedas "int";youdon’tneedtospecifya
type.
• dest–Thiskeywordparametertakesastring. Itdeﬁnestheattributenameinthe
OptionParseobjectthatwillhavetheﬁnalvalue. Ifyoudon’tprovideavalue,then
theﬁrstlongoptionnamewillbeusedtocreatetheattribute. Ifyoudidn’tprovide
anylongoptionnames,thentheﬁrstshortoptionnamewillbeused.
• nargs–Thiskeywordparametertakesaninteger. Itdeﬁneshowmanyvaluesare
permittedforthisoption. Thedefaultvalueis1. Ifthisvalueismorethan1,then
atupleiscreatedtocontainthesequenceofvalues.
• const–Iftheactionparameterwas "store_const" ,thiskeywordparameterpro-
videstheconstantvaluewhichisstored.
• choice–Ifthetypeparameterwas "choice",thisisalistofstringsthatcontain
thevalidchoices. Iftheoption’svalueisnotinthislist,thenthisisarun-timeerror.
Thissetofchoicesisdisplayedasthehelpforthisoption.
• help–Thiskeywordparameterprovidesthehelptextforthisoption.
456 Chapter 37. Programs: Standing Alone
Building Skills in Python, Release 2.6.5
• metavar–Thiskeywordparameterprovidestheoption’snameasshowntotheuser
inthehelpdocumentation. Thismaybediﬀerentthantheabbreviationschosenfor
theoption.
• cal lback– If the actionparameter was "callback", this is a callable (either a
functionoraclasswitha __call__()method)thatiscalled. Thisiscalledwith
fourpositionalvalues:the Optionobjectwhichrequestedthecallback,thecommand
lineoptionstring,theoption’svaluestring,andtheoverall OptionParser object.
• cal lback_args–
• cal lback_kwargs –Iftheactionwas "callback",thesekeywordparametersprovide
the additional arguments and keywords used when calling the given function or
object.
set_defaults (keywords... )
Thismethodofan OptionParser providesalloftheoption’sdefaultvalues. Eachkeywordparameter
isadestinationname. Thesemustmatchthe destnames(orthetheoptionstring)foreachoption
thatyouareprovidingadefaultvalue.
parse_args ([args], [values=None], ) -> ( options, operands )
This method will parse the provided command-line argument strings and update a given
optparse.Values object. By default, this will parse ‘ sys.argv[1:] ’ so you don’t need to provide
avalueforthe argsparameter. Also,thiswillcreateandpopulateafresh optparse.Values object,
soyoudon’tneedtoprovideavalueforthe valuesparameter.
Theusualapproachis‘ options, operands = myParser.parse_args() ’.
AValuesobjectiscreatedbyan OptionParser . Ithastheattributevaluesbuiltfromdefaultsandactual
parsedarguments. Theattributesaredeﬁnedbytheoptionsseenduringparsingandanydefaultsettings
thatwereprovidedtothe OptionParser .
ACompleteExample . Here’samorecompleteexampleofusing optparse.
Assumewehaveaprogramwiththefollowingsynopsis. -v-h-d mm/dd/yy-s symbolfile
portfolio .py
Thisprogramhastwosingle-letteroptions: ‘ -v’and‘-h’. Ithastwooptionswhichtakeargumentvalues,
‘-d’and‘-s’. Finally,itacceptsanoperandofaﬁlename.
Theseoptionscanbeprocessedasfollows:
"""portfolio.py -- examines a portfolio file
"""
importoptparse
classPortfolio (object):
def__init__ (self, date, symbol ):
...
defprocess(self, aFile ):
...
defmain():
oparser=optparse .OptionParser( usage =__doc__ )
oparser.add_option( "-v", action ="count", dest="verbose")
oparser.add_option( "-d", dest="date")
oparser.add_option( "-s", dest="symbol")
oparser.set_defaults( verbose =0, date=None, symbol ="GE")
options, operands =oparser.parse_args()
37.3. The optparse Module 457
Building Skills in Python, Release 2.6.5
portfolio =Portfolio( options .date, options .symbol )
forfinoperands:
portfolio .process( f )
if__name__ =="__main__ ":
main()
Theprogram’s optionsare addedto theparser. Thedefault values, similarlyare set inthe parser. The
parse_args() functionseparatesthetheoptionsfromthearguments,andbuildstheoptionsobjectwith
thedefaultsandtheparsedoptions. The process()functionperformstherealworkoftheprogram,using
theoptionsandoperandsextractedfromthecommandline.
37.4 Command-Line Examples
Let’slookatasimple,butcompleteprogramﬁle. Theprogramsimulatesseveraldicethrows. We’vedecided
thatthecommand-linesynopsisshouldbe: -v-s samples
dicesim.py
The‘-v’optionleadsto verboseoutput,whereeveryindividualtossofthediceisshown. Withoutthe‘ -v’
option,onlythesummarystatisticsareshown. The‘ -s’optiontellshowmanysamplestocreate. Ifthisis
omitted,100samplesareused.
Hereistheentireﬁle. Thisprogramhasaﬁve-partdesignpatternthatwe’vegroupedintothreesections.
dicesim.py
#!/usr/bin/env python
"""dicesim.py
.. program:: dicesym.py
Simulate rolls of dice.
.. cmdoption:: -v
Produce verbose output, show each sample
.. cmdoption:: -s samples
The number of samples (default 100)
"""
importdice
importoptparse
importsys
defdicesim( samples =100, verbosity =0):
"""Simulate the roll of two dice by producing the requested samples.
:param samples: the number of samples, default is 100
:param verbose: the level of detail to show
"""
458 Chapter 37. Programs: Standing Alone
Building Skills in Python, Release 2.6.5
d=dice.Dice()
t=0
forsinrange(samples):
n=d.roll()
ifverbosity !=0:printn
t+=n
print"%ssamples, average is %s"%( samples, t /float(samples) )
defmain():
parser=optparse .OptionParser()
parser.add_option( '-v', dest='verbosity ', action ='count')
parser.add_option( '-s', dest='samples',type='int')
parser.set_defaults( verbosity =0, samples =100)
opts, args =parser.parse_args()
dicesim( samples =opts.samples, verbosity =opts.verbosity )
if__name__ =="__main__ ":
main()
1.The docstring provides the synopsis of the program, plus any other relevant documentation. This
shouldbereasonablycomplete. Eachelementofthedocumentationisseparatedbyblanklines. Several
standarddocumentextractutilitiesexpectthiskindofformatting.
NotethatthedocstringusesRestucturedTextmarkupwiththeSphinxextensions. Thiswillallow
Sphinxtoproducegood-lookingdocumentationforourprogram.
2.Theimportslineliststheothermodulesonwhichthisprogramdepends. Eachofthesemodulesmight
havethemain-importswitchandaseparatemainprogram. Ourobjectiveistoreusetheimported
classesandfunctions,notthemainfunction.
3.Thedicesym()functionisistheactualheartoftheprogram. Itisafunctionthatdoestheessential
work. It’sdesignedsothatitcanbeimportedbysomeotherprogramandreused.
4.Themain()functionistheinterfacebetweentheoperatingsystemthatinitiatesthisprogramandthe
actualworkin dicesym(). Thisdoesnothavemuchreusepotential.
5.The top-levelifstatement makes the determination if this is a main program or an import. If it
is an import, then __name__is not"__main__", and no additional processing happens beyond the
deﬁnitions. If it is the main program, the __name__is"__main__"; the arguments are parsed by
main(),whichcalls dicesym()todotherealwork.
ThisisatypicallayoutforacompletePythonmainprogam. Therearetwoclearobjecives. First,keepthe
main()programfocused;second,provideasmanyopportunitiesforreuseaspossible.
37.5 Other Command-Line Features
Python,primarily,isaprogramminglanguage. However,Pythonisalsoafamilyofrelatedprogramswhich
interpretthePythonlanguage. WhilewecangenerallyassumethatthePythonlanguageisthesameasthe
Pythoninterpreter,therearesomesubtletiesthatarefeaturesoftheinterpreter,separatefromthelanguage.
Generally,theCPythoninterpreteristhebaselineagainstwhichothersarecompared,andfromwhichothers
arederived. OtherinterpretersincludeJythonandIronPython.
ThePythoninterpreterhasafairlysimplecommand-lineinterface. Welookedatitbrieﬂyin Script Mode.
Innon-Windowsenvironments,youcanusethemancommandtoseethefullsetofcommand-lineoptions.
Inallcases,youcanrun python-horpython–help togetasummaryoftheoptions.
37.5. Other Command-Line Features 459
Building Skills in Python, Release 2.6.5
Generallythereareseveralkindsofcommand-lineoptions.
•IdentifyTheProgram . Thisisdonewith -c,-m,-andthe ﬁleargument. The -coptionprovides
thePythonprogramonthecommandlineasaquotedstring. Thisisn’tterriblyuseful. However,we
canuseitforthingslikethefollowing.
python -c 'import sys; print sys.version'
Notetherarely-used‘ ;’toterminateastatement.
The-moptionwilllocateamoduleonthe PYTHONPATH andexecutethatmodule. Thisallows
youtoinstallacompleteapplicationinthePythonlibraryandexecutethetop-level“mainprogram”
script.
Aswenotedin Script Mode,thecommand-lineargumenttothePythoninterpreterisexpectedtobe
aPythonprogramﬁle. Additionally, wecanprovideaPythonprogramonstandardinputanduse
python-toreadandprocessthatprogram.
•SelecttheDivisionOperatorSemantics . Thisisdonewith -Q.Aswenotedin Division Operators ,
therearetwosensesfordivision. Youcancontrolthemeaningof‘ /’using-Qnewand-Qold. Youcan
alsodebugproblemswith -Qwarnor-Qwarnall. Ratherthanrelyon -Qnew,youshouldinclude‘ from
__future__ import division ’ineveryprogramthatusesthenew‘ //’operatorandthenewsense
ofthe‘/’operator.
•Optimization . Thisisdonewith -Oand-OOtopermitsomeoptimizationofthePythonbytecode.
Thismayleadtosmallperformanceimprovements.
Generally, there are two sources for performance improvements that are far more important than
optimization. First,andmostfundamentally,correctchoicesofdatastructuresandalgorithmshave
themostprofoundinﬂuenceonperformance. Second,modulescanbewritteninCandusethePython
API’s. TheseC-languagemodulescandramaticallyimproveperformance,also.
•StartupandLoading . The-Sand-EoptionscontrolthewayPythonstartsandwhichmodulesit
loads.
The-Eoption ignores all environment variables ( PYTHONPATH is the most commonly used
environmentvariable.)
Ordinarily Python executes an implicit ‘ import site’ when it starts executing. The sitemodule
populates sys.pathwithstandardlocationsforpackagesandmodules. The -Soptionwillsuppress
thisbehavior.
•Debugging. The-d,-i,-vand-uoptionsprovidesomedebugginghelp.
Pythonhassomeadditionaldebugginginformationthatyoucanaccesswiththe -doption. The -i
optionwillallowyoutoexecuteascriptandtheninteractwiththePythonintrpreter. The -voption
willdisplayverboseinformationonthe importprocessing.
Sometimesitwillhelptoremovetheautomaticbuﬀeringofstandardoutput. Ifyouusethe -uoption,
mixedstderrandstdoutstreamsmaybeeasiertoread.
•IndentationProblem-Solving . The-toptiongiveswarningoninconsistentuseoftabsandspaces.
The-ttoptionmakesthesewarningsintoerrors,stoppingyourprogramfromrunning.
The-xoptionskipstheﬁrstlineofaﬁle. Thiscanbeusedforsituationswheretheﬁrstlineofa
Pythonﬁlecan’tbeasimple‘ #!’ line. Iftheﬁrstlinecan’tbeacommenttoPython,thiswillskip
thatline.
Additionally,Pythoncomeswitha Tabnannyscriptthatcanhelpresolvetabandspaceindentation
issues.
Theseproblemscanbepreventedbyusingspacesinsteadoftabs.
460 Chapter 37. Programs: Standing Alone
Building Skills in Python, Release 2.6.5
ThereareanumberofenvironmentvariablesthatPythonuses. We’lllookatjustafew.
PYTHONPATH
Thisdeﬁnesthesetofdirectoriessearchedformodules. Thisisinadditiontothedirectoriesplaced
ontosys.pathbythesitemodule.
PYTHONSTARTUP
ThisﬁleisexecutedwhenyoustartPythonforinteractiveuse. Youcanusethescriptexecutedat
startuptimetoimportusefulmodules,deﬁnehandyfunctionsoralteryourworkingenvironmentin
otherways.
37.6 Command-Line Exercises
1.Create Programs . Refer back to exercises in Language Basics . See sections Numeric T ypes and
Expressions,Condition Exercises ,Iteration Exercises ,F unction Exercises . Modifythesescriptstobe
stand-aloneprograms. Inparticular,theyshouldgettheirinputvia optparsefromthecommandline
insteadof input()orothermechanism.
2.LargerPrograms . Referbacktoexercisesin Data Structures . Seesections String Exercises ,T uple
Exercises,List Exercises,Dictionary Exercises ,Exception Exercises . Modifythesescriptstobestand-
aloneprograms. Inmanycases,theseprogramswillneedinputfromﬁles. Theﬁlenamesshouldbe
takenfromthecommandlineusing optparse.
3.Object-OrientedPrograms . Referbacktoexercisesin Class Deﬁnition Exercises ,Advanced Class
Deﬁnition Exercises . Modifythesescriptstobestand-aloneprograms.
37.7 Thegetopt Module
Thisisadditionalreferencematerialonthe getoptmoduleforparsingcommand-lineoptionsandarguments.
Thecommandlineargumentsfromtheoperatingsystemareputintothe sys.argvvariableasasequence
ofstrings. Lookingatthesyntaxrulesforcommandlineoptionsandoperandsintheprevioussectionwe
canseethatitcanbechallengingtoparsethissequenceofstrings.
Thegetoptmodule helps us parse the options and operands that are provided to our program on the
commandline. Thismodulehasoneveryimportantfunction,alsonamed getopt().
getopt(args, options, [long_options] )
Decode the given sequence of arguments, args, using the given set of optionsandlong_options .
Returnsatuple. Theﬁrstvalueisasequenceofnormalized(option,value)pairs. Thescondvalueis
asequenceoftheprogram’soperandvalues.
Theargsvalueshouldnotinclude sys.argv[0],theprogramname. Therefore,theargumentvalue
forargsisalmostalways‘ sys.argv[1:] ’.
Theoptionsvalueisastringoftheone-letteroptions. Anyoptionswhichrequireargumentvaluesare
followedbya‘ :’. Forexample,‘ "ab:c"’meansthattheprogramwillaccept -a,-c,-ac,-b value
asoptions.
Thelong_options valueisoptional,ifpresentitisalistofthelongoptions. Ifalongoptionrequires
aparametervalue,it’snamemustendin‘ =’. Forexample,‘ ("silent","debug","log=") ’meansthat
optionslike --silent,--debug,and--log=myfile.log areacceptedasoptions.
There are two results of getopt(): the options and the operands. The options is a list of ‘ (
:replaceable:`name ’ , value)‘ pairs. The operands is the list of names which follow the last option.
Inmostcases,thislistisalistofﬁlenamestobeusedasinput.
37.6. Command-Line Exercises 461
Building Skills in Python, Release 2.6.5
Thereareseveralwaystohandletheoptionslist.
•Wecaniteratethroughthislist,settingglobalvariables,orconﬁguringsomeprocessingobject. This
workswellwhenwehavebothshortandlongoptionnamesforthesameconﬁgurationsetting.
options, operands = getopt.getopt( sys.argv[1:], ... )
for name, value in options:
if name == "-X" or name == "--long":
set some global variable
•Wecandeﬁneourconﬁgurationasadictionary. Wecanthenupdatethisdictionarywiththeoptions.
Thisforcestherestofourprogramtohandlethe‘ -X’or‘--long’namesforcoﬁgurationparameters.
config={"-X": default, "--long": default }
options, operands =getopt.getopt( sys .argv[1:],...)
config.update( dict(options) )
•Wecandeﬁneourconﬁgurationasadictionary. Wecaninitializethatconﬁgurationdictionarywith
the given options then fold in default values. While pleasantly obvious, it still makes the ‘ -X’ and
‘--long’optionsvisiblethroughoutourprogram.
options, operands =getopt.getopt( sys .argv[1:],...)
config=dict(options)
config.setdefault( "-X", value )
config.setdefault( "--long", value )
Oneveryadaptableandreusablestructureisthefollowing.
class MyApplication( object ):
def __init__( self ):
self.someProperty= some_default
def process( self, aFileName ):
""" The Real Work. """
This is the real work of this applications
def main():
theApp= MyApplication()
options, operands = getopt.getopt( sys.argv[1:], "..." )
for name, value in options:
if name == "-X" or name == "--long":
set properties in theApp
for fileName in operaands:
theApp.process( aFileName )
ACompleteExample . Here’samorecompleteexampleofusing getopt. Assumewehaveaprogram
withthefollowingsynopsis. -v-h-d mm/dd/yy-s symbolfile
portfolio .py
Thisprogramhastwosingle-letteroptions: ‘ -v’and‘-h’. Ithastwooptionswhichtakeargumentvalues,
‘-d’and‘-s’. Finally,itacceptsanoperandofaﬁlename.
Theseoptionscanbeprocessedasfollows:
462 Chapter 37. Programs: Standing Alone
Building Skills in Python, Release 2.6.5
"""portfolio.py -- examines a portfolio file
"""
importgetopt
classPortfolio (object):
...
defmain():
portfolio =Portfolio()
opts, operands =getopt( sys .argv[1:],"vhd:s:")
foro,vinopts:
ifo=="-v": portfolio .verbose=True
elifo=="-h":
print__doc__
return
elifo=="-d": portfolio .date=v
elifo=="-s": portfolio .symbol=v
forfinoperands:
portfolio .process( f )
if__name__ =="__main__ ":
main()
Theprogram’soptionsarecodedas "vhd:s:": thesingle-letteroptions(‘ -v’and‘-h’)andthevalueoptions
(‘-d’ and ‘-s’). The getopt()function separates the the options from the arguments, and returns the
optionsasasequenceofoptionﬂagsandvalues.
Theprocess()functionperformstherealworkoftheprogram,usingtheoptionsandoperandsextracted
fromthecommandline.
37.7. The getopt Module 463
Building Skills in Python, Release 2.6.5
464 Chapter 37. Programs: Standing Alone
CHAPTER
THIRTYEIGHT
ARCHITECTURE: CLIENTS, SERVERS,
THE INTERNET AND THE WORLD
WIDE WEB
The W orld-Wide W eb is a metaphorical description for the sophisticated interactions among computers.
ThecoretechnologythatcreatesthisphenomenonistheInternetworkingProtocolsuite,sometimescalled
The Internet. Fundamentally,theinternetworkingprotocolsdeﬁnearelationshipbetweenpiecesofsoftware
calledthe client-server model . Inthiscasesomeprograms(likebrowsers)areclients. Otherprograms(like
webservers,databases,etc.) areservers.
Thisclient-servermodelofprogrammingisverypowerfulandadaptable. Itispowerfulbecauseitmakes
giant, centralized servers available to large numbers of remote, widely distributed users. It is adaptable
becausewedon’tneedtosendsoftwaretoeveryone’scomputertomakeachangetothecentralizedservice.
Essentially,everyclient-serverapplicationinvolvesaclientapplicationprogram,aserverapplication,anda
protocolforcommunicationbetweemthetwoprocesses.Inmostcases,theseprotocolsarepartofthepopular
andenduringsuiteofinternetworkingprotocolsbasedonTCP/IP.FormoreinformationinTCP/IP,see
Internetworking with TCP/IP [Comer95].
We’lldigressintothefundamentalsofTCP/IPin About TCP/IP .We’lllookatwhat’sinvolvedinaweb
serverin The W orld Wide W eb and the HTTP protocol . We’lllookbrieﬂyatwebservicesin W eb Services.
We’lllookatslightlylower-levelprotocolsin W riting W eb Clients: The url lib2 Module . Finally,we’llshow
howyoucanuselow-levelsocketsin Socket Programming . Generally, youcanalmostalwaysleveragean
existingprotocol;butit’sstillrelativelysimpletoinventyourown.
38.1 About TCP/IP
TheessenceofTCP/IPisamulti-layeredviewoftheworld. Thisviewseparatesthemechanicsofoperating
asimpleLocalAreaNetwork(LAN)fromtheinterconnectionbetweennetworks,called internetworking .
Hardware. ThelowestlevelofnetworkservicesareprovidedbymechanismslikeEthernet(seetheIEEE
802.3standards),whichcoverswiringbetweencomputers. TheEthernetstandardsincludealternativeslike
10BaseT(fortwistedpairsofthinwires),10Base2(forthickercoaxialcabling). Networkservicesmayalso
bewireless,usingtheIEEE802.11standards. Inallcases,though,thesenetworkservicesprovideforsimple
namingofdevicesandmovingbitsfromdevicetodevice.
Whatmakesthese“lowlevel”isthattheseservicesarelimitedbyhavingtoknowthehardwarenameofthe
receivingdevice;usuallycalledtheMACaddress. Whenyoubuyanewnetworkcardforyourcomputer,
you–eﬀectively–changeyourcomputer’shardwarename.
465
Building Skills in Python, Release 2.6.5
TheTCP/IPstandardsputseverallayersofcontrolontopofthesedatapassingmechanisms. Whilethese
additionallayersallowinterconnectionbetweennetworks,theyalsoprovideastandardlibraryforusingall
ofthevariouskindsofnetworkhardwarethatisavailable.
InternetworkingProtocol . First,theInternetProtocol(IP)standardspeciﬁesaddressesthatareinde-
pendentoftheunderlyinghardware. TheIPalsobreaksmessagesintopacketsandreassemblesthepackets
inordertobeindependentofanynetworklimitationsontransmissionlengths.
Additionally,theIPstandardspeciﬁeshowtoroutepacketsamongnetworks,allowingpacketstopassover
bridgesandroutersbetweennetworks. Thisisthefundamentalreasonwhyinternetworkingwascreatedin
theﬁrstplace.
Finally,IPprovidesaformalNetworkInterfaceLayertodivorceIPandallhigherlevelprotocolsfromthe
mechanicsoftheactualnetwork. Thisallowsforindependentevolutionoftheapplicationsoftware(likethe
WorldWideWeb)andthevariousnetworkalternatives(wired,wirelss,broadband,dial-up,etc.)
TransportControlProtocol . TheTransportControlProtocol(TCP)protocolreliesonIP.Itprovides
areliablestreamofbytesfromoneapplicationprocesstoanother. Itdoesthisbybreakingthedatainto
packetsandusingIPtoroutethosepacketsfromsourcetoreceiver. ItalsousesIPtosendstatusinformation
andretrylostorcorruptedpackets. TCPkeepscompletecontrolsothatthebytesthataresentarerecieved
exactlyonceandinthecorrectorder.
Manyapplications,inturn,dependontheTCP/IPprotocolcapabilities. TheHypertextTransportProtocol
(HTTP),usedtoviewawebpage,worksbycreatingaTCP/IPconnection(calleda socket)betweenbrowser
andwebserver.Arequestissentfrombrowsertowebserver.Thewebserverrespondstothebrowserrequest.
Whenthewebpagecontentiscomplete,thesocketisclosedandthesocketconnectioncanbediscarded.
PythonModules . PythonprovidesanumberofcompleteclientprotocolsthatarebuiltonTCP/IPinthe
followingmodules: urllib,httplib,ftplib,gopherlib,poplib,imaplib,nntplib,smtplib,telnetlib.
Each of these exploits one or more protocols in the TCP/IP family, including HTTP, FTP, GOPHER,
POP,IMAP,NNTP,SMTPandTelnet. The urllibandurllib2modulesmakeuseofmultipleprotocols,
includingHTTPandFTP,whicharecommonlyprovidedbywebservers.
We’lllookintothedetailsofjustoneofthesehigher-levelprocotolsbuiltonTCP/IP.We’lllookatHTTP
andhowthisserveswebpagesforpeople. We’lllookatusingthistocreateawebservice,also.
Protocols, like SMTP, POP and IMAP are used to route and read email. One can argue that SMTP is
perhapsthemostusedprotocoleverinvented,sinceeveryemailontheinternetispushedaroundbySMTP.
38.2 The World Wide Web and the HTTP protocol
Oneofthemostwidely-usedprotocolbuiltontopofTCP/IPisprobablyHTTP.Itisthebackboneofthe
World Wide Web. The HTTP protocol deﬁnes two parties: the client (or browser) and the server. The
browserisgenerallysomepieceofsoftwarelikeFireFox,OperaorSafari. Thewebserverisusuallybased
ontheApachewebserver,butthereareseveralothersincommonuse.
TheHyperTextTransferProtocol(HTTP)speciﬁesarequestandareply. Ourclient(usuallyabrowser)
sends a request. The web server sends us a reply. [And yes, the World Wide Web is that simple. the
sophisticationcomesfromallthecleverthingsthatbrowsersandserversdowiththissimpleprotocol.]
Requests.AnHTTPrequestincludesanumberofpiecesofinformation.Afewofthesepiecesofinformation
areofparticularinteresttoawebapplication.
operationTheoperation(ormethod)isgenerally‘ GET’or‘POST’.Thereareothercommands
speciﬁedintheprotocol(like‘ PUT’or‘DELETE’),buttheyaren’tprovidedbybrowsers.
466 Chapter 38. Architecture: Clients, Servers, the Internet and the World Wide Web
Building Skills in Python, Release 2.6.5
This isn’t visible. Generally, any URL you enter into a browser is accessed with a ‘ GET’
method. Whenyouﬁllinaformandclickabutton,thentheformisoftensentasaPOST
request.
urlTheURLlocatesttheresource. Itincludesascheme,apath,aquery,andotheroptional
informationlikeaquery.
Whenwebrowse http://homepage.mac.com/s_lott ,the//homepage.mac.com/s_lott is
thepath.
Thehttp:isthe scheme(orprotocol)beingused.
headersThere are a number of headers which are included in the query; these describe the
browser,andwhatthebrowseriscapableof. Theheaderssummarizesomeofthebrowser’s
preferences, like the language and locale. They also describe any additional data that is
attached to the request. The “content-length” header, in particular, tells you that form
inputoraﬁleuploadisattached.
Reply. An HTTP reply includes a number of pieces of information. It always begins with a MIME-
typestringthattellsthebrowserwhatkindofdocumentwillfollow. Thisstringusoften‘ text/html’or
‘text/plain’.
Thereplyalsoincludesthestatuscodeandanumberofheaders. Oftentheheadersareversioninfromation
thatthebrowsercanrevealviathe PageInfomenuiteminthebrowser. Finally,thereplyincludesthe
actualdocument,eitherplaintext,HTMLoranimage.
ThereareanumberofHTTPstatuscodes.Generally,asuccessfulrequesthasastatuscodeof200,indicating
thatrequestiscomplete,andthepageisbeingsent.
The30xstatuscodesindicatethatthepagewasmoved,the "Location"headerprovidestheURLtowhich
thebrowserwillredirect.
The40xstatuscodesindicateproblemswiththerequest. Generally,theresourcewasnotfound.
The50xstatuscodesindicateproblemswiththeserverorthefundamentalsyntaxoftherequest.
38.3 Writing Web Clients: The urllib2 Module
SincetheWorldWideWebisaclient-serverprotocol,wecancreateclientsorservers(orboth). Generally,
theclientsarewebbrowsers.
Thereare, however, numerousapplicationswherewewanttogetsoftwarefromaserverontheweb, but
wedon’twanttouseabrowser. Wemighthaveadailyextractofdata,oranhourlysummaryofTwitter
postings.
Thesecanbedonebywritingawebclient. Fundamentally,awebclientengagesinanHTTPrequestand
processesthereplythatcomesfromthewebserver.
Whentheresponseisinastructuredmarkuplanguage(likeHTMLorXML),thenwe’llneedtoparsethis
resultingﬁleformat. WelookedatXMLparsingin XML Files: The xml.etree and xml.sax Modules . HTML
parsingissimilar.
Resources. AcentralpieceofthedesignfortheWorld-WideWebistheconceptofaUniformResource
Locator(URL)andUniformResourceIdentiﬁer(URI).AURLprovidesseveralpiecesofinformationfor
gettingatapieceofdatalocatedsomewhereontheinternet. AURLhasseveraldataelements. Here’san
exampleURL: http://www.python.org/download/
•Aschemeorprotocol(‘ http’)
38.3. Writing Web Clients: The urllib2 Module 467
Building Skills in Python, Release 2.6.5
•Alocationwhichprovidestheservice. Thisincludesthelocation(‘ www.python.org ’)andanoptional
portnumber. Thedefaultportnumberdependsonthescheme. Port80isfor‘ http’.
•Apath(‘ download’)
•Anoperation(‘ GET’isgenerallyused)
It turns out that we have a choice of several schemes for accessing data, making it very pleasant to use
URL’s. Theprotocolsinclude
•ftp. TheFileTransferProtocol,FTP.ThiswillsendasingleﬁlefromanFTPservertoourclient.
Forexample, ftp://aeneas.mit.edu/pub/gnu/dictionary/cide.a istheidentiﬁerforaspeciﬁcﬁle.
•http. The Hypertext Transfer Protocol, HTTP. Amongst other things that HTTP
can do, it can send a single ﬁle from a web server to our client. For example,
http://www.crummy.com/software/BeautifulSoup/download/BeautifulSoup.py retrievesthecur-
rentreleaseoftheBeautifulSoupmodule.
•ﬁle. Thelocalﬁleprotocol. WecanuseaURLbeginningwith file:///toaccessﬁlesonourlocal
computer.
HTTPInteraction . AgreatdealofinformationontheWorldWideWebisavailableusingsimpleURI’s.
Inanywell-designwebsite,wecansimply‘ GET’theresourcethattheURLidentiﬁes.
AlargenumberoftransactionsareavailablethroughHTTPrequests. ManywebpagesprovideHTMLthat
willbepresentedtoapersonusingabrowser.
Insomecases,awebpageprovidesanHTMLformtoaperson. Thepersonmayﬁllinaformandclicka
button. ThisexecutesanHTTP POSTtransaction. The urllib2moduleallowsustowritePythonprograms
which,ineﬀect,ﬁllintheblanksonaformandsubmitthatrequesttoawebserver.
Alsonotethatsomewebsitesmanageinteractionwithpeopleviacookies. This,too,canbehandledwith
urllib2.
Example. ByusingURL’sinourprograms,wecanwritesoftwarethatreadslocalﬁlesaswellasitreads
remoteﬁles. We’llshowjustasimplesituationwhereaﬁleofcontentcanbereadbyourapplication. In
thiscase,welocatedaﬁleprovidedbyanHTTPserverandanFTPserver. Wecandownloadthisﬁleand
readitfromourownlocalcomputer,also.
Asanexample,we’lllookatthe Col laborative International Dictionary of English ,CIDE.Herearethree
placesthattheseﬁlescanbefound,eachusingdiﬀerentprotocols. However,usingthe urrllb2module,we
canreadandprocessthisﬁleusinganyprotocolandanyserver.
FTPftp://aeneas.mit.edu/pub/gnu/dictionary/cide.a This URL describes the
aeneas.mit.edu server that has the CIDE ﬁles, and will respond to the FTP proto-
col.
HTTPhttp://ftp.gnu.org/gnu/gcide/gcide-0.46/cide.a This URL names the
ftp.gnu.orgserverthathastheCIDEﬁles,andrespondstotheHTTPprotocol.
FILEfile:///Users/slott/Documents/dictionary/cide.a This URL names a ﬁle on my
localcomputer. Yourcomputermaynothavethispathorthisﬁle.
urlreader.py
#!/usr/bin/env python
"""Get the "A" section of the GNU CIDE Collaborative International Dictionary of English
"""
importurllib2
468 Chapter 38. Architecture: Clients, Servers, the Internet and the World Wide Web
Building Skills in Python, Release 2.6.5
#baseURL= "ftp://aeneas.mit.edu/pub/gnu/dictionary/cide.a"
baseURL="http://ftp.gnu.org/gnu/gcide/gcide-0.46/cide.a "
#baseURL= "file:///Users/slott/Documents/dictionary/cide.a"
dictXML=urllib2.urlopen( baseURL, "r")
printlen(dictXML .read())
dictXML.close()
1.Weimportthe urllib2module.
2.WenametheURL’swe’llbereading. Inthiscase,anyoftheseURL’swillprovidetheﬁle.
3.WhenweopentheURL,wecanreadtheﬁle.
38.4 Writing Web Applications
Awebapplicationisusuallyembeddedinawebserver.ThepointofawebapplicationistorespondtoHTTP
requestswithappropriatereplies. TheHTTPprotocolisfairlysimple,makingitpossible–inprinciple–to
writeacompletewebserverinPython.
Inthelongrun,however,awebserverwrittenentirelyinPythondoesn’tscalewell. Toprovidereasonable
levelsofservicetolargenumbersofusers,thereareagreatmanyoptimizationsthatareessential.
Oneofthemostimportantoptimizationsrelatestothenatureofthevariousdownloadsfromawebserver.
Whenwerequestapage,theinitialdownloadinresponsetothe‘ GET’requestisusuallyanHTMLdocument.
EmbeddedintheHTMLarereferencestonumerousotherﬁles,includingstylesheets,Javascriptlibraries,
imagesandothermedia.
TheHTMLisoftenbuiltdynamicallyandrequiresasophisticatedPython-basedapplication. Therestof
thecontent,however,ismore-or-lessstatic,anddoesnotrequiredeepsophistication. Thestaticmedianeeds
tobesentassimplyaspossible.
Thisdichotomybetweensmall,complexdynamicHTMLcontentandlarge,simplestaticcontentleadsus
toatwo-partdesign. WewanttousePythononlyfortheHTML,andusesomeother,faster,application
forthestaticcontent. ItworksoutbestifweembedourPythonapplicationinawebserverlikeApache.
WecandelegatethestaticcontenttoApache. WereservethedynamicHTMLcreationforourPythonweb
applicationprograms.
Weusuallyuseacomponentcalled mod_wsgitoextendApachewithPython. TheideaistoconﬁgureApache
toseparaterequestsforstaticmediacontentfromtherequestsforthedynamicHTMLpages. Apacheserves
the static content from local ﬁles. Apache delegates (via mod_wsgi) some web requests to our Python
application.
Priviledge. Notethatwebserversusuallylistenonport80. Writingapplicationsthatusethisport(orany
otherportnumberedbelow1024)requiresspecialoperatingsystemprivileges.
Writingpriviledgedapplicationsisbeyondthescopeofthisbook. Forthatreason,we’llfocusonwriting
applicationswhichdooneoftwothings.
•Useahigher-numberedport. 8000,8008orsomeothernon-priviledgedportistypical.
•PlugintotheApacheserver. Apacheisapriviledgedprocess,andcanopenport80,handingrequests
toourapplicationsthroughsomekindofgateway.
38.4. Writing Web Applications 469
Building Skills in Python, Release 2.6.5
38.4.1 About Web Servers
AwebserverhandleshalfoftheHTTPconversation. Wehaveanumberofchoicesofwaystoimplement
thishalfoftheprotocol.
•Wecanwriteourownfromscratch. Pythonprovidesussomeseedmodulesfromwhichwecanbuild
aworkingserver. Insomeapplications,wherethevolumeislow,thisisentirelyappropriate.
See theBaseHTTPServer ,SimpleHTTPServer andCGIHTTPServer modules for simple web servers.
Alsoseethe wsgirefpackageforamoresophisticatedwebserver.
Asnotedabove,thisisrelativelyineﬀicientbecausewe’llbeusingthevastpowerofPythontoserve
alotofstaticcontentﬁles.
Also,it’sdiﬀiculttolistenforwebrequestsonport80usingaPythonapplication.
•WecanplugintotheApacheserver.
–ApachesupportsawidevarietyofGatewayInterfacetechnologies,includingCGIandSCGI.Using
thePython cgimodule,wecancreateaCGIorSCGIscript. Thisisanineﬀicientuseofsystem
resourcesbecauseeachrequeststartsacomplete,freshPythoninterpreter.
–WecanplugintotheApacheserverwith mod_python. ThisApachemoduleembedsaPython
interpreterdirectlyinApache. ThisembeddedinterpreterthenrunsyourPythonprogramsas
partofApache’sresponsetoHTTPrequests. Thisisverysecureandveryfast. Thisisarelatively
directconnectionwithApache.
–One of the most popular (and ﬂexible) connections to Apache is mod_wsgi. We can use the
mod_wsgiApacheextensioninoneoftwoways. WecanembedPythonintoApache,orwecan
havePythonrunningasaseparatedaemonprocess.
UsingPythonasaseparatedeamonmeansthattheApacheprocessisfreetoserveotherweb
requestswhileourPythonprocessisdoingthecomplexworkofcreatingtheHTML.
Generally,using cgiormod_wsgiisstillrathercomplex. Therearenumerousdetailsofparsingrequests,
handingsessions,identifyingusers,managinglogs,etc.,whicharecommonproblemswithcommonsolutions.
WebFrameworks . Ratherthaninventallofthesupportingtechnologyforawebsite,it’seasiesttousea
web application framework . Ifweuseaframework,wecanfocusonthecontentandpresentationofourweb
siteandleavethehousekeepingtothefolkswhowritetheframework.
AwebframeworkwillconnecttoApache;itwillhandlethedetailsofparsingawebrequestandproviding
asuitableresponse. Usingawebframeworkmeansthatwedomuch,muchlessprogramming. Pythonhas
dozensofpopular,successfulwebframeworks. Youcanlookat Zope,Pylons,DjangoandTurboGears
for some examples of dozens of ways that the Python community has simpliﬁed the construction of web
applications.
We can’t easily cover any of the web frameworks in this book. But we can take a quick look at
BaseHTTPServer ,justtoshowwhat’sinvolvedinHTTP.
38.4.2 UsingBaseHTTPServer
Fundamentally, awebserverisanapplicationthatlistensforandhandlesrequestssentusingtheHTTP
protocol. Thehandlerisrequiredtoformulateasuitableresponse.
This“listenandhandle”loopisimplementedbyaninstanceofthe BaseHTTPServer.HTTPServer class. We
constructtheserverbyprovidingahandlerclass. EachHTTPrequestwillleadtocreationofaninstance
ofthehandlerclass.
TheBaseHTTPServer.HTTPServer classhastwomethodstoprovidetheoverall“mainloop”ofawebserver.
470 Chapter 38. Architecture: Clients, Servers, the Internet and the World Wide Web
Building Skills in Python, Release 2.6.5
classHTTPServer ()
__init__ (address, handlerClass )
Parameters
• address–Atwo-tuple,withservernameandportnumber,usuallysomethinglike
('',8008).
• handlerClass–Asubclassof BaseHTTPServer.BaseHTTPRequestHandler . Thisis
theclassitself,notaninstanceoftheclass. Theserverwillcreateobjectsofthis
classandinvokethatobject’smethods.
handle_request ()
Thismethodofaserverwillhandlejustonerequest. It’shandyfordebugging. Or,youcouldcreate
yourown“serveforever”loop.
serve_forever ()
Thismethodofaserverwillhandlerequestsuntiltheserverisstoppedforcibly. Aforciblestopis
usuallyanexternalkillsignal(ortheequivalentinWindows).
AnHTTPServerobjectrequiresasubclassof BaseHTTPServer.BaseHTTPRequestHandler . Thebaseclass
doesanumberofstandardoperationsrelatedtohandlingwebservicerequests.
Generally,you’llneedtooverridejustafewmethods. Sincemostbrowserswillonlysend‘ GET’or‘POST’
requests,youonlyneedtoprovide do_GET()anddo_POST()methods.
classYourRequestHandler (BaseHTTPRequestHandler )
do_GET(self)
Handlea‘ GET’requestfromabrowser. Therequestisavailableinanumberofattributevalues.
do_POST(self)
Handlea‘ POST’requestfromabrowser. Therequestisavailableinanumberofattributevalues.
Thisclasshasanumberofinstancevariableswhichcharacterizethespeciﬁcrequestthatiscurrentlybeing
handled.
client_address
AninternetaddressasusedbyPython. Thisisa2-tuple: (hostaddress,portnumber).
command
Thecommandintherequest. Thiswillusuallybe‘ GET’or‘POST’.
path
Therequestedpath.
request_version
The protocol version string sent by the browser. Generally it will be 'HTTP/1.0'or
'HTTP/1.1'.
headers
This is a collection of headers, usually an instance of mimetools.Message . This is a
mapping-like class that gives you access to the individual headers in the request. The
header"cookie",forinstance,willhavethecookiesbeingsentbackbythebrowser. You
willneedtodecodethevalueofthecookie,usuallyusingthe Cookiemodule.
38.4. Writing Web Applications 471
Building Skills in Python, Release 2.6.5
rfile
If there is an input stream, this is a ﬁle-like object that can read that stream. Do
not read this without providing a speciﬁc size to read. Generally, you want to get
‘headers['Content-Length'] ’andreadthisnumberofbytes. Ifyoudonotspecifythe
numberofbytestoread,andthereisnosupplementaldata,yourprogramwillwaitfordata
ontheunderlyingsocket. Datawhichwillneverappear.
wfile
Thisistheresponsesocket,whichthebrowserisreading. Theresponseprotocolrequires
thatitbeusedasfollows:
1.Use‘self.send_response( number ) ’or‘self.send_response( number, text ) ’.
Usuallyyousimplysend200.
2.Use ‘self.send_header( header, value ) ’ to send speciﬁc headers, like
"Content-type" or"Content-length" . The"Set-cookie" header provides cookie
valuestothebrowser. The "Location"headerisusedfora30xredirectresponse.
3.Use ‘self.end_headers() ’ to ﬁnish sending headers and start sending the resulting
page.
4.Then(andonlythen)youcanuse self.wfile.write() tosendthepagecontent.
5.Use‘self.wfile.close() ’ifthisisaHTTP/1.0connection.
Yourclassshouldprovidesomeclasslevelvalueswhichareprovidedtothebrowser.
server_version
A stringto identifyyourserverand version. This string canhavemultipleclauses, each
separated by whitespace. Each clause is of the form product/version. The default is
'BaseHTTP/0.3' .
error_message_format
Thisisthewebpagetosendbackbythesend_errormethod. Thesend_errormethoduses
theerrorcodetocreateadictionarywiththreekeys: "code","message"and"explain".
The"code"item in the dictionary has the numeric error code. The "message"item is
theshortmessagefromthe self.responses dictionary. The“explain”methodisthelong
messagefromthe self.responses dictionary.Sinceadictionaryisprovided,theformatting
stringforhiserrormessagemustincludedictionary-orientedconversionstrings: %(code)d,
%(message)sand%(explain)s.
protocol_version
This is the HTTP version being used. This defaults to 'HTTP/1.0'. If you set this to
'HTTP/1.1',thenyoushouldalsousethe "Content-Length" headertoprovidethebrowser
withtheprecisesizeofthepagebeingsent.
responses
Adictionary,keyedbystatuscode. Eachentryisatwo-tuplewithashortmessageanda
longexplanation. Thesetwovaluesbecomethemessageandtheexplaininanerrormessage.
Themessageforstatuscode200,forexample,is 'OK'.Theexplanationissomewhatlonger.
Thisclasshasanumberofmethodswhichyou’llwanttousefromwithinyour do_GET()anddo_POST()
methods.
send_error (code, [message] )
Send an error response. By default, this is a complete, small page that shows the code,
message and explanation. If you do not provide a message, the short message from the
‘self.responses[code] ’mappingwillbeused.
472 Chapter 38. Architecture: Clients, Servers, the Internet and the World Wide Web
Building Skills in Python, Release 2.6.5
send_response (code, [message] )
Sendsaresponseinpieces. Ifyoudonotprovidea message,theshortmessagefromthe
‘self.responses[code] ’mappingwillbeused.
This method is the ﬁrst step in sending a response. This must be followed
byself.send_header() if any headers are present. It must be followed by
self.end_headers() . Thenthepagecontentcanbesent.
send_header (name, value )
SendoneHTTPheaderanditsvalue.Usethistosendspeciﬁcheaders,like "Content-type"
or"Content-length" . Ifyouaredoingaredirect,you’llneedtoincludethe "Location"
header.
end_headers ()
Finishsendingtheheaders;getreadytosendthepagecontent. Generally,thisisfollowed
bywritingto self.wfile.
log_request (code, [size] )
Usesself.log_message() towriteanentryintothelogﬁleforanormalresponse. Thisis
doneautomaticallyby send_headers() .
log_error (format, args... )
Usesself.log_message() towriteanentryintothelogﬁleforanerrorresponse. Thisis
doneautomaticallyby send_error() .
log_message (format, args... )
Writesanentryintothelogﬁle. Youmightwanttooverridethisifyouwantadiﬀerent
formatfortheerrorlog,oryouwantittogotoadiﬀerentdestinationthan sys.stderr.
Example. ThefollowingexampleshowstheskeletonforasimpleHTTPserver. Thissevermerelydisplays
the‘GET’or‘POST’requestthatitreceives. APython-basedwebservercan’teverbefastenoughtoreplace
Apache. However,forsomeapplications,youmightﬁnditconvenienttodevelopasmall,simpleapplication
whichhandlesHTTP.
webserver.py
importBaseHTTPServer
classMyHandler ( BaseHTTPServer .BaseHTTPRequestHandler ):
server_version ="MyHandler/1.1 "
defdo_GET(self):
self.log_message( "Command: %sPath:%sHeaders: %r"
%(self.command, self.path,self.headers.items() ) )
self.dumpReq( None)
defdo_POST(self):
self.log_message( "Command: %sPath:%sHeaders: %r"
%(self.command, self.path,self.headers.items() ) )
ifself.headers.has_key( 'content-length '):
length=int(self.headers[ 'content-length '] )
self.dumpReq( self.rfile.read( length ) )
else:
self.dumpReq( None)
defdumpReq(self, formInput =None):
response ="<html><head></head><body> "
response +="<p>HTTP Request</p> "
response +="<p>self.command= <tt> %s</tt></p> "%(self.command )
response +="<p>self.path= <tt> %s</tt></p> "%(self.path )
38.4. Writing Web Applications 473
Building Skills in Python, Release 2.6.5
response +="</body></html> "
self.sendPage( "text/html ", response )
defsendPage (self,type, body ):
self.send_response( 200)
self.send_header( "Content-type ",type)
self.send_header( "Content-length ",str(len(body)) )
self.end_headers()
self.wfile.write( body )
defhttpd(handler_class =MyHandler, server_address =('',8008), ):
srvr=BaseHTTPServer .HTTPServer(server_address, handler_class)
srvr.serve_forever()
if__name__ =="__main__ ":
httpd( )
1.Youmustcreateasubclassof BaseHTTPServer.BaseHTTPRequestHandler . Sincemostbrowserswill
onlysend‘ GET’or‘POST’requests,weonlyprovide do_GET()anddo_POST()methods. Additionally,
weprovideavalueof server_version whichwillbesentbacktothebrowser.
2.TheHTTPprotocolallowsourapplicationtoputtheinputtoaformeitherintheURLorinaseparate
datastream. Generally,aformswilluseaPOSTrequest;thedataisavailable.
3.Thisisthestartofadebuggingroutinethatdumpsthecompleterequest. Thisishandyforlearning
howHTTPworks.
4.This shows the proper sequence for sending a simple page back to a browser. Thi s technique will
workforﬁlesofalltypes,includingimages. Thismethoddoesn’thandlecomplexheaders,particularly
cookies,verywell.
5.Thiscreatestheserver, srvr,asaninstanceof BaseHTTPServer.HTTPServer whichuses MyHandler
toprocesseachrequest.
38.4.3 Using WSGI-based Web Servers
Fundamentally,anwebserverisanapplicationthatlistensforandhandlesrequestssentusingtheHTTP
protocol. Thehandlerisrequiredtoformulateasuitableresponse.
PythonEnhanceProposal PEP333deﬁnesastandardapproachtohandlingwebrequests,calledtheWeb
Services Gateway Interface, WSGI. This standard allows us to build large, sophisticated web sites as a
compositionofmanysmallercomponents.
It’sbesttothinkofWSGIasasystemofpipesforroutingrequestsandresponses.
Tomakethiscompositionwork,eachWSGIapplicationmustadheretoastandardizeddeﬁnition.
•AWSGIapplicationisafunctionoracallableobject.
•Therequestisgiventotheapplicationintheformofadictionary.
•Theresponsefromtheapplicationisbrokenintotwoparts: thestatusplusheadersareseparatedfrom
theresponsebody. AWSGIapplicationisgivenafunctionthatismustusetosendthestatusand
headers. ThereturnvalueoftheWSGIapplicationisthebodyoftheresponse.
AWSGIapplicationmusthavethefollowingsignature.
wsgi_app (environ, start_response )
Parameters
474 Chapter 38. Architecture: Clients, Servers, the Internet and the World Wide Web
Building Skills in Python, Release 2.6.5
• environ–AdictionarywiththeentireHTTPrequestenvironment. Thisincludes
theOSenvironment,theHTTPheaders,anumberofitemsthatdeﬁnetherequest,
plussomeadditioanlWSGI-speciﬁcitems.
• start_response –Afunctionthatisusedtostartsendingthestatusandheaders.
start_response (status, header_list )
Thestart_response() functioniswhatyourapplicationusestostartsendinganHTTPresponse.
Thisincludesthestatusandthevariousheaders.
Parameters
• status–Thestatusnumber
• header_list–Alistof2-tuples. Eachitemhasaheadernameandvalue.
AllWSGI-compatibleapplicationsmustdotwothings.Theymustseetoitthatthe start_response()
functioniscalled. Theymustreturnalistofstrings.
WhenwethinkofaWSGIapplicationasapipe,weseethatanapplicationwillaccomplishtheabove
requirementsoneoftwoways.
•SomeWSGIapplicationswillcallanotherWSGIapplication,andreturnthatapplication’slistof
strings.
•Other WSGI applications will call the start_response() function and return a list of strings
thatformthebodyoftheresponse.
TheWSGIenvironmentincludesthefollowingitemsthatdeﬁnetherequest.
REQUEST_METHOD TheHTTPrequestmethod,generally "GET"or"POST".
SCRIPT_NAME TheinitialportionoftherequestURLpath. Thismaybeempty,depending
onthestructureofyourapplications.
PATH_INFO TheremainderoftherequestURLpath,designatingtheresourcewithinyour
application.
QUERY_STRING TheportionoftherequestURLthatfollowsthe“?”.
CONTENT_TYPE The value of any Content-Type header in the HTTP request. If an
uploadisbeingdone,thismayhaveavalue.
CONTENT_LENGTH Thevalueofany Content-Length headerintheHTTPrequest. If
anuploadisbeingdone,thismayhaveavalue.
SERVER_NAME
SERVER_PORT Thehostnameandportnumber
SERVER_PROTOCOL Theprotocoltheclientused;either "HTTP/1.0"or"HTTP/1.1".
TheWSGIenvironmentincludesthefollowingWSGI-speciﬁcitems.
wsgi.version Thetuple(1,0),representingWSGIversion1.0.
wsgi.url_scheme The“scheme”portionoftheURL;either "http"or"https".
wsgi.inputAninputﬁlefromwhichtheHTTPrequestbodycanberead. Generally,thebody
ofaPOSTrequestwillcontaintheinputﬁeldsfromtheassociatedHTMLform.
wsgi.errorsAnoutputﬁletowhicherroroutputcanbewritten. Thisgenerallythemainlog
ﬁlefortheserver.
wsgi.multithread Trueif the application object may be simultaneously invoked by another
threadinthesameprocess.
38.4. Writing Web Applications 475
Building Skills in Python, Release 2.6.5
Anapplicationmightusethisinformationtodeterminehowtomanagedatabaseconnections
orotherresources.
wsgi.multiprocess Trueifanequivalentapplicationobjectmaybesimultaneouslyinvokedby
anotherprocess.
wsgi.run_once Trueiftheserverorgatewayexpectsthattheapplicationwillonlybeinvoked
oncebythecontainingprocess;i.e.,isthisaone-shotCGI-stylescript.
TherearenumerousWSGI-basedapplicationsandframeworks. We’lllookatsomecomponentsbasedon
thewsgirefimplementation. Agoodalternativeisthewerkzeugimplementation. Formoreinformation,
seehttp://werkzeug.pocoo.org/ .
Here’sanexampleofaWSGIapplicationthatdumpsit’senvironmentastheresponsepage.
importcgi
defdump_all_app (environ, start_response):
status='200 OK'
headers =[('Content-type ','text/html ')]
start_response(status, headers)
env_dump =[
"<tt>%s=%r</tt><br/> "%(k,cgi.escape(str(environ[k]))) forkinenviron
]
return[
"<html>",
"<head><title>dump_all</title></head> ",
"<body><p> "]+env_dump +["</p></body> ",
"</html>"
]
1.Weimportthe cgilibrarytomakeuseofthe cgi.escape() function. Thisfunctionreplaces "<"with
‘"&lt;"’,">"with‘"&gt;"’,and"&"with‘"&amp;"’toallowthevalueofanenvironmentvalueto
containHTML.
2.WedeﬁneourapplicationaccordingtotheWSGIstandard. Weacceptanenvironmentandafunction
thatwillstartourresponse.
3.We deﬁne a simple status and the single mandatory header, which we send via the supplied
start_response function.
4.Wethenreturnasequenceofstringsthatisthebodyofpage.
WSGIServer . SeparatefromtheWSGIapplicationsistheWSGIserver. Thisisbuiltaroundasingle
applicationthatwillrespondtorequestsonaspeciﬁcport. Thisexampleusesthe wsgirefimplementation.
fromwsgiref.simple_server importmake_server
httpd=make_server( '',8008, dump_all_app)
print"Serving HTTP on port 8008... "
# Respond to requests until process is killed
httpd.serve_forever()
CompositeApplications . ThebeautyofWSGIisthatitallowstheconstructionofCompositeApplica-
tions.
Therearetwogeneraldesignpatterns.
•DispatchingorRouting . Inthiscase, aWSGIapplicationselectsamongotherapplicationsand
forwardstherequesttooneormoreotherapplications.
476 Chapter 38. Architecture: Clients, Servers, the Internet and the World Wide Web
Building Skills in Python, Release 2.6.5
AURLparsingapplication,forexample,canuse wsgiref.util.shift_path_info() aspartoftrans-
formingaURLintoanapplication.
•Middleware or Pipe . In this case, a WSGI application enriches the environment and passes the
requesttoanotherapplication.
Forexample,authorizationandauthenticationisakindofpipe.Theauthorizationapplicationforwards
validrequestswithuserinformationorrepondswithanerror.
Eachindividual aspect of a complex webapplication can be separated intoa distinct WSGI application.
Thisindividualaspectsincludethingslikethefollowing.
•Authentication. An fork-styleapplicationcan handletheHTTP_Authenticationheader. Ifthe re-
questlacksaproperheader, thisapplicationcanrespondwithanstatus401. Itcandelegatebasic
authenticationtooneapplicationanddigestauthenticationtoanotherapplication.
Oneauthenticated,anapplicationcanenrichtheenvironmentwiththeauthenticateduserinformation.
Perhapsfetchinganysavedsessioninformation.
•Authorization. A pipeline application can determine if the user is actually allowed to perform the
requestedfunction. Iftheuserisnotauthorized,itcanproducearedirectiontoaloginpage. Ifthe
userisauthorized,itcanredirecttoanotherapplicationthatdoes“real”work.
•Caching. ApipelineapplicationcancheckforagivenURLandreturnapreviousresultforknown
URL’sthathaven’texpired. Fornew,unknownURL’s(orexpiredURL’s)therequestcanbepassed
ontoapplicationthatdoesthe“real”work.
•FormDataParsing. Apipelineapplicationcanparsetheformdataandenrichtheenvironmentwith
datafromthevariousformﬁelds. Afterparsing,anotherapplicationcanbecalledtoprocesstheform
input.
•UploadStoring. Apipelineapplicationcancapturetheuploadedﬁleandsaveitinanuploaddirectory
forfurtherprocessing. Itcanenrichtheenvironmentwithinformationabouttheuploadedﬁle. After
saving,anotherapplicationcanbecalledtoprocesstheuploadedﬁle.
38.5 Sessions and State
TheHTTPprotocolisdeﬁnedasbeingstateless. Eachrequest-replytransactionisindependent,withno
memoryofanypriortransaction. Ifawebserverisonlyprovidingaccesstostaticpagesofcontent, this
statelesstransactionispreciselywhatweexpect.
However,ifwewantaricher,moresophisticated,dataprocessingapplication,weexpecttheapplicationto
bestateful. Indeed, oneoftheprimaryreasonsforusingcomputersistostoreandretrieveinformation.
Storedinformationrepresentsthestateofadatabaseorﬁle.
Also,anindividualtransactionofteninvolvestheserverretainingstateasweenterdata,correctthatdata,
andﬁnallycommitthechangetothedatabase.
Thecoreissueisthis. GiventhestatelessHTTPtransactionsandnumerousconcurrentclients,howdowe
distinguishthesequenceofrequestsforasingleuiser?
Cookies. TheHTTP/1.1standardintroducedtheconceptofa cookie. Acookieisasmallpacketofdata
thatissenttoabrowseraspartofaresponseheader. Thebrowsermustthenincludethecookieaspartof
eachsubsequentrequest. Thispermitsawebservertorecognizeaspeciﬁcbrowsersession,andassurethat
theuser’sinteractionsarestateful.
BymakingtheHTTPsessionstateful,awebapplicationcanrespondinmoremeaningfulways.
Sessions. To create stateful web applications, we need to introduce the concept of a session. The web
applicationmustdothefollowingkindsofthings.
38.5. Sessions and State 477
Building Skills in Python, Release 2.6.5
1.NewSession? Iftherequesthasnocookie, itrepresentsanewsession. Createadistinctsession
object,putthatobject’suniquekeyintoacookieandputthecookieintotheresponseheader.
2.ExistingSession? Iftherequesthasacookie,itrepresentsanexistingsession. Locatethedistinct
sessionobjectthatmatchesthecookie.
Alldatathatmustbereﬂectedbacktotheusermustbekeptinanobjectthatisuniquetoeachsession.
Clearly,thesesessionobjectswillaccumulateasawebserverruns.
Forspeedofaccess,thesessionsarekeptinasimpledictionary. Periodically,thewebservermustexamine
thesessionsanddiscardanythatareolderthansomereasonablethreshold. Forprivateinformation(like
ﬁnancialormedicalrecords)20minutesisdeemedoldenough. Forotherthings,sessionobjectsmaylast
forseveralhours.
38.6 Handling Form Inputs
While the full extent of web applications is beyond the scope of this book, we can look at the essential
ingredientsinprocessingforminputinawebserver.
Here’sanexampleofasimpleform. ThisformwillsendaPOSTrequesttothepath .whentheuserclicks
theConvertbutton.
Theinputwillincludethreename-valuepairswithkeysof fahrenheit(fromthe <input type="text"> ),
celsius(fromtheother <input>tag)and action(fromthe <button type="submit"> ).
<html><head><title>Conversion </title> <head>
<body><formaction="."method="POST">
<label>Fahrenheit </label> <inputtype="text"name="fahrenheit" />
<br/>
<label>Celsius</label> <inputtype="text"name="celsius" />
<br/>
<button type="submit" name="action" value="submit" >Convert</button>
</form>
</body>
</html>
BrowserProcessing . Givenaform,abrowserdisplaystheelements. Itthenallowstheusertointeract
withtheform.
Whentheuserclickssubmit,thecontentsfortheformaretransformedintoaHTTPrequest.
The ‘method’ attribute of the form determines what request method is used and how the form’s data is
packagedfortransmissiontothewebserver.
•Formethod="GET" ,therequestisa‘ GET’,andthecontentsoftheformareURL-encodedandputinto
theURLaftera‘ ?’.
Therequestmightlooklikethis.
http://localhost:8008/?fahrenheit=&celsius=12.0&action=submit
AWSGIapplicationwillﬁndthisdatain‘ environ["QUERY_STRING"] ’.
Theeasiestwaytohandlethisdataistouse cgi.parse()inthecgimodule.
data=cgi.parse( environ[ "QUERY_STRING "], environ )
478 Chapter 38. Architecture: Clients, Servers, the Internet and the World Wide Web
Building Skills in Python, Release 2.6.5
•Formethod="POST" ,therequestisa‘ POST’,andthencontentsoftheformareURL-encodedandput
intotherequestasastreamofdata.
AWSGIapplicationwillﬁndthisdataintheﬁle-likeobject‘ environ["wsgi.input"] ’.Thisobjecthas
thedataassociatedwiththerequest. Thenumberofbytesisgivenby‘ environ["CONTENT_LENGTH"] ’.
Theeasiestwaytohandlethisdataistouse cgi.parse()inthecgimodule.
data=cgi.parse( environ[ "wsgi.input "], environ )
ApplicationProcessing . Generally,thebestdesignpatternistobuildapplicationsthathavethefollowing
outline. Thisisn’tcomplete,butitisausefulstartingpoint. We’lladdtothisbelow.
1.Whenthe user clicksa URL, the browsersends a ‘ GET’ request. The application responds with an
emptyform.
2.Theuserﬁllsintheform,clicksthesubmitbutton. Thebrowsersendsa‘ POST’request,oftentothe
sameURL.Theapplicationvalidatestheforminput. Iftheinputisvalid,theapplicationresponds
withtheresultingpage. Iftheinputisnotvalid,theapplicationrespondswiththeformandanyerror
messages.
Theform’sdataisparsedwith cgi.parse().
Here’sanexampleWSGIapplicationthatshowsthePOSTandGETprocessing.
form="""\
<html><head><title>title</title><head>
<body>
<p>%(messages)s </p>
<form action= "."method="GET">
<label>label1</label> <input type= "text"name="field1"value="%(field1)s "/>
<br/>
<label>label2</label> <input type= "text"name="field2"value="%(field2)s "/>
<br/>
<button type= "submit"name="action"value="submit">Convert</button>
</form>
</body>
</html>
"""
defconversion ( environ, start_response ):
# For a GET, display the empty form.
ifenviron[ 'REQUEST_METHOD ']=="GET":
status='200 OK'# HTTP Status
headers =[('Content-type ','text/html ')]# HTTP Headers
start_response(status, headers)
return[ form%{'field1':'','field2':'','messages ':''} ]
# For a POST, parse the input, validate it, and try to process it.
else:
data=cgi.parse( environ[ 'wsgi.input '], environ )
try:
if'field1'indata:
field1=data.get('field1',[""])[0]
if'field2'indata:
field2=data.get('celsius',[""])[0]
# Validate...
# Do processing...
status='200 OK'# HTTP Status
headers =[('Content-type ','text/html ')]# HTTP Headers
38.6. Handling Form Inputs 479
Building Skills in Python, Release 2.6.5
start_response(status, headers)
return[ form%{'field1': field1, 'field2': field2, 'messages ':''} ]
exceptException , e:
status='400 ERROR '# HTTP Status
headers =[('Content-type ','text/html ')]# HTTP Headers
start_response(status, headers, exc_info =e)
return[ form%{'field1':'','field2':'','messages ':repr(data) } ]
ThePostandBackProblem . Notethatifyousubmittheformasa‘ POST’andclickyourbrowser’s
‘back’button,afterlookingatthenextpage,theformgetssubmittedagain. Yourbrowserwillconﬁrmthat
youwanttosubmitformdataagain.
Thisbehaviorisusuallypreventedbyusingthe“Redirect-after-Post”(alsocalledthe“Post-Redirect-Get”)
designpattern. Theresponsetoapageprocessedwith‘ POST’,isastatus301(Redirect)response. This
responsemustincludeaheaderwithalabelof‘ Location’andavaluethatisaURLtowhichthebrowser
willaddressa‘ GET’request. Thismakesthebackbuttonbehavenicely.
Thecompleteoverview,then,isthefollowing.
1.WhentheuserclicksaURL,thebrowsersendsa‘ GET’request.
•If there’s no cookie, the application creates a new, unique sesions and builds the appropriate
cookie.
•Ifthere’sacookie,theapplicationretrievesthesessionandanysavedstateinthatsession. The
savedstatemayincludeerrormessages, statusmessages, andpreviouslyenteredvaluesonthe
form.
Theapplicationrespondswiththeform,includinganymessages.
2.Theuserﬁllsintheform,clicksthesubmitbutton. Thebrowsersendsa‘ POST’request,oftentothe
sameURL.
•Ifthere’snocookie,somethinghasgoneawry. Thisishandledlikethe‘ GET’request–thecookie
mustbeaddedandtheformsent.
•Thereshouldbeacookiewithsessioninformationthatprovidesanyneededcontext.
Theapplicationvalidatestheforminput.
Iftheinputisvalid,theapplicationdoestheexpectedprocessing. Thesessionisupdatedwithcom-
pletionmessages. Theapplicationsendsa‘ "301 REDIRECT" ’response. Thiscausesthebrowsertodo
a‘GET’tothegivenlocation.
Iftheinputisnotvalid,theapplicationrespondswiththeformandanyerrormessages.
Inmorecomplexapplications,theremaybemultiplepages,ormultiple-steptransactions. Theremayalso
bea“conﬁrm”pageattheendwhichsummarizesthetransactionbeforetherealworkisdone. Thisrequires
accumulatingconsiderableinformationinthesession.
38.7 Web Services
WhenwelookedatHTTPin The W orld Wide W eb and the HTTP protocol ,wewereinterestedinitsoriginal
usecaseofservingwebpagesforpeople. WecanbuildonHTTP,creatinganinterfacebetweensoftware
components,somethingcalleda web service. Awebserviceleveragestheessentialrequest-replynatureof
HTTP,buttakestheelaboratehuman-centricHTMLwebpageoutoftheresponse. Insteadofsendingback
somethingforpeopletoread,webservicessendjustthefactswithoutasophisticatedpresentation.
480 Chapter 38. Architecture: Clients, Servers, the Internet and the World Wide Web
Building Skills in Python, Release 2.6.5
Webservicesallowustohaveamulti-serverarchitecture. Acentralwebserverprovidesinteractionwith
people. Whenaperson’sbrowsermakesarequest,thiscentralwebservercanmakewebservicerequests
ofotherserverstogathertheinformation. Aftergatheringtheinformation,thecentralserveraggregatesit
andbuildstheﬁnalHTML-basedpresentation,whichisthereplysenttothehumanuser.
WebservicesareanadaptationofHTTP;see The W orld Wide W eb and the HTTP protocol forasummary.
Webservicesrelyonanumberofothertechnologies. Thereareseveralcompetingalternatives, andwe’ll
lookatwebservicesingeneralbeforelookingataspeciﬁctechnique.
38.7.1 Web Services Overview
Thereareanumberofwaysofapproachingtheproblemofcoordinatingworkbetweenclientsandservers.
Allofthesealternativeshavetheiradvantagesanddisadvantages.
•XML-RPC.TheXML-RPCprotcolusesXMLnotationtomakearemoteprocedurecall(RPC).It
worksbysendinganHTTPrequestthatcontainsthenameoftheproceduretocallandthearguments
tothatprocedure. ThisprotocolusesHTTP“POST”requeststoprovidetheXMLdocument.
•SOAP.TherearetwovariationsontheSimpleObjectAccessProtocol(SOAP):remoteprocedure
callvariationanddocument. TheRPCvariantisbasicallythenextgenerationofXML-RPC,where
an XML document encodes the name of the procedure and the arguments. The document variant
merelysendsanXMLdocument; thedocumentprovidesalltheinformationrequiredbytheserver.
ThisprotocolissupportedbyadditionalstandardslikeWebServicesDeﬁnitionLanguage(WSDL).
•REST.TheRepresentationalStateTransfer(REST)protcolusestheHTTPoperations(‘ POST’,‘GET’,
‘PUT’,‘DELETE’)andUniformResourceIdentiﬁers(URI)tomanipulateremoteobjects. Thisprotocol
isperhapsthesimplestofthewebservicesprotocols;forthisreasonitisverypopular.
We’llfocusonRESTbecauseitcanbedonelargelyusing urllib2features(see W riting W eb Clients: The
url lib2 Module )andtheJSONlibrary.
RESTfulWebServices . TheessenceofRESTisthatweareaccessingaresourcethatresidesonanother,
remotecomputer. Inordertodothis,wemusttransferarepresentationofthatobject’sstate.
Wehave,therefore,threeseparateissuesthatwehavetoaddress.
1.Representinganobject’sstate. WecanuseXMLforthis. ThereareothernotationsincludingJSON
andYAMLwhicharealsousedtorepresentanobject’sstate. We’llfocusonJSONbecauseit’swidely
usedandverysimple.
Thisrepresentationissuehappensonbothclientandserversideofthetransaction. Whentheclient
wantstocreateorupdatearesource,itmustrepresenttheobject. Whentheserverwantstoprovide
aresource,itmustrepresenttheobject,also.
2.Makingtheclientrequest. Thismeansmarshallingthearguments,makingtherequest,andunmar-
shallingtheresponse. SinceRESTisbasedonHTTP,thisisakindofHTTPclientaccessusingone
ofthefourmethods: ‘ GET’,‘POST’,‘PUT’,‘DELETE’.
3.Servingrequests. This means unmarshalling arguments, doingsomething useful, and marshalling a
response. SincethisisbasedonHTTP,thisisakindofHTTPserver.
A‘GET’request, generally, doesn’thaveanyarguments; itidentiﬁesaresource, whichismarshalled
andreturned.
A‘POST’requestcreatesanewresource.TheassociateddataisanURL-encodedversionoftheresources
tocreate. Oftenthecreatedresourceismarshalledandreturnedasakindconﬁrmation.
A‘PUT’requestwillreplacearesource. TheassociateddataisanURL-encodedversionoftheresources
toreplaceorupdatetheexistingresource.
38.7. Web Services 481
Building Skills in Python, Release 2.6.5
A‘DELETE’requestwillremovearesource. Generally,thisdoesn’thaveanyarguments;itidentiﬁesa
resource,whichisremoved.
38.7.2 Web Services Server
Let’simaginethatwe’vebuiltaanextremelygoodsimulationofaroulettewheel. We’dliketopackagethis
asawebservicesothatmanypeoplecansharethisintheirsimulationsofRoulette.
Insomecases,awebserviceisbuiltintoamorecompletewebapplicationframework. Oftentheserverwill
haveahumaninterfaceaswellasawebserviceinterface. ThehumaninterfacewilluseHTML.Theweb
serviceinterfacewilluseJSON.
We’llsimplifythingsslightly,andcreateafamilyofWSGIapplicationstorouterequests,handletheJSON
repliesandhandleHTMLreplies.
TheResource . Theresourcewe’reservingisaroulettewheel. WecreatedthisPythonmodulethatdeﬁnes
thewheel. Eachspincreatesadictionarythatshowsanumberofbetswhicharewonbythisspin.
Thisisaseparatemodulethatincludesjusttheclassdeﬁnitionthatwe’llbeserving.
wheel.py
importrandom
classWheel(object):
redNumbers =set( [1,3,5,7,9,12,14,16,18,19,21,23,25,27,30,32,34,36] )
domain=range(1,37)+["0","00"]
def__init__ (self):
self.rng=random.Random()
self.last_spin =None
self.count=0
defspin(self):
n=random.choice( Wheel .domain )
ifnin("0","00"):
self.last_spin ={
"number": n,
"color":"green",
"even":False,
"high":None,
"twelve":None,
"column":None,
}
else:
color="red"ifninWheel.redNumbers else"black"
self.last_spin ={
"number": n,
"color": color,
"even": n%2==0,
"high": n>=18,
"twelve": n//12,
"column": n%3,
}
self.count+=1
returnself.last_spin
482 Chapter 38. Architecture: Clients, Servers, the Internet and the World Wide Web
Building Skills in Python, Release 2.6.5
TheWSGIApplications . We’lldeﬁneseveralWSGIApplicationsthatwillcreateacomprehensivewheel
webservice.
This ﬁrst example is the top-level “routing” application that parses the URL and delegates the work to
anotherapplication. Thisisnotaveryﬂexibledesign. Therearenumerousbetterexamplesofveryﬂexible
routingusingregularexpressionmatchingandothertechniques.
wheelservice.py , part 1
importwsgiref.util
importcgi
importsys
importtraceback
importjson
importwheel
# A global object so we can maintain state.
theWheel =wheel.Wheel()
defrouting( environ, start_response ):
"""Route based on top-level name of URL."""
try:
top_name =wsgiref.util.shift_path_info( environ )
iftop_name =="html":
returnperson( environ, start_response )
eliftop_name =="json":
returnservice( environ, start_response )
else:
start_response( '404 NOT FOUND ', [("content-type ","text/plain ")] )
return["Resource not found. "]
exceptException , e:
environ[ 'wsgi.errors '].write("Exception %r"%e )
traceback .print_exc( file=environ[ 'wsgi.errors '] )
status="500 ERROR "
response_headers =[("content-type ","text/plain ")]
start_response(status, response_headers, sys .exc_info())
return["Application Problems. ",repr(e) ]
1.Wedeﬁnesomeglobalstateinformationfortheseapplicationstoshare. Inthiscase,alltheapplication
sharetheWheel.
2.Therouting()functionisaWSGIapplication,andhastheproperarguments.
3.Weusewsgiref.util.shift_path_info() toparseouttheﬁrstleveloftheURLpath,andusethis
todistiguishbetweentheHTML-orientedhumaninterfaceandtheJSON-orientedwebinterface.
4.Incaseofanexception,weprintthetracebacktothelog,andreturnanerrorpage.
Acommonextensiontothisroutingistorespondtothe‘ /favicon.ico ’requestbyprovidingagraphic
imageﬁlethatcanbedisplayedintheURLboxofthebrowser.
Thissecondexampleisthenext-level“person”and“service”applications. Thesedotherealworkofthe
overallservice. Theyeitherrespondtoaperson(usingHTML)ortoawebservicesclient(usingJSON).
38.7. Web Services 483
Building Skills in Python, Release 2.6.5
wheelservice.py , part 2
defperson( environ, start_response, exc_info =None):
"""Print some information about the stateful wheel."""
globaltheWheel
status='200 OK'
headers =[('Content-type ','text/html ')]
start_response(status, headers, exc_info)
return[
"<html>",
"<head><title>Wheel Service</title></head> ",
"<body>",
"<p>Wheel service is spinning.</p> "
"<p>Served %dspins.</p> "%(theWheel .count,),
"</body>",
"</html>"
]
defservice( environ, start_response ):
"""Update the stateful wheel."""
globaltheWheel
spin=theWheel .spin()
status='200 OK'
headers =[("content-type ","text/plain ")]
start_response( status, headers )
return[ json.dumps(spin) ]
1.Theperson()functionisaWSGIapplication,andhastheproperarguments.
2.Theperson()functionreferstotheglobalstateinformation, theWheel. ItcreatesanHTMLpage
withsomestatusinformation.
3.Theservice()functionisaWSGIapplication,andhastheproperarguments.
4.Theservice()functionreferstotheglobalstateinformation, theWheel. Itusesjsontoformulatea
replyinJSONnotation.
TheWSGIService . TheWSGIservicesimplywrapsourcompositeapplication routing()andservesit.
wheelservice.py , part 3
fromwsgiref.simple_server importmake_server
httpd=make_server( '',8008, routing)
print"Serving HTTP on port 8008... "
# Respond to requests until process is killed
httpd.serve_forever()
38.7.3 Web Services Client
Let’simaginethatacolleaguehasbuiltawebservicewhichprovidesuswithanextremelygoodsimulation
ofaroulettewheel. Ourcolleaguehasprovideduswiththefollowingsummaryofthiswebservice.
484 Chapter 38. Architecture: Clients, Servers, the Internet and the World Wide Web
Building Skills in Python, Release 2.6.5
host‘10.0.1.5’. While IP address numbers are the lowest-common denominator in naming,
somepeoplewillcreateDomainNameServers(DNS)whichprovideinterestingnamesin-
steadofnumericaddresses.
Ifyouaretestingonasinglecomputer,youwilluse‘ localhost’.
portnumber ‘8008’. WhilethebasicHTTPserviceisdeﬁnedtorunonport80,youmayhave
otherwebserviceswhich,forsecurityreasons,aren’tavailableonport80. Portnumbers
from1024andupmaybeallocatedforotherpurposes,soportnumbersareoftenchanged
aspartoftheconﬁgurationofaprogram.
path‘/json/’forthebasicwebservicesrequest. Thisisn’tthebestdeﬁnitionforthisresource,
sinceitcan’teasilybeexpanded.
method‘GET’.
responseJSON-encodeddictionarywithattributesofthespin.
ThisgivesusaﬁnalURLof‘ http://localhost:8008/json/ ’foraccesstothisservice.
Tocreateawebservicesclient,wecanusethe urllib2moduletoaccessthisservice.
wheelclient.py
importurllib2
importjson
defget_a_spin ( ):
result=urllib2.urlopen( "http://localhost:8008/json/ ")
assertresult.code==200
assertresult.msg=="OK"
# print result.headers # to see information about the service
data=result.read()
returnjson.loads( data )
spin=get_a_spin()
printspin
1.Weimportthe urllib2library,whichallowsustodoHTTP‘ GET’and‘POST’aspartofaRESTful
webservice.
2.Weimportthe jsonlibrary,whichwe’llusetodecodetheresponsefromthewebservice.
3.Wedeﬁneafunctionwhichwillusethewebservicetogetaspinofaroulettewheel. Thisfunction
usesurllib2.urlopen() tomakea‘ GET’requesttothegivenURL.Theserverwillrespondwitha
JSON-encodedresponse.
4.Weloaduse json.loads() toparsetheresponseandbuildadictionary.
38.8 Client-Server Exercises
38.8.1 Create a Customized FTP Client
Writeasimple,special-purposeFTPclientthatestablishesaconnectionwithanFTPserver,getsadirectory
andendstheconnection. TheFTPdirectorycommandsare“DIR”and“LS”.Theresponsesmaybelong
andcomplex,sothisprogrammustbepreparedtoreadmanylinesofaresponse.
38.8. Client-Server Exercises 485
Building Skills in Python, Release 2.6.5
Formoreinformation, RFC959hascompleteinformationonallofthecommandsanFTPservershould
handle. Generally,theDIRorLScommand,the‘ GET’and‘PUT’commandsaresuﬀicienttodosimpleFTP
transfers.
Yourclientwillneedtoopenasocketonport21. Itwillsendthecommandline,andthenreadandprint
allofthereplyinformation. Inmanycases,youwillneedtoprovideadditionalheaderﬁeldsinordertoget
asatisfactoryresponsefromawebserver.
Totestthis,you’llneedtoeitheractivateanFTPserveronyourcomputer,orlocateanothercomputerthat
oﬀersFTPservices.
38.8.2 Desktop Web Application
Youcaneasilywriteadesktopapplicationthatuseswebtechnology,butdoesn’tusetheInternet. Here’s
howitwouldwork.
•Your application is built as a very small web server, based on BaseHTTPServer.HTTPServer or
wsgiref.simple_server . ThisapplicationpreparesHTMLpagesandformsfortheuser.
•TheuserwillinteractwiththeapplicationthroughastandardbrowserlikeFirefox,OperaorSafari.
RatherthanconnecttoaremotewebserversomewhereintheInternet,thisbrowserwillconnecttoa
smallwebserverrunningonyourdesktop.
TheURLwillbe‘ http://localhost:8008/ ’.
•Youcanpackageyourapplicationwithasimpleshellscript(or .BATﬁle)whichdoestwothings. (This
canalsobedoneasasimplePythonprogramusingthe subprocessmodule.)
1.ItstartsasubprocesstoruntheHTTPserversideofyourapplication.
2.It starts another subprocess to run the browser, providing an initial link of
'http://localhost:8008' topointthebrowseratyourapplicationserver.
Sincethisisasingle-userapplication,therewon’tbemultiple,concurrentsessions,whichgreatlysimpliﬁes
webapplicationimplementation.
ExampleApplication . Wecould,forexample,writeasmallapplicationthatdidFahrenheittoCelsius
conversion. We would create a Python web server and a “wrapper” script that launched the server and
launchedabrowser.
TheInputForm . WhilethefullpowerofHTMLisbeyondthescopeofthisbook,we’llprovideasimple
formusingthe <form>,<label>,<button>and<input>tags.
Here’sanexampleofasimpleform. ThisformwillsendaPOSTrequesttothepath .whentheuserclicks
theConvertbutton.
Theinputwillincludename-valuepairswithkeysof fahrenheit,celsiusandaction. Thevaluewillbe
alistofstrings. Sincetheformonlyhasasimpletextﬁeldwithagivenname,therewillbeasinglestring
ineachlist.
Thecgi.parse()functioncanparsetheencodedforminput.
<html><head><title>Conversion </title> <head>
<body><formaction="."method="POST">
<label>Fahrenheit </label> <inputtype="text"name="fahrenheit" />
<br/>
<label>Celsius</label> <inputtype="text"name="celsius" />
<br/>
<button type="submit" name="action" value="submit" >Convert</button>
</form>
486 Chapter 38. Architecture: Clients, Servers, the Internet and the World Wide Web
Building Skills in Python, Release 2.6.5
</body>
</html>
TheWSGIApplications . You’llneedtowriteatleastoneWSGIapplicationtohandletheforminput.
•Ifthe‘environ['REQUEST_METHOD'] ’is"GET",thisisaninitialrequest,theformshouldbereturned.
•Ifthe‘environ['REQUEST_METHOD'] ’is"POST",thisisistheform,asﬁlledinbytheuser.
–Extracttheﬁeldsprovidedbytheuser. Attempttoconverttheinputtoaﬂoating-pointnumber.
Ifthisfails,orifbothﬁeldsareempty,presenttheformwitherrormessages.
–Calculatethevalueoftheemptyﬁeldfromthecompletedﬁeld. Presenttheformwithvalues
ﬁlledin.
AnOverviewoftheWSGIServer . You’lluse wsgiref.make_server() tocreateaserverfromyour
form-handling application. You’ll need to provide an address like ('', 8008), and the name of your
application. Thisobject’s serve_forever() methodwillthenhandleHTTPrequestsonport8008.
38.8.3 Complete Roulette Server
We’llcreateanalternativeimplementationofthesimpleRouletteservershownin W eb Services.
We’lldeﬁneasimpleREST-basedprotocolforplacingbets,spinningthewheelandretrievingtheresultsof
theplacedbets.
EachBETwillbeconsidereda“resource”. We’lluse‘ POST’tocreatetheresource,and‘ GET’tocheckonthe
resourceafterthespin.
Thespinisasubtleissue. Inasense,we’remerelygettingavalue. However,executingthespin,changes
thestateofthevariousbets. Therefore,thespinshouldbeakindof‘ POST’transaction.
SessionandState . Awebsitethatinteractswithabrowsergenerallyusescookiestomaintainstateso
thatthepersondoesn’thavetobeawareofhowstateismaintained.
Forwebservicesapplications,it’scosiderablysimplertomaintainstateexplicitly. AWSclientprogramcan
useexplicitsessionidentiﬁcation.
We’llhandlethisthoroughasimple‘ GET’requestwhichprovidesauniquesessionidentiﬁer.
AmoresecuremethodwouldincludeHTTPDigestAuthentication. However,that’sbeyondthescopeof
thisbook.
ResourceDetails . Ourtop-levelapplicationwillexaminetherequestURL.We’llconsiderthetop-level
URLasthe“resource”type. Ourtop-levelapplicationcanthenroutetherequestbasedonthisresource
name.
sessionA ‘POST’ request to /session/will allocate a new session. The response is a JSON
documentwiththesessionidentiﬁer.
ThedatasentisaJSONdocumentwithinformationlikethebettor’sname.
Thesessionidentiﬁermustbeusedinallfurthertransactionstoidentifythespeciﬁcbettor.
betA‘POST’requestto‘ /bet/session/ ’willcreateanewbet. Theprocessingcouldlooklike
thefollowing.
ThedatasentisaJSONdocumentwithalistofbetswithaspeciﬁcproposition
(“red”,“black”,“even”,“odd”,etc.) andanamount.
38.8. Client-Server Exercises 487
Building Skills in Python, Release 2.6.5
Roulettetablesoftenhaveaminimumandamaximumbetamount. Thesemight
be$10and$500. Inadditiontovalidnamesandamounts, thetotalofthebets
mustalsoconformtotheselimitstobeconsideredvalid.
Ifabet(orthetotal)isinvalid,theservershouldrespondwitha“501INVALID”
status. Thismessagebodyshouldincludedetailsonwhichbetwasrejectedand
why.
If the entire sequence of bets and amounts are valid, the server should respond
witha“200OK”status. TheresponsebodyisaJSONdocumentthatincludesa
conﬁrmation. ThiscanbeasimplesequentialnumberoraUUIDorsomesimilar
securehand-shake.
A‘GET’requestto‘ /bet/session/confirmation/ ’willreturnthestatusoftherequested
bet. TheresponseisaJSONdocumentwiththebetandtheoutcome. Ifthewheelhasnot
beenspun,theoutcomeis None. Otherwise,theoutcomeisthebet’spayoutmultipliedby
theamountofthebet.
spinA‘POST’requestto‘ /spin/session/ ’indicatesthatthebetsandplacedandthewheel
canbespun.
This will respond with a JSON document that has the wheel spin conﬁrmation number.
Currently,there’snotmuchuseforthisinformationexcepttoacknowledgethatthewheel
wasspun.
After a ‘ POST’ request to ‘ /spin/session/ ’, a client will have to do a ‘ GET’ request to
retrievebetresults.
38.8.4 Roulette Client
WriteasimpleclientwhichplacesanumberofbetsontheRouletteserver,usingtheMartingalebetting
strategy.
TheMartingalestrategyisrelativelysimple. Abetisplacedonjustone2:1proposition(Red,Black,Even,
Odd,HighorLow). Abasebettingamount(thetableminimum)isused. Iftheoutcomeofthespinisa
winner,thebettingamountisresettothebase. Iftheoutcomeofthespinisaloser,thebettingamountis
doubled.
Notethatthis“doubleuponaloss”bettingwillleadtosituationswheretheidealbetisbeyondthetable
maximum. Inthatcase,yoursimulationmustadjustthebetstobethetablemaximum.
Alsonotethatapropersimulationhasabudgetforbetting. Whenthebudgetisexhausted,thesimulation
hastostopplaying.
38.8.5 Roulette Client
We can write a web application which uses our Roulette Server. This will lead to a fairly complex (but
typical)architecture,withtwoserversandaclient.
•We’ll have the Roulette Server from the Complete Roulette Server exercise, running on some non-
priviledged port (like 36000). This server accepts bets and spins the wheel on behalf of a client
process. Ithasnouserinteraction,itsimplymaintainsstate,intheformofbetsplaced.
•We’llhaveawebserver,similartotheDesktopWebApplicationexercise,runningonport8008. This
applicationcanpresentasimpleformforplacingabetorspinningthewheel.
488 Chapter 38. Architecture: Clients, Servers, the Internet and the World Wide Web
Building Skills in Python, Release 2.6.5
Theusercanﬁllintheﬁeldstodeﬁneabet. Whentheuserclicksthe Betbutton,thewebapplication
willmakearequesttotheRouletteServerandpresenttheresultsintheHTMLpagethatisreturned
totheuser.
Ifthebetisvalid,thewebapplicationwillmakearequesttotheRouletteServertospinthewheel. It
willpresenttheresultsintheHTMLpagethatisreturnedtotheuser.
ThisinteractionbetweenwebapplicationandRouletteservercanallbedonewith urllib2.
•We’llcanthenuseabrowsertocontactourwebserver. Thisclientwillbrowse“ http://localhost:8008 ”
togetawebpagewithasimpleformforplacingabetsandspinningthewheel.
AsimpleHTMLformmightlooklikethefollowing.
<html><head><title>Roulette</title></head>
<body>
<p>Results from previous request go here</p>
<form action="." method="POST">
<label>Amount</label> <input type="text" name="amount"/>
<br/>
<label>Proposition</label> <select name="proposition">
<option>Red</option>
<option>Black</option>
<option>Even</option>
<option>Odd</option>
<option>High</option>
<option>Low</option>
</select>
<br/>
<button type="submit" name="action" value="bet">Bet</button>
</form>
</body>
</html>
A‘GET’requestcanpresenttheform.
A‘POST’requestmustparsetheinputtoﬁndthevaluesofthetwoﬁelds( "proposition" and"amount").
Itmustvalidateinputontheform,makerequeststotheserver,andpresenttheresults.
38.8.6 Chess Server
In Chessboard Locations wedescribedsomeofthebasicmechanicsofchessplay. Achessserverwouldallow
exactlytwoclientstoestablishaconnection. Itwouldthenachessmovesfromeachclientandrespondto
bothclientswiththenewboardposition.
Wecancreateasimplewebservicethathasanumberofmethodsforhandlingchessmoves. Todothis,
we’llneedtocreateabasic ChessBoardclasswhichhasanumberofmethodsthatestablishplayers,move
pieces,andreportontheboard’sstatus.
It’sessentialthatthe ChessBoardbeasingleobjectthatmaintainsthestateofthegame. Whentwoplayers
areconnected,eachwillneedtoseeacommonversionofthechessboard.
Herearesomeofthemethodsthatareessentialtomakingthiswork.
classChessBoard ()
__init__ (self)
Initializethechessboardwithallpiecesinthestartingposition. Itwillalsocreatetwovariables
38.8. Client-Server Exercises 489
Building Skills in Python, Release 2.6.5
to store the player names. These two player names will initially be None, since no player has
connected.
connect(self)
Allowaplayertoconnecttothechessserver. Iftwoplayersarealreadyconnected,thiswillreturn
anErrormessage. Otherwise,thiswillreturnanacceptancemessagethatincludestheplayer’s
assignedcolor(WhiteorBlack.)
move(self, player, from, to )
Handlearequestbyaplayertomoveapiecefromonelocationtoanotherlocation. Bothlocations
aresimplyﬁle(a-h)andrank(1-8). Ifthemoveisallowed,theresponseisanacknowledgement.
Otherwise, anerrorresponseissent. Thechessserverwillneedtotrackthemovestobesure
theyplayersarealternatingmovesproperly.
board(self)
Theresponseisa128-characterstringthatreportsthestateoftheboard. Ithaseachrankin
orderfrom8to1;withineachrankiseachﬁlefromatoh. Eachpositionistwocharacterswith
apiececodeorspacesifthepositionisempty.
AwebservicewilloﬀerasimpleRESTfulresourceforinteracting.
game
•A‘POST’requestto‘ /game’shouldincludeaJSONdocumentthatidentiﬁestheplayer.
ThesuccessfulresponseisaJSONdocumentwhichprovidesagameidentiﬁcationfor
theplayeralongwiththeplayer’scolor.
•A‘POST’requestto‘ /game/game/’includesaJSONdocumentwiththeplayeridentiﬁ-
cationandtheirmove.
If this is valid, the reponse is a JSON document with the move number and board
position.
If this is invalid, the response is a JSON document with the move number, board
positionandtheerrormessage.
•A‘GET’requestto‘ /game/game/’willrespondwiththehistoryofmovesandtheboard
position.
Aclientapplicationforthiswebservicecanuse urllib2tomakethevarious‘ POST’and‘GET’requestsof
theserver.
Generallytheuecasefortheclientwouldhavethefollowingoutline.
1.Theclientprocesswillattemptaconnection. Ifthatfails,theserverissomehowunabletostartanew
game.
2.The client will display the board state and wait for the user to make a move. Once the move is
entered,theclientwillmakewebservicesrequeststoprovidemovesfromthegivenplayeranddisplay
theresultingboardstatus.
3.Also,theclientmust“poll”theservertoseeiftheotherplayerhasenteredtheirmove.
IfawebpageincludesthefollowingHTML,itwillperiodicallyrefreshitself,pollingtheserver. ‘ <meta
http-equiv="refresh" content="60"> ’. Thisisincludedwithinthe‘ <head>’tags. Thiswillpoll
onceevery60seconds.
Foradesktopapplicaiton,thepollingisusuallydonebywaitingafewsecondsvia time.sleep() .
490 Chapter 38. Architecture: Clients, Servers, the Internet and the World Wide Web
Building Skills in Python, Release 2.6.5
38.9 Socket Programming
Socket-levelprogrammingisn’tourﬁrstchoiceforsolvingclient-serverproblems. Socketsarenicelysup-
portedbyPython,however,givingusawaytocreateanewprotocolwhenthevastcollectionofexisting
internetworkingprotocolsareinadequate.
Client-serverapplicationsincludeaclient-sideprogram,aserver,aconnectionandaprotocolforcommuni-
cationbetweemthetwoprocesses. Oneofthemostpopularandenduringsuiteofclient-serverprotocolsis
basedontheInternetworkingprotocol: TCP/IP.FormoreinformationinTCP/IP,see Internetworking with
TCP/IP[Comer95].
AlloftheTCP/IPprotocolsarebasedonthebasic socket. Asocketisahandymetaphorforthewaythat
theTransportControlProtocol(TCP)reliablymovesastreamofbytesbetweentwoprocesses.
Thesocketmoduleincludesanumberoffunctionstocreateandconnectsockets. Onceconnected,asocket
behavesessentiallylikeaﬁle: itcanbereadfromandwrittento. Whenweareﬁnishedwithasocket,we
cancloseit,releasingthenetworkresourcesthatweretiedupbyourprocessing.
38.9.1 Client Programs
When a client application communicates with a server, the client does three things: it establishes the
connection,itsendstherequestanditreadsthereplyfromtheserver. Forsomeclient-serverrelationships,
like a databsae server, there may be multiple requests and replies. For other client-server requests, for
example,theHTTPprotocol,asinglerequestmayinvolveanumberofreplies.
To establish a connection, the client needs two basic facts about the server: the IP address and a port
number. TheIPaddressidentiﬁesthespeciﬁccomputer(orhost)thatwillhandletherequest. Theport
numberidentiﬁestheapplicationprogramthatwillprocesstherequestonthathost. Atypicalhostwill
respondtorequestsonnumerousports. Theportnumberspreventrequestsfrombeingsenttothewrong
applicationprogram. Portnumbersaredeﬁnedbyseveralstandards. ExamplesincludeFTP(port21)and
HTTP(port80).
Aclientprogrammakesrequeststoaserverbyusingthefollowingoutlineofprocessing.
1.Developtheserver’saddress . Fundamentally,anIPaddressisa32-bithostnumberanda16-bit
portnumber. Sincethesearediﬀiculttomanage,avarietyofcodingschemesareused. InPython,
anaddressisa2-tuplewithastringandanumber. ThestringrepresentestheIPaddressindotted
notation( "194.109.137.226" )orasadomainname( "www.python.org" );thenumberistheport
numberfrom0to65535.
2.Createasocketandconnectittothisaddress . Thisisaseriesoffunctioncallstothe socket
module. Whenthisiscomplete,thesocketisconnectedtotheremoteIPaddressandportandthe
serverhasacceptedtheconnection.
3.Send the request . Many of the standard TCP/IP protocols expect the commands to be sent as
stringsoftext,terminatedwiththe ncharacter. OftenaPythonﬁleobjectiscreatedfromthesocket
sothatthecompletesetofﬁlemethodfunctionsforreadingandwritingareavailable.
4.Readthereply . Manyofthestandardprotocolswillrespondwitha3-digitnumericcodeindicating
thestatusoftherequest. We’llreviewsomecommonvariationsonthesecodes,below.
DevelopinganAddress . AnIPaddressisnumeric. However,theInternetprovides domain names ,via
DomainNameServices(DNS).ThispermitsusefultextnamestobeassociatedwithnumericIPaddresses.
We’remoreusedto "www.python.org" . DNSresolvesthistoanIPaddress. The socketmoduleprovides
functionsforDNSnameresolution.
ThemostcommonoperationindevelopinganaddressisdecodingahostnametocreatethenumericIP
address. The socketmoduleprovidesseveralfunctionsforworkingwithhostnamesandIPaddresses.
38.9. Socket Programming 491
Building Skills in Python, Release 2.6.5
gethostname ()
Returnsthecurrenthostname.
gethostbyname (host)
ReturnstheIPaddress(astringoftheform‘255.255.255.255’)forahost.
socket::gethostbyaddr( address ) -> ( name, aliasList, addressList ) ()
Returnthetruehostname,alistofaliases,andalistofIPaddresses,forahost. Thehostargument
isastringgivingahostnameorIPnumber.
socket::getservbyname( servicename, protocolname ) -> integer ()
Returnaportnumberfromaservicenameandprotocolname. Theprotocolnameshouldbe‘tcp’or
‘udp’.
Typically,the socket.gethostbyname() functionisusedtodeveloptheIPaddressofaspeciﬁcservername.
ItdoesthisbymakigaDNSinquirytotransformthehostnameintoanIPaddress.
PortNumbers . Theportnumberisusuallydeﬁnedbyyourapplication. Forinstance,theFTPapplication
usesportnumber21. Portnumbersfrom0to1023areassignedbyRFC1700standardandarecalledthe
wel l known ports . Port numbers from 1024 to 49151 are available to be registered for use by speciﬁc
applications. TheInternetAssignedNumbersAuthority(IANA)trackstheseassignedportnumbers. See
http://www.iana.org/assignments/port-numbers . You can use the private port numbers, from 49152 to
65535, without fear of running into any conﬂicts. Port numbers above 1024 may conﬂict with installed
softwareonyourhost,butaregenerallysafe.
Portnumbersbelow1024arerestrictedsothatonlypriviledgedprogramscanusethem. Thismeansthat
youmusthaverootoradministratoraccesstorunaprogramwhichprovidesservicesononeoftheseports.
Consequently, manyapplicationprogramswhicharenotrunbyroot, butrunbyordinaryusers, willuse
portnumbersstartingwith1024.
Itisverycommontouseportsfrom8000andaboveforservicesthatdon’trequirerootoradministrator
privilegestorun. Technically,port8000hasadeﬁneduse,andthatusehasnothingtodowithHTTP.Port
8008and8080aretheoﬀicialalternativestoport80, usedfordevelopingwebapplications. However, in
spiteofanoﬀicialuse,port8000isoftenusedforwebapplications.
Theusualapproachistohaveastandardportnumberforyourapplication,butallowuserstooverridethis
intheeventofconﬂicts. Thiscanbeacommand-lineparameteroritcanbeinaconﬁgurationﬁle.
Generally,aclientprogrammustacceptanIPaddressasacommand-lineparameter. Anetworkisadynamic
thing: computersarebroughtonlineandoﬄineconstantly. A“hard-wired”IPaddressisaninexcusable
mistake.
CreateandConnectaSocket . Asocketisoneendofanetworkconnection. Datapassesbidirectionally
throughasocketbetweenclientandserver. The socketmoduledeﬁnesthe SocketType,whichistheclass
forallsockets. The socket()functioncreatesasocketobject.
socket(family, [type, protocol] )
Open a socket of the given type. The familyargument speciﬁes the address family; it
is normally socket.AF_INET . Thetypeargument speciﬁes whether this is a TCP/IP stream
(socket.SOCK_STREAM )orUDP/IPdatagram( socket.SOCK_DGRAM )socket. Theprotocolargument
isnotusedforstandardTCP/IPorUDP/IP.
ASocketTypeobjecthasanumberofmethodfunctions. Someofthesearerelevantforserver-sideprocessing
andsomeforclient-sideprocessing. Theclientsidemethodfunctionsforestablishingaconnectioninclude
thefollowing.
connect(address)
Connectthesockettoaremoteaddress;theaddressisusuallya(hostaddress,port#)tuple. Inthe
eventofaproblem,thiswillraiseanexception.
492 Chapter 38. Architecture: Clients, Servers, the Internet and the World Wide Web
Building Skills in Python, Release 2.6.5
connect_ex (address)
Connectthesockettoaremoteaddress;theaddressisusuallya(hostaddress,port#)tuple. This
willreturnanerrorcodeinsteadofraisinganexception. Avalueof0meanssuccess.
fileno()
Return underlying ﬁle descriptor, usable by the selectmodule or the os.read()andos.write()
functions.
getpeername ()
Returntheremoteaddressboundtothissocket;notsupportedonallplatforms.
getsockname ()
Returnthelocaladdressboundtothissocket.
getsockopt (level, opt, [buﬂen] )
Getsocketoptions. SeetheUNIXmanpagesformoreinformation. Thelevelisusually SOL_SOCKET.
Theoptionnamesallbeginwith SO_andaredeﬁnedinthemodule. Youwillhavetousethe struct
moduletodecoderesults.
setblocking (ﬂag)
SetorcleartheblockingI/Oﬂag.
setsockopt (level, opt, value )
Setsocketoptions. SeetheUNIXmanpagesformoreinformation. The levelisusualSOL_SOCKET.
Theoptionnamesallbeginwith SO_andaredeﬁnedinthemodule. Youwillhavetousethe struct
moduletoencodeparameters.
shutdown (how)
Shutdowntraﬀiconthissocket. Ifhowis0,receivesaredisallowed;ifhowis1,sendsaredisallowed.
Usuallythisis2todisallowbothreadsandwrites. Generally,thisshouldbedonebeforethe close()
.
close()
Closethesocket. It’susuallybesttousethe shutdown()methodbeforeclosingthesocket.
SendingtheRequestandReceivingtheReply . Sendingrequestsandprocessingrepliesisdoneby
writingtothesocketandreadingdatafromthesocket. Often,theresponseprocessingisdonebyreading
thefileobjectthatiscreatedbyasocket’s makefile()method. Sincethevaluereturnedby makefile()
isaconventionalﬁle,then readlines()andwritelines() methodscanbeusedonthisﬁleobject.
ASocketTypeobjecthasanumberofmethodfunctions. Someofthesearerelevantforserver-sideprocessing
andsomeforclient-sideprocessing. Theclientsidemethodfunctionsforsending(andreceiving)datainclude
thefollowing.
recv(bufsize, [ﬂags] )
Receivedata,limitedby bufsize.flagsareMSG_OOB(readout-of-banddata)or MSG_PEEK(examine
thedatawithoutconsumingit;asubsequent recv()willreadthedataagain).
recvfrom (bufsize, [ﬂags], ) -> ( string, address )
Receivedataandsender’saddress,argumentsarethesameas recv().
send(string, [ﬂags] )
Senddatatoaconnectedsocket. The MSG_OOBﬂagissupportedforsendingout-of-banddata.
sendto(string, [ﬂags] )
Senddatatoagivenaddress,usinganunconnectedsocket. Theﬂagsoptionisthesameas send().
Returnvalueisthenumberofbytesactuallysent.
makefile (mode, bufsize )
Returnaﬁleobjectcorrespondingtothissocket. The modeandbufsizeoptionsarethesameasused
inthebuiltin file()function.
38.9. Socket Programming 493
Building Skills in Python, Release 2.6.5
Example. Thefollowingexamplesshowasimpleclientapplicationusingthe socketmodule.
Thisisthe Clientclassdeﬁnition.
#!/usr/bin/env python
importsocket
classClient(object):
rbufsize =-1
wbufsize =0
def__init__ (self, address =('localhost ',7000) ):
self.server=socket.socket( socket .AF_INET, socket .SOCK_STREAM )
self.server.connect( address )
self.rfile=self.server.makefile( 'rb',self.rbufsize)
self.wfile=self.server.makefile( 'wb',self.wbufsize)
defmakeRequest (self, text ):
"""send a message and get a 1-line reply"""
self.wfile.write( text +'\n')
data=self.rfile.read()
self.server.close()
returndata
print"Connecting to Echo Server "
c=Client()
response =c.makeRequest( "Greetings ")
printrepr(response)
print"Finished "
AClientobjectisinitializedwithaspeciﬁcservername. Thehost( "localhost")andportnumber(
8000)aredefaultvaluesintheclass __init__()function. Theaddressof "localhost"ishandyfortesting
aclientandaserveronyourPC.Firstthesocketiscreated,thenitisboundtoanaddress. Ifnoexceptions
areraised,thenaninputandoutputﬁlearecreatedtousethissocket.
ThemakeRequet() functionsendsamessageandthenreadsthereply.
38.9.2 Server Programs
Whenaserverprogramstarts,itcreatesasocketonwhichitlistensforrequests. Theserverhasathree-step
responsetoaclient. First,itacceptstheconnection,thenitreadsandprocessestheclient’srequest. Finally,
it sends a reply to the client. For some client-server relationships, like a database server, there may be
multiplerequestsandreplies. Sincedatabaserequestsmaytakealongtimetoprocess,theservermustbe
multi-threadedinordertohandleconcurrentrequests. InthecaseofHTTP,asinglerequestwillleadto
multiplereplies.
Aserverprogramhandlesrequestsfromaclientbyusingthefollowingoutlineofprocessing.
1.CreateaListenerSocket . Alistenersocketiswaitingforclientconnectionrequests.
2.AcceptaClientConnection . Whenaclientattemptsaconnection,thesocket’s accept()method
willreturna“daughter”socketconnectedtotheclient. Thisdaughtersocketisusedforallsubsequent
processing.
3.Read the request . Many of the standard TCP/IP protocols expect the commands to be sent as
stringsoftext,terminatedwiththe ncharacter. OftenaPythonﬁleobjectiscreatedfromthesocket
sothatthecompletesetofﬁlemethodfunctionsforreadingandwritingareavailable.
4.Sendthereply . Manyofthestandardprotocolswillrespondwitha3-digitnumericcodeindicating
thestatusoftherequest. We’llreviewsomecommonvariationsonthesecodes,below.
494 Chapter 38. Architecture: Clients, Servers, the Internet and the World Wide Web
Building Skills in Python, Release 2.6.5
CreateandListenonaSocket . Thefollowingmethodsarerelevantwhencreatingserver-sidesockets.
These server side method functions are used for establishing the public socket that is waiting for client
connections. Ineachdeﬁnition,thevariable sisasocketobject.
bind(address)
Bindthesockettoalocaladdresstupleof(IPAddressandportnumber). Thistupleistheaddress
andportthatwillbeusedbyclientstoconnectwiththisserver. Generally,theﬁrstpartofthetuple
issimply“”toindicatethatthisserverusestheaddressofthecomputeronwhichitisrunning.
listen(queueSize )
Startlisteningforincomingconnections,queueSizespeciﬁesthenumberofqueuedconnections.
accept() -> ( socket, address )
Acceptaclientconnection,returningasocketconnectedtotheclientandclientaddress.
Theoriginalboundsocket,whichwassetinlistenmodeisleftalone,andisstilllisteningforthenext
connection.
Oncethesocketconnectionhasbeenaccepted,processingisasimplematterofreadingandwritingonthe
daughtersocket.
Wewon’tshowanexampleofwritingaserverprogramusingsimplesockets. Thebestwaytomakeuseof
server-sidesocketsistousethe SocketServer module.
38.9.3 Practical Server Programs with SocketServer
Generally,weusethe SocketServer moduleforsimplesocketprocessing. Usually,wecreatea TCPSocket
usingthismodule. Thiscansimplifytheprocessingofrequestsandreplies. The SocketServer moduleis
thebasisforthe SimpleHTTPServer (see The W orld Wide W eb and the HTTP protocol ).
Muchofserver-sideprocessingisencapsulatedintwoclassesofthe SocketServer module. Youwillsubclass
theStreamRequestHandler classtoprocessTCP/IPrequests. Thissubclasswillincludethemethodsthat
dotheessentialworkoftheprogram.
Youwillthencreateaninstanceofthe TCPServerclassandgiveityour RequestHandler subclass. The
instanceof TCPServerwilltomanagethepublicsocket,andallofthebasicprocessing. Foreachconnection,
itwillcreateaninstanceofyoursubclassof StreamRequestHandler tohandletheconnection.
Deﬁnea RequestHandler . Deﬁningahandlerisdonebycreatingasubclassof StreamRequestHandler or
BaseRequestHandler andaddinga handle()methodfunction. The BaseRequestHandler deﬁnesasimple
frameworkthat TCPServercanusewhendataisreceivedonasocket.
Generally,weuseasubclassof StreamRequestHandler . Thisclasshasmethodsthatcreateﬁlesfromthe
socket. Thisalliowsthe handle()methodfunctiontosimplyreadandwriteﬁles. Speciﬁcally,thesuperclass
willassurethatthevariables self.rfileandself.wfileareavailable.
Forexample,theechoservicerunsinport7. Theechoservicesimplyreadsthedataprovidedinthesocket,
andechoesitbacktothesender. ManyLinuxboxeshavethisserviceenabledbydefault. Wecanbuildthe
basicechohandlerbycreatingasubclassof StreamRequestHandler .
#!/usr/bin/env python
"""My Echo"""
importSocketServer
classEchoHandler ( SocketServer .StreamRequestHandler ):
defhandle(self):
input=self.request.recv(1024)
print"Input:%r"%(input, )
self.request.send("Heard:%r\n"%(input, ) )
server=SocketServer .TCPServer( ( "",7000), EchoHandler )
38.9. Socket Programming 495
Building Skills in Python, Release 2.6.5
print"Starting Server "
server.serve_forever()
Thisclasscanbeusedbya TCPServerinstancetohandlerequests. Inthis,the TCPServerinstancenamed
servercreatesaninstanceof EchoHandlereachtimeaconnectionismadeonport7. Thederivedsocket
isgiventothehandlerinstance,astheinstancevariable self.request .
Amoresophisticatedhandlermightdecodeinputcommandsandperformuniqueprocessingforeachcom-
mand. Forexample,ifwewerebuildinganon-lineRouletteserver,theremightbethreebasiccommands:
aplacebetcommand,ashowstatuscommandandaspinthewheelcommand. Theremightbeadditional
commandstojoinatable,chatwithotherplayers,performcreditchecks,etc.
Methodsof TCPServer. Inordertoprocessrequests,therearetwomethodsofa TCPServerthatareof
interest.
handle_request ()
Handleasinglerequest: waitforinput,createthehandlerobjecttoprocesstherequest.
serve_forever ()
Handlerequestsinaninﬁniteloop. Runsuntiltheloopisbrokenwithanexception.
38.9.4 Protocol Design Notes
Generally, HTTP-based web services do almost everything we need; and they do this kind of thing in a
simpleandstandardway. Usingsocketsisdoneeithertoinventsomethingnewortocopewithsomething
veryold. Usingwebservicesisoftenabetterchoicethaninventingyourownprotocol.
If you can’t, for some reason, make suitable use of web services, here are some lessons gleaned from the
readingtheInternetworkingRequestsforComments(RFCs).
Manyprotocolsinvolvearequest-replyconversationalstyle. Theclientconnectstotheserverandmakes
requests. Theserverrepliestoeachrequest. Someprotocols(forexample,FTP)mayinvolvealongconver-
sation. Otherprotocols(forexample,HTTP)involveasinglerequestand(sometimes)asinglereply. Many
websitesleverateHTTP’sabilitytosendmultiplereplies,butsomewebsitessendasingle,tidyresponse.
ManyoftheInternetstandardrequestsareshort1-to4-charactercommands.Thesyntaxiskeptintentionally
verysimple,usingspacesfordelimeters.Complexsyntaxwithoptionalclausesandsophisticatedpunctuation
isoftenanaidforpeople. Inmostwebprotocols,asequenceofsimplecommandsareusedinsteadofasingle,
complexstatement.
Theresponsesareoften3-digitnumbersplusexplanatorycomments. Theapplicationdependsonthe3-digit
number. The explanatory comments can be written to a log or displayed for a human user. The status
numbersareoftencodedasfollows:
1yzPreliminaryreply,morereplieswillfollow.
2yzCompleted.
3yzMoreinformationrequired. InthecaseofFTP,thisistypicallythestartofadialog. Inthe
caseofHTTP,itisoftenaredirect.
4yzRequestnotcompleted;tryingagainmakessense.Thisisatransientproblemlikeadeadlock,
timeout,orﬁlesystemproblem. InthecaseofHTTP,thisisalsousedforanauthentication
problem.
5yzRequestnotcompletedbecauseit’sinerror;tryingagaindoesn’tmakesense. Thisasyntax
problemorothererrorwiththerequest.
Themiddledigitwithintheresponseprovidessomeadditionalinformation.
496 Chapter 38. Architecture: Clients, Servers, the Internet and the World Wide Web
Building Skills in Python, Release 2.6.5
x0zTheresponsemessageissyntax-related.
x1zTheresponsemessageisinformational.
x2zTheresponsemessageisabouttheconnection.
x3zTheresponsemessageisaboutaccountingorauthentication.
x5zTheresponsemessageisﬁle-systemrelated.
Thesecodesallowaprogramtospecifymulti-partrepliesusing1 yzcodes. Thestatusofaclient-server
dialogismanagedwith3 yzcodesthatrequestadditionalinformation. 4 yzcodesareproblemsthatmight
getﬁxed. 5 yzcodesareproblemsthatcanneverbeﬁxed(therequestdoesn’tmakesense,hasillegaloptions,
etc.)
Note that protocols like FTP (RFC 959) provide a useful convention for handling multi-line replies: the
ﬁrstlinehasa‘ -’afterthestatusnumbertoindicatethatadditionallinesfollow;eachsubsequentlinesare
indented. Theﬁnallinerepeatsthestatusnumber. Thisruleallowsustodetecttheﬁrstofmanylines,and
absorballlinesuntilthematchingstatusnumberisread.
38.9. Socket Programming 497
Building Skills in Python, Release 2.6.5
498 Chapter 38. Architecture: Clients, Servers, the Internet and the World Wide Web
Part VI
Projects
499

Building Skills in Python, Release 2.6.5
Projects to Build Skills
Programming language skills begin with the basic syntax and semantics of the language. They advance
throughthesolutionofsmallexercisesandarereﬁnedthroughsolvingmorecompleteproblems.
“Real-world”applications,usedeverydayinbusinessandresearch,arelessthanidealforlearningapro-
gramminglanguage. Thebusiness-orientedproblemsoftenhaveaverynarrowinfocus; thesolutionsare
dictatedbyoddbudgetaryconstraintsordepartmentalpolitics. Reasearchproblemsarealsonarrowlyfo-
cused,oftenlackingaﬁnal“application”tosurroundtheinterestingpartsoftheprogrammingandcreatea
ﬁnal,ﬁnishedproduct.
This part provides several large exercises that provide for more advanced programming than the smaller
exercisesattheendofeachsection. Thesearen’treal-worldinscope,buttheyarequiteabitlargerthan
thesmallexercisesattheendofeachchapter.
Thesearerankedinorderofdiﬀiculty.
501
Building Skills in Python, Release 2.6.5
502
CHAPTER
THIRTYNINE
AREAS OF THE FLAG
From Robert Banks, Slicing Pizzas, Racing T urtles, and F urther Adventures in Applied Mathematics
[Banks02].
Thisprojectissimple: itdoesnotuseloops,if-statementsoranydatastructures. Thisexercisefocuseson
expressionsandassignmentstatements.
F acts about the American ﬂag . Thestandarddimensionisthe width(orhoist). Thisisthebasicunitthat
allothersaremultipliedby. Aﬂagthatis30incheswidewillsimplyhave30inchesmultipliedbyallofthe
othermeasurements.
•Width(or hoist)Wf= 1.0
•Length(or ﬂy)Lf= 1.9×Wf
•Widthofunion(or canton)Wu=7
13×Wf
•Lengthofunion Lu= 0.76×Wf
•Radiusofastar R= 0.0308×Wf
Theseareotherfacts;theyarecounts,notmeasurements.
•Numberofredstripes Sr= 7
•Numberofwhitestripes Sw= 6
•Numberwhitestars Ns= 50
•Widthofastripe Ws=1
Sr+Sw×Wf
39.1 Basic Red, White and Blue
RedArea. Thereare4redstripeswhichabuttheblueﬁeldand3redstripesrunthefulllengthoftheﬂag.
Wecancomputetheareaofthered,sinceitis4shortrectanglesand3longrectangles. Theshortrectangle
areasarethewidthofastripe( Ws)timesthewholelength(lengthoftheﬂy, Lf)lessthewidthoftheblue
union( Wu). Thelongrectangleareasaresimplythewidthofthestripe( Ws)timesthelengthoftheﬂy
(Lf).
Red = 4×Ws×(Lf−Lu) + 3×Ws×Lf.
WhiteArea. Thereare3whitestripeswhichabuttheblueﬁeld,3whiestripesrunthefulllengthofthe
ﬂag,plustherearethe50stars.
503
Building Skills in Python, Release 2.6.5
Wecancomputethebasicareaofthewhiteusingasimilaranalysisasareaofthered,andaddinginthe
areasofthestars, 50S. We’llreturntotheareaofthestars,last.
White = 3×Ws×(Lf−Lu) + 3×Ws×Lf+ 50S.
BlueArea. Theblueareaistheareaoftheunion,lesstheareaofthestars, 50S.
Blue = (Lu−Wu)−50S.
39.2 The Stars
AreaoftheStars . A5-sidedstar(pentagram)canbeanalyzedas5kitesof2triangles. Theareaofeach
kite, K,iscomputedasfollows.
Theinneranglesofallﬁvekitesﬁlltheinsideofthepentagram,andtheanglesmustsumto360°,therefore
eachinnerangleis360
5= 72.
Anglesofanytrianglesumto180°. Thelowertriangleissymmetric,therefore,theothertwoanglesmust
sumto180. Thelowertrianglehastwosideanglesof (180−72)/2 = 54.
Weseethatstraightlinescontainanoutertriangleandtwoinnertriangles. Weknowtheinnertrianglesadd
to54 + 54 = 108;astraightlineis180. Therefore,theoutertrianglehastwo72°cornersanda36°peak.
Theareaofthetwotrianglescanbecomputedfromthesetwoangles.
a= 36
b= 72
Recallthattheradiusofastar, Ris0.0308×Wf.
Here’soneversionoftheareaofthekite.
K=sina
2×sinb
2
1
2×sin(a+b)×R2
Here’stheotherversionoftheareaofthekite.
K=sinb
2
ϕ2×R2
Note that the math library math.sin()andmath.cos()functions operate in radians, not degrees. The
conversionrule is πradians = 180degrees. Therefore, we often see something likesin (a×π/180)foran
angle,a,indegrees.
TheGoldenRatiois ϕ=1+p
5
2(about1.61803).
504 Chapter 39. Areas of the Flag
Building Skills in Python, Release 2.6.5
Thetotalareaofastaris
S= 5×K
Givenaspeciﬁcwidthofaﬂag(infeet),wecancomputetheactualareasofeachcolor.
CheckYourResults . Blueis18.73%ofthetotalarea.
39.2. The Stars 505
Building Skills in Python, Release 2.6.5
506 Chapter 39. Areas of the Flag
CHAPTER
FORTY
BOWLING SCORES
Bowlingisplayedintenframes,eachofwhichallowsoneortwodeliveries. Ifalltenpinsarebowledover
intheﬁrstdelivery,thereisnoseconddelivery.
Eachframehasascorebasedonthedeliveryinthatframe,aswellasthenextoneortwodeliveries. This
meansthatthescoreforaframemaynotnecessarilybepostedattheendoftheframe. Italsomeansthat
thetenthframemayrequireatotalofthreedeliveriestoresolvethescoring.
•RuleA.Thescoreforaframeisthetotalpinsbowledoverduringthatframe,ifthenumberislessthan
ten(anopenframe,orerrororsplitdependingsomeotherrulesbeyondthescopeofthisproblem).
•RuleB.Ifalltenpinsarebowledoverontheﬁrstdelivery(astrike),thescoreforthatframeis10+
thenexttwodeliveries.
•RuleC.Ifalltenpinsarebowledoverbetweentheﬁrsttwodeliveries(aspare),thescoreforthat
frameis10+thenextdelivery.
Agamecanbeasfewastwelvedeliveries: tenframesofstrikesrequiretwoadditionaldeliveriesinthetenth
frametoresolvetheruleBscoring. Agamecanbeasmanyastwenty-onedeliveries: nineopenframesof
lessthan10pinsbowledoverduringtheframe,andaspareinthetenthframerequiringoneextradelivery
toresolvetheruleCscoring.
Thereisarelativelystraight-forwardannotationforplay. Eachframehastwocharacterstodescribethe
pinsbowledduringthedelivery. Theﬁnalframehasthreecharactersforatotalof21characters.
RuleA:Iftheframeisopen,thetwocharactersarethetwodeliveries;thetotalwillbelessthan10. Ifa
deliveryfailstobowloveranypins,a "-"isusedinsteadofanumber.
RuleB:Iftheframeisstrike,thetwocharactersare "X ". Noseconddeliverywasmade.
RuleC:Iftheframeisaspare,theﬁrstcharacteristhenumberofpinsontheﬁrstdelivery. Thesecond
characterisa "/".
Forexample:
"8/9-X X 6/4/X 8-X XXX "
Thiscanbeanalyzedintotenframesasfollows:
507
Building Skills in Python, Release 2.6.5
FrameFirst
deliverySecond
deliveryScoringrule Frame
ScoreTo-
tal
18/,must
havebeen2C-spare=10+nextdelivery 1919
29-,0 A-open=9 928
310(nottaken) B-strike=10+next2deliveries 2654
410(nottaken) B-strike=10+next2deliveries 2074
56/,must
havebeen4C-spare=10+nextdelivery 1488
64/,must
havebeen6C-spare=10+nextdelivery 20108
710(nottaken) B-strike=10+next2deliveries 18126
88-,0 A-open=8 8134
910(nottaken) B-strike=10+next2deliveries 30164
101010and10 B-strike=10+next2deliveries,twoextradeliveries
aretakenduringthis10thframe.30194
Eachoftheﬁrstnineframeshasatwo-charactercodeforeachdelivery. Therearethreeforms:
•‘"X "’.
•‘"n/"’where nis-or1-9.
•‘"nm"’where nand mare-or1-9. Thetwovaluescannottotalto10.
Thetenthframehasathree-charactercodeforeachofthedeliveries. Therearethreeforms:
•‘"XXX"’.
•‘"n/r"’where nis-,1-9and risX,-,1-9.
•‘"nm "’where nand mare-or1-9. Thetwovaluescannottotalto10.
Writeavalid(game)() functionthatwillvalidatea21-characterstringasdescribingalegalgame.
Writeascoringmethod, scores(game)() , thatwillacceptthe21-characterscoringstringandproducea
sequenceofframe-by-frametotals.
Writeareportingmethod, scoreCard(game)() ,thatwillusethevalidationandscoringfunctionstoproduce
ascorecard. Thescorecardshowsthreelinesofoutputwith5characterpositionsforeachframe.
•Thetoplinehasthetenframenumbers: 2digitsand3spacesforeachframe.
•Thesecondlinehasthecharactercodesforthedelivery: 2or3charactersand3or2spacesforeach
ofthetenframes.
•Thethirdlinehasthecumulativescoreforeachframe: 3digitnumberand2spaces.
Thegameshownabovewouldhavethefollowingoutput.
1 2 3 4 5 6 7 8 9 10
8/ 9- X X 6/ 4/ X 8- X XXX
19 28 54 74 88 108 126 134 164 194
508 Chapter 40. Bowling Scores
CHAPTER
FORTYONE
MUSICAL PITCHES
Amusicianwillcallthefrequencyofasoundits pitch. Whenthefrequenciesoftwopitchesdiﬀerbyafactor
oftwo,wesaytheyharmonize. Wecallthisintervalbetweenthetwopitchesan octave. Thisperceptionof
harmonyhappensbecausethetwosoundsreinforceeachothercompletely. Indeed,somepeoplehavetrouble
tellingtwonotesapartwhentheydiﬀerbyanoctave.
Thistrivialexampleofharmonyistrueforallpowersoftwo,including ...,1/8,1/4,1/2,1,2,4,8, ....
ClassicalEuropeanmusicdividedthatperfectlyharmonious“factoroftwo”intervalintoeightasymmetric
steps;forthishistoricalreason,itiscalledanoctave. Otherculturesdividethissameintervalintodiﬀerent
numbersofstepswithdiﬀerentintervals.
MoremodernEuropeanmusicfurthersubdividestheoctave,creatinga12-stepsystem. Themostmodern
versionofthissystemhas12equallyspacedintervals,anetsimpliﬁcationovertheolder8-stepsystem. The
pitchesareassignednamesusing ﬂats(♭)and sharps(♯),leadingtoeachpitchhavingseveralnames. We’ll
simplifythissystemslightly,andusethefollowing12namesforthepitcheswithinasingleoctave:
•A
•A♯
•B
•C
•C♯
•D
•D♯
•E
•F
•F♯
•G
•G♯
Theeightundecoratednames(AthroughGandanAwithafrequencydoubletheoriginalA)formour
basicoctave;theadditionalnoteshighlighttheinterestingasymetries. Forexample,theintervalfromAto
Biscalledawholesteporasecond,withA ♯beinghalf-waybetween. TheintervalfromBtoC,however
isonlyahalfsteptobeginwith. Also,itiscommontonumberthevariousoctavesasthoughtheoctaves
beginwiththeC,nottheA.So,somemusiciansconsiderthebasicscaletobeC,D,E,F,G,A,B,witha
Cinthenexthigheroctave. ThehigherCistwicethefrequencyofthelowerC.
509
Building Skills in Python, Release 2.6.5
Thetuningofaninstrumenttoplaythesepitchesiscalledits temperament. Acheckonthewebforreference
materialontuningandtemperamentwillrevealsomeinterestingwaystoarriveatthetuningofamusical
instrument. Itissuprisingtolearnthattherearemanyotherwaystoarriveatthe12stepsofthescale.
Thisdemonstratesthatoureariseitherremarkablyinaccurateorremarkablyforgivingoferrorsintuning.
We’ll explore a number of alternate systems for deriving the 12 pitches of a scale. We’ll use the simple
equal-temperamentrules,pluswe’llderivethepitchesfromtheovertoneswehear,plusamoremusicalrule
calledthe circle of ﬁfths,aswellasasystemcalled Pythagorean T uning .
Interestingsidetopicsarethequestionsofhowaccuratethehumanearreallyis, andcanwereallyhear
thediﬀerences? Clearly, professionalmusicianswillspendtimeoneartrainingtospotﬁnegradationsof
pitch. However, even non-musicians have remarkably accurate hearing and are easily bothered by small
discrepenciesintuning. Musicianswilldividetheoctaveinto1200cents. Errorsontheorderof50cents,
1/24oftheoctave,arenoticableeventopeoplewhoclaimtheyare“tonedeaf”. Whentwotuningsproduce
pitcheswitharatiolargerthan1.0293,itiseasilyrecognizedasoutoftune.
Theseexerciseswillmakeextensiveuseofloopsandthelistdatastructure.
41.1 Equal T emperament
Theequaltemperamenttuningdividestheoctaveintotwelveequallysizedsteps. Movingupthescaleis
donebymultiplyingthebasefrequencybysomeamountbetween1and2. Ifwemultiplyabasefrequency
by2ormore,wehavejumpedtoanotheroctave. Ifwemultiplyabasefrequencybyavaluebetween0and
0.5,wehavejumpedintoaloweroctave. Whenwemultiplyafrequencybyvaluesbetween0.5and1,we
arecomputinglowerpitchesinthesameoctave. Similarly,multiplyingafrequencybyvaluesbetween1and
2computesahigherpitchinthesameoctave.
Wewanttodividetheoctaveintotwelvesteps: whenwedoasequenceoftwelvemultipliesbythisstep,we
shouldarriveatanexactdoublingofthebasefrequency.
Thestepsoftheoctave,then,wouldbe b, b×s, b×s×s, ..., b×s12.
Thisstepvalue,thereforeisthefollowingvalue.
s=elog2
12
Ifwemultiplythis12timesforeachofthe12steps,weﬁndthefollowing.
s12=e12log2
12= 2
Foragivenpitchnumber, p,from0to88,thefollowingformulagivesusthefrequency. Wecanplugina
basefrequency, bof27.5HzforthelowAonapianoandgettheindividualpitchesforeachofthe88keys.
f=b×2p=b×eplog2
12 (41.1)
Actualpianotuningisabitmoresubtlethanthis,butthesefrequenciesareveryclosetotheidealmodern
pianotuning.
EqualTemperamentPitches . Developalooptogeneratethesepitchesandtheirnames. Ifyoucreatea
simpletupleofthetwelvenamesshownabove(fromAtoG ♯),youcanpickoutthepropernamefromthe
tupleforagivenstep, s,using‘int( s % 12 ) ’.
CheckYourResults . Youshouldﬁndthatan“A”hasapitchof440,andthe“G”tenstepsaboveitwill
be783.99Hz. This440Hz“A”isthemostwidelyusedreferencepitchfortuningmusicalinstruments.
510 Chapter 41. Musical Pitches
Building Skills in Python, Release 2.6.5
41.2 Overtones
Aparticularmusicalsoundconsistsofthefundamentalpitch,plusasequenceof overtonesofhigherfrequency,
butlowerpower. Thedistributionofpoweramongtheseovertonesdeterminesthekindofinstrumentwe
hear. Wecancalltheovertonesthespectrumoffrequenciescreatedbyaninstrument. Aviolin’sfrequency
spectrumisdistinctfromthefrequencyspectrumofaclarinet.
Theovertonesareusuallyintegermultiplesofthebasefrequency. WhenanyinstrumentplaysanAat440
Hz,italsoplaysA’sat880Hz,1760Hz,3520Hz,andontohigherandhigherfrequencies. Whileweare
notoftenconsciouslyawareoftheseovertones,theyareprofound,anddeterminethepitchesthatweﬁnd
harmoniousanddiscordant.
Ifweexpandthefrequencyspectrumthroughtheﬁrst24overtones,weﬁndalmostallofthemusicalpitches
inourequaltemperedscale. Somepitches(theoctaves,forexample)matchprecisely,whileotherpitches
don’tmatchverywellatall. Thisisaspreadofalmostﬁveoctavesofovertones,aboutthelimitofhuman
hearing.
Evenifweusealowbasefrequency, b,of27.5Hz,itisn’teasytocomparethepitchesforthetopovertone,
b×24, with a lower overtone like b×8: they’re in two diﬀerent octaves. However, we can divide each
frequencybyapowerof2,whichwillnormalizeitintothelowestoctave. Oncewehavethelowestoctave
version of each overtone pitch, we can compare them against the equal temperament pitch for the same
octave.
Thefollowingequationcomputesthehighestpowerof2, p2,foragivenovertonemultiplier, m,suchthat
f
2< b×2p2≤f.
p2=⌊logm
log2⌋
(41.2)
Giventhishighestpowerofhighestpowerof2, p2,wecannormalizeafrequencybysimpledivisiontocreate
whatwecouldcallthe ﬁrst octave pitch ,f0.
f0=f
2p2(41.3)
Thelistofﬁrstoctavepitchesarrivesinapeculiarorder. You’llneedtocollectthevaluesintoalistand
sortthatlist. Youcanthenproduceatableshowingthe12pitchesofascaleusingtheequaltemperament
andtheovertonesmethod. Theydon’tmatchprecisely,whichleadsustoaninterestingmusicalquestionof
whichsounds“better”tomostlisteners.
Overtone Pitches . Develop a loop to multiply the base frequency of 27.5 Hz by values from 3 to 24,
computethehighestpowerof2requiredtonormalizethisbackintotheﬁrstoctave, p2,andcomputethe
ﬁrstoctavevalues, f0. Savetheseﬁrstoctavevaluesinalist,sortit,andproduceareportcomparingthese
valueswiththeclosestmatchingequaltemperamentvalues.
Notethatyouwillbeusing22overtonemultiplierstocomputetwelvescalevalues. Youwillneedtodiscard
duplicatesfromyourlistofovertonefrequencies.
CheckYourResults . Youshouldﬁndthatthe6thovertoneis192.5Hz,whichnoralizesto48.125inthe
ﬁstoctave. Thenearestcomparableequal-temperedpitchis48.99Hz. Thisisanaudiblediﬀerencetosome
people;thethresholdformostpeopletosaysomethingsoundswrongisaratioof1.029,thesetwodiﬀerby
1.018.
41.3 Circle of Fifths
Whenwelookattheovertoneanalysis, thesecondovertoneisthreetimesthebasefrequency. Whenwe
normalizethisbackintotheﬁrstoctave,itproducesanotewiththefrequencyratioof3/2. Thisisalmost
41.2. Overtones 511
Building Skills in Python, Release 2.6.5
asharmoniousastheoctave,whichhadafrequencyratioofexactly2. Intheoriginal8-stepscale,thiswas
the5thstep;theintervaliscalleda ﬁfthforthishistoricalreason. Itisalsocalleda dominant. Lookingat
thenamesofournotes,thisis“E”,the7thstepofthemoremodern12-stepscalethatstartson“A”.
This pitch has an interesting mathematical property. When we look at the 12-step tuning, we see that
numberslike1,2,3,4,and6dividethe12-stepoctaveevenly. However,numberslike5and7don’tdivide
theoctaveevenly. Thisleadstoaninterestingcycleofnotesthatareseparatedbysevensteps: A,E,B,F
♯,C♯,....
Wecanseethisclearlybywritingthe12namesofnotesaroundtheoutsideofacircle. Puteachnoteinthe
positionofanhourwithAinthe12-o’clockposition.
Youcanthenwalkaroundthecircleingroupsofsevenpitches. Thisiscalledthe Circle of Fifths because
weseeall12pitchesbysteppingthroughthenamesinintervalsofaﬁfth.
Thisalsoworksforthe5thstepofthe12-stepscale;theintervaliscalleda fourthintheold8-stepscale.
Lookingatournotenames,itisthe“D”.Ifweusethisinterval,wecreatea Circle of F ourths .
Writetwoloopstosteparoundthenamesofnotesinstepsof7andstepsof5. Youcanusesomethinglike
‘range( 0, 12*7, 7 ) ’or‘range( 0, 12*5, 5 ) ’togetthesteps, s. Youcanthenuse‘ names[s % 12] ’
togetthespeciﬁcnamesforeachpitch.
You’llknowthesebothworkwhenyouseethatthetwosequencesarethesamethingsinoppositeorders.
CircleofFifthsPitches . Developaloopsimilartotheoneintheovertonesexercise;usemultipliersbased
on3/2: 3/2,6/2,9/2,.... tocomputethe12pitchesaroundthecircleofﬁfths. You’llneedtocomputethe
highestpowerof2,using( 41.2),andnormalizethepitchesintotheﬁrstoctaveusing( 41.3).
Savetheseﬁrstoctavevaluesinalist,indexedby‘ s % 12’;youdon’tneedtosortthislist,sincethepitch
canbecomputeddirectlyfromthestep.
RationalCircleofFifths . UsethePythonrationalnumbermodule, fractionstodothesecalculations,
also.
CheckYourResults . Usingthismethod,you’llﬁndthat“G”couldbedeﬁnedas49.55Hz. Theovertone
analysissuggested48.125Hz. Theequaltemperamentsuggested48.99Hz.
41.4 Pythagorean T uning
Whenwedothecircleofﬁfthscalculationsusingrationalnumbersinsteadofﬂoatingpointnumbers, we
ﬁndanumberofsimple-lookingfractionslike3/2,4/3,9/8,16/9inourresults. Thesefractionsleadtoa
geometricalinterpretationofthemusicalintervals. Thesefractionscorrespondwithsomeearlywritingson
musicbythemathematicianPythagoras.
We’llprovideonesetofcommonly-usedlistoffractionsforPythagoreantuning. Thesecanbecompared
512 Chapter 41. Musical Pitches
Building Skills in Python, Release 2.6.5
withotherresultstomakethewholequestionofscaletuningevenmorecomplex.
A 1 : 1
A♯ 256 : 243
B 9 : 8
C 32 : 27
C♯ 81 : 64
D 4 : 3
D♯ 729 : 512
E 3 : 2
F 128 : 81
F♯ 27 : 16
G 16 : 9
G♯ 243 : 128
PythagoreanPitches . Developasimplerepresentationfortheaboveratios. Alistoftuplesworkswell,
forexample. Usetheratiotocomputethefrequenciesforthevariouspitches,using27.5Hzforthebase
frequencyofthelow“A”.Comparethesevalueswithequaltemperament,overtonesandcircleofﬁfthstuning.
CheckYourResults . Thevaluefor“G”is 27.5×16÷9 = 48 .88Hz.
41.5 Five-T one T uning
Thesubjectofmusicisrichwithculturalandpoliticalovertones. We’lltrytoavoiddelvingtoodeeplyinto
anythingoutsidethebasicaccousticpropertiesofpitches. Oneofthemostpopularalternativescalesdivides
theoctaveintoﬁveequally-spacedsteps. Thistuningproducespitchesthataredistinctfromthoseinthe
12pitchesavailableinEuropeanmusic.
Theoriginalmusicaltraditionbehindthebluesonceusedaﬁvestepscale. Youcanrevisetheformulain
(41.1)touseﬁvestepsinsteadoftwelve. Thiswillprovideanewtableoffrequencies. Theintervalsshould
becalledsomethingdistinctivelike“V”,“W”,“X”,“Y”,“Z”and“V”inthesecondoctave.
Five-TonePitches . Developaloopsimilartothe12-toneEqualTemperament( Equal T emperament )to
createthe5-tonescalepitches. Notethatthe12-tonescaleleadsto88distinctpitchesonapiano;this5-tone
scaleonlyneeds36.
Compare12-Toneand5-ToneScales . Produceathreecolumntablewiththe12-tonepitchnamesand
frequenciesalignedwiththe5-tonefrequencies. Youwillhavetodosomecleversortingandmatching. The
frequenciesfor“V”willmatchthefrequenciesfor“A”precisely. Theotherpitches,however,willfallinto
gaps.
Theresultingtableshouldlooklikethefollowing
name12freq.name5freq.
A440.0V440.0
A#466.16
B493.88
W505.42
41.5. Five-T one T uning 513
Building Skills in Python, Release 2.6.5
514 Chapter 41. Musical Pitches
CHAPTER
FORTYTWO
WHA T CAN BE COMPUTED?
ThisprojectwilllookatFiniteStateMachines,oneofthefoundationsofcomputing. We’llprovidesome
backgroundonwhytheseareimportantinBackground. InTheTuringMachinewe’lldiscusstheTuring
Machineinsomedetail. We’llprovideanexampleinExampleMachine.
TheessentialexerciseistowritethenecessaryPythonsoftwaretoemulateaTuringMachine. We’lllookat
theimplementationcloselyinTuringMachineImplementation. Exercise1istheﬁrstsetofprogramming
exercises.
In T est Machines we’lllookatsomebasicTuringMachinespeciﬁcationsthatwecanusefortesting. Exercise
2willimplemnetsomeofthoseadditionalmachinestoactasconﬁrmationandasunittests.
Asadigression,we’llprovideadditionalbackgroundinConsequences. Thisbackgroundanswerssomeofthe
questionsraisedintheBackgroundsection.
WecanthenlookatfurtherapplicationsofFiniteStateMachinesinOtherApplications. Thisincludessome
simplelexicalscanningandparsingapplications.
We’lllookatsomevariationsontheimplementationofourTurningMachineinAlternativeSpeciﬁcations
42.1 Background
In the 1930’s – at the very dawn of digital computation – mathematician Alan Turing wondered what
numberscouldbecomputedbyadigitalcomputer. Indirectly,hewaswonderingwhat shouldacomputer
bedesignedtodo. Whatwasasensiblesetofconstraintsorparametersaroundcomputerandprogramming
language?
Atthattime“computer”wasaperson’sjobtitle. Amathematician,likeAlanTuring,wouldcreatework-
sheetsforpeopletouseincomputingaparticularresult. TuringworkedoncodebreakingduringWorldWar
II,andhis“computers”werepeoplewhocarriedoutrathercomplexanalysesofcodedmessages. Turing
preparedtheinstructionsandworksheetsforhiscomputerstodecodeinterceptedmessages.
The question of computable numbers – to modern programmers – can seem a bit silly. The unthinking
answeristhatdigitalcomputerscanrepresentanynumber.
Butwehaveabitofaproblem. Mathematicianshaveidentiﬁedaprettywidevarietyofnumbers. Canwe
representallrationalfractions? Whataboutallirrationaldecimals? Whataboutallcomplexnumbers? Are
thereyetotherkindsofnumbersthatacomputercan’trepresent?
Theessentialquestionis“whatnumbers shouldwebeabletocomputewithPython?”
Python. Thisessentialcomputabilityquestiondeﬁneshowwedesigncomputerhardwareandhowwedesign
programminglanguages. Theﬁrststep,thenistodeﬁnewhatiscomputable. Clearly,alanguagelikePython
musthavesomeminimalsetoffeatures. Further,theremustbesomestandardof“computability”thata
515
Building Skills in Python, Release 2.6.5
languagedesignermustrespectincreatingthelanguage. Inthenextsection,we’lllookatthesubjectof
computability.
Onceweagreeonwhatiscomputable, wecanthenmatchagivenprogramminglanguage(e.g., Python)
againstthedeﬁnitiontoseeifourprogramminglanguageiscomplete. Thissoundslikeadaunting,heavy-
weightmathematicalproof,butactually,it’srelativelysimple. Inthissection,we’llconstructtheproofthat
Pythonisacompletelanguage. Really.
Thedeﬁnitionof“computable”isbasedonahypotheticalmodelofa“computer”.Wecan(andwill)buildthat
hypotheticalcomputermodelinPython. ThePythonprogramthatimplementsthehypotheticalcomputer
istheconstructiveproofthatthePythonlanguagecompletelyﬁtsthehypotheticalmodelofcomputability.
Theessentialnotionofcomputabilityisbasedontheideaofcomputablenumbers. Sowe’lllookatthose
brieﬂy.
Numbers. Acommonmistakeistoclaimthattherearejust“numbers”. Thisisclearlyuntrue. Wecan
easilydeﬁne“natural”numberswithapleasantsetofaxioms. Wecansaythatwehaveaﬁrstnumber,
callit“0”. Wecandeﬁneasuccessornumbers,andthepropertiesofequalityandcreateaninﬁnitesetof
numbers. Yes,thereareaninﬁnitesetofnumbers. Butwehavethisconceptofsuccessor,so–inprinciple
–wecancountthisset.
Interestingly,thissetdoesn’tincludenegativenumbers.Okay,ﬁne,we’lladdnegativenumberstoourinﬁnite
setofnaturalnumbers,andwehavealargerinﬁnitesetofnumbers. Turnsout,wecanworkoutamapping
fromnaturalnumberstosignednumbers. Thismakesthesetofsignedintegers“countablyinﬁnite”.
Thelongclassisaphysicalimplementationofthisabstactconceptofsignednaturalnumber. Also, the
decimal.Decimal class,withaﬁxeddecimalpoint,isessentiallythesamekindofnumber.
This set of integers doesn’t include any fractions. We can easily deﬁne an inﬁnite set of fractions using
any two of our inﬁnite set of natural numbers. This gives us a set of rational numbers that’s obviously
alsoinﬁnite. Itseemstobealargerset,butwecanworkoutamappingfromnaturalnumberstorational
fractions. Thismakestherationalnumbers“countablyinﬁnite”,also.
TheRationalclass(see Rational Numbers )isanimplementationofthisabstractconceptofrationalnumber.
YetMoreNumbers . Thesetofrationalnumbers,however,stillisn’ttheﬁnalword. Wecandeﬁnesome
“algebraicnumbers”,whicharesolutionstoequationsthataren’trationalnunmbers. Forinstance,solving
thispolynomialfor x,x2−2 = 0. Theansweris x=√
2;norationalnumbercansatisfythis. Thismeans
thattheremustbe“irrational”numbers.
We can combine the irrational and rational numbers into a big set of numbers, commonly called “real”
numbers.
If we start writing down numbers as long strings of decimal digits (or binary bits) we can – with some
cleverness–createnumbersthatwecannoteasilymaptothenaturalnumbers. Thismeansthatinﬁnite
decimalfractionsformalargersetofnumbersthat’s“uncountablyinﬁnite”. Rats.
Thefloatclassisaﬁniteimplementationtheseinﬁnitebinaryfractions. Sincethe floatclassisactually
ﬁnite,itsuﬀersfromsomepracticallimitations,but,inspirit,itisintendedtofollowthiskindofnumber.
We’restillnotdone. solvingthispolynomialfor x,x2+ 1 = 0,leadsusto complexnumbers.
Okay. Fine,therearealotofnumbers. Theﬁrstquestionis,“areallofthesecomputable?” Essentially,we
arealsoasking“canwedeﬁne‘computable’?” We’dreallylikeaconstructivedeﬁnitionofcomputablethat
matchesourvaguenotionsofwhatacomputer shoulddo.
ProfoundLimitations . Forpurposesofsimpliﬁcation,weneedtosetasidethe“ﬁnite”partofphysical
computersanddiscussahypotheticalinﬁnitecomputer. Whyshouldtalkabouttheoreticalcomputers?
Theideabehindthisistodivorceasimple, formaldeﬁnitionofcomputerfromanyspeciﬁcandcomplex
pieceofhardware. Ifwetrytodiscussspeciﬁcpiecesofhardware, wehavelotsofweirdlimitationsand
516 Chapter 42. What Can be Computed?
Building Skills in Python, Release 2.6.5
gotchasbasedonlimitedmemory,availablepower,limiteddesktopspace,dissipationofheat,radio-frequency
interference,lawsofphysicas,etc.
Thepointistoﬁrsttalkaboutwhat’s possiblebeforetalkingaboutwhat’spractical. Beforeweevenstart,
weneedtoknowifthereanyprofoundlimitationsonwhat’spossible. Sincetheansweris“yes”,thereare
theoreticallimitations,weneedtoknowexactlywhatthoselimitationsare.
Goals. Fundamentally,theoverallgoalhastwoparts.
1.ShowthatthereisaTuringMachinewhichcancomputeanyparticularmathematicalfunction. This
deﬁnesthetheoreticalpossibilitiesforcomputablenumbers. We’llskipoverthis.
2.CreateaPythonimplementationofaTuringmachine. ThiswillestablishthatthePythonlanguageis
–inprinciple–capableofallthetheoreticalcomputations.
We’lltrustthemathematiciansthattheTuringMachine’scomputablenumbersareagoodmatchforwhatwe
understandnumberstobe.Itturnsoutthatthematchisn’tperfect;we’lllookatthisbrieﬂyinConsequences.
42.2 The T uring Machine
To talk about computability, we need a general-purpose (and simple) model for a computer. We need
somethingthatwecandeﬁneclearlyandcompletely. Wealsoneedsomethingthatcaptureswhatwemean
by “compute”. We need input, output, state change, and some kind of “program” to control those state
changes.
We’llcallourtheoreticalcomputeraTuringMachine,namingitaftermathematicianAlanTuring.
Theessentialfeatureofallcomputationisstatechange. Weintroducedtheideain V ariables, Assignment
and Input. Therefore,ahypotheticalcomputermusthavesomecurrentinternalstateandsomerulesfor
changingtheinternalstatebasedoninputs.
Thisinternalstateisassimpleasﬂagormarkerthatidentiﬁeswhichtransitionrulesareactive. Ifwewere
tonumbereachrule,thestatewouldbethecurrentrulenumber. Ifwehadapersonfollowinginstructions
onaworksheet,wemightaskthemtoputaremovablesticky-noteonthesteptheywerefollowingsothey
wouldn’tlosetheirplace.
Inadditiontointernalstate,weneedsomeformofinput,outputand(possibly)workingmemory. Turing’s
ideawastouseaninﬁnitelylongtapeforthis. [Inﬁnite? Yes. It’sanabstraction;weneedtodeﬁnetheset
ofcountablyinﬁnitenumbers,soweneedaninﬁnitetape.]
Theideaisthatwecanmarkthetapewithsomevalues,startthemachineprocessing. Whenitstops,we
canlookatthetapetoseetheanswer.
Alphabet. Ourmachinemustbeabletorecordstateonthetape. Weneedtodeﬁnesomealphabetof
symbols. Aminimalalphabetistwodistinctsymbolsandnothingmore. Wecoulduse‘ X’and‘O’orand
⊙. Wecouldusealargeralphabetofthe128ASCIIcharactersthatPythonuses. Orwecouldusethevast
libraryofUnicodesymbols.
Theonlyrestrictionisthatthesymbolsaredistinctandthealphabetofsymbolsislimitedandknownin
advance. Fornow,we’llsticktojusttwosymbols.
TheTape. OurTuringmachine,then,hasasit’svisiblecomponent,atapewhichshuttlesbackandforth
underaread/writestation. Or,wecouldthinkofalittleread/writedevicethatwalksupanddownalong
tapelaidoutontheﬂoorofavastbuilding.
TherearesomegreatYouTubevideosofTurningMachines. Feelfreetowatchthoseforabettersenseof
thataTuringMachinemightbelike.
42.2. The T uring Machine 517
Building Skills in Python, Release 2.6.5
Theinterestingpartisthe“current”positionoftheread/writedevicerelativetothetapeitself. Here’sa
sampletapewithafewsymbols. We’llusebracketstoshowwheretheread/writedeviceispositioned.
♢♢♢ [♣]♠♢...
Clearly,thisalphabetincludesatleastthesymbols: ♢,♣,♠.
Also,thecurrentpositionisthefourthoneonthetape.
TheRules. OurTurningMachinehasaninternalstatetorememberwhereitis,aninﬁnitetapethatis
input,outputandworkingmemory. Italsohassomerulesfordecidingwhattodo. Tokeepthingssimple,
eachruleincludesthefollowingthings:
•Symbol. Thisisthesymboltobematchedagainstthecurrentsymbolonthetape. Sincethealphabet
isﬁnite,we’llhaveonerulepersymbol.
•Write. Writeanewsymbolordonowriting,leavingthetapeunchanged. Apuristcouldarguethat
writingthematchedsymbolbacktothetapeisthesameasnotwriting.
•Move. Themachinecanmovethetapeforwardone,backwardone,ornotatall.
•NextState. Thisnextstateisthesameordiﬀerentcollectionofrules.
Thiscanbesimpliﬁed. Itcanalsobemademorecomplex. We’lllookatsomealternativesbelow. Fornow,
thiswillgiveusenoughtoworkwith.
Foragivestate,wehaveasetofrulesthatspeciﬁesthemovingandwritingforeachpossiblesymbol. Ifwe
haveasmallalphabetofjusttwosymbols,eachstatehasonlytworules. Ifwehavealargeralphabet,each
statemusthavealargernumberofrules.
Halting. It’ssometimeshelpfultohaveaspecialruletostopthemachinefromfurtherprocessing. This
haltruleissimplyaspecialcaserulethatdoesn’thaveanextstate. Insteadofgoingtoanextstate,the
machinestopsworking.
Arulethatdoesn’twrite,doesn’tmoveandspeciﬁesnostatechangemusthalt,sincethemachinewillstay
inthatstateforever.
42.3 Example Machine
Let’suseaverysmallalphabetof and⊙.
We’lldeﬁneaverysimplemachinetocheckthe“parity”ofatape. Wewanttobesurethatnumberof 
symbolsiseven. Ifit’sodd,we’llwriteanextra symbol. Ifit’seven,we’llwriteanextra ⊙.
Thiskindofalgorithmisusedwith7-bitASCIIcharacterstocreate8-biteven-parityfortransmissionacross
noisywires. Ifthereceived8-bitvaluedoesnothaveevenparity,thecharacterisignored.
Herearethetwostates.
1.Even. If: writenothing,movetapeforward,changetostate 1.
If⊙: writenothing,movetapeforward,stayinstate 0.
Ifblank: write⊙,changetostate 2.
2.Odd. If: writenothing,movetapeforward,changetostate 0.
If⊙: writenothing,movetapeforward,stayinstate 1.
Ifblank: write ,changetostate 2.
3.Halt. Forallsymbols,writenothing,donotmove,changetostate 2.
518 Chapter 42. What Can be Computed?
Building Skills in Python, Release 2.6.5
Let’slookathowthisworkswithasampletape.
1.Themachinestartsinthe State0. Thetapehasﬁvesymbols,andwe’repositionedatthestart. This
isthestartingcondition.
[]⊙⊙...
2.ThestateisState0. Thesymbolis ,sothemachinemovesthetapeforwardandswitchesto State
1.
[]⊙⊙...
3.ThestateisState1. Thesymbolis ,sothemachinemovesthetapeforwardandswitchesto State
0.
  [⊙]⊙...
4.ThestateisState0. Thesymbolis⊙,sothemachinemovesthetapeforwardandstaysin State0.
 ⊙[]⊙...
5.ThestateisState0. Thesymbolis ,sothemachinemovesthetapeforwardandswitchesto State
1.
 ⊙[⊙]...
6.ThestateisState1. Thesymbolis⊙,sothemachinemovesthetapeforwardandstaysin State1.
 ⊙⊙[ ]...
7.ThestateisState1andthetapeisblank: themachinemovesthetapeforward,writes andchanges
toState0.
 ⊙⊙[]...
8.ThestateisState0andthetapeisblank: themachinewritesa ⊙andchangestoState2.
 ⊙⊙[⊙]...
9.InState2,themachinehalts. Thereareanevennumberof onthetape.
 ⊙⊙[⊙]...
42.4 T uring Machine Implementation
OurjobistowriteaPythonscriptthatsimulatesthiskindofTuringMachine. Theexistenceofsucha
scriptisproofthatthePythonlanguagedoeseverythingaTuringMachinedoes. (Separately,weneedto
provethataTuringMachinedoeseverythingthatamathematiciancouldeverwant.)
We’llneedamodelofthetape. APythonlistcanaccomplishthisnicely, wecanpopulatethelistwith
symbolslikethis:
42.4. T uring Machine Implementation 519
Building Skills in Python, Release 2.6.5
tape=['X','X','O','X','O',None,None,None]
Byaddingabunchofblankcellsattheendofthetape,wecansimplifyourimplementation. Theoretically,
wehaveaninﬁnitenumberofblankcellsonthetape;thereforeawell-writtenTuringMachineprogramwill
simplyappnedemptycellstothelistaslongasnecessary. Togetstarted,though,it’seasytosimplypad
thetapwithblankcells.
We’llneedamodeloftherules. Eachrulecanbeencodedasatuple(ornamedtuple)thathastherequired
statechange: thetapemovement,symboltowriteandthenextstate.
Rule=namedtuple( 'Rule', ['write','move','state'] )
Forthewriteattribute,wecanprovidethesymboltobewritten,or Noneifnothingistobewritten.
Forthemoveattribute,wecanusethevalues +1,-1orNone.
Forthestateattribute,wecanprovidethenumberofthenextstate,or Noneifthemachineshouldhalt.
Wecanthencodeeachstateofourmachineasadictionaryofrulesthatmapasymbolonthetapetoa
statechangetuplethatshowswhattodo.
rule_0_map ={
'X': Rule(None,+1,1),
'O': Rule(None,+1,0),
None: Rule(None,None,None) }
Wecanthencodeourtransitionrulesasawholeasadictionarythatmapsrulenumberstorules.
transitions ={
0: rule_0_map,
1: rule_1_map,
}
InordertosimulateaTuringMachine,weneedthefollowingthings:
•Theinitialtape.
•Thetransitions,whichisadictionarythatmapsastatetoasetofrules. Eachrulemapsatapesymbol
toastatechange.
•Astartingstatenumberandstartingtapeposition.
ArelativelysimplyPythonfunctioncanthenstepthroughthisTurningmachinecycleuntilthemachine
halts.
T uring Machine Function
Let Tbeatape,alistofsymbols.
Let Mbe the complete set of machine states and rules, M={S0, S1, S2, ...}. Each state is set of rules
mappingfromasymbol, C,toastatechange, Sn={C0→⟨w, m, r⟩0, C1→⟨w, m, r⟩1, ....}. Eachstate
change,⟨w, m, r⟩speciﬁeswhatsymboltowrite, w,whatdirectiontomove, m,andthenextstate, r.
1.Initialize. Settheinitialtapeposition, Pto0,thestartofthetape. Setthecurrentstate, Stostate0.
1.Cycle. Whilethemachine’sstateisnotthehaltstateof None.
520 Chapter 42. What Can be Computed?
Building Skills in Python, Release 2.6.5
(a)Eval. Set Ctothesymbolatthecurrentposition, P,onthetape, T.
Givencurrentstate, S,andcurrentsymbol, C,determinewhichstatechangetouse.
(b)Apply. Giventhestatechange, ⟨w, m, r⟩,dothefollowing.
•Ifindicated,writetherequestedsymbol, w,inthenewposition. Thisupdatesthetape, T
andthecurrentposition, P.
•Movethetapeintheappropriatedirection. Thisupdatesthecurrentposition, P:nextis
m= +1,previousis m=−1. Nomovementis None.
Movingthetapetothenextpositionmayrequireextendingthetape’s listobjecttoadda
blankcell.
•Setthecurrentstate, S,tothenextcurrentstate, r.
(c)Log. Optionally,printthecurrentstateofthemachinetoalog.
2.Display. Printtheﬁnalstateandﬁnalcontentofthetape.
42.5 Exercise 1
1.DeﬁneafunctionthatimplementsthebasicTuringMachine.
turing(transitions, tape )
Acceptsadictionaryoftransitionrulesandaninputtape. Startsinrule0withtapeatposition
0. Executesthevarioustransitionsuntilthemachinereachesatransitionwherethenextstateis
None,thenithalts.
Printsalogshowingthetapeasitmovesandchanges.
2.Createasetoftransitionstodothe“EvenX”processing. Ifthenumberof“X”sonthetapeeven,
halt. Ifthenumberof“X“‘sonthetapeisodd,appendan“X”andhalt.
42.6 T est Machines
ThepointofdeﬁningthisTuringMachineistodeﬁnewhat’sComputable. Let’sstartbycomputingvarious
kindsofnaturalnumbers.
Let’ssaytheinputwillencodenumbersofasasequenceof "X"terminatedbyatleastone "O".
Forexample,
•Zeroisatapewith‘ ["O"]’.
•Oneisatapewith‘ ["X", "O"]’.
First,considercreatingamachinetodoasimple“add1”operation.
Add 1 Machine
1.Ifsymbolis‘ ["O"]’: don’tmove,write‘ ["X"]’,changetostate2.
Ifsymbolis‘ ["X"]’: movetothenextcell,stayinstate1.
2.Forallsymbols,movetothenextcell,write“O”,changetostate3.
3.Forallsymbols,halt.
42.5. Exercise 1 521
Building Skills in Python, Release 2.6.5
Second,considercreatingamachinetodoasimple“subtract1”operation.
Subtract 1 Machine
1.Ifsymbolis‘ ["O"]’: Movetothepreviouscell,switchtostate2. Notethatifthetapehaszero,this
willfallofthefrontofthetape,breakingthemachine.
Ifsymbolis‘ ["X"]’: movetothenextcell,stayinstate1.
2.Forallsymbols,write‘ ["O"]’,changetostate3.
3.Forallsymbols,halt.
Wecanseethatwithan“add1”machineanda“subtract1”machine,wecandoagreatdealofmathematics
onnaturalnumbers.
AddTwoNumbers . Consideramachinethatwilladdtwonumbers. We’dstartwithatapethatencoded
twonumbers,forexample‘ ["X", "X", "O", "X", "X", "X", "O"] ’.
Thismachinewouldterminatewithasumwithsomeextra‘ "O"’symbols. Aresultlike‘ ["O", "O", "O",
"X", "X", "X", "X", "X", "O"] ’wouldbeexpected.
Wecanimplementthisbycombiningour“add1”and“subtract1”machines. Weneedtoan“add1”to
theright-handnumberanda“subtract1”ontheleft-handnumberuntiltheleft-handnumbervanishesin
aﬂurryof‘ "O"’symbols.
SubtractTwoNumbers . Wecanalsosubtracttwonumbers. We’dstartwithatapethatencodedtwo
numbers,forexample‘ ["X", "X", "O", "X", "X", "X", "O"] ’.
Thismachinewoulddo“subtract1”fromeachnumberuntiloneofthemhasbeenreducedtozero.Depending
onthelocationsofthe‘ "O"’symbolswehaveapositiveornegativeresult.
YetMoreMath . Multiplicationisrepeatedaddition. Giventwonumbers,callthem, land r,we’ddothis
via(1)copy rtotheendofthetapeand(2)subtract1from luntil rwasreducedtozero.
Youcanalsothinkofthismachineahavingthreenumbersonthetape: land rand p. Themachinewould
startbycreatinganextra‘ "O"’attheendofthetapeto,eﬀectivelyset ptozero. Thenthecycleis“addr
top”and“subtract1froml”,bothofwhichwe’vealreadyimplemented.
Division,similarly,isrepeatedsubtraction. Giventwonumbers,callthem, land r,createathirdnumber,
qattheendofthetape. Todivide land r,subtract rfrom landadd1to q. Thisisrepeateduntil lisless
than r.
Notethat“comparison”iseasilydoneviasubtraction. However,thesubtractiondeﬁnedaboveis“destruc-
tive”,inthatitupdatesbothnumbers. Onewaytohandlethisistomakeacompletecopyof land rfor
comparisonpurposes.
Optimization . Notethatthesenaiverepeatedadditionalorrepeatedsubtractionalgorithmsareineﬀicient.
Thepointistodeﬁnewhat’scomputableinprinciple. Onceweknowwhat’scomputable,wecanworkat
optimizationlater.
42.7 Exercise 2
1.Buildthe“add1”and“subtract1”machines.
2.Builda“testdriver”program. Thiswillexeriseagivenmachinewithparticularinputsandcheckthe
outputs.
522 Chapter 42. What Can be Computed?
Building Skills in Python, Release 2.6.5
You’llneedafunctiontocreateaninputtapefromasimpletuple. Atuplelike‘ (2, 3)’shouldcreate
atapeof‘ ["X", "X", "O", "X", "X", "X", "O"] ’.
You’llneedafunctiontosummarizetheresultingtapeintoasimpletuple. Atapelike‘ ["X", "X",
"X", "O", "X", "X", "O"] ’shouldproducethetuple‘ (2, 3)’.
Youcanthendeﬁneamachine,andaninputtape. Theresultingtapecanbeeasilycheckedforthe
rightanswer.
Oncewehavethetestdriver,wecanexploresomealternateimplementations. Wecanalsoexploresome
alternatedeﬁnitionsofTuringMachineprocessingrules.
42.8 Better Implementations
Theinitialimplementation(usingvariouskindsofstringsandintegers)suﬀersfromanumberofproblems.
Wecan(andwill)usethe Statedesignpatterntofundamentallyrestructurethedeﬁnitionofamachine.
Machine. AMachineisaclassdeﬁnitionthatincludesseveralattributesandmethods.
•TheTape. ThetapeonwhichtheMachineiscurrentlyworking. Thisobjectcanberesponisblefor
tape’s current position, plus the next and previous movements. Additionally, this class can handle
growingthetapesothatthenextoperationalwaysworks.
•Thecollectionofstates. Eachstateisaninstanceofthe Stateclass. Each Stateobjectisacollection
ofRuleobjects.
•Thecurrent State. Thisisavariablethatcontainsthemachine’scurrentstate.
•Machine.next() ,Machine.prev() methodstoupdatethepositionofthetape.
•Machine.write() methodtochangethesymbolonthetape.
•AMachine.run() methodthatacceptsatape,astatecollection,andanidentiﬁerforastartingstate.
Itstepsthroughthemachine’soperatingcyclewiththegiventape,printingalogofthetapeateach
step.
State. AStateisaclassdeﬁnitionthatincludesaruleforeachsymbol. Weusedasimpledictionaryin
theﬁrstimplementation. Asubclassofdictionarywillbeﬁne. Wedon’tneedtoextendit,sowecanhave
somethinglike
classState(dict):
pass
StateChange . Wecanusethe Commanddesignpatterntodeﬁnesomereusablecommandobjects. We’ll
needabunchofCommandclassesandinstances. Each StateChangeobjectisgivenaparticularmachineto
update.
We can deﬁne an abstract super class called StateChange. Each speciﬁc state change is a polymorphic
subclasstomakespeciﬁcchangestotheMachine’sTape.
•Write. AStateChangesubclass with a Next.__call__( self, machine )() method which calls
‘machine.write(self.symbol) ’.
•No_Write. AStateChangesubclasswitha Next.__call__( self, machine )() methodwhichdoes
nothing.
•Next. AStateChangesubclasswitha Next.__call__( self, machine )() methodwhichupdates
themachinebycalling‘ machine.next() ’.
42.8. Better Implementations 523
Building Skills in Python, Release 2.6.5
•Prev. AStateChangesubclasswitha Next.__call__( self, machine )() methodwhichupdates
themachinebycalling‘ machine.prev() ’.
•Stay. AStateChangesubclass with a Next.__call__( self, machine )() method which does
nothing.
Rule. EachRulehas several parts that we initially encoded as strings. Given these Commandclass
deﬁnitionsabove,wecancreateabunchofindividualobjectsthatslightlysimplifyourmachinedeﬁnition.
write_X =Write("X")
write_O =Write("O")
nothing =No_Write()
next=Next()
prev=Prev()
stay=Stay()
halt=None
Nowwecancreate Ruleobjectsusingtheseobjectsinsteadofstringliterals. Insteadofcheckingtherule’s
attributesforstringvalues,wecandirectlyinvoketherule’sattributes,sincethey’recallableobjects.
Arulewouldnowlooklikethis.
rule_1_map ={
'X': Rule(nothing, next,0),
'O': Rule(nothing, next,1),
None: Rule(write_x, next, halt) }
Inourmachine,wecanthenrevisehowweevaluatetherules. Insteadsomethinglikethis:
ifrule.move=="next": machine .next()
elifrule.move=="next": machine .next()
else:
assertrule.moveisNone
ifrule.writeisnotNone:
machine.write( rule .write )
Wecandothefollowing:
rule.move( machine )
rule.write( machine )
Eliminatingtheifstatementswillresultinanetspeedupaswellasasimpliﬁcation.
Tape. TheTapeclasshasdeﬁnethetapeasalist. Itcanalsoimplementthenextandprevious,including
afeaturetoextendthetapeasnecessary. Thisclasscanhandlecurrentpositionofthetape,also.
42.9 Exercise 3
1.Deﬁnetherequiredclassesforanobject-basedTuringMachineimplementation.
•Machine
•State
•StateChange
•Rule
524 Chapter 42. What Can be Computed?
Building Skills in Python, Release 2.6.5
•Tape
2.DeﬁneafunctionthatimplementsthisnewTuringMachine.
turing_obj (transitions, tape )
Acceptsadictionaryoftransitionrulesbuiltusingobjectsinsteadofstringsandaninputtape.
Startsinrule0withtapeatposition0. Executesthevarioustransitionsuntilthemachinereaches
atransitionwherethenextstateisNone,thenithalts.
Printsalogshowingthetapeasitmovesandchanges.
3.Usingyourexistingtestdriverfrom Exercise 2,assureyourselfthatthenewmachineworksaswellas
theoldmachine.
42.10 Consequences
Aswenotedabove,thesetofrealnumbersisuncountablyinﬁnite. However,thisTuringMachinedeﬁnition
of numbers can be shown to be countably inﬁnite. This means that there are some real numbers which
cannotbecomputed.
Inspiteofthisgapbetweenthetwoordersofinﬁnity,thereareenoughrealnumbersthatcanbecomputed
thatit’sfairlydiﬀiculttodeﬁnethekindsofnumberswhicharenotcomputable. Also,thesetofcomputable
numbersisclosedunderordinaryarithmeticoperations: giventwocomputablenumbersthesum,diﬀerence,
productorquotientarealsocomputable.
What’smoreimportantisthatourtwoimplementationsofTuringMachinesprovethatPythoncaneas-
ily work with all computable numbers. Consequently, the Python language (like all other programming
languages)is“TuringComplete”andsuitableforusedoinganythingthatinvolvesnumbers.
Sincewecanencodealmostanythingasanumber,wecancreatePythonprogramstoprocessthisdomain
of“almostanything”. Thereare–atthefringesofmathematics–somethingswhichcannotbeencoded
asnumbers. That’swaybeyondthescopeofthisbook. Ifyou’reinterested,though,youcanresearchthe
“HaltingProblem”,“Chaitin’sConstant”and“TheBusyBeaverProblem”forsomethingswhichareclearly
notcomputableandthingswhichmaynotbecomputable.
42.11 Other Applications
SomesimplevariationsonthebasicTuringMachineactasapatternrecognizers.TheseFiniteStateMachines
arethetypicalsolutiontoalargenumberofproblems.
As an example, consider a machine to recognize simple dates in the form ‘ mm/dd/yyyy’. We’ll tolerate a
singledigitmonthorasingledigitday. Butwemusthaveallfourdigitsfortheyear.
Clearly,we’llhavetoexpandoursetofsymbolstoincludeallUnicodecharacters. Also,it’ssimplerifwe
workwith“characterclasses”(i.e.,digits)insteadofpatientlylistingeachsymbol.
Wecan–ifnecessary–provethatalistofsymbolsisequivalenttoasinglesymbolbypatientlybuilding
theequivalentTuringMachine. Theindividualruleissimplyrepeatedforeachsymbolintheclass.
Also,we’renotsomuchinterestedinprocessingavague,general“Tape”. We’reinterestedinprocessinga
speciﬁcstring. However,astring–forourpurposes–isasequenceandthereforeisalmostequivalenttoa
list.
Finally,we’renevergoingtowrite. It’saread-onlytapeofsymbols.
Insteadofwriting,we’regoingtoholtinoneoftwostates: anacceptingstateorarejectingstate. Ifwehalt
inanacceptingstate,thestringofcharactersmatchedthedesiredpattern.
42.10. Consequences 525
Building Skills in Python, Release 2.6.5
Short-Hand. We’lluseashort-handtodeﬁnetheTuringMachinethatmatchestheabovestring. We’ll
justwritethesymbol,andthenextstatelikethis: ‘ digit: 1’. We’llassumethatwealwaysmovetonext
positionontheinputtape.
Further,forallothercharacters,notgivenexplicitlyintherules,themachinesimplyhaltsina“rejecting”
state.
Pattern Matcher
1.digit: 1.
2.digit: 2. “/”: 3.
3.“/”: 3.
4.digit: 4.
5.digit: 5. “/”: 6.
6.“/”: 6.
7.digit: 7.
8.digit: 8.
9.digit: 9.
10.digit: 10.
11.Atthispoint,we’reattheendoftheinputstring. Wecanhalt,acceptingthestringasmatchingthe
pattern.
BuildingtheMachine . Onecanseethatthestatetransitionsinthiskindofsimplepattern-matching
machinearesosimplethatashort-handnotationcouldbeused.
Forexample: ‘ "\d\d?/\d\d?/\d\d\d\d" ’woulddescribethepattern. Inthiscase,‘ "\d"’standsfor“match
adigitandadvancetothenextstate”. And‘ "\d?"’standsfor“matchadigitandadvancetothenextstate
orlookaheadtothenextcharacterandadvancetothenextstateifitwillmatch.”
Referbacktothesectionon Complex Strings: the re Module . Inessence,aregularexpressionpatterndeﬁnes
akindofﬁnishte-statemachinetomatchthegivenstringasifitwasaspecializedone-waytape.
42.12 Alternative Speciﬁcations
TherearenumberofalternativeformulationsfortheTuringMachine.
Two-wayinﬁnitetapes . Above,weassumedthatthetapehadanendandwentinﬁnitelyfartotheright.
ThishasaniceparallelwiththePython liststructure. Whenthetransitionruleattempteda“next”at
theendofthetape,wesimplyappendedanew,emptycelltothelist.
Wecanchangethistoallowthetapetostretchinﬁnitelyfartorightortheleft. Toallowthetapetogo
inﬁnitelyfartotheleft,wehaveseveralchoices:
•Continuetomodelthethetapeasa dict. However,whenweattempttogotothepreviouscellfrom
position0,weneedtoinsertanew,emptycellatposition0andleavethepositionnumberalone.
•Modelthetapeasa dictandusedict.setdefault() tobesurethatanewpositionhasaproper
emptycellbeforeprocessing.
526 Chapter 42. What Can be Computed?
Building Skills in Python, Release 2.6.5
Thisisalittlebitlikecreatingatapewithabunchofemptycellsbeforeandaftertherelevantdataforthe
problemathand.
Two-dimensional tapes . Instead of using a one-dimensional inﬁnite tape, we could consider a two-
dimensionalmagnetic“surface”,whichcanbemovedleft,right,upanddown.
This changes our “tape” dramatically. Rather than a simple list, we should probably use a dictwith a
two-tupleasthekey. Ourinitialstatewouldbeatposition‘ (0,0)’onthesurface.
Ourmovementrules,wouldlooksomethinglikethis.
classRight( StateChange ):
def__call__ (self, machine ):
x, y=machine.position
machine.position =x+1, y
classLeft( StateChange ):
def__call__ (self, machine ):
x, y=machine.position
machine.position =x-1, y
Thecontentsofthesurface,then,wouldbeavailableas‘ surface.setdefault( position, None ) ’. This
wouldreturnanyvaluethatwasonthesurface,andcreateanemptycellifnecessary.
Multi-Stepmovementofthehead . Above,wesimpliﬁedthetapemovementstobeone-step. Either
previousandnext,orup,down,leftandright. Wecanalsochangethedeﬁnitiontopermitmultiple-step
movementsinsteadofsingle-stepmovements.
Thiswouldextendourbasicstatechangeclassdeﬁnitionstoacceptaparameterwiththedistancetomove.
In most cases, there isn’t an easy way to make use of this extension. Most of the processing we can
imaginerequiressteppingovereachsymboloneattime. Wemight,however,slightlysimpliifysomepattern
recognitionwithmultiple-positionskips.
Multipletapes . Aninterestingextensionistoaddasecondtape. Inthiscase,wehavetwoinputsymbols
andtwosetsoftransitions. Eithertapecanbemovedandeithertapecanwriteanewsymbol.
Youmightuseonetapeforinputandonetapefortheresults. Inthiscase,and“Add1”operationwould
copyalltheinputsymbolstotheoutputtape,andthenwriteoneextrasymboltotheoutputtape.
ArbitraryAlphabet . AswenotedinOtherApplications,it’ssensibletoallowamuchlargeralphabet
thanjusttwosymbols.
SimplerStateChanges . Wedeﬁnedourmachinetodobothatapemovementandawrite. Wespeciﬁed
thatthetapemovementcouldbenext,previousornone. Wealsosaidthattherecouldbeanoptionalwrite
ofanewsymbol.
Thiscanbebrokendownintoﬁnersteps. Wecan,forexample,separatethemovingandthewritingand
saythatarulehasthefollowingattributes:
•Acurrentsymbolonthetapetomatch.
•Achange: eithermovethetape,orwrite.
•NextState.
Thiswouldcreateadditionalstatesinsomemachinesbecausewewouldhavetoseparatewritingfrommoving
thetape.
42.12. Alternative Speciﬁcations 527
Building Skills in Python, Release 2.6.5
42.13 Exercise 4
PickoneofthesealternateformalationfortheTuringMachine.
•Two-wayinﬁnitetapes.
•Two-dimensionaltapes.
•Multi-Stepmovementofthehead.
•Multipletapes.
•SimplerStateChanges.
1.ImplementanewTuringMachinewiththisalternateformulation.
2.ReviseyourtestcasesfromExercise2toﬁtyournewmachineformulation.
3.Createanadditionaltestsimplytoexerciseeachfeatureofyournewmachine.
There is an important question raised by the alternative formulations of the Turing Machine. Do these
alternativesallowmorecomputablenumbers?
Itturnsoutwecanﬁndawaytobuildanyofthesemachinesusinganyothermachine. Theyareallprovably
identical.
528 Chapter 42. What Can be Computed?
CHAPTER
FORTYTHREE
MAH JONGG HANDS
ThegameofMahJonggisplayedwithadeckoftileswiththreesuitswithranksfromonetonine. There
arefoursetsofthese27tiles. Additionallytherearefourcopiesofthefourwindsandthreedragons. This
givesadeckof136tiles.
Thethreesuitsaredots,bambooand“characters”(wan, 万simpliﬁedor 萬traditional). Theranksarethe
numbersonetonine. [Onestoryisthatthedotsarechinesecoins,the“bamboo”arestacksof100coinsthat
andthe“wan”represents10,000coins.] Sincethesetileshaveranks,theycanformavarietyofinteresting
combinationsincludingmatchesandsequences.
Thewindsanddragonsarecollectivelycalled“honors”. Therearefourwinds: East( 東),South( 南),West
(西),andNorth( 北). Therearethreedragons: White( 白),Red(中),andGreen( 發). Thesehonorstiles
don’thaveranks,merelynames. Sincetherearefourofeach,thesetilescanonlyparticipateinmatching;
there’snosequenceofwindscombination.
Insomevariationsofthegametherearealsojokers,seasonsandﬂowers. We’llleavetheseoutofouranalysis
forthemoment.
43.1 Tile Class Hierarchy
Wecandeﬁneaparentclassof Tile,andtwosubclasses: SuitTileandHonorTile. Thesehaveslightly
diﬀerentattributes.
TheSuitTileclasshassuitandrankinformation.
TheHonorTileclassmerelyhasauniquename.
The superclass can deﬁne a basic comparison function, __eq__(), that compares self.getName() to
other.getName() toseeiftheothertilehasthesamename. For SuitTile,thenameincludesrankand
suit.
TheSuitTileclass,however,needstodeﬁnemethodsfor __lt__(),__le__(),__gt__()and__ge__()to
comparerankandsuit.
TheHonorTileclasscansimplyreturnFalseforthevarious __lt__()and__gt__(). Theimplementation
of__ge__()and__le__()mustsimplyuse __eq__().
classTile()
__init__ (self, name )
Buildthistilefromthegivenname.
__str__(self)
Returnsthe Tile.getName() value.
529
Building Skills in Python, Release 2.6.5
__eq__(self, other )
Thisissimply‘ self.getName() == other.getName() ’.
__ne__(self, other )
Thisissimply‘ self.getName() != other.getName() ’.
getSuit(self)
ReturnsNotImplemented ;eachsubclassmustoverridethis.
getRank(self)
ReturnsNotImplemented ;eachsubclassmustoverridethis.
getName(self)
Returnsthetile’sname.
classSuitTile (Tile)
__init__ (self, rank, suit )
Initializesatilewithrankandsuitinsteadofname.
getSuit(self)
Returnsthistile’ssuit
getRank(self)
Returnsthistile’srank
getName(self)
Returnsthistile’sfullname,includingsuitandrank.
__lt__(self, other )
Comparesrankandsuit.
__le__(self, other )
Comparesrankandsuit.
__gt__(self, other )
Comparesrankandsuit.
__ge__(self, other )
Comparesrankandsuit.
classHonorTile (Tile)
getSuit(self)
ReturnsNone.
getRank(self)
ReturnsNone.
getName(self)
Returnsthistile’sfullname.
__lt__(self, other )
ReturnsFalse.
__le__(self, other )
Returnsthevalueof HonorTile.__eq__() .
__gt__(self, other )
ReturnsFalse.
530 Chapter 43. Mah Jongg Hands
Building Skills in Python, Release 2.6.5
__ge__(self, other )
Returnsthevalueof HonorTile.__eq__() .
Ifweusethenames "Bamboo","Character"and"Dots",thismakesthesuitsoccuralphabeticallyinfrontof
thehonorswithoutanyfurtherspecialprocessing. If,ontheotherhand,wewanttouseUnicodecharacters
forthesuits, weshouldaddanadditionalsortkeytothe Tilethatcanbeoverriddenby SuitTileand
HonorsTiletoforceaparticularsortorder.
Notethatthetworanksofoneandninehavespecialstatusamongthesuittiles. Thesearecalled terminals;
rankstwothrougheightarecalled simples. Currently,wedon’thaveaneedforthisdistinction.
BuildTheTileClassHierarchy . First,buildthetileclasshierarchy. Thisincludesthe Tile,SuitTile,
HonorTileclasses. Writeashorttestthatwillbesurethattheequalitytestsworkcorrectlyamongtiles.
43.2 Wall Class
YouhouldalsodeﬁneaMahJongg Wallclasswhichholdstheinitialsetof136tiles.Wecancreateadditional
subclassestoaddasmanyasadozenmoretilestoincludejokers,ﬂowersandseasons.
ShuﬄingandDealing
MahJonggtilesaretoolargetomanipulatelikeplayingcards. Theyareshuﬄedbystirringthemface
downinthemiddleofthetable. Thenthetilesarestackedtomakeawallwithfoursides. Eachsideis
arow17tileslongandtwotilestall. Sincethisisagamblinggame,therearefairlycolorfulprocedures
forestablishingwherepeoplewillsit,whowilldealﬁrst,whichofthefoursideswillbedealtfromand
wherealongthesidethedealingwillbegin.
classWall()
__init__ (self)
Createthesetof136tiles. Thisisfourcopiesofthefollowingtiles:
•Thetwenty-sevencombinationsofeachsuit(dot,bamboo,andcharacter)andeachrank(one
throughnine).
•Thesevenhonortiles(east,south,west,north,red,white,green).
__str__(self)
Displayinformationaboutthewall.
shuffle(self)
Shuﬄesthewalltiles.
deal(self)
Returnthenextundealttile. Thiswillnotenumeratethroughallofthetiles. Generally,sixtiles
willremainundealt.
Thewallisnearlyidenticalwithadeckofplayingcards. See Advanced Class Deﬁnition Exercises formore
guidanceonthisclassdesign.
BuildTheWallClass . Designandimplementthe Wall. Writeashorttestthatwillbesurethatitshuﬄes
anddealstilesproperly.
43.2. Wall Class 531
Building Skills in Python, Release 2.6.5
43.3 TileSet Class Hierarchy
AwinningMahJongghandgenerallyas14tilesinﬁvescoring sets. Exactlyoneofthesestesmustbea
pair. Theremainingsetsaregenerallyfourgroupsofthreetiles.
Undersomecircumstances,therecanoneoremore4-of-a-kindsets,andthehandwillalsobelarger. This
canhappenwhenyouareholdingthree-of-a-kindanddrawthefourth. Yourhandmustbeextendedbyone
tiletobecome15tilesinsize. Clearly,thiscanonlyhappenfourtimes,leadingtoanupperlimitofafour
groupsoffourtiles.
Therearefourvarietiesofset:
•Pair. Twomatchingtiles;eitherhonortileswiththesamename,orsuittileswiththesamerankand
suit.
•Threeofakind. Threematchingtiles.
•Sequenceofthreeinarowofthesamesuit. Onlysuittilescanparticipateinasequence. Thesame
suitisanessentialfeature.
•Fourofakind.
Themostcommonwinninghandshave14tiles: 4setsofthreeandapair.
AMahJongg Handobject, then, isalistof Tiles. Thisclassneedsamethod, mahjongg()thatreturns
Trueisthehandisawinninghand. Theevaluationisrathercomplex,becauseatilecanparticipateina
numberofsets,andseveralalternativeinterpretationsmaybenecessarytodeterminetheappropriateuse
foragiventile.
Considerahandwith2,2,2,3,4ofbamboo. Thisiseitherasetofthree2’sandanon-scoring3and4,or
itisapairof2’sandasequenceof2,3,4.
Themahjongg()method,thenmustcreateﬁve TileSetobjects,assigningindividual TilestotheTileSets
untilallofthe Tilesﬁndahome. Thehandisawinninghandifallsetsarefull,thereareﬁvesets,andone
setisapair.
We’llcoverthedesignofthe TileSetclassesinthissection,andreturntothedesignofthe Handclassin
thenextsection.
TheSetClassHierachy . Wecancreateaclasshierarchyaroundthefourvarietiesof TileSet: pairs,
threes,foursandstraights. A PairSetholdstwoofakind: bothofthetileshavethesamenameorthe
samesuitandrank. A ThreeSetandFourSetaresimilar,buthaveadiﬀerentexpectationforbeingfull.
ASequenceSetholdsthreesuittilesofthesamesuitwithadjacentranks. Sincewewillsortthetilesinto
ascendingorder,thissetwillbebuiltinascendingorder,makingthecomparisonrulesslightlysimpler.
We’ll deﬁne a TileSetsuperclass to hold a sequence of Tiles. We will be able to add new tiles to a
TileSet,aswellaschecktoseeifatilecouldpossiblybelongtoa TileSet. Finally,wecanchecktosee
iftheTileSetisfull. Thesuperclass, TileSet, is abstract andreturns NotImplemented forthefull()
method. Thesublasseswilloverridethismethodswithspeciﬁcrulesappropriatetothekindofset.
classTileSet()
__init__ (self)
Createanew,emptysetofTiles.
__str__(self)
Representationofthecontentsofthisset.
canContain (self, aTile )
Thesuperclass canContain() methodreturns Trueifthelistisempty;itreturns Falseifthelist
532 Chapter 43. Mah Jongg Hands
Building Skills in Python, Release 2.6.5
isfull. Otherwiseitcomparesthenewtileagainstthelasttileinthelisttoseeiftheyareequal.
Sincemostofthesubclassesmustmatchexactly,thisrulewillbeused.
Thesequencesubclassmustoverridethistocomparesuitandrankcorrectly.
add(self, aTile )
Theadd()methodappendsthenewtiletotheinternallist. A pop()functioncanremovethe
lasttileappendedtothelist.
full(self)
Thesuperclasswillreturn NotImplemented . Eachsubclassmustoverridethis.
fallback (self, tileStack )
Thesuperclass fallback()pushesallofthetilesfromthe TileSetbackontothegivenstack.
Thesuperclassversionpushesthetilesandthenreturns None. Eachsubclassmustoverridethis
toreturnadiﬀerentfallback TileSetinstance.
pair(self)
Thesuperclass pair()methodreturns False. ThePairSetsubclassmustoverridethistoreturn
True.
Animportantnoteaboutthe fallback()methodisthatthestackthatwillbegivenasanargumentin
tileStackispartofthe Hand,andismaintaintedbydoing‘ tileStack.pop(0) ’togettheﬁrsttile,and
‘tileStack.insert( 0, aTile ) ’topushatilebackontothefrontofthehandoftiles.
We’llneedthefollowingfoursubclassesof TileSet.
classFourSet(TileSet)
Specializes TileSetforsetsoffourmatchingtiles. The full()methodreturns Truewhenthereare
fourelementsinthelist.
Thefallback()methodpushestheset’stilesontothegiven tileStack;itreturnsanew ThreeSet
withtheﬁrsttilefromthe tileStack.
classThreeSet (TileSet)
Specializes TileSetforsetsofthreematchingtiles. The full()methodreturns Truewhenthereare
threeelementsinthelist.
Thefallback()methodpushestheset’stilesontothegiven tileStack;itreturnsanew SequenceSet
withtheﬁrsttilefromthe tileStack.
classSequenceSet (TileSet)
Specializes TileSetforsetsofthreetilesofthesamesuitandascendingrank.
ThecanContain() returnsTrueforanemptylistoftiles, Falseforafulllistoftiles, otherwiseit
comparesthesuitandrankofthelasttileinthelistwiththenewtiletoseeifthesuitsmatchand
thenewtile’srankisonemorethanthelasttileinthelist.
Thefull()methodreturns Truewhentherearethreeelementsinthelist.
Thefallback()methodpushestheset’stilesontothegiven tileStack;itreturnsanew PairSet
withtheﬁrsttilefromthe tileStack.
classPairSet(TileSet)
Thefull()methodreturns Truewhentherearetwoelementsinthelist.
Thefallback()method is inherited from the superclass method in TileSet; this method returns
None,sincethereisnofallbackfromapair.
Thissubclassalsoreturns Trueforthepair()method.
TheideaoftheseclassdeﬁnitionsisthattheHandcanattempttousea FourSettocollectagroupoftiles.
Ifthisdoesn’tworkout,weputthetilesbackintothehand,andtrya ThreeSet. Ifthisdoesn’tworkout,
43.3. TileSet Class Hierarchy 533
Building Skills in Python, Release 2.6.5
weputthetilesbackandtrya SequenceSet. Thelastresortistotrya PairSet. Thereisnofallbackafter
apairset,andthehandcannotbeawinner.
43.4 Hand Class
A Mah Jongg Handobject, then, is a list of Tiles Themahjongg()creates an assignment of individual
TileSetsItchecksthesesetstoseeifallofthemarefull,ifthereareﬁveofthemandifoneoftheﬁveisa
pair. Ifso,itreturns Truebecausethehandisawinninghand.
If we sort the tiles by name or suit, we can more eﬀectively assign tiles to sets. The ﬁrst step in the
mahjongg()methodistosortthetilesintoorder. Thenthetilescanbebrokenintosetsbasedonwhat
matchesbetweenthetiles.
Hand Scoring
Themahjongg()functionexaminesahandtodetermineifthetilescanbeassignedtoﬁvescoringsets,one
ofwhichisapair.
1.SortTiles. Sortthetilesbyname(orsuit)andbyrankforsuittileswherethesuitmatches. Wewill
treatthehandoftilesasatilestack,poppingandpushingtilesfromposition0using‘ pop(0)’and
‘insert(0,tile) ’.
2.StackofTileSets . Thecandidatesetdeﬁnitionisastackof TileSetobjects. Createanemptylist
tobeusedasthecandidatestack. Createanew,empty FourSetandpushthisontothetopofthe
candidatestack.
3.Examine Tiles . Use the examine()function to examine the tiles of the hand, assigning tiles to
TileSetsinthecandidatestack.Whenthisoperationiscomplete,wemayhaveacandidateassignment
thatwillcontainanumberof TileSets,someofwhicharefull,andsomeareincomplete. Wemayalso
haveanemptystackbecausewehaverunoutoffallback TileSets.
4.WhileNotAWinner . Whilewehave TileSetsinthecandidatestack,usethe allFull()tosee
ifallTileSetsarefull,thereareﬁvesets,andthereisexactlyonepair. Ifwedonothaveﬁvefull
TileSetsandasinglepair,thenwemustfallbacktoanothersubclassof TileSet.
(a)Retry. Use the retry()method to pop the last candidate TileSet, and use that TileSet‘s
fallback()tocreateadiﬀerent TileSetforexamination. Savethis TileSetinn.
(b)AnyMoreAssignments? Iftheresultof retry()isNone,therearenomorefallbacks;wecan
returnFalse.
(c)Examine Tiles . Append the TileSet,n, returned by retry()to the candidate stack. Use
theexamine()function to examine the tiles of the hand, assigning tiles to TileSets. When
thisoperationiscomplete,wemayhaveacandidateassignmentthatwillcontainanumberof
TileSets,someofwhicharefull,andsomeareincomplete.
5.Winner?Ifweﬁnishtheloopnormally,itmeanswehaveacandidatesetassignmentwhichhasﬁve
fullsets,oneofwhichisapair. Forsomehands,therecanbemultiplewinners; however,wewon’t
continuetheexaminationtolocateadditionalwinningassignments.
TheallFull()functionchecksthreeconditions: all TileSetsarefull,thereareﬁve TileSets,andisone
TileSetisapair. Theﬁrsttest,all TileSetsarefull,canbedonewiththebuilt-in all()function,looking
somethinglikethefollowing‘ all( s.full() for s in sets ) ’.
534 Chapter 43. Mah Jongg Hands
Building Skills in Python, Release 2.6.5
Examine All Tiles
Theexamine()method requires a non-empty stack of candidate TileSets, created by the mahjongg()
method. Itassignsalloftheremainingtilesbeginningwiththetop-mostcandidate TileSet. Initially,the
entirehandisexamined. Aftereachretry,somenumberoftileswillhavebeenpushedbackintothehand
forre-examination.
1.WhileMoreTiles . Ifthetilestackinthe Handisempty,wearedone,alltileshavebeenassignedto
Sets.
(a)NextTile. Popthenextunexaminedtilefromthetilestack,assigningittothevariable t.
(b)Topmost Set Full? If the topmost set on the set stack is full, push a new, empty FourSet
ontothetopofthesetstack. (Thisisalsoahandyplacetousea printstatementtowatchthe
progressoftheevaluation.)
(c)TopmostSetCanContain? Ifthetop-most TileSetcancontainTile t,addthistiletothe
set. We’redoneexaminingthistile.
(d)TopmostSetCan’tContain . Putthetile tbackintothestackoftilestobeexamined. Use
theretry()function to pop the TileSetfrom the stack, and fallback to another subclass of
TileSet.
(e)AnotherRetry? Iftheresultofthe retry()isNone,we’verunoutofalternatives,returnfrom
thisfunction. Otherwise,appendthenew TileSetcreatedby retry()tothestackofcandidate
sets.
Retry a TileSet Assignment
Theretry()methodrequiresatleastone TileSetintheassignments. Thiswillpopthat TileSet,pushing
thetilesbackintothehand. Itwillthenusethepopped TileSet‘sfallback()methodtogetanotherﬂavor
ofTileSettotry.
1.Pop. Popthetop-mostTileSetfromtheTileSetstack,assignitto s. Calls fallback() methodto
getanewtop-most TileSet,assignthisto n.
2.OutOfFallbacks? WhiletheTileSetstackisnotemptyand nisNone,therewasnofallback.
(a)Pop Another . Pop the top-most set from the set stack, assign it to s. Calls fallback()
methodtogetanewtop-most TileSet,assignthisto n.
3.Done?IfnisNoneandthesetstackisempty,thehandisincompleteandweareoutoffallbacksets.
Otherwise,append ntothestackofTileSets.
43.5 Some T est Cases
Thefollowingtestcaseistypical.
Bamboo: 2, 2, 2, 3, 4, 5, 5, 5
Dots: 2, 2, 2
Green Dragon |times| 3
Inthiscase,wewillattempttoputthe“2Bamboo”tilesintoaTileSetoffour. Noothertilewillﬁllthis
TileSet. Afterlookingattheremainingtiles,we’llpopthatincompleteTileSet,andputthemintoaTileSet
ofthree. Thiswillbefull,sowe’llmoveon.
43.5. Some T est Cases 535
Building Skills in Python, Release 2.6.5
The“3Bamboo”willbeputintoasetoffour. Noothertilecanﬁllthisset,sowe’llpopit,andputthe
“3Bamboo”intoasetofthree. Again,noothertilecanﬁllthisset,sowe’llpopthat,andﬁllbacktoa
Sequence. Thissetwillbeﬁlledwiththe4and5.
Theremainingtwo“5Bamboo”tileswillbeputintoasetoffour(whichwon’tbeﬁlled), asetofthree
(whichwon’tbeﬁlled),astraight(whichwon’tbeﬁlled)andﬁnallyapair.
Thethree“2Dots”tileswillbeputintoasetofﬁle(whichwon’tbeﬁlled)andasetofthree. Thefate
awaitsthethreegreendragontiles.
Theﬁnalsetstackwillhaveathreeset,astraight,apair,andtwothreesets. Thismeetstherulesforﬁve
fullsets,oneofwhichisapair.
deftestHand1 ():
t1=[ SuitTile( 2,"Bamboo"), SuitTile( 2,"Bamboo"),
SuitTile( 2,"Bamboo"), SuitTile( 3,"Bamboo"),
SuitTile( 4,"Bamboo"), SuitTile( 5,"Bamboo"),
SuitTile( 5,"Bamboo"), SuitTile( 5,"Bamboo"),
SuitTile( 2,"Dot"), SuitTile( 2,"Dot"),
SuitTile( 2,"Dot"), HonorsTile( "Green"),
HonorsTile( "Green"), HonorsTile( "Green"), ]
h1=Hand(*t1 )
printh1.mahjongg()
MoreComplex. Thefollowingtestcaseisalittlemorediﬀicult.
Bamboo: 2, 2, 2, 2, 3, 4
Green Dragon |times| 3
Red Dragon |times| 3
North Wind |times| 2
Theinitialrunoffour“2Bamboo”tileswillbeputintoasetoffour.
Thenext“3Bamboo”and“4Bamboo”tileswillbeputintoafourset(whichwon’tbeﬁlled),athreeset
andstraight. Noneifthiswillbesuccessful.
Wethenpoptheinitialsetoffour“2Bamboo”tilesandreplacethatwithasetofthree. The“2Bamboo”
willbetriedinasetoffour,andasetofthreebeforeitwindsupinasequence. Thissequencewillallow
the“3Bamboo”andthe“4Bamboo”tobeadded.
Theremaininghonorswillbetriedagainstfoursetsandthenthreesetsbeforethehandisfoundtobevalid.
AnotherTest . Here’sachallengingtestcasewithtwogroupsoftilesthatrequiremultipleretries.
Here’sasummaryofthehand.
Bamboo: 2, 2, 2, 3, 4, 5, 5, 5
Dots: 2, 2, 2, 2, 3, 4
Here’sthetestﬁxture.
deftestHand2 ():
t2=[ SuitTile( 2,"Bamboo"), SuitTile( 2,"Bamboo"),
SuitTile( 2,"Bamboo"), SuitTile( 3,"Bamboo"),
SuitTile( 4,"Bamboo"), SuitTile( 5,"Bamboo"),
SuitTile( 5,"Bamboo"), SuitTile( 5,"Bamboo"),
SuitTile( 2,"Dot"), SuitTile( 2,"Dot"),
SuitTile( 2,"Dot"), SuitTile( 2,"Dot"),
SuitTile( 3,"Dot"), SuitTile( 4,"Dot"), ]
536 Chapter 43. Mah Jongg Hands
Building Skills in Python, Release 2.6.5
h2=Hand(*t2 )
printh2.mahjongg()
Ideally,youroverallunittestlookssomethinglikethefollowing.
import unittest
class TestHand_1(unittest.TestCase):
def setUp( self ):
Create the hand
def testHand1_should_mahjongg( self ):
self.assert_( h1.mahjongg() )
self.assertEqual( str(h1.sets[0]), "ThreeSet['2B', '2B', '2B']" )
self.assertEqual( str(h1.sets[1]), "SequenceSet['3B', '4B', '5B']" )
self.assertEqual( str(h1.sets[2]), "PairSet['5B', '5B']" )
self.assertEqual( str(h1.sets[3]), "ThreeSet['2D', '2D', '2D']" )
self.assertEqual( str(h1.sets[4]), "ThreeSet['Green', 'Green', 'Green']" )
class TestHand_2(unittest.TestCase):
def setUp( self ):
Create the hand
def testHand2_should_mahjongg( self ):
self.assert_( h2.mahjongg() )
... check individual TileSets
if __name__ == "__main__":
unittest.main()
Asetofnineinterestingtestcasescanbebuiltaroundthefollowingsetoftiles: 3 ×1’s, 2, 3, 4, 5, 6, 7,
8,and3×9’sallofthesamesuit. Addinganynumbertileofthesamesuittothissetof13willcreatea
winninghand. Developatestfunctionthatiteratesthroughtheninepossiblehandsandprintstheresults.
43.6 Hand Scoring - Points
Ahandhasapointvalue,basedonthemixtureof TileSets. Thispointvalueisusedtoresolvetheamount
owedtothewinnerbythelosersinthegame. Thereisasubtletytothisevaluationthatwehavetogloss
over,andthatistherulesaboutfor concealedand exposedor meldedTileSets. Fornow,wewillassumethat
allTileSetsareconcealed.
ExposedandMeldedSets
DuringtheplayofMahJongg,aplayerwilldrawnatilefromthe Wallandevaluatetheirhand. Ifthe
handisawinner,thegameisover. Otherwise,theplayerwilldiscardatile.
Withsomeminorrestrictions,aplayercandrawthelasttilediscardedbyanotherplayertomakea
completeset;theplayermustexposethesettododrawthediscard.
Iftheplayercompletesasetwithatiledrawnfromthewall,theydonothavetoexposeit,sotheset
isconcealed. Concealedsetsareworthmorethanexposedsets.
Therearenumberofvariationsintherulesfordrawingdiscardedtilesandexposingsets. We’llavoid
muchofthiscomplexity,andfocusonassigningpointvaluestothesetsusingjusttherulesforconcealed
sets.
We need to expand our deﬁnition of SuitTile. There are two diﬀerent score values for SuitTiles: the
terminals(oneandnine)haveonescore,andthesimples(twothrougheight)haveadiﬀerentscore. This
willleadtotwosubclassesof SuitTile:TerminalSuitTile andSimpleSuitTile .
43.6. Hand Scoring - Points 537
Building Skills in Python, Release 2.6.5
Awinninghandhasabasevalueof20pointspluspointsassignedforeachofthefourscoringsetsandthe
pair.
TileSet SimplesTerminalsorHonors
SequenceSet00
ThreeSet48
FourSet1632
ThePairSetistypicallyworthzeropoints. However,thefollowingkindsofpairscanaddpointstoahand.
•Apairofdragonsisworth2points.
•Apairofwindsassociatedwithyourseatatthetableisworth2points.
•Afullgameconsistsoffourrounds. Eachroundhasa prevailingwind. Withineachround,eachofthe
playerswillbethedealer. Apairoftheround’sprevailingwindsisworth2points.
•A double windpairoccurswhenyourseat’swindisalsotheprevailingwind. Apairofthiswindis
worth4points.
Thereareafewmorewaystoaddpoints,allrelatedtothemechanicsofplay,nottothehanditself.
Update the Tile Class Hierarchy . You will need to add two new subclass of SuitTile:
TerminalSuitTile andSimpleSuitTile .
You will want to upgrade Wallto correctly generate the various HonorsTile,TerminalSuitTile and
SimpleSuitTile instances.
Youmayalsowanttocreatea Generatorfortiles. Afunctionsimilartothefollowingcanmakeprograms
somewhateasiertoread.
deftile(*args ):
"""tile(name) -> HonorsTile
tile( rank, suit ) -> SuitTile
"""
iflen(args)==1:
returnHonorsTile( *args )
elifargs[0]in(1,9):
returnTerminalSuitTile( *args )
else:
returnSimpleSuitTile( *args )
UpdatetheTileSetClassHierarchy . Youwillneedtoaddatleastonenewmethodtothe TileSet
classes.
classTileSet()
points(self, prevailingWind, myWind )
Examine the ﬁrst Tileof theTileSetto see if it is simple()or not, and return the proper
numberofpoints.
Thetwowindparametersaren’tusedformost TileSetsubclasses.
Inthecaseof PairSet,however,theﬁrst Tilemustbecheckedagainsttworules. If prevailing-
Windisthesameas myWindandthesameasthetile’sname,thisisworth4points. Ifthetile’s
lucky()methodis True(adragon,oroneofthetwowinds),thenthevalueis2points.
UpdatetheHandClass . You’llwanttoaddatleastonenewmethodtotheHandclass.
538 Chapter 43. Mah Jongg Hands
Building Skills in Python, Release 2.6.5
classHand()
points(self, prevailingWind, myWind )
Computethetotalnumberofpointsforahand.
pointReport (self, prevailingWind, myWind )
Printasmallscorecardforthehand,showingeachsetandthepointsawarded.
Youwillwanttoreviseyourunittests,also,toreﬂectthesechanges. You’llalsoneedtoaddadditionalunit
teststocheckthenumberofpointsineachhand.
TestCases. Fortheﬁrsttestcasesintheprevious Some T est Cases ,herearethescores.
Set Points
Winning 20
ThreeSet[‘2B’,‘2B’,‘2B’] 4
StraightSet[‘3B’,‘4B’,‘5B’] 0
PairSet[‘5B’,‘5B’] 0
ThreeSet[‘2D’,‘2D’,‘2D’] 4
ThreeSet[’Green’,‘Green’,‘Green’] 8
Points 36
Forthesecondtestcasesin Some T est Cases ,herearethescores. Theassumptionhereisthatwe’renot
sittingatNorth,andwe’renotplayingtheﬁnalfourhands(wherethe prevailingwindisNorth.)
Set Points
Winning 20
ThreeSet[‘2B’,‘2B’,‘2B’] 4
StraightSet[‘2B’,‘3B’,‘4B’] 0
ThreeSet[’Green’,‘Green’,‘Green’] 8
ThreeSet[’Red’,‘Red’,‘Red’] 8
PairSet[’N’,‘N’] 0
Points 36
Forthethirdtestcasesin Some T est Cases ,herearethescores.
Set Points
Winning 20
ThreeSet[‘2B’,‘2B’,‘2B’] 4
StraightSet[‘3B’,‘4B’,‘5B’] 0
PairSet[‘5B’,‘5B’] 0
ThreeSet[‘2D’,‘2D’,‘2D’] 4
StraightSet[‘2D’,‘3D’,‘4D’] 0
Points 28
Besuretoaddatestcasewith lucky tiles(dragonsorwinds)asthepair.
43.7 Hand Scoring - Doubles
Thepointvalueforahandcanbedoubledanumberoftimesforavarietyofrareachievements. Mostof
theserulesoftheseareadditionalpropertiesof TileSetsthataresummarizedbythe Hand.
Eachnon-pair TileSetthatcontainsluckytilesisworth1double(2 ×). Inthecaseoftheplayer’swind
beingtheprevailingwind,a TileSetofthiswindisworth2doubles(4 ×)
Ahandoffour ThreeSetorFourSet(i.e.,noSequenceSet)meritsadouble. Dependingonhowthehand
wasplayedandhowmanyofthesetripleswereconcealedormelded,thehandcanhaveaseconddouble,or
43.7. Hand Scoring - Doubles 539
Building Skills in Python, Release 2.6.5
possiblyevenpaythehouselimit,somethingwe’lllookintoin Limit Hands. Fornow,weareignoringthese
mechanicsofplayissues,andwillsimplydoublethescoreifthereareno SequenceSets.
Ahandthathasthreeconsecutive SequenceSetsinthesamesuitisdoubled. Therearemanyrulevariations
onthistheme,includingsame-ranksequencesfromallthreesuits,same-rank ThreeSetsorFourSetsfrom
allthreesuits. We’llfocusonthethree-consecutiverulefornow.
Ifthehandisworthexactly20points(itisall SequenceSetsandanunlucky PairSet),thenitmeritsone
doubleforbeingallnon-scoringsets.
Therearesixdiﬀerentconsistencytests. Theseareexclusiveandatmostoneoftheseconditionswillbe
true.
1.Ifthehandisallterminalsandhonors(nosimples),itisdoubled.
2.Ifeachsetinthehandhasoneterminaloranhonorinit,thehandisdoubled. Ahandcouldhavefour
SequenceSets,eachofwhichbeginswithoneorendswithnine,andapairofhonorsorterminalsto
qualifyforthisdouble.
3.Ifthehandisallsimples(noterminalsorhonors),itisdoubled.
4.Ifallofthe SuitTilesareofthesamesuit,andallothertilesare HonorsTiles,thisisdoubled.
5.Ifallofthe SuitTilesareofthesamesuit,andthereareno HonorsTiles,thisisdoubledfourtimes
(16?).
6.Ifthehandcontains TileSetsofallthreedragons,andoneofthosesetsisa PairSet,thisiscalled
the Little Three Dragons ,andthehand’spointsaredoubled.
Thereareafewmorewaystoadddoubles,allrelatedtothemechanicsofplay,nottothehanditself.
UpdateTileSetClassHierarchy . You’llneedtoaddthefollowingfunctionstothe TileSetclasses.
classTileSet()
lucky(self, prevailingWind, myWind )
For theThreeSetorFourSetsubclasses, this returns Truefor a complete set with lucky tiles
(dragons,theprevailingwindortheplayer’swind.)
OthersubclassesofTileSetreturn False.
triplet(self)
ReturnsTrueforaThreeSetorFourSet. Othersubclassesof TileSetreturnFalse.
Thisisusedtoseeifahandisallthreesorfours,whichmeritsadouble. Thename“triplet”isn’t
literallytrue;aliterallytruefunctionnamewouldbecumbersome.
sequenceSuit (self)
Returnsthesuitofa SequenceSet. Forthisclassonly,itshouldbebasedonthe suit()method
describedbelow.
Othersubclassesofof TileSetreturnNone.
sequenceRank (self)
Returnsthelowestrankofa SequenceSet.
Othersubclassesofof TileSetreturnNone.
allSimple (self)
ReturnsTrueiftheTileSetcontainsonlysimpletiles.
noSimple (self)
ReturnsTrueiftheTileSetcontainsnosimpletiles. Thisisanallterminalsandhonors TileSet.
540 Chapter 43. Mah Jongg Hands
Building Skills in Python, Release 2.6.5
Thisisnottheoppositeof allSimple(). ASequenceSetcouldhaveamixtureofTerminaland
Simpletiles,sotherearethreecases: allSimple,noSimpleandamixedbag.
oneTermHonor (self)
ReturnsTrueif theTileSetcontains one terminal or honor. Since we only have a simple()
function,thismeansthereisonenon-simple TileintheTileSet.
suit(self)
Ifalltileshavethesamevaluefor Tile.getSuit() ,returnthatvalue. Ifthereisamixtureof
suits,orsuitsof None,returnNone.
bigDragon (self)
FortheThreeSetclassorFourSetclass,return TrueifalltilesareDragons.
OthersubclassesofTileSetreturn False.
littleDragon (self)
ForthePairSetclass,return TrueifalltilesareDragons.
OthersubclassesofTileSetreturn False.
Update Hand Class . You’llneedtoaddthefollowingfunctionstothe Handclasses.
classHand()
luckySets (self, prevailingWind, myWind )
Returnsthenumberofluckysets. Thisfunctionalsochecksforthedoublewindconditionswhere
prevailWindisthesameas myWindandoneofthe TileSetshasthisconditionandthrowsan
additionaldoublinginforthis.
groups(self)
Returns1ifallTileSetshavethe triple()property True.
sequences (self)
Returns1ifthreeofthe TileSetshavethesamevaluefor sequenceSuit() ,andthevaluesfor
sequenceRank() are1,4,and7.
noPoints (self)
Returns1allofthe TileSetsareworthzeropoints.
consistency (self)
Returns1or4aftercheckingforthefollowingconditions:
•IfallSimple()istrueforall TileSets,return 1.
•IfnoSimple()istrueforall TileSets,return 1.
•IfoneTermHonor() istrueforall TileSets,return 1.
•IfeveryTileSethasthesamevaluefor suit()andthereisno TileSetwheresuit()is
None,return4.
•IfeveryTileSethasthesamevaluefor suit()orthevaluefor suit()isNone,return1.
•If there are two TileSets for which bigDragon() is true, and one TileSetfor which
littleDragon() istrue,return 1.
Thesumofthedoublefunctionsisthetotalnumberofdoublesforthehand. Thisisgivenbycodesomething
likethefollowing.
doubles =hand.luckySets( wind_prevail, wind_me ) +hand.groups() +hand.sequences() +hand.noPoints() +hand.consistency()
final_score =2**doubles *base_points
43.7. Hand Scoring - Doubles 541
Building Skills in Python, Release 2.6.5
Anamazinghandofallonesuitwiththreeconsecutivesequencesleadsto5doubles,32 ×thebasenumber
ofpoints.
classHand()
doubleReport (self)
Printsasmallscorecardforthehand,showingeachdoublethatwasawarded. Youcanthenwrite
ascoreCard()whichproducesthe pointReport() ,thedoubleReport() andtheﬁnalscoreof
2d×p,where disthenumberofdoublesand pisthebasenumberofpoints.
Thetotalscoreisoftenroundedtothenearest10,aswellaslimitedto500orlesstoproduceaﬁnalscore.
Thisﬁnalscoreisusedtosettleupthepaymentsattheendofthegame.
Loser’sPay
Thereareanumberofvariationsonthepaymentsattheendofthegame. Thesimplestversionhasall
loserspayinganequalamounttothewinner. Generally,ifthedealerwins,thepaymentstothedealer
aredoubled,andwhenthedealerloses,thepaymenttothewinnerisdoubled.
Therearesomepopularscoringvariationsthatpenalizetheplayerwho’sdiscardallowedanotherplayer
towin.
43.8 Limit Hands
AttheendofahandofMahJongg,thewinnerispaidbasedontheﬁnalscoreofthehand. Generally,the
ﬁnalscoreislimitedto500points. Thereare,however,someextraordinaryhandswhichsimplyscorethis
limitamount. Theseconditionsarecheckedﬁrst;ifnoneofthesearetrue,thenthenormalhandscoringis
performed.
•The Big Three Dragons handhasthree TileSetsforwhichthe bigDragon()functionistrue.
•The Little F our Winds handhasthree ThreeSetsorFourSetssforwhichthe wind()functionistrue
andaPairSetforwhich wind()istrue.
•The Big F our Winds handhasfour ThreeSetsorFourSetssforwhichthe wind()functionistrue.
•The Al l Honorshandhasall TileSetscomposedof HonorsTiles;thesewillallhaveeither wind()or
dragon()true.
•The Al l T erminals handhasall TileSetscomposedof TerminalSuitTile s.
•Anadditionalhandthatpaysthelimitalsobreaksmanyoftherulesforawinninghand. Thisisthe
Thirteen Orphans hand,whichisoneeachofthevariousterminalsandhonors: threedragons,four
winds,threeone’s,threenine’sandanyotherofthethirteenterminalandhonortiles. Thisrequiresa
special-casetestin Handthatshort-cutsalloftheevaluationalgorithm.
Aninterestinglimithandisthe Nine Gateshand,whichis3?1’s,2,3,4,5,6,7,8,and3?9’sallofthesame
suit. Anyothertileofthissuitwillcreateawinninghandthatpaysthelimit. Justconsideringthehand
outsidethemechanicsofplay,itwouldgetfourdoublesbecauseitisallonesuit,plusthepossibilityofan
additionaldoubleforconsecutivesequences. TheNineGateshandisonlyalimithandiftheplayerdraws
itasacompletelyconcealedhand.
Thereareafewotherlimithands,includingallconcealedtriplets,orbeingdealtawinninghand. These,
however,dependonthemechanicsofplay,notthehanditself.
UpdateSetClassHierarchy .You’llwanttoadd wind()anddragon()methodstothe TileSethierarchy.
Thesereturn TrueifallTilesintheTileSetareawindoradragon,respectively.
542 Chapter 43. Mah Jongg Hands
Building Skills in Python, Release 2.6.5
UpdateHandClass . Youcanaddsixadditionalmethodsto Handtocheckforeachoftheselimithands.
Theﬁnalstepistoupdatethe finalScore() tocheckforlimithandspriortocomputingpointsanddoubles.
43.8. Limit Hands 543
Building Skills in Python, Release 2.6.5
544 Chapter 43. Mah Jongg Hands
CHAPTER
FORTYFOUR
CHESS GAME NOT A TION
See Chessboard Locations forsomeadditionalbackground.
Chessisplayedonan8x8board. Oneplayerhaswhitepieces,onehasblackpieces. Eachplayer’spieces
include eight pawns, two rooks, two knights, two bishops, a king and a queen. The various pieces have
diﬀerentrulesformovement. Playersmovealternatelyuntiloneplayer’skingisinapositionfromwhichit
cannotescapebutmustbetaken,orthereisadraw. Thereareanumberofrulesthatleadtoadraw,all
beyondthescopeofthisproblem. Whitemovesﬁrst.
Agameisrecordedasalogofthenumberedmovesofpieces,ﬁrstwhitethenblack. ThePortableGame
Notation(PGN)standardincludesadditionaldescriptiveinformationabouttheplayersandvenue.
Therearetwonotationsforloggingachessgame. Thenewer, algebraicnotationandtheolder descriptive
notation. Wewillwriteaprogramthatwillprocessalogineithernotationandplayoutthegame,showing
thechessboardaftereachofblack’smoves. Itcanalsobeextendedtoconvertlogstocompletelystandard
PGNnotation.
44.1 Algebraic Notation
We’ll present the formal deﬁnition of algebraic notation including Algebraic Notation (LAN) and Short
AlgebraicNotation(SAN).We’llfollowthiswithasummaryandsomeexamples. Thissectionwillendwith
someAlgorithmR,usedtoresolvewhichoftheavailablepiecescouldperformalegalmove.
Deﬁnition. Algebraicnotationsusesletters a-hfortheﬁles(columnsacrosstheboard)fromwhite’sleft
toright,andnumbersfortheranks(rowsoftheboard)fromwhite(1)toblack(8).
Piecesymbolsinthelogareasfollows:
PieceSymbolMoveSummary
Pawn(omitted)1or2spacesforward
RookRanywhereinthesamerankorsameﬁle
KnightN2inonedirectionand1intheother(“L-shaped”)
BishopBdiagonally,anydistance
QueenQhorizontal,verticalordiagonal,anydistance
KingK1spaceinanydirection
Thegamebeginsinthefollowingstartingposition.
545
Building Skills in Python, Release 2.6.5
WhiteBlackPiece
a1a8rook
b1b8knight
c1c8bishop
d1d8queen
e1e8king
f1f8bishop
g1g8knight
h1h8rook
a2-h2a7-h7pawns
Therearetwoformsofalgebraicnotation: short(orstandard)algebraicnotation(SAN),whereonlythe
destinationisshown,andlongalgebraicnotation(LAN)thatshowsthepiece,thestartinglocationandthe
destination.
LongNotation . ThebasicsyntaxforLANisasfollows:
[ P ] f r m f r [ n ]
PThepiecename(omittedforpawns).
fTheﬁle(a-h)movingfromandto.
rTherank(1-8)movingfromandto.
mThemove( -orx).
nanynotesaboutthemove( +,#,!,!!,?,??). Thenotesmayinclude =andapieceletter
whenapawnispromoted.
ShortNotation . Shortnotationomitsthestartingﬁleandrankunlesstheyareessentialfordisambiguating
amove. Thebasicsyntaxisasfollows:
[ P ] [ m ] [ d ] f r [ n ]
PThepiecename(omittedforpawns).
mThemoveisonlyspeciﬁedforacapture( x).
dThediscriminator:eitheraﬁle(preferred)orarankorbothusedtochoosewhichpiecemoved
whentherearemultiplepossibilities.
fTheﬁle(a-h)movingto.
rTherank(1-8)movingto.
nanynotesaboutthemove( +,#,!,!!,?,??). Thenotesmayinclude =andapieceletter
whenapawnispromoted.
Additional Syntax . In both notations, the castle moves are written O-OorO-O-O(capital letters, not
numbers). Similarly,theendofagameisoftenfollowedwitha 1-0(whitewins), 0-1(blackwins), 1/2-1/2
(adraw),or *foragamethatisunknownorabandoned.
Eachturnispreceededbyaturnnumber.Typicallythenumberanda .preceedsthewhitemove.Sometimes
(becauseofcommentary),thenumberand ...preceedtheblackmove.
ThePGNstandardfornotesis $andanumber,commonnumbersareasfollows:
•$1goodmove(traditional“!” )
•$2poormove(traditional“?” )
•$3verygoodmove(traditional“!!” )
546 Chapter 44. Chess Game Notation
Building Skills in Python, Release 2.6.5
•$4verypoormove(traditional“??” )
LegalMoves. Eachpiecehasalegalmove. Thisisacriticalpartofprocessingabbreviatednotationwhere
theloggivesthenameofthepieceandwhereitwoundup. Thelegalmovestodeterminewhichoftwo(or
eight)piecescouldhavemadetherequestedmove. Thisrequiresasimplesearchofpiecestoseewhichcould
havemadethemove.
•Pawn. Apawnmovesforwardonly,initssameﬁle. Forwhite,theranknumbermustincreaseby1
or2. Itcanincreaseby2whenitisinitsstartingposition;rank2. Forblack,theranknumbermust
decreaseby1or2. Itcandecreaseby2whenthepawnisinit’sstartingpositionofrank7.
Apawncapturesonthediagonal: itwillmoveintoanadjacentﬁleandforwardonerank,replacing
thepiecethatwasthere.
Thereisoneoriginforallbuttheopeningpawnmoves: onerankbackontheﬁleinwhichthepawn
endeditsmove.
Thereisoneoriginforanopeningpawnmovethatlandsinrank4or5: tworanksbackontheﬁle
wherethepawnendeditsmove.
Therearetwopossibleoriginsforanypawncapture(onepositiononaﬁleadjacenttotheoneinwhich
thepawnendeditsmove).
•Rook. Arookmovesinranksorﬁlesonly,withnolimitondistance. Thereare16possibleoriginsfor
anyrookmove,includingtheentirerankortheentireﬁleinwhichtherookendeditsmove.
•Knight. Aknightmakesan“L-shaped”move. Itmovestwospacesinonedirection,turns90-degrees
andmovesonemorespace. Fromg1,aknightcanmovetoeitherf3orh3. Therankchangesby2and
theﬁleby1;ortheﬁlechangesby2andtherankchangesby1. Thereare8placesaknightcould
startfromrelativetoitsﬁnallocation.
•Bishop. A bishop moves diagonally. The amount of change in the rank must be the same as the
changeintheﬁle. Thereare16placesabishopcanstartfromonthetwodiagonalsthatintersectthe
ﬁnallocation.
•Queen. Thequeen’smovecombinesbishopandrook: anynumberofspacesdiagonally,horizontally
orvertically. Thereare16placesonthediagonals,plus16moreplacesonthehorizontalsandverticals
wherethequeencouldoriginate. Pawnsthatreachtheoppositesideoftheboardareoftenpromoted
toqueens,meaningtherecanbemultiplequeenslateinthegame.
•King. Thekingisunique,thereisonlyone. Thekingcanonlymoveonespacehoizontally,vertically
ordiagonally.
•KingandRook . Thekingandarookcanalsoengageinamovecalled castling: bothpiecesmove.
Whenthekingandtheclosestrook(theoneinﬁleh)castle,thisis king sideandannoted O-O.The
kingmovesfromﬁleetoﬁlegandtherookfromﬁelhtoﬁlef. Whenthekingandthequeen’sside
rook(theoneinﬁlea)castle,thisisannotated O-O-O.Thekingmovesfromﬁleetoﬁlecandthe
rookmovefromﬁleatoﬁled.
Castling can only be accomplished if (a) neither piece has moved and (b) space between them is
unoccupiedbyotherpieces. Partaofthisrulerequiresthatthegamerememberwhenakingorrook
moves, and eliminate that side from available castling moves. Moving the rook in ﬁle a eliminates
queen-sidecastling;movingtherookinﬁleheliminatesking-sidecastling. Movingthekingeliminates
allcastling.
SummaryandExamples . Here’sasuymmaryofthealgebraicnotationsymbolsusedforannotatingchess
games. Thisisfollowedbysomeexamples.
44.1. Algebraic Notation 547
Building Skills in Python, Release 2.6.5
SymbolMeaning
a-hﬁlefromwhite’slefttoright
1-8rankfromwhitetoblack
R,N,B,
Q,Krook,knight,bishop,king,queen
-move(non-SAN)
xcapture;thepiecethatwasatthislocationisremoved
+check,anotethatthekingisthreatened
#checkmate,anotethatthisisthereasonfortheendofthegame
++checkmate(non-SAN),anotethatthisisthereasonfortheendofthegame
=promotedto;apawnarrivingattheoppositesideoftheboardispromotedtoanotherpiece,
oftenaqueen.
0-0castleontheking’sside;swapthekingandtherookinpositionse1andh1(ifneitherhas
movedbeforethispointinthegame)
0-0-0castleonthequeen’sside;swapthekingandtherookinpositionse1anda1(ifneitherhas
movedbeforethispointinthegame)
e.p.enpassantcapture(non-SAN),anotethatapawnwastakenbyanotherpawnpassingit.
Whenapawn’sﬁrstmoveisatwospacemove(from7to5forblackor2to4forwhite)it
canbecapturedmymovingbehindittothe6thrank(whitetakingblack)or3rdrank
(blacktakingwhite).
epenpassantcapture(non-SAN),see e.p.
?,??,!,
!!editorialcomments(non-SAN),weak,veryweak,strong,verystrong
Here’spartsofanexamplegameinabbreviatednotation:
1.e4 e5. Whitepawnmovestoe4(searche3ande2forthepawnthatcoulddothis);blackpawnmoves
toe5(searche6ande7forapawnthatcoulddothis)
2.Nf3 d6. Whiteknightmovestof3(search8positions: g1,h2,h4,g5,e5,d4,d2,e1andg1forthe
knightthatcoulddothis);blackpawnmovestod6(searchd7andd8forthepawn).
3.d4 Bg4. Whitepawnmovesfromd4(searchd3andd2forthepawn);blackbishopmovestog4(search
thefourdiagonals: f5,e6,d7,c8;h5;h3;f3,e3,andd3forthebishopthatcoulddothis).
4.dxe5 Bxf3. Awhitepawnindtakesapieceate5,thepawnmusthavebeenatd4,theblackpawnat
e5isremoved;ablackbishoptakesapieceatf3(searchthefourradiatingdiagonalsfromf3: e4,d5,
c6,b7,a8;g4,h5;g2,h1;e2,d1).
5.Qxf3 dxe5. Thewhitequeentakesthepieceatf3;theblackpawnind4takesthepieceine5.
Here’satypicalgameinabbreviatednotation:
1.c4 e6 2.Nf3 d5 3.d4 Nf6 4.Nc3 Be7 5.Bg5 0-0 6.e3 h6 7.Bh4 b6
8.cxd5 Nxd5 9.Bxe7 Qxe7 10.Nxd5 exd5 11.Rc1 Be6 12.Qa4 c5
13.Qa3 Rc8 14.Bb5 a6 15.dxc5 bxc5 16.0-0 Ra7 17.Be2 Nd7
18.Nd4 Qf8 19.Nxe6 fxe6 20.e4 d4 21.f4 Qe7 22.e5 Rb8
23.Bc4 Kh8 24.Qh3 Nf8 25.b3 a5 26.f5 exf5 27.Rxf5 Nh7
28.Rcf1 Qd8 29.Qg3 Re7 30.h4 Rbb7 31.e6 Rbc7 32.Qe5 Qe8
33.a4 Qd8 34.R1f2 Qe8 35.R2f3 Qd8 36.Bd3 Qe8 37.Qe4 Nf6
38.Rxf6 gxf6 39.Rxf6 Kg8 40.Bc4 Kh8 41.Qf4 1-0
Here’sasmallgameinfullnotation:
1.f2-f4 e7-e5 2.f4xe5 d7-d6 3.e5xd6 Bf8xd6 4.g2-g3 Qd8-g5
5.Ng1-f3 Qg5xg3+ 6.h2xg3 Bd6xg3#
548 Chapter 44. Chess Game Notation
Building Skills in Python, Release 2.6.5
44.2 Algorithms for Resolving Moves
Algebraic notation is terse because it is focused on a human student of chess. It contains just enough
informationforapersontofollowthegame. Eachindividualmovecannotbeinterpretedasastand-alone
(or“context-free”statement). Eachmove’sdescriptiononlymakessenseinthecontextofthegamestate
establishedbyallthemovesthatcamebeforeit. Therefore,inordertointerpretalogofchessmoves,we
alsoneedtomaintainthestateofthechessboard.
Giventhatwehaveamodelofthechessboard,AlgorithmGcanlocatethepiecesandexecutethemoves
anentiregame.
Algorithm G
(ResolvechessmovesinSANnotation,playingouttheentiregame.) Wearegivenablockoftextwitha
sequenceofchessturns. Assumethatlinebreakshavebeenremovedandthegameendingmarkerhasbeen
removedfromtheblockoftext.
1.Parseturnintomoves . Locatemovenumber,whitemoveandblackmove. Linesthatdon’thave
thisformaresomekindofcommentaryandcanbeignored.
2.Parseeachmove . Foreachmove,parsethemove. Identifythepiece( R,B,N,Q,K,pawnifnoneof
these). Identifytheoptionalﬁle( a-h)orrank( 1-8)forthesource. Identiftytheoptional xfora
capture. Identifythedestinationﬁle( a-h)andrank( 1-8). Identifyanyothermateriallike +or#
forchecks, =xforpromotions,or !,!!,?,??foreditorialcomments.
3.Castling?Ifthemoveissimply 0-0orO-O-O,moveboththeking(inﬁlee)andtheappropriate
rook. For 0-0itistherookinﬁlehmovestof,thekingmovesfrometog. For O-O-Oitistherook
inﬁleamovestod,thekingmovesfrometoc.
4.Fullyspeciﬁedfromlocation? Ifatwo-characterfrom-positionisgiven,thisisthestartinglocation.
Executethemovewithstep7.
5.Partiallyspeciﬁedfromlocation? Ifaone-characterfrom-positionisgiven(a-hor1-8),restrict
thesearchforthesourcetothisrankforﬁle. Usethepiece-speciﬁcversionofAlgorithmSwithrank
orﬁlerestrictionsforthesearch. Afterthestartinglocationisfound,executethemovewithstep7.
6.Omittedfromlocation? Searchallpossibleoriginsforthefrom-positionforthispiece. Eachpiece
has a unique search pattern based on the piece’s movement rules. Use the piece-speciﬁc version of
AlgorithmSwithnorestrictionsforthesearch. Afterthestartinglocationisfound,executethemove
withstep7.
7.Executemove . Movethepiece,updatingthestateoftheboard,removingcapturedpieces. Periodi-
callyduringgameprocessing,printtheboardposition. Theboard,bytheway,isalwaysorientedso
thata1isadarksquareinthelower-left.
8.Nextmove. Looptostep2,processingtheblackmoveafterthewhitemoveinthisturn. Iftheblack
moveisomittedorisoneoftheendingstrings,skiptheblackmove.
9.Nextturn. Looptostep1,processingthenextturn. Iftheturnnumberisomittedorisoneofthe
endingstrings,thisistheendofthegame.
Wehavetodesignsixdiﬀerentkindsofsearchesforpossiblestartingpieces. Thesesearchesincludepawns,
rooks, knights, bishops queens and the king. We’ll provide formal algorithms for pawns and rooks, and
informalspeciﬁcationsfortheotherpieces.
44.2. Algorithms for Resolving Moves 549
Building Skills in Python, Release 2.6.5
Algorithm P
(Searchforpossiblepawnstartinglocations.) Givenadestinationlocation,piececolor,andoptionalrestric-
tionsonstartingrankorstartingﬁle.
1.Firstmove. Ifthedestinationisrank4(white)orrank5(black),searchtwospacesbackfortheﬁrst
moveofapawn(fromrank7orrank2). Ifmovingthispiecewillnotputthekingintocheck,thisis
thestatinglocation.
2.Previous space . Search the previous space (rank -1 for white, rank +1 for black) for a move. If
movingthispiecewillnotputthesamecolorkingintocheck,thisisthestatinglocation.
3.Capture. Searchtheadjacentﬁlesonespacebackforapawnwhichperformedacapture. Ifmoving
thispiecewillnotputthesamecolorkingintocheck,thisisthestatinglocation.
4.Error. Ifnosourcecanbefound,thegamenotationisincorrect.
Algorithm R
(Searchforpossiblerookstartinglocations.) Givenadestinationlocation,piececolor,andoptionalrestric-
tionsonstartingrankorstartingﬁle.
1.ToRight.
1.Initialize. Set r←+1.
2.Loop. Targetpositionhasﬁleoﬀsetby rfromdestination.
3.OnBoard. Ifthisisoﬀtheboard,oranon-rookwasfound,breakfromthisloop.
Ifmovingthispiecewillnotputthekingintocheck,returnthispositionasthestatinglocation.
4.Loop. Incrementr. Continuethisloop.
1.ToLeft.
(a)Initialize. Set r←− 1.
(b)Loop. Targetpositionhasﬁleoﬀsetby rfromdestination.
(c)OnBoard. Ifthisisoﬀtheboard,oranon-rookwasfound,breakfromthisloop.
Ifmovingthispiecewillnotputthekingintocheck,returnthispositionasthestatinglocation.
(d)Loop. Decrementr. Continuethisloop.
2.TowardBlack .
(a)Initialize. Set r←+1.
(b)Loop. Targetpositionhasrankoﬀsetby rfromdestination.
(c)OnBoard. Ifthisisoﬀtheboard,oranon-rookwasfound,breakfromthisloop.
Ifmovingthispiecewillnotputthekingintocheck,returnthispositionasthestatinglocation.
(d)Loop. Incrementr. Continuethisloop.
3.TowardWhite .
(a)Initialize. Set r←− 1.
(b)Loop. Targetpositionhasrankoﬀsetby rfromdestination.
550 Chapter 44. Chess Game Notation
Building Skills in Python, Release 2.6.5
(c)OnBoard. Ifthisisoﬀtheboard,oranon-rookwasfound,breakfromthisloop.
Ifmovingthispiecewillnotputthekingintocheck,returnthispositionasthestatinglocation.
(d)Loop. Decrementr. Continuethisloop.
4.Error. Ifnosourcecanbefound,thegamenotationisincorrect.
Algorithm N
(Search for possible knight starting locations.) Given a destination location, piece color, and optional
restrictionsonstartingrankorstartingﬁle.
Thereareasmanyaseightpossiblestartingpositionsforaknight’smove.
1.AdjacentFile . Fourofthestartingpositionshaveaﬁleoﬀsetof+1or-1andrankoﬀsetsof+2or
-2.
Ifthepositionisontheboard,thepieceisaknight,andmovingthispiecewillnotputthekinginto
check,thenthisistheoriginforthismove.
2.AdjacentRank . Fourofthestartingpositionshaveﬁleoﬀsetsof+2or-2andrankoﬀsetsof+1or
-1.
Ifthepositionisontheboard,thepieceisaknight,andmovingthispiecewillnotputthekinginto
check,thenthisistheoriginforthismove.
Algorithm B
(Search for possible bishop starting locations.) Given a destination location, piece color, and optional
restrictionsonstartingrankorstartingﬁle.
Searchradiallyoutthediagonalsuntiledgeofboardoraninterveningpieceorthecorrectbishopwasfound.
Thisalgorithmissimilartotherookalgorithm,excepttheoﬀsetsapplyto bothrankandﬁle. Applying+1
tobothrankandﬁlemovesnorth-east;applying-1tobothrankandﬁlemovessouth-west. Applying+1to
rankand-1toﬁlemovessoutheast;applying-1torankand+1toﬁlemovesnorthwest.
Whenanopposingpieceisfound,thesearchalongthatdiagonalends.
Ifthepositionisontheboard,thepieceisabishop,andmovingthispiecewillnotputthekingintocheck,
thenthisistheoriginforthismove.
Algorithm Q
Searchforpossiblequeenstartinglocations.) Givenadestinationlocation,piececolor,andoptionalrestric-
tionsonstartingrankorstartingﬁle.
Searchradiallyouttheranks,ﬁlesanddiagonalsuntiledgeofboardoraninterveningpieceorthecorrect
queenwasfound. Thiscombinesthebishopandrookalgorithms.
Whenanopposingpieceisfound,thesearchalongthatrank,ﬁleordiagonalends.
Ifthepositionisontheboard,thepieceisaqueen,andmovingthispiecewillnotputthekingintocheck,
thenthisistheoriginforthismove.
44.2. Algorithms for Resolving Moves 551
Building Skills in Python, Release 2.6.5
Algorithm K
Searchforpossiblekingstartinglocations.)Givenadestinationlocation,piececolor,andoptionalrestrictions
onstartingrankorstartingﬁle.
Searchthe8adjacentlocations. Theseareallcombinationsof-1,0,+1forrankoﬀsetand-1,0,+1forﬁle
oﬀset. Omitcheckingthecombinationwitha0oﬀsettorankanda0oﬀsettoﬁle.
Ifthepositionisontheboard,thepieceistheking,thisisthestartingposition.
44.3 Descriptive Notation
Descriptivenotationusesadiﬀerentschemeforidentifyinglocationsontheboard. Eachﬁleisnamedforthe
piecesatit’stopandbottomendsasthegamebegins. TheboardisdividedintoKing’ssideandQueen’s
side. TheﬁlesareKR,KKt,KB,K,Q,QB,QKt,QR.Theseareknownasa,b,c,d,e,f,g,hinAlgebraic
notation.
Theranksarecountedfromtheplayer’spointofview,fromtheirbackrowtothefarrow. Consequently,
white’srow1isblack’srow8. White’sQ1isBlack’sQ8;Black’sKB5isWhite’sKB4.
Thenotationhasthefollowingformat:
piece [ (file rank) ] move [file rank] [note]
Thesymbolforthe piecetobemovedisoneofp,B,N,R,Q,K.
Ifcapturing,the moveisx,followedbythesymbolofthecapturedpiece. Examples: pxp,NxQ.Asearchis
requiredtodeterminewhichpiececanbetaken.
Ifnotcapturing,the moveis-,followedby ﬁle ranktonamethesquaremovedto,fromtheperspectiveof
whoeverismoving,blackorwhite
If2piecesarebothbedescribedbyamoveorcapture,writethelocationoftheintendedpieceinparentheses.
Examples: p(Q4)xRmeanspawnatqueen’srookfourtakesRook, N(KB3)-K5meansknightatKB3moves
toK5
Specialmovesincludeking’ssidecastling,designated O-O,Queen’ssidecastling,designated O-O-O.
Notes. Ifapawncaptures en passantor in passingitisdesignated epinthe note. Amoveresultingina
checkofthekingisfollowedby chinthe note.!meansgood move;?meansbad moveinthe note.
Ifthepawninfrontofthekingismovedforwardtwospaces,itisdescribedas P-K4. Ifthepawninfrontof
thequeensideknightismovedforwardonespace,itis P-QN3. IfaknightatK5capturesarookonQ7,it
wouldbe NxRorifclariﬁcationisneeded, NxR(Q7)orN(K5)xR.
44.4 Game State
Inordertoprocessalog,amodelofthechessboard’scurrentpositionisessential. Inadditiontothebasic64
squarescontainingthepieces,severaladditionalfactsarenecessarytocapturethegamestate. Thecurrent
stateofachessgameisa6-tupleofthefollowingitems:
PiecePlacement . An8-tupleshowspiecesineachrankfrom8downto1. Piecesareshownassingle
letters,uppercaseforwhite(PRNBQK),lowercaseforblack(prnbqk). PiecesarecodedPforpawn,Rfor
rook,Nforknight,Bforbishop,QforqueenandKforking. Emptyspacesareshownasthenumberof
contiguousspaces.
552 Chapter 44. Chess Game Notation
Building Skills in Python, Release 2.6.5
Theentirerankcanbecodedasa1-8characterstring. 8meansnopiecesinthisrank. 4p3meansfour
emptyspaces(a-d),ablackpawninﬁlee,and3emptyspaces(f-h).
The entire 8-tuple of strings can be joined to make a string delimited by /‘s. For example
rnbqkbnr/pp1ppppp/8/2p5/4P3/5N2/PPPP1PPP/RNBQKB1R .
ActiveColor . Avalue( worb)showingwho’sturntomoveisnext. Thiscoloris activebecausethisplayer
is contemplatingtheir move. The starting position, for instance, has an activecolor of w, because white
movesﬁrst.
CastlingAvailability . Astringwith1to4charactersshowingwhichcastlingmovesarestillallowed. If
noneareallowed,a -isshown. Whitecodesarecapitalletters,blackarelowercase. Whenkingsidecastling
ispossible,aK(white)ork(black)isincluded. WhenqueensidecasltingispossibleaQ(white)orq(black)
isincluded. Atthestartofthegame,therearefourcharacters: KQkq. Asthegameprogressandkingscastle
oraremovedforotherreason,orrooksaremoved,thestringreducesinsizeto -.
En PassantTarget. Either -orasquareinrank6or3. Whenapawn’sﬁrstmoveadvancestwospaces
(from7to5forblackor2to4forwhite),theskipped-overspaceisnamedhereonthenextturnonly. Ifan
opposingpawnmovestothisspace,an En Passantcapturehasoccured. Ifno En Passantvulnerability,a
-isgiven.
HalfMoveCount . Howmany1/2movessinceapawnwasadvancedorapiececaptures. Thisiszero
afterapawnmovesorapieceiscaptured. Thisisincrementedaftereach1/2move(whiteorblack)where
nopawnmovesandnopieceiscaptured. Whenthisreaches50,thegameistechnicallyadraw.
Turn. Thisistheturncount,itincrementsfrom1,by1,afterblack’smove.
44.5 PGN Processing Speciﬁcations
There are three parts to a PGN processing program: the parsing of a PGN input ﬁle, the resolution of
moves,andmaintenanceofthegamestate. Eachcanbedealtwithseparatelywithsuitableinterfaces. Each
ofthesemodulescanbebuiltandtestedinisolation.
First,somepreliminaries. Inordertoresolvemoves,thegamestatemustbekept. Thisisadictionaryof
locationsandpieces,plustheﬁveotheritemsofinformationthatcharacterizethegamestate: activecolor
(worb),castlingavailability, en passanttarget,half-movedrawcountandturnnumber. Theboardhasan
interfacethatacceptsamoveandexecutesthatmove,updatingthevariouselementsofboardstate.
MovescanusetheCommanddesignpatterntoseparateking-sidecastle,queen-sidecastle,moves,captures
andpromotions. TheBoardobjectwillrequireafully-speciﬁedmovewithsourcelocationanddestination
location. Thesourcelocationisproducedbythesourceresolutionalgorithm.
Awell-deﬁnedBoardobjectcouldbeusedeitherforasingle-playergame(againstthecomputer)oraspart
ofachessgameserverfortwo-playergames.
Second,thehardpart. Resolutionofshortnotationmovesrequiresseveralalgorithmstolocatethepiece
thatmadethemove. Basedoninputinalgebraicnotation,amovecanbetransformedfromastringintoa
7-tupleof color,piece,fromHint,moveType,toPosition,checkIndicator andpromotionIndicator .
•Thecoloriseitherworb.
•Thepieceisomittedforpawns,oroneof RNBQKfortheotherpieces.
•ThefromHintisthefromposition,eitheraﬁleandrankoraﬁlealoneorarankalone. Thevarious
searchalgorithmsarerequiredtoresolvethestartingpieceandlocationfromanincompletehint.
•ThemoveTypeiseitheromittedforasimplemoveor xforacapturingmove.
•ThetoPositionistherankandﬁleatwhichthepiecearrives.
44.5. PGN Processing Speciﬁcations 553
Building Skills in Python, Release 2.6.5
•ThecheckIndicator iseithernothing, +or#.
•ThepromotionIndicator iseithernothingoranewpiecenamefrom QBRK.
ThisinformationisusedbyAlgorithmGtoresolvethefullstartingpositioninformationforthemove,and
thenexecutethemove,updatingtheboardposition.
Finally,inputparsingandreporting. APGNﬁlecontainsaseriesofgames.
Each game begins with identiﬁcation tags of the form [Label "value"] . The labels include names like
Event,Site,Date,Round,White,Black,Result. Otherslabelsmaybepresent.
Aftertheidentiﬁcationtagsisablanklinefollowedbythetextofthemoves,calledthe“movetext”. The
movetextissupposedtobeSAN(shortnotation),butsomeﬁlesareLAN(longnotation). Themovesshould
endwiththeresult( 1-0,0-1,*,or1/2-1/2),followedby1ormoreblanklines.
Here’sasamplegamefromarecenttournament.
[Event "25th European Club Cup 2009"]
[Date "2009.10.04"]
[Round "1"]
[Board "1"]
[White "Aronian, Levon"]
[Black "Docx, Stefan"]
[Result "1-0"]
1.d4 d6 2.Nf3 g6 3.e4 Bg7 4.Bc4 Nf6 5.Qe2 O-O 6.O-O Bg4 7.Rd1 Nc6 8.h3 Bxf3
9.Qxf3 Nd7 10.c3 e5 11.Be3 a6 12.Na3 exd4 13.cxd4 Qh4 14.Rac1 Nf6 15.Bd3 Rfe8
16.Rc4 Nd7 17.Bb1 Rad8 18.b4 Nb6 19.Rcc1 d5 20.e5 Qe7 21.Nc2 Nc4 22.a3 b5 23.Ba2
Nb8 24.Re1 c6 25.Qg3 Qf8 26.h4 Nd7 27.h5 Ra8 28.Rcd1 a5 29.Bc1 Qe7 30.Bb1 Qe6
31.hxg6 fxg6 32.Rd3 axb4 33.Nxb4 c5 34.Nc2 Qc6 35.f4 Qb6 36.Qf3 Rad8 37.Ne3 Nxe3
38.dxc5 Nxc5 39.Bxe3 Qa5 40.Bd2 Qb6 41.Qf2 Re6 42.Rh3
DesignConsiderations . Inordertohandlevariousformsforthemovetext,therehavetobetwomove
parsing classes with identical interfaces. These polymorphic classes implement long-notation and short-
notationparsing. Intheeventthatashort-notationparserobjectfails,thenthelong-notationparserobject
canbeusedinstead. Ifbothfail,theﬁleisinvalid.
APGNprocessingprogramshouldbeabletoreadinaﬁleofgames,executethemoves,printlogsinvarious
forms(SAN,LANandDescriptive), printboardpositionsinvariousforms. Theprogramshouldalsobe
abletoconvertﬁlesfromLANorDescriptivetoSAN.Additionally,theprocessorshouldbeabletovalidate
logs,andproduceerrormessageswhenthechessnotationisinvalid.
Additionally,oncethebasicPGNcapabilitiesareinplace,aprogramcanbeadaptedtodoanalysisofgames.
Forinstanceitshouldbeabletoreportonlygamesthathavespeciﬁcopenings, piececountsattheend,
promotionstoqueen,castling,checks,etc.
554 Chapter 44. Chess Game Notation
Part VII
Back Matter
555

CHAPTER
FORTYFIVE
BIBLIOGRAPHY
45.1 Use Cases
45.2 Computer Science
45.3 Design Patterns
45.4 Languages
45.5 Problem Domains
557
Building Skills in Python, Release 2.6.5
558 Chapter 45. Bibliography
CHAPTER
FORTYSIX
INDICES AND T ABLES
• Index
• Module Index
• Search Page
559
Building Skills in Python, Release 2.6.5
560 Chapter 46. Indices and T ables
CHAPTER
FORTYSEVEN
PRODUCTION NOTES
Thefollowingtoolsetwasusedforproductionofthisbook.
•Python2.6.3.
•Sphinx0.6.3.
•Docutils0.5.
•KomodoEdit5.2.2.
•pyPDF1.12.
•MacTeX-2008.
561
Building Skills in Python, Release 2.6.5
562 Chapter 47. Production Notes
BIBLIOGRAPHY
[Jacobson92]IvarJacobson,MagnusChristerson,PatrikJonsson,GunnarÖvergaard. Object-Oriented Soft-
ware Engineering .AUseCaseDrivenApproach.1992.Addison-Wesley.0201544350.
[Jacobson95]Ivar Jacobson, Maria Ericsson, Agenta Jacobson. The Object Advantage . Business Process
ReengineeringwithObjectTechnology.1995.Addison-Wesley.0201422891.
[Boehm81]BarryBoehm. Software Engineering Economics .1981.Prentice-HallPTR.0138221227.
[Comer95]DouglasComer. Internetworking with TCP/IP .Principles,Protocols,andArchitecture.3rdedi-
tion.1995.Prentice-Hall.0132169878.
[Cormen90]ThomasH.Cormen,CharlesE.Leiserson,RonaldL.Rivest. Introduction T o Algorithms .1990.
MITPress.0262031418.
[Dijkstra76]EdsgerDijkstra. A Discipline of Programming .1976.Prentice-Hall.0613924118.
[Gries81]DavidGries. The Science of Programming .1981.Springer-Verlag.0387964800.
[Holt78]R.C.Holt,G.S.Graham,E.D.Lazowska,M.A.Scott. Structured Concurrent Programming with
Operating Systems Applications .1978.Addison-Wesley.0201029375.
[Knuth73]Donald Knuth. The Art of Computer Programming . Fundamental Algorithms. 1973. Addison-
Wesley.0201896834.
[Meyer88]BertrandMeyer. Object-Oriented Software Construction .1988.PrenticeHall.0136290493.
[Parnas72]D.Parnas. On the Criteria to Be Used in Decomposing Systems into Modules .1053-1058.1972.
CommunicationsoftheACM..
[Gamma95]Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides. Design Patterns . Elements of
Object-OrientedSoftware.1995.Addison-WesleyProfessional.0201633612.
[Larman98]CraigLarman. Applying UML and Patterns .AnIntroductiontoObject-OrientedAnalysisand
Design.1998.Prentice-Hall.0137488807.
[Lott05]StevenLott. Building Skil ls in Object-Oriented Design .Step-by-StepConstructionofAComplete
Application.2005.StevenF.Lott
[Rumbaugh91] JamesRumbaugh,MichaelBlaha,WilliamPremerlani,FrederickEddy,WilliamLorensen.
Object-Oriented Modeling and Design .1991.PrenticeHall.0136298419.
[Geurts91]Leo Geurts, Lambert Meertens, Steven Pemberton. The ABC Programmer’s Handbook . 1991.
Prentice-Hall.0-13-000027-2
[Gosling96]Gosling,McGilton. Java Language Environment White Paper .1996.SunMicrosystems..
[Harbison92]SamuelP.Harbison. Modula-3.1992.Prentice-Hall.0-13-596396-6.
563
Building Skills in Python, Release 2.6.5
[vanRossum04] GuidovanRossum,FredL.Drake. Python Documentation .2004.PythonLabs..
[Wirth74] Proceedings of the IFIP Congress 74 .1974.North-Holland.. On the Design of Programming Lan-
guages.386-393.
[Banks02]RobertB.Banks. Slicing Pizzas, Racing T urtles, and F urther Adventures in Applied Mathematics .
2002.PrincetonUniversityPress.0-691-10284-8.
[Dershowitz97] NachumDershowitz,EdwardM.Reingold. Calendrical Calculations .1997.CambridgeUni-
versityPress.0-521-56474-3
[Latham98]LanceLatham. Standard C Date/Time Library .1998.Miller-Freeman.0-87930-496-0.
[Meeus91]JeanMeeus. Astronomical Algorithms .1991.Willmann-BellInc..0-943396-35-2.
[Neter73]JohnNeter,WilliamWasserman,G.A.Whitmore. F undamental Statistics for Business and Eco-
nomics.4thedition.1973.AllynandBacon,Inc..020503853.
[OBeirne65]T.M.O’Beirne. Puzzles and Paradoxes .1965.OxfordUniversityPress..
[Shackleford04] MichaelShackleford. The Wizard Of Odds .2004.
[Silberstang05] EdwinSilberstang. The Winner’s Guide to Casino Gambling .4thedition.2005.OwlBooks.
0805077650.
[Skiena01]StevenSkiena. Calculated Bets .Computers,Gambling,andMathematicalModelingtoWin.2001.
CambridgeUniversityPress.0521009626.
564 Bibliography
