StartDeveloping iOSAppsToday

Contents
Introduction 5
Setup 6
GettheTools7
Tutorial:Basics 8
CreateaNewProject9
GetFamiliar with Xcode11
RuniOSSimula tor12
Review theSourceCode14
CreateaStoryboard17
AddaScenetoYourStoryboard19
TestYourChange s23
Build theBasicInterface23
Recap28
StructuringanApp 29
AppDevelopmen tProcess30
Defining theConcept 30
Designing aUserInterface31
Defining theInteraction 31
Implemen ting theBehavior 32
ObjectsAreBuilding BlocksforApps 32
Classe sAreBluepr intsforObjects32
ObjectsCommunic ateThrough Message s33
ProtocolsDefine Messaging Contracts34
Incorporating theData34
UsetheRightResources34
IncorporateRealData35
DesigningaUserInterface36
TheViewHierarchy36
Building anInterfaceUsing Views37
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
2
UseStoryboardstoLayOutViews38
UseInspectorstoConfigur eViews40
UseAutoLayouttoPosition Views41
DefiningtheInteraction 42
ViewControllers 42
Actions 43
Outlets 44
Controls44
Navigation Controllers 45
UseStoryboardstoDefine Navigation 45
Tutorial:Storyboards47
Adopt AutoLayout 48
Creating aSecond Scene 50
DisplayStaticContentinaTable View 53
AddaSegue toNavigateForward55
CreateCustomViewControllers 63
Unwind aSegue toNavigateBack 66
Recap68
Implemen tinganApp 69
IncorporatingtheData70
Designing YourModel 70
Implemen ting YourModel 71
UsingDesignPatterns 72
MVC72
Target-A ction 73
Delega tion 73
WorkingwithFoundation 75
Value Objects75
Strings 76
Numb ers 77
Collec tion Objects78
Arrays78
Sets 82
Dictionar ies83
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
3Contents
Representnilwith NSNull84
WritingaCustomClass 86
Declar ingand Implemen ting aClass 87
Interface87
Implemen tation 87
PropertiesStoreanObject’sData88
Metho dsDefine anObject’sBehavior 89
Metho dParamet ers 90
Implemen ting Metho ds91
Tutorial:AddData93
CreateaDataClass 94
Load theData95
DisplaytheData98
MarkItems asComplet ed102
AddNewItems 105
Recap111
NextSteps 112
iOSTechnologies113
UserInterface113
Games114
Data115
Media 115
FindingInformation 116
UseContextual HelpArticlesforXcodeGuidanc e116
UseGuide sforGener aland Conceptual Overview s118
UseAPIReferenceforClassInformation 119
UseQuick HelpforContextual SourceCodeInformation 124
UseSample CodetoSeeReal-W orldUsage 126
WheretoGofromHere128
TakingtheToDoList ApptotheNextLevel129
DocumentRevisionHistory130
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
4Contents
 ●“Setup ” (page  6)
 ●“Tutorial:Basics ” (page  8)
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
5Introduction
StartDevelopingiOSAppsTodayprovidestheperfectstarting pointforiOSdevelopmen t.OnyourMac,you
cancreateiOSapps thatrunoniPad,iPhone ,and iPodtouch. Viewthisguide ’sfourshor tmodule sasagentle
introduction tobuilding yourfirstapp—including thetoolsyouneed andthemajor concepts andbestpractices
thatwillease yourpath.
Thefirst threemodule seach end with atutorial,wher eyou’llimplemen twhatyou’velearned.Attheend of
thelasttutorial,you’llhavecreatedasimple to-do listapp.
Afteryou’vebuilt yourfirstapp inthisguide and areconsider ingyournextendea vor,readthefourthmodule .
Itexplor esthetechnolo giesand framew orksyoumigh tconsider adopting inyournextapp.You’llbeonyour
waytokeeping yourcustomers engaged and lookingforwardtothenextgreatthing .
Eventhough thisguide takesyouthrough everystepofbuilding asimple app,tobenefit most ithelps tobe
acquain tedwith comput erprogramming ingener aland with objec t-orientedprogramming inparticular .
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
6Setup
GettheTools
Beforeyoucanstartdeveloping greatapps ,setupadevelopmen tenvironmen ttoworkinandmakesureyou
havetherighttools.
"QQ4UPSF
 9DPEF
 %PXOMPBE
TodevelopiOSapps,youneed:
 ●AMaccomput errunning OSX10.7(Lion) orlater
 ●Xcode
 ●iOSSDK
XcodeisApple ’sintegrateddevelopmen tenvironmen t(IDE). Xcodeinclude sasourceeditor,agraphic aluser
interfaceeditor,andman yother features.TheiOSSDK extends theXcodetoolset toinclude thetools,compilers ,
and framew orksyouneed specific allyforiOSdevelopmen t.
Youcandownload thelatestversion ofXcodeforfreefromtheAppStoreonyourMac.(TheAppStoreapp is
installed with OSXversion 10.7and later.Ifyouhaveanearlierversion ofOSX,youneed toupgrade.)TheiOS
SDK isincluded with Xcode.
TodownloadthelatestversionofXcode
1.OpentheAppStoreapp onyourMac(bydefault it’sintheDock).
2. Inthesearchfield inthetop-rightcorner,typeXcode and presstheReturnkey.
3.ClickFree
 .
Xcodeisdownloaded intoyour/Applications directory.Setup
GettheTools
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
7
Thistutorialtakesyouthrough thebasics ofwhatanapp is,totheprocessofcreating asimpleuserinterface,
and ontoadding thecustombehavior thattransformstheinterfaceintoaworkingapp.
Followthistutorialtolearnthebasics ofiOSapp developmen t,including:
 ●HowtouseXcodetocreateand manage aproject
 ●Howtoiden tifythekeypiecesofanXcodeproject
 ●Howtoadd standar duser interfaceelemen tstoyourapp
 ●Howtobuild and runyourapp
Afteryoufinish thetutorial,you’llhaveanapp thatlookssomething likethis:
Tokeepthings simple ,thetutorialprojecthasonly aniPhone interface,butyouusetheexactsame toolsand
technique stodevelop aniPadapp.ThistutorialusesXcode5.0and iOSSDK 7.0.
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
8Tutorial:Basics
CreateaNewProject
Togetstarteddeveloping yourapp,createanew Xcodeproject.
Xcodeinclude sseveralbuilt-in apptemplatesthatyoucanusetodevelop common stylesofiOSapps ,such
asgame s,apps with tab-based navigation, and table-view-based apps .Mostofthesetempla teshave
preconfigur edinterfaceand sourcecodefilesforyoutostartworkingwith. Forthistutorial,you’llstartwith
themost basic templa te:Empt yApplic ation.
Workingwith theEmpt yApplic ation templa tewillhelp youunderstand thebasic structureofaniOSapp and
howcontentgets onscr een. Afteryou’velearnedhoweverything works,youcanuseoneoftheother templa tes
foryourownapp tosaveyourself some configur ation time .
Tocreateanewemptyproject
1.OpenXcodefromthe/Applications directory.
TheXcodewelcome windo wappears.
Ifaprojectwindo wappears insteadofthewelcome windo w,don’tworry—y ouprobably createdoropened
aprojectinXcodepreviously .Justusethemenu iteminthenextsteptocreatetheproject.
2. Inthewelcome windo w,click “Createanew Xcodeproject”(orchooseFile>New>Project).Tutorial:Basics
CreateaNewProject
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
9
Xcodeopensanew windo wand displaysadialo ginwhich youcanchooseatempla te.
3.IntheiOSsection attheleftofthedialo g,selec tApplic ation.
4. Inthemain areaofthedialo g,click Empt yApplic ation and then click Next.
5.Inthedialo gthatappears,name yourapp and chooseadditional options foryourproject.
Usethefollowing values:
 ●ProductName:ToDoListTutorial:Basics
CreateaNewProject
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
10
Xcodeusestheproductname youenteredtoname yourprojectand theapp.
 ●Compan yIden tifier :Yourcompan yiden tifier ,ifyouhaveone.Ifyoudon’t,usecom.example .
 ●ClassPrefix:XYZ
Xcodeusestheclass prefixname toname theclasse sitcreatesforyou.Objective-Cclasse smust be
named uniquely within yourcodeandacrossanyframew orksorbundle syoumigh tbeusing .Tokeep
class name sunique ,theconvention istouseprefixesforallclasse s.Two-lett erprefixesarereserved
byApple foruseinframew orkclasse s,sousesomething that’sthreelettersorlonger .
6. ChooseiPhone fromtheDevicespop-up menu .
Asalready men tioned ,creating anappwith aniPhone interfaceisthesimple stwaytostart.Thetechnique s
used arethesame foraniPadoruniversal app.
7.ClickNext.
8. Inthedialo gthatappears,choosealocation foryourprojectand click Create.
Xcodeopensyournew projectinawindo w(called theworkspacewindow),which should looksimilar to
this:
GetFamiliar with Xcode
Xcodeinclude severything youneed tocreateanapp.Itnotonly organiz esthefilesthatgointocreating an
app,itprovideseditorsforcodeand interfaceelemen ts,allowsyoutobuild and runyourapp,and include sa
powerfulintegrateddebugger .Tutorial:Basics
GetFamiliar with Xcode
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
11
Takeafewmomen tstofamiliar izeyourself with theXcodeworkspace.You’llusethecontrolsiden tified inthe
windo wbelowthroughout therestofthistutorial.Clickdifferentbuttonstogetafeelforhowtheywork.If
youwantmoreinformation onpartoftheinterface,readthehelp articlesforit—y oufind them by
Control-click inganareaofXcodeand choosing thearticle fromtheshor tcutmenu thatappears.
RuniOSSimula tor
Because youbased yourprojectonanXcodetempla te,thebasic app environmen tisautoma ticallysetupfor
you.Eventhough youhaven’twrittenanycode,youcanbuild andruntheEmpt yApplic ation templa tewithout
anyadditional configur ation.
Tobuild and runyourapp,youcanusetheiOSSimulatorapp that’sincluded inXcode.Asitsname implie s,
iOSSimula torgivesyouanidea ofhowyourapp would lookand behaveifitwererunning onaniOSdevice.
iOSSimula torcanmodelanumb erofdifferenttypesofhardware—iPad,iPhone with differentscreensizes,
and soon.Asaresult,youcansimula teyourapp oneverydeviceyou’redeveloping for.Inthistutorial,use
theiPhone Retina (4-inch) option.
TorunyourappiniOSSimulatorTutorial:Basics
RuniOSSimula tor
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
12
1.ChooseiPhone Retina (4-inch) fromtheScheme pop-up menu intheXcodetoolbar .
Goahead and lookthrough themenu toseewhatother hardwareoptions areavailable iniOSSimula tor.
2. ClicktheRunbutton,locatedinthetop-lef tcorneroftheXcodetoolbar .
Alternatively,youcanchooseProduct>Run(orpressCommand-R).
Ifthisisthefirsttime you’rerunning anapp,Xcodeasks whether you’dliketoenable develop ermodeon
yourMac.Develop ermodeallowsXcodeaccesstocertain debugging featureswithout requir ingyouto
enteryourpassw ordeach time .Decide whether you’dliketoenable develop ermodeand followthe
prompts .Ifyouchoosenottoenable it,youmaybeaskedforyourpassw ordlateron.Thetutorialsassume
develop ermodeisenabled .
3.WatchtheXcodetoolbar asthebuild processcomplet es.
Xcodedisplaysmessage saboutthebuild processintheactivityviewer,which isinthemiddle ofthe
toolbar .
AfterXcodefinishe sbuilding yourproject,iOSSimula torstartsautoma tically.Itmaytakeafewmomen tsto
startupthefirst time .Tutorial:Basics
RuniOSSimula tor
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
13
iOSSimula toropensiniPhone mode,justasyouspecified .Onthesimula tediPhone screen, iOSSimula tor
opensyourapp.
Asthename Empt yApplic ation implie s,thetempla tedoesn’tdomuch—it justdisplaysawhit escreen. Other
templa teshavemorecomple xbehavior.It’simportanttounderstand atempla te’susesbeforeyouextend it
tomakeyourownapp.Running thetempla tewith nomodifications isagoodwaytostartdeveloping that
understanding .
Afteryou’veexplor edtheapp,quit iOSSimula torbychoosing iOSSimula tor>QuitiOSSimula tor(orpressing
Command-Q).
Review theSourceCode
TheEmpt yApplic ation templa tecome swith afewexisting sourcecodefilesthatsetuptheapp environmen t.
Mostoftheworkisdone bytheUIApplicationMain func tion, which isautoma ticallycalled inyourproject’s
main.m sourcefile.TheUIApplicationMain func tion createsanapplic ation objec tthatsets upthe
infrastructureforyourapp toworkwith theiOSsystem.Thisinclude screating arunloopthatdeliv ersinput
eventstoyourapp.
Youwon’tbedealing with themain.m sourcefiledirectly,butit’sinteresting tounderstand howitworks.
Tolookatthemain.msourcefile
1.Makesuretheprojectnavigatorisopeninthenavigatorarea.Tutorial:Basics
Review theSourceCode
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
14
Theprojectnavigatordisplaysallthefilesinyourproject.Iftheprojectnavigatorisn’topen,click the
leftmost buttoninthenavigatorselec torbar.
2. OpentheSupporting Filesfolder intheprojectnavigatorbyclick ingthedisclosur etriangle nexttoit.
3.Selectmain.m .
Xcodeopensthesourcefileinthemain editorareaofthewindo w,which lookssimilar tothis:
Ifyoudouble-click edthefile,you’llnotic ethatitopened inasepar atewindo w.Youcanchoosetohave
afileopeninthemain projectwindo wbyclick ingitonce,oryoucanopenitinasepar atewindo wby
double-click ingit.
Themain func tion inmain.m callstheUIApplicationMain func tion within anautorelease pool.Tutorial:Basics
Review theSourceCode
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
15
@autoreleasepool {
returnUIApplicationMain(argc, argv,nil,NSStringFromClass([XYZAppDelegate
class]));
}
The@autoreleasepool statemen tistheretosupp ortmemor ymanagemen tforyourapp.Automa ticReference
Counting (ARC)makesmemor ymanagemen tstraightforwardbygetting thecompiler todotheworkofkeeping
trackofwho owns anobjec t;@autoreleasepool ispartofthememor ymanagemen tinfrastructure.
ThecalltoUIApplicationMain createstwoimportantinitial comp onen tsofyourapp:
 ●Aninstanc eoftheUIApplication class ,called theapplicationobject.
Theapplic ation objec tmanage stheapp eventloopand coordina tesother high-le velapp behaviors .This
class ,defined intheUIKitframew ork,doesn’trequir eyoutowriteanyadditional codetogetittodoits
job.
 ●Aninstanc eoftheXYZAppDelegate class ,called theappdelegate.
Xcodecreatedthisclass foryouaspartofsetting uptheEmpt yApplic ation templa te.Theapp delega te
createsthewindo wwher eyourapp’scontentisdrawnandprovidesaplacetorespond tostatetransitions
within theapp.Thiswindo wiswher eyouwriteyourcustomapp-le velcode.Likeallclasse s,the
XYZAppDelegate class isdefined intwosourcecodefilesinyourapp: intheinterfacefile,
XYZAppDelegate.h ,and intheimplemen tation file,XYZAppDelegate.m .
Here’showtheapplic ation objec tandapp delega teinteract.Asyourapp startsup,theapplic ation objec tcalls
defined metho dsontheapp delega tetogiveyourcustomcodeachanc etodoitsjob—tha t’swher ethe
interesting behavior foranapp isexecuted.Tounderstand theroleoftheapp delega teinmoredepth, view
yourapp delega tesourcefiles,starting with theinterfacefile.Toview theapp delega teinterfacefile,selec t
XYZAppDelegate.h intheprojectnavigator.Theapp delega teinterfacecontains asingle property:window .
With thispropertytheapp delega tekeeps trackofthewindo winwhich allofyourapp contentisdrawn.
Next,view theappdelega teimplemen tation file.Todothis,selec tXYZAppDelegate.m intheprojectnavigator.
Theapp delega teimplemen tation contains “skeletons”ofimportantmetho ds.Thesepredefined metho ds
allowtheapplic ation objec ttotalktotheapp delega te.Duringasignific antruntime event—forexample ,app
launch, low-memor ywarnings ,and app termina tion—the applic ation objec tcallsthecorresponding metho d
intheapp delega te,giving itanopportunit ytorespond appr opriately.Youdon’tneed todoanything special
tomakesurethesemetho dsgetcalled atthecorrecttime—the applic ation objec thandle sthatpartofthe
jobforyou.Tutorial:Basics
Review theSourceCode
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
16
Eachoftheseautoma ticallyimplemen tedmetho dshasadefault behavior.Ifyouleavetheskeleton
implemen tation empt yordelet eitfromyourXYZAppDelegate.m file,yougetthedefault behaviorwhene ver
thatmetho discalled .Usetheseskeletonstoputadditional customcodethatyouwanttobeexecutedwhen
themetho dsarecalled .Forexample ,thefirst metho dintheXYZAppDelegate.m filecontains some linesof
codethatsetuptheapp windo wand giveitthewhit ebackgr ound color yousawwhen youranyourapp for
thefirsttime .Inthistutorial,youwon’tbeusing anycustomapp delega tecode,sogoahead and remo vethe
codethatsets thewindo wtohaveaplain whit ebackgr ound .
Toconfiguretheappdelegateimplemen tationfile
1.Findtheapplication:didFinishLaunchingWithOptions: metho dinXYZAppDelegate.m .
Itisthefirst metho dinthefile.
2. Deletethefirst threelinesofcodefromthatmetho dsoitlooksjustlikethis:
-(BOOL)application:(UIApplication *)application
didFinishLaunchingWithOptions:(NSDictionary *)launchOptions
{
returnYES;
}
Xcodeautoma ticallysavesthechange s.Xcodecontinuously tracks and savesallofyourwork.(Youcanundo
yourchange sbychoosing Edit>Undo Typing .)
CreateaStoryboard
Atthispoint,you’reready tocreateastoryboardforyourapp.Astoryboardisavisual representation ofthe
app’suser interface,showing screens ofcontentand thetransitions betweenthem. Youusestoryboardsto
layouttheflow—or story—tha tdrivesyourapp.
Toseehowastoryboardfitsintoanapp,inthistutorialyoucreateonemanually andaddittoyourapp.Unlike
theEmpt yApplic ation templa teyoustartedwith, other Xcodetempla tesinclude preconfigur edstoryboards
providing view s,view controllers ,andassociatedsourcecodefilesthatsetupthebasic architectureforanapp
ofthattype.Afteryou’veconfigur edastoryboardmanually ,you’llseehowthepiecesfittogether .Then you’ll
beable tostartwith aprojecttempla tethatcome swith apreconfigur edstoryboard,which willsaveyousome
overhead .
Tocreateanewstoryboard
1.ChooseFile>New>File(orpressCommand-N).Tutorial:Basics
CreateaStoryboard
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
17
Adialo gappears thatprompts youtochooseatempla teforyournew file.
2. Ontheleft,selec tUserInterfaceunder iOS.
3.ClickStoryboard,and click Next.
4. FortheDevicesoption, selec tiPhone .
5.ClickNext.
Adialo gappears thatprompts youtochoosealocation and name foryournew storyboard.
6. IntheSaveAsfield,name thefileMain .
7.Makesurethefileissavedinthesame directoryasyourproject.
8. FortheGroup option, selec tToDoList.
9.ForTargets,selec tthecheck boxnexttoToDoList.
Thisoption tellsXcodetoinclude thenew storyboardwhen itbuilds yourapp.
10.ClickCreate.
Anew storyboardfileiscreatedandadded toyourproject.You’llworkinthisfiletolayoutthecontentofyour
app.
Nowyouneed totellXcodethatyouwanttousethisstoryboardastheinterfacetoyourapp.When itstarts
up,theapplic ation objec tchecks whether theapp hasamain interfaceconfigur ed.Ifitdoes,theapplic ation
objec tloads thedefined storyboardwhen theapp launche s.
Tosetthestoryboardastheapp’smaininterface
1.Intheprojectnavigator,selec tyourproject.
Intheeditorareaoftheworkspacewindo w,Xcodedisplaystheprojecteditor,which allowsyoutoview
and edit details abouthowyourapp isbuilt.Tutorial:Basics
CreateaStoryboard
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
18
2. Under Targets,selec tToDoList.
IftheProjectandTargets listsdon’tappearintheprojecteditor,click thedisclosur etriangle inthetop-lef t
corneroftheeditorpane torevealthelists.
3.SelecttheGener altab.
4. Under Deplo ymen tInfo,find theMainInterfaceoption.
5.Selectyourstoryboard,Main.storyboard .
AddaScenetoYourStoryboard
Nowthatyouhaveastoryboard,it’stime tostartadding app content.Xcodeprovidesalibraryofobjec tsthat
youcanadd toastoryboardfile.Some oftheseareuser interfaceelemen tsthatbelong inaview ,such as
buttonsand textfields .Others define thebehavior ofyourapp butdon’tthemselv esappearonscr een, such
asview controllers and gesturerecognizers.Tutorial:Basics
AddaScenetoYourStoryboard
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
19
Tostart,you’lladd aview controller toyourstoryboard.Aview controller manage sacorresponding view and
itssubview s.You’lllearnmoreabouttherolesofview sand view controllers inthenextchapt er,“App
Developmen tProcess” (page  30).
Toaddaviewcontrollertoyourstoryboard
1.Intheprojectnavigator,selec tMain.storyboard .
XcodeopensthestoryboardinInterfaceBuilder —its visual interfaceeditor—in theeditorarea.Because
thestoryboardisempt y,whatyouseeisablankcanvas.Youusethecanvastoadd and arrange user
interfaceelemen ts.
2. OpentheObjectlibrary.
TheObjectlibraryappears atthebottomoftheutilit yarea.Ifyoudon’tseetheObjectlibrary,youcan
click itsbutton,which isthethirdbuttonfromtheleftinthelibraryselec torbar.(Ifyoudon’tseetheutilit y
area,youcandisplayitbychoosing View>Utilitie s>ShowUtilitie s.)
Alistappears showing each objec t’sname ,description, and visual representation.
3.DragaViewController objec tfromthelisttothecanvas.
Ifyoucan’tfind theobjec ttitled ViewController intheObjectlibrary,filterthelistofobjec tsbytyping in
thetextfield belowthelist.TypeViewController ,and youseeonly view controller objec tsinthe
filteredlist.
Atthispoint,thestoryboardinyourapp contains onescene.Thearrowthatpointstotheleftside ofthescene
onthecanvasistheinitialsceneindicator,which means thatthissceneisloaded first when theapp starts.
Rightnow,thescenethatyouseeonthecanvascontains asingle view that’smanaged byaview controller.
Ifyourunyourapp iniOSSimula tor,thisview iswhatyouseeonthedevicescreen. It’suseful torunyourapp
iniOSSimula tortoverifythateverything isconfigur edcorrectly.Beforedoing that,addsomething tothescene
thatyou’llbeable toseewhen youruntheapp.Tutorial:Basics
AddaScenetoYourStoryboard
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
20
Toaddalabeltoyourscene
1.IntheObjectlibrary,find theLabelobjec t.
Ifyouenteredtextinthefiltertextfield,youmayneed toclear itscontentsbeforeyoucanseetheLabel
objec t.Youcanalso typeLabel inthefilterfield tofind theLabelobjec tquick ly.
2. DragaLabelobjec tfromthelisttoyourscene.
3.Dragthelabeltothecenterofthesceneuntilhorizontaland verticalguide sappear.Tutorial:Basics
AddaScenetoYourStoryboard
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
21
Stopdragging thelabelwhen youseesomething likethis:
Theguide smean thatthelabelisnowcenteredhorizontally and vertically.(Theguide sarevisible only
when you’redragging orresizing objec tsnexttothem, sotheywilldisapp earwhen youletgoofthelabel.)
4. Double-click thetextofthelabeltoselec titforediting .
5.TypeHello,World! and pressReturn.
Ifnecessary,recenterthelabel.Tutorial:Basics
AddaScenetoYourStoryboard
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
22
TestYourChange s
Running yourapp iniOSSimula torisagreatwaytoperiodicallycheck thateverything isworkingthewayyou
expect.Atthispointyourapp should launch and load thesceneyoucreatedinyourmain storyboard.Click
theRunbuttoninXcode.Youshould seesomething likethis:
Ifyoudon’tseethelabelyouadded ,makesurethestoryboardyoucreatedisconfigur edasthemain interface
foryourappandmakesureyou’veremo vedthecodethatcreatestheempt ywhit ewindo wintheappdelega te.
Ifnecessary,goback and repeatthestepsforthose sections .
Thisisalso agoodtime toexperimen twith whatyoucanadd toaninterface.Explor eInterfaceBuilder by
changing:
 ●Thetextofthelabel
 ●Thefontsizeofthelabel
 ●Thecolor ofthetext
Build theBasicInterface
Nowthatyoucanputcontentinascene,it’stime tobuild thebasic interfaceforthescenethatletsyouadd
anew itemtotheto-do list.Tutorial:Basics
TestYourChange s
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
23
Toaddanitemtotheto-do list,youneed asingle pieceofinformation: theitemname .Yougetthisinformation
fromatextfield.Atextfield istheinterfaceelemen tthatletsauser input asingle lineoftextusing akeyboard.
Butfirst,youneed toremo vethelabelyouadded earlier.
Toremovethelabelfromyourscene
1.Clickthelabeltoselec tit.
2. PresstheDeletekey.
Thelabelisremo vedfromthescene.Ifthiswasn’twhatyouwanted,youcanchooseEdit>Undo Delete
Label.(EveryeditorhasanEdit&gt; Undo command toundo thelastaction.)
Nowthatyouagain haveablank canvas,createthesceneforadding ato-do item.
Toaddatextfieldtoyourscene
1.Ifnecessary,opentheObjectlibrary.
2. DragaTextFieldobjec tfromthelisttoyourscene.
Tutorial:Basics
Build theBasicInterface
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
24
3.Dragthetextfield sothatit’spositioned abouttwo-thir dsfromthebottomofthescreen.
4. Ifnecessary,click thetextfield torevealtheresizehandle s.
YouresizeaUIelemen tbydragging itsresizehandles,which aresmall whit esquar esthatappearonthe
elemen t’sborders.Yourevealanelemen t’sresizehandle sbyselec ting it.Inthiscase,thetextfield should
already beselec tedbecause youjuststoppeddragging it.Ifyourtextfield looksliketheonebelow,you’re
ready toresizeit;ifitdoesn’t,selec titonthecanvas.
5.Resizetheleftand rightedge softhetextfield untilyouseeverticalguide sappear.Tutorial:Basics
Build theBasicInterface
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
25
Stopresizing thetextfield when youseesomething likethis:
Although youhavethetextfield inyourscene,there’snoinstr uction totheuser aboutwhattoenterinthe
field.Usethetextfield ’splaceholder texttoprompt theuser toenterthename ofanew to-do item.
Toconfigurethetextfield’splaceholdertext
1.With thetextfield selec ted,opentheAttributesinspector
 intheutilit yarea.Tutorial:Basics
Build theBasicInterface
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
26
TheAttributesinspectorappears when youselec tthefourthbuttonfromtheleftintheinspectorselec tor
bar.Itletsyouedit thepropertiesofanobjec tinyourstoryboard.
2. IntheAttributesinspector,find thefield labeled Placeholder and typeNewto-doitem .
Todisplaythenew placeholder textinthetextfield,pressReturn.
Checkpoint:Runyourapp iniOSSimula tortomakesurethatthesceneyoucreatedlooksthewayyouexpect
itto.Youshould beable toclick inside thetextfield and enterastringusing thekeyboard.
Tutorial:Basics
Build theBasicInterface
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
27
Recap
You’renowwellonyourwaytobeing able tocreateabasic interfaceusing storyboards.Intheremaining
tutorials,you’lllearnmoreaboutadding interaction toyourinterfaceand writing codetocreatecustom
behavior.Thechapt ersbetweenthetutorialsguide youthrough theconcepts thatyou’llputintopractice
while workingonyourapp.Tutorial:Basics
Recap
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
28
 ●“AppDevelopmen tProcess” (page  30)
 ●“Designing aUserInterface” (page  36)
 ●“Defining theInteraction” (page  42)
 ●“Tutorial:Storyboards” (page  47)
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
29StructuringanApp
Although thetask ofdeveloping anappmayseem daun ting,theprocesscanbedistilled intoseveraldige stible
steps.Thestepsthatfollowwillhelp yougetstartedand guide youintherightdirection asyoudevelop your
first app.
Defining theConcept
Everygreatapp startswith aconcept.
Thebestwaytoarriveatthatconceptistoconsider theproblem youwantyourapp tosolve.Greatapps solve
asingle ,well-defined problem. Forexample ,theSettings app allowsusers toadjust allofthesettings ontheir
device.Itprovidesasingle interfaceforusers toaccomplish arelatedsetoftasks .
Herearesome keyquestions toconsider when arriving ataconcept:
Whoisyouraudience?Yourapp contentand experiencewilldifferdepending onwhether you’rewriting a
childr en’sgame ,ato-do listapp,orevenatestapp foryourownlearning .
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
30AppDevelopmen tProcess
Whatisthepurposeofyourapp? It’simportantforanapp tohaveaclear lydefined purpose.Partofdefining
thepurposeisunderstanding whatone thing willmotiv ateusers touseyourapp.
Whatproblemisyourapptryingtosolve?Anapp should solveasingle problem wellinsteadoftrying to
offersolutions tomultiple distinc tproblems .Ifyoufind thatyourapp istrying tosolveunrelatedproblems ,
youmigh tconsider writing multiple apps .
Whatcontentwillyourappincorporate?Consider whattypeofcontentyourapp willpresenttousers and
howthey’llinteractwith it.Design theuser interfacetocomplemen tthetypeofcontentthat’spresentedin
theapp.
Anapp conceptdoesn’thavetobecomplet elypolished orfinished when youstartdeveloping yourapp.Still,
ithelps tohaveanidea ofwher eyou’regoing and whatyouneed todotogetthere.
Designing aUserInterface
Afteryouhaveaconceptforyourapp,designing agooduser interfaceisthenextsteptocreating asucc essful
app.Auser needs tobeable tointeractwith theappinterfaceinthesimple stwaypossible .Design theinterface
with theuser inmind ,and makeitefficien t,clear ,and straigh tforward.
Perhaps themost challenging thing aboutbuilding auser interfaceistransla ting yourconceptintoadesign
andthen implemen ting thatdesign. Tohelp simplify thisprocess,usestoryboards.Storyboardsletyoudesign
and implemen tyourinterfaceinasingle stepusing agraphic alenvironmen t.Youcanseeexactlywhatyou’re
building while you’rebuilding it,getimmedia tefeedback aboutwhat’sworkingand what’snot,and make
instan tlyvisible change stoyourinterface.
When youbuild aninterfaceinastoryboard,you’reworkingwith view s.Viewsdisplaycontenttotheuser.In
“Tutorial:Basics ” (page  8),youbegan todefine auser interfacefortheToDoList app using asingle view ina
storyboardscene.Asyoudevelop morecomple xapps ,you’llcreateinterfaceswith morescenesand more
view s.
In“Tutorial:Storyboards” (page  47),you’llfinish building theuser interfaceforyourToDoList appusing several
differentview stodisplaydifferenttypesofcontent.You’lllearnmoreaboutworkingwith view sandstoryboards
todesign and createauser interfacein“Designing aUserInterface” (page  36).
Defining theInteraction
Auser interfacedoesn’tdomuch without anylogicback ingit.Afteryou’vecreatedaninterface,youdefine
howusers caninteractwith whattheyseebywriting codetorespond touser actions inyourinterface.AppDevelopmen tProcess
Designing aUserInterface
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
31
Beforeyoustartthink ingaboutadding thebehaviors foryourinterface,it’simportanttounderstand thatiOS
apps arebased onevent-drivenprogramming .Inevent-drivenprogramming ,theflowoftheappisdetermined
byevents:systemeventsoruser actions .Theuser performsactions ontheinterface,which trigger eventsin
theapp.Theseeventsresultintheexecution oftheapp’slogicandmanipula tion ofitsdata.Theapp’sresponse
touser action isthen reflec tedback intheinterface.
Asyoudefine howauser caninteractwith yourinterface,keepevent-drivenprogramming inmind .Because
theuser,rather than thedevelop er,isincontrolofwhen certain piecesoftheapp codegetexecuted,you
wanttoiden tifyexactlywhich actions auser canperformand whathapp ensinresponse tothose actions .
Youdefine much ofyourevent-handling logicinviewcontrollers .You’lllearnmoreaboutworkingwith view
controllers in“Defining theInteraction” (page  42).Afterward,you’llapply theseconcepts toadd func tionalit y
and interactivitytoyourToDoList app in“Tutorial:Storyboards” (page  47).
Implemen ting theBehavior
Afteryou’vedefined theactions auser canperforminyourapp,youimplemen tthebehaviorbywriting code.
When youwritecodeforiOSapps ,most ofyourtime isspentworkingwith theObjective-Cprogramming
language .You’lllearnmoreaboutObjective-Cinthethirdmodule ,butfornow,ithelps tohavesome basic
familiar itywith thevocabular yofthelanguage .
Objective-Cisbuilt ontopoftheCprogramming language and providesobjec t-orientedcapabilitie sand a
dynamic runtime .Yougetallofthefamiliar elemen ts,such asprimitiv etypes(int,float ,andsoon),structures,
func tions ,pointers,andcontrolflowconstr ucts(while ,if...else ,andfor statemen ts).Youalso haveaccess
tothestandar dClibraryroutine s,such asthose declar edinstdlib.h andstdio.h .
ObjectsAreBuilding BlocksforApps
When youbuild aniOSapp,most ofyourtime isspentworkingwith objec ts.
Objectspack agedatawith relatedbehavior.Youcanthink ofanapp asalargeecosystemofinterconnec ted
objec tsthatcommunic atewith each other tosolvespecific problems ,such asdisplaying avisual interface,
responding touser input ,orstoringinformation. Youuseman ydifferenttypesofobjec tstobuild yourapp,
ranging frominterfaceelemen ts,such asbuttonsand labels,todataobjec ts,such asstrings and arrays.
Classe sAreBluepr intsforObjects
Aclass describesthebehavior and propertiescommon toanyparticular typeofobjec t.AppDevelopmen tProcess
Implemen ting theBehavior
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
32
Inthesame waythatmultiple buildings constr uctedfromthesame bluepr intareiden ticalinstructure,every
instanc eofaclass sharesthesame propertiesand behavior asallother instanc esofthatclass .Youcanwrite
yourownclasse soruseframew orkclasse sthathavebeendefined foryou.
Youmakeanobjec tbycreating aninstanceofaparticular class .Youdothisbyallocating itand initializing it
with acceptable default values.Whenyouallocateanobjec t,yousetaside enough memor yfortheobjec tand
setallinstanc evariable stozero.Initialization sets anobjec t’sinitial state—tha tis,itsinstanc evariable sand
properties—toreasonable valuesandthen returnstheobjec t.Thepurposeofinitializa tion istoreturnausable
objec t.Youneed tobothallocateand initializ eanobjec ttobeable touseit.
One ofthefundamen talconcepts inObjective-Cprogramming isclassinheritanc e,theidea thataclass inher its
behaviors fromaparentclass .When one class inher itsfromanother ,thechild—or subclass —inher itsallthe
behavior and propertiesdefined bytheparent.Thesubclass candefine itsownadditional behavior and
propertiesoroverridethebehavior oftheparent.Thisgivesyoutheabilit ytoextend thebehaviors ofaclass
without duplic ating itsexisting behavior.
ObjectsCommunic ateThrough Message s
Objectsinteractbysending each other message satruntime .InObjective-Cterms,oneobjec tsendsamessage
toanother objec tbycallingamethodonthatobjec t.
Although thereareseveralwaystosend message sbetweenobjec tsinObjective-C, byfarthemost common
isthebasic syntaxthatusessquar ebrackets.Ifyouhaveanobjec tsomePerson ofclassPerson ,youcansend
itthesayHello message likethis:
[somePerson sayHello];
Thereferenceontheleft,somePerson ,isthereceiverofthemessage .Themessage ontheright,sayHello ,
isthename ofthemetho dtocallonthatreceiver.Inother words,when theabovelineofcodeisexecuted,
somePerson willbesentthesayHello message .
AppDevelopmen tProcess
Implemen ting theBehavior
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
33
ProtocolsDefine Messaging Contracts
Aprotocoldefine sasetofbehavior that’sexpectedofanobjec tinagivensitua tion. Aprotocolcome sinthe
formofaprogramma ticinterface,one thatanyclass maychoosetoimplemen t.Using protocols,twoclasse s
distan tlyrelatedbyinher itanc ecancommunic atewith each other toaccomplish acertaingoal, such asparsing
XML codeorcopying anobjec t.
Anyclass thatcanprovide behavior that’suseful toother classe scandeclar eaprogramma ticinterfacefor
vending thatbehavioranon ymously .Anyother class canchoosetoadopt theprotocoland implemen tone or
moreofitsmetho ds,makinguseofthebehavior.
Incorporating theData
Afteryouimplemen tyourapp’sbehavior,youcreateadatamodeltosupp ortyourapp’sinterface.Anapp’s
datamodeldefine sthewayyoumain tain datainyourapp.Datamodels canrange fromabasic dictionar yof
objec tstocomple xdatabase s.
Yourapp’sdatamodelshould reflec ttheapp’scontentand purpose.Thereshould beaclear correlation
betweentheinterfaceand thedata,eventhough theuser doesn’tinteractwith thedatadirectly.
Agooddatamodelisessen tialtocreating asolid founda tion foryourapp.Itmakesiteasier tobuild ascalable
app,impr ovefunc tionalit y,and makechange stoyourfeatures.You’lllearnmoreaboutdefining yourown
datamodelin“Incorporating theData” (page  70).
UsetheRightResources
Designpatterns arebestpracticesforsolving common problems inapps .Usedesign patternstohelp you
define thestructureofyourdatamodeland itsinteraction with therestofyourapp.When youunderstand
and usetherightdesign patterns,youcanmoreeasily createanapp that’ssimple and efficien t.You’lllearn
moreaboutdesign patternsin“Using Design Patterns” (page  72).AppDevelopmen tProcess
Incorporating theData
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
34
Asyoustartimplemen ting yourmodel,rememb erthatyoudon’thavetoimplemen teverything fromscratch.
Thereareanumb erofframeworks thatprovide existing func tionalit yforyoutobuild upon.Forinstanc e,the
Foundationframeworkinclude sclasse srepresenting basic datatypes—such asstrings andnumb ers—as well
ascollec tionclasse sforstoringother objec ts.It’srecommended that,wher epossible ,youuseexisting framew ork
classe s—or subclass them toaddyourownapp’sfeatures—inst eadoftrying toreimplemen ttheir func tionalit y.
Inthisway,youcancreateanefficien t,func tional, sophistic atedapp.You’lllearnmoreaboutthecapabilitie s
oftheFounda tion framew orkin“Workingwith Founda tion” (page  75).
Often,you’llwriteyourowncustomclassesaspartofyourdatamodel.Writing acustomclass givesyoucontrol
overhowyouorganiz etheinternalstructureofyourapp.You’lllearnaboutcreating customclasse sin“Writing
aCustomClass” (page  86).
IncorporateRealData
Whenyoufirsttestyourdatamodel,youmaywanttousestaticorfakedata.Thisway,youdon’thavetoworry
aboutsupplying realdatauntilyouknowthemodelisassembled andconnec tedproperly.Afteryou’vedefined
adatamodelthat’sworkingproperly,youcanpull realdataintoyourapp.
Theremainder ofthisguide takesyouthrough thesestepsinmoredetail. Asyoumakeyourwaythrough the
appdevelopmen tprocess,you’lllearnthenecessaryconceptual materialandthen putittouseinthetutorials.AppDevelopmen tProcess
Incorporating theData
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
35
Viewsarethebuilding blocksforconstr ucting youruser interface.It’simportanttounderstand howtouse
view stopresentyourcontentinaclear ,elegan t,anduseful way.Creating agreatuser interfacethateffectively
showcasesyourapp’scontentisessentialtobuilding asuccessful app.Inthischapt er,you’lllearnaboutcreating
and managing view sinastoryboardtodefine yourinterface.
TheViewHierarchy
Viewsnotonly displaythemselv esonscr eenand reacttouser input ,theyalso serveascontainers forother
view s.Asaresult,view sinanapp arearranged inahierarchicalstructurecalled theview hierarchy.Theview
hierarchydefine sthelayoutofview srelativetoother view s.Within thathierarchy,view instanc esenclosed
within aview arecalledsubviews,and theparentview thatenclose saview isreferredtoasitssuperview.
Eventhough aview instanc ecanhavemultiple subview s,itcanhaveonly one superview .
Atthetopoftheview hierarchyisthewindowobjec t.Representedbyaninstanc eoftheUIWindow class ,a
windo wservesasthebasic container intowhich youcanadd yourview objec tsfordisplayonscr een. Byitself ,
awindo wdoesn’tdisplayanycontent.Todisplaycontent,youadd acontentview(with itshierarchyof
subview s)tothewindo w.
Foracontentview anditssubview stobevisible totheuser,thecontentview must beinser tedintoawindo w’s
view hierarchy.Whenyouuseastoryboard,thisplacemen tisconfigur edautoma ticallyforyou.Theapplic ation
objec tloads thestoryboard,createsinstanc esoftherelevantview controller classe s,unar chivesthecontent
view hierarchiesforeach view controller,and then adds thecontentview oftheinitial view controller intothe
windo w.You’lllearnmoreaboutmanaging view controllers inthenextchapt er;fornow,you’llfocusoncreating
ahierarchywithin asingle view controller inyourstoryboard.
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
36Designing aUserInterface
Building anInterfaceUsing Views
When youdesign yourapp,it’simportanttoknowwhatkindofview touseforwhatpurpose.Forexample ,
thekindofview youusetogather input textfromauser,such asatextfield,isdifferentfromwhatyoumigh t
usetodisplaystatictext,such asalabel.AppsthatuseUIKitview sfordrawing areeasy tocreatebecause you
canassemble abasic interfacequick ly.AUIKitview objec tisaninstanc eoftheUIView class orone ofits
subclasse s.TheUIKitframew orkprovidesman ytypesofview stohelp presentand organiz edata.
Although each view hasitsownspecific func tion, UIKitview scanbegroupedintosevengener alcategor ies:
Example s Purpose Category
Image view ,label Displayaparticular typeofcontent,such asan
image ortext.
Content
Collec tion view ,table view Displaycollec tions orgroups ofview s.
Collec tions
Button,slider ,switch Performactions ordisplayinformation.
Controls
Toolbar ,navigation bar,tabbar Navigate,orperformactions .
Bars
Searchbar,textview Receiveuser input text.
Input
View,scrollview Serveascontainers forother view s.
Containers
Action sheet ,alertview Interrupttheregular flowoftheapp toallowa
user performsome kindofaction.ModalDesigningaUserInterface
Building anInterfaceUsing Views
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
37
Youcanassemble view sgraphic allyusing InterfaceBuilder .InterfaceBuilder providesalibraryofthestandar d
view s,controls,andother objec tsthatyouneed tobuild yourinterface.Afterdragging theseobjec tsfromthe
library,youdropthem ontothecanvasandarrange them inanywayyouwant.Next,useinspectorstoconfigur e
those objec tsbeforesaving them inastoryboard.Youseetheresults immedia tely,without theneed towrite
code,build ,and runyourapp.
TheUIKitframew orkprovidesstandar dview sforpresenting man ytypesofcontent,butyoucanalso define
yourowncustomview sbysubclassingUIView (oritsdescendan ts).Acustomview isasubclass ofUIView in
which youhandle allofthedrawing and event-handling tasks yourself .Youwon’tbeusing customview sin
thesetutorials,butyoucanlearnmoreaboutimplemen ting acustomview in“Defining aCustomView”in
ViewProgrammingGuideforiOS.
UseStoryboardstoLayOutViews
Youuseastoryboardtolayoutyourhierarchyofview sinagraphic alenvironmen t.Storyboardsprovide a
direct,visual waytoworkwith view sand build yourinterface.
Asyousawinthefirst tutorial,storyboardsarecomp osed ofscenes,and each scenehasanassociatedview
hierarchy.Youdragaview outoftheobjec tlibraryand placeitinastoryboardscenetoadd itautoma tically
tothatscene’sview hierarchy.Theview ’slocation within thathierarchyisdetermined bywher eyouplaceit.
Afteryouadd aview toyourscene,youcanresize,manipula te,configur e,and moveitonthecanvas.DesigningaUserInterface
UseStoryboardstoLayOutViews
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
38
Thecanvasalso showsanoutline view oftheobjec tsinyourinterface.Theoutlineview—which appears on
theleftside ofthecanvas—lets youseeahierarchicalrepresentation oftheobjec tsinyourstoryboard.
Theview hierarchythatyoucreategraphic allyinastoryboardsceneiseffectivelya“shrinkwrapped”setof
Objective-Cobjec ts.Atruntime ,theseshrinkwrappedobjec tsareunar chived.Theresultisahierarchyof
instanc esoftherelevantclasse sconfigur edwith thepropertiesyou’vesetvisually using thevarious inspectors
intheutilit yarea.DesigningaUserInterface
UseStoryboardstoLayOutViews
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
39
UseInspectorstoConfigur eViews
When workingwith view sinastoryboard,theinspectorpane isanessen tialtool.Theinspectorpane appears
intheutilit yareaabovetheObjectlibrary.
Eachoftheinspectorsprovidesimportantconfigur ation options forelemen tsinyourinterface.When you
selec tanobjec t,such asaview ,inyourstoryboard,youcanuseeach oftheinspectorstocustomiz edifferent
propertiesofthatobjec t.
 ●
File.Letsyouspecify gener alinformation aboutthestoryboard.
 ●
QuickHelp.Providesuseful documen tation aboutanobjec t.
 ●
Identity.Letsyouspecify acustomclass foryourobjec tand define itsaccessibilit yattributes.
 ●
Attributes.Letsyoucustomiz evisual attributesofanobjec t.
 ●
Size.Letsyouspecify anobjec t’ssizeand AutoLayoutattributes.
 ●
Connections.Letsyoucreateconnec tions betweenyourinterfaceand sourcecode.
Youbegan workingwith theAttributesinspectorinthefirst tutorial.You’llcontinue using theseinspectors
throughout therestofthetutorialstoconfigur eview sandother objec tsinyourstoryboard.Inparticular ,you’ll
usetheAttributesinspectortoconfigur eyourview s,theIden tityinspectortoconfigur eyourview controllers ,
and theConnec tions inspectortocreateconnec tions betweenyourview sand view controllers .DesigningaUserInterface
UseInspectorstoConfigur eViews
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
40
UseAutoLayouttoPosition Views
When youstartpositioning view sinyourstoryboard,youneed toconsider avarietyofsitua tions .iOSapps
runonanumb erofdifferentdevices,with various screensizes,orientations ,andlanguage s.Insteadofdesigning
astaticinterface,youwantittobedynamic and toseamle sslyrespond tochange sinscreensize,device
orientation, localiza tion, and metr ics.
Tohelp youuseview stocreateaversatileinterface,Xcodeoffersatoolcalled AutoLayout.AutoLayoutisa
systemforexpressing relationships betweenview sinyourapp’suser interface.AutoLayoutletsyoudefine
theserelationships intermsofconstr aintsonindividual view sorbetweensets ofview s.
TheAutoLayoutmenu ,which residesinthebottom-r ightareaofyourcanvas,hasfoursegmen ts.Youusethis
menu toaddvarious typesofconstr aintstoview sonyourcanvas,resolvelayoutissue s,anddetermine constr aint
resizing behavior.
You’llworkbriefly with AutoLayoutinthesecond tutorialtoaddsupp ortforlandsc apemodetoyourToDoList
app.DesigningaUserInterface
UseAutoLayouttoPosition Views
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
41
Afteryoulayoutyouruser interface,youneed toletusers interactwith it.Thisiswher econtrollers come in.
Controllers supp ortyourview sbyresponding touser actions andpopula ting theview swith content.Controller
objec tsareaconduit through which view slearnaboutchange sinthedatamodel,and viceversa. Viewsare
notified ofchange sinmodeldatathrough theapp’scontrollers ,and controllers communic ateuser-initia ted
change s—forexample ,textenteredinatextfield—t omodelobjec ts.Whether they’reresponding touser
actions ordefining navigation, controllers implemen tyourapp’sbehavior.
ViewControllers
Afteryou’vebuilt abasic view hierarchy,yournextstepistocontrolthevisual elemen tsand respond touser
input. InaniOSapp,youuseaviewcontroller (UIViewController )tomanage acontentview with its
hierarchyofsubview s.
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
42Defining theInteraction
Aview controller isn’tpartoftheview hierarchyand it’snotanelemen tinyourinterface.Instead,itmanage s
theview objec tsinthehierarchyandprovidesthem with behavior.Eachcontentview hierarchythatyoubuild
inyourstoryboardneeds acorresponding view controller,responsible formanaging theinterfaceelemen ts
andperforming tasks inresponse touser interaction. Thisusually means writing acustomUIViewController
subclass foreach contentview hierarchy.Ifyourapp hasmultiple contentview s,youuseadifferentcustom
view controller class foreach contentview .
Viewcontrollers playman yroles.Theycoordina tetheflowofinformation betweentheapp’sdatamodeland
theview sthatdisplaythatdata,manage thelifecycleoftheir contentview s,and handle orientation change s
when thedeviceisrotated.Butperhaps their most obvious roleistorespond touser input.
Youalso useview controllers toimplemen ttransitions fromone typeofcontenttoanother .Because iOSapps
havealimit edamoun tofspaceinwhich todisplaycontent,view controllers provide theinfrastructureneeded
toremo vetheview sfromone view controller and replac ethem with theview sofanother .
Todefine interactioninyourapp,makeyourview controller filescommunic atewith theview sinyourstoryboard.
Youdothisbydefining connec tions betweenthestoryboardandsourcecodefilesthrough actions andoutlets .
Actions
Anaction isapieceofcodethat’slinkedtosome kindofeventthatcanoccur inyourapp.When thatevent
takesplace,thecodegets executed.Youcandefine anaction toaccomplish anything frommanipula ting a
pieceofdatatoupdating theuser interface.Youuseactions todrivetheflowofyourapp inresponse touser
orsystemevents.
Youdefine anaction bycreating and implemen ting ametho dwith anIBAction returntypeand asender
paramet er.
-(IBAction)restoreDefaults:(id)sender;
Thesender paramet erpointstotheobjec tthatwasresponsible fortrigger ingtheaction. TheIBAction
returntypeisaspecial keyword;it’slikethevoid keyword,butitindic atesthatthemetho disanaction that
youcanconnec ttofromyourstoryboardinInterfaceBuilder (which iswhythekeywordhastheIBprefix).
You’lllearnmoreabouthowtolinkanIBAction action toanelemen tinyourstoryboardin“Tutorial:
Storyboards” (page  47).DefiningtheInteraction
Actions
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
43
Outlets
Outlets provide awaytoreferenceobjec tsfromyourinterface—the objec tsyouadded toyourstoryboard—fr om
sourcecodefiles.Youcreateanoutlet byControl-dr agging fromaparticular objec tinyourstoryboardtoa
view controller file.Thiscreatesapropertyfortheobjec tinyourview controller file,which letsyouaccessand
manipula tethatobjec tfromcodeatruntime .Forexample ,inthesecond tutorial,you’llcreateanoutlet for
thetextfield inyourToDoList app tobeable toaccessthetextfield ’scontentsincode.
Outlets aredefined asIBOutlet properties.
@property (weak,nonatomic) IBOutlet UITextField *textField;
TheIBOutlet keywordtellsXcodethatyoucanconnec ttothispropertyfromInterfaceBuilder .You’lllearn
moreabouthowtoconnec tanoutlet fromastoryboardtosourcecodein“Tutorial:Storyboards” (page  47).
Controls
Acontrolisauser interfaceobjec tsuch asabutton,slider ,orswitchthatusers manipula tetointeractwith
content,provide input ,navigatewithin anapp,and performother actions thatyoudefine .Controlsprovide
awayforyourcodetoreceivemessage sfromtheuser interface.
When auser interactswith acontrol,acontroleventiscreated.Acontroleventrepresentsvarious physical
gesturesthatusers canmakeoncontrols,such aslifting afinger fromacontrol,dragging afinger ontoa
control,and touching downwithin atextfield.
Therearethreegener alcategor iesofeventtypes:
 ●Touchanddragevents.Touch and drageventsoccur when auser interactswith acontrolwith atouch
ordrag.Thereareseveralavailable touch eventstage s.When auser initially touche safinger onabutton,
forexample ,theTouch DownInside eventistrigger ed;iftheuser dragsoutofthebutton,therespective
drageventsaretrigger ed.Touch UpInside issentwhen theuser liftsafinger offthebuttonwhile still
within thebounds ofthebutton’sedge s.Iftheuser hasdragged afinger outside thebuttonbeforelifting
thefinger ,effectivelycanceling thetouch, theTouch UpOutside eventistrigger ed.
 ●Editingevents.Editing eventsoccur when auser edits atextfield.
 ●Value-changed events.Value-changed eventsoccur when auser manipula tesacontrol,causing ittoemit
aseriesofdifferentvalues.
Asyoudefine theinteractions ,knowtheaction that’sassociatedwith everycontrolinyourappandthen make
thatcontrol’spurposeobvious tousers inyourinterface.DefiningtheInteraction
Outlets
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
44
Navigation Controllers
Ifyourapp hasmorethan one contentview hierarchy,youneed tobeable totransition betweenthem. For
this,you’lluseaspecializ edtypeofview controller :anavigation controller (UINavigationController ).A
navigationcontroller manage stransitions back wardand forwardthrough aseriesofview controllers ,such
aswhen auser navigatesthrough email accounts,inboxmessage s,and individual emails intheiOSMailapp.
Thesetofview controllers managed byaparticular navigation controller iscalled itsnavigation stack. The
navigationstack isalast-in, first-out collec tion ofcustomview controller objec ts.Thefirst itemadded tothe
stack become stherootviewcontroller and isneverpoppedoffthestack. Other view controllers canbe
pushed onorpoppedoffthenavigation stack.
Although anavigation controller ’sprimar yjobistomanage thepresentation ofyourcontentview controllers ,
it’salso responsible forpresenting customview sofitsown.Specific ally,itpresentsanavigation bar—the view
atthetopofthescreenthatprovidescontextabouttheuser’splaceinthenavigation hierarchy—which
contains aback buttonandother buttonsyoucancustomiz e.Everyview controller that’sadded tothenavigation
stack presentsthisnavigation bar.Youareresponsible forconfigur ingthenavigation bar.
Yougener allydon’thavetodoanyworktopopaview controller offofthenavigation stack; theback button
provided bythenavigation controller handle sthisforyou.However,youdohavetomanually push aview
controller ontothestack. Youcandothisusing storyboards.
UseStoryboardstoDefine Navigation
Sofar,you’velearned aboutusing storyboardstocreateasingle screenofcontentinyourapp.Now,you’ll
learnaboutusing them todefine theflowbetweenmultiple scenesinyourapp.
Inthefirst tutorial,thestoryboardyouworkedwith had one scene.Inmost apps ,astoryboardiscomp osed
ofasequenc eofscenes,each ofwhich representsaview controller anditsview hierarchy.Scenesareconnec ted
bysegues,which representatransition betweentwoview controllers: thesourceand thedestina tion.
DefiningtheInteraction
Navigation Controllers
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
45
Thereareseveraltypesofsegue syoucancreate:
 ●Push. Apush segue adds thedestina tion view controller tothenavigation stack. Pushsegue smayonly
beused when thesourceview controller isconnec tedtoanavigation controller.
 ●Modal. Amodalsegue issimply one view controller presenting another controller modally ,requir inga
user toperformsome operation onthepresentedcontroller beforereturning tothemain flowoftheapp.
Amodalview controller isn’tadded toanavigation stack; instead,it’sgener allyconsider edtobeachild
ofthepresenting view controller.Thepresenting view controller isresponsible fordismissing themodal
view controller itcreatedand presented.
 ●Custom. Youcandefine yourowncustomtransition bysubclassingUIStoryboardSegue .
 ●Unwind.Anunwind segue movesback wardthrough oneormoresegue storeturntheuser toanexisting
instanc eofaview controller.Youuseunwind segue stoimplemen treverse navigation.
Insteadofsegue s,scenesmayalso beconnec tedbyarelationship .Forexample ,there’sarelationship between
thenavigation controller and itsrootview controller.Inthiscase,therelationship representsthecontainmen t
oftherootview controller bythenavigation controller.
When youuseastoryboardtoplan theuser interfaceforyourapp,it’simportanttomakesurethatone ofthe
view controllers ismarkedasbeing theinitialviewcontroller .Atruntime ,thisistheview controller whose
contentview willbedisplayedthefirst time theapp islaunched and fromwhich youcantransition toother
view controllers ’contentview sasnecessary.
Nowthatyou’velearned thebasics ofworkingwith view sand view controllers instoryboards,it’stime to
incorporatethisknowledge intoyourToDoList app inthenexttutorial.DefiningtheInteraction
UseStoryboardstoDefine Navigation
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
46
Thistutorialbuilds ontheprojectyoucreatedinthefirst tutorial(“Tutorial:Basics ” (page  8)).You’llputto
usewhatyoulearnedaboutview s,view controllers ,actions ,andnavigation. Following theinterface-first design
process,you’llalso createsome ofthekeyuser interfaceflowsforyourToDoList app and add behavior tothe
sceneyou’vealready created.
Thistutorialteache syouhowto:
 ●Adopt AutoLayouttoadd flexibilit ytoyouruser interface
 ●Usestoryboardstodefine app contentand flow
 ●Manage multiple view controllers
 ●Addactions toelemen tsinyouruser interface
Afteryoucomplet eallthestepsinthistutorial,you’llhaveanapp thatlookssomething likethis:
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
47Tutorial:Storyboards
Adopt AutoLayout
Theadd-t o-do-it emsceneisconfigur edtoworkinportraitmodebecause that’showyoucreatedit.Sowhat
happ ensifauser rotatesthedevice?Tryitoutbyrunning yourapp inSimula tor.
TorotateiniOSSimulator
1.Launch yourapp iniOSSimula tor.
2. ChooseHardware>RotateLeft(orpressCommand–L eftArrow).
Asyousee,thetextfield doesn’tlookquiteright.Itstopsabouthalfw ayacrossthescreen. Thetextfield should
stretchallthewayacrossthescreen, asitdoesinportraitmode.Fortuna tely,Xcodehasapowerfulbuilt-in
layoutengine called AutoLayout. With AutoLayoutyoudescribeyourintentforthepositioning ofelemen ts
inasceneand then letthelayoutengine determine howbesttoimplemen tthatintent.Youdescribeyour
intentusingconstraints—rulesthatexplain wher eoneelemen tshould belocatedrelativetoanother ,orwhat
sizeitshould be,orwhich oftwoelemen tsshould shrinkfirstwhen something reduc esthespaceavailable for
each ofthem. Fortheadd-t o-do-it emscene,twosets ofconstr aintsareneeded—one toposition thetextfield
and theother tosetitssize.
Setting theseconstr aintscaneasily beaccomplished inInterfaceBuilder .
TopositionthetextfieldusingAutoLayout
1.Intheprojectnavigator,selec tMain.storyboard .
2. Inyourstoryboard,selec tthetextfield.
3.Onthecanvas,Control-dr agfromthetextfield towardthetopofthescene,ending intheempt yspace
around thetextfield.Thisspaceisthetextfield ’ssuperview .Tutorial:Storyboards
Adopt AutoLayout
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
48
Ashor tcutmenu appears inthelocation wher eyourelease thedrag.
4. Choose“TopSpac etoTopLayoutGuide ”fromtheshor tcutmenu .
Aspacing constr aintiscreatedbetweenthetopofthetextfield and thenavigation bar.
Ifadifferentshor tcutmenu appears,perhaps with amenu itemsuch as“Leading Spac etoContainer ,”this
isbecause insteadofdragging verticallytothetopofthescreen, youdragged inadifferentdirection.
Xcodeusesthedirection youdraginasawaytounderstand whatkindofconstr aintsyou’retrying to
make,and itusesthestartand end pointsofthedragtounderstand which objec tsarebeing relatedby
theconstr aints.Goahead and experimen twith differentdragging directions toseewhatconstr aintsare
available .
5.When you’redone experimen ting,Control-dr agfromthetextfield totheright,ending inthesuperview ,
tocreatea“Trailing Spac etoContainer ”constr aint.
6. Control-dr agfromthetextfield totheleft,ending initssuperview ,tocreatea“Leading Spac etoContainer ”
constr aint.
Theseconstr aintsspecify thatthedistanc ebetweentheedge softhetextfield and itssuperview shouldn ’t
change .Thismeans thatifthedeviceorientation change s,thetextfield willautoma ticallygrowtosatisfy these
constr aints.
Checkpoint:Runyourapp.Ifyourotatethedevice,thetextfield growsorshrinks totheappr opriatesize
depending onthedevice’sorientation.Tutorial:Storyboards
Adopt AutoLayout
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
49
Ifyoudon’tgetthebehavior youexpect,usetheXcodeAutoLayoutdebugging featurestohelp you.With
thetextfield selec ted,chooseEditor>ResolveAutoLayoutIssue s>“ResettoSugge stedConstr aints”tohave
Xcodesetuptheconstr aintsdescribedbythestepsabove.OrchooseEditor>ResolveAutoLayoutIssue s>
ClearConstr aintstoremo veallconstr aintsonthetextview ,and then tryfollowing thestepsaboveagain.
Although youradditemscenedoesn’tdomuch yet,thebasic user interfaceisthereandfunc tional. Consider ing
layoutfromthestartensur esthatyouhaveasolid founda tion tobuild upon.
Creating aSecond Scene
Sofar,you’vebeenworkingwith asingle scenemanaged byaview controller thatrepresentsapage wher e
youcanadd anitemtoyourto-do list.Nowit’stime tocreatethescenethatshowstheentireto-do list.
Fortuna tely,iOScome swith apowerfulbuilt-in class called atableviewdesigned specific allytodisplaya
scrolling listofitems.
Toaddascenewithatableviewtoyourstoryboard
1.Intheprojectnavigator,selec tMain.storyboard .
2. OpentheObjectlibraryintheutilit yarea.(Toopenthelibrarywith amenu command ,chooseView>
Utilitie s>ShowObjectLibrary.)
3.DragaTable ViewController objec tfromthelistanddropitonthecanvastotheleftoftheadd-t o-do-it em
scene.Ifyouneed to,youcanusetheZoomOutbutton
 inthelowerrightofthecanvastogetenough
spacetodragitto.
Ifyouseeatable view with contentand nothing happ enswhen youtrytodragittothecanvas,you’re
probably dragging atable view rather than atable view controller.Atable view isone ofthethings
managed byatable view controller,butyouwantthewhole pack age,sofind thetable view controller
and dragittothecanvas.Tutorial:Storyboards
Creating aSecond Scene
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
50
Younowhavetwoscenes,one fordisplaying thelistofto-do items and one foradding to-do items.
Itmakessense tohavethelistbethefirstthing users seewhen theylaunch yourapp,sotellXcodethat’syour
intentbysetting thetable view controller asthefirst scene.
Tosetthetableviewcontrollerastheinitialscene
1.Ifnecessary,opentheoutline view
 using thebuttoninthelowerleftofthecanvas.
2. Intheoutline view ,selec tthenewly added table view controller.
3.With thetable view controller selec ted,opentheAttributesinspector
 intheutilit yarea.Tutorial:Storyboards
Creating aSecond Scene
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
51
4. IntheAttributesinspector,selec tthecheck boxnexttotheIsInitial ViewController option.
Alternatively,youcandragtheinitial sceneindic atorfromtheXYZAddToDoItemViewController to
thetable view controller directlyonthecanvas.
Thetable view controller issetastheinitial view controller inyourstoryboard,makingitthefirst scene
thatloads onapp launch.Tutorial:Storyboards
Creating aSecond Scene
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
52
Checkpoint:Runyourapp.Insteadoftheadd-t o-do-it emscenewith itstextfield,youshould nowseeanempt y
table view—a screenwith anumb erofhorizontaldividers tosepar ateitintorows,butwith nocontentineach
row.
DisplayStaticContentinaTable View
Because youhaven’tlearned aboutstoringdatayet,it’stooearlytocreateand storeto-do items and display
them inthetable view .Butyoudon’tneed realdatatoprototypeyouruser interface.Xcodeallowsyouto
createstaticcontentinatable view inInterfaceBuilder .Thismakesitaloteasier toseehowyouruser interface
willbehave,and it’savaluable waytotryoutdifferentideas .
Tocreateastaticcellinyourtableview
1.Intheoutline view foryourinterface,selec tTable Viewunder Table ViewController.
2. With thetable view selec ted,opentheAttributesinspector
 intheutilit yarea.
3.IntheAttributesinspector,chooseStaticCellsfromthepop-up menu nexttotheContentoption.
Threeempt ytable view cellsappearinyourtable view .
4. Intheoutline view oronthecanvas,selec tthetopcell.
5.IntheAttributesinspector,chooseBasicfromthepop-up menu nexttotheStyleoption.Tutorial:Storyboards
DisplayStaticContentinaTable View
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
53
TheBasicstyleinclude salabel,soXcodecreatesalabelwith thetext“Title”inthetable cell.
6. Intheoutline view oronthecanvas,selec tthelabel.
7.IntheAttributesinspector,change thetextofthelabelfrom“Title”to“MowtheLawn.” Forthechange
totakeeffect,pressEnterorclick outside theutilit yarea.
Alternatively,youcanedit alabelbydouble-click ingitand editing thetextdirectly.
8. Repeatsteps4–7fortheother cells,giving them textforother likelyto-do items.
9.Createenough cellssothattheitems morethan fillthescreen. Youcancreatenew cellsbycopying and
pasting them orbyholding downtheOption keywhen dragging acell.
Checkpoint:Runyourapp.Youshould nowseeatable view with thepreconfigur edcellsyouadded inInterface
Builder .Seehowthenew table view feels when youscrollit.Tryrotating thesimula teddevice—notic ehow
thetable view isalready configur edtolayoutitscontentsproperly.Yougetalotofbehaviorforfreebyusing
atable view .
When you’redone ,it’stime toprovide awaytonavigatefromthistable view ,with itslistofto-do items,to
thefirst sceneyoucreated,wher eauser cancreateanew to-do item.Tutorial:Storyboards
DisplayStaticContentinaTable View
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
54
AddaSegue toNavigateForward
Youhavetwoview controllers configur edinthestoryboard,butthere’snoconnec tionbetweenthem. Transitions
betweenscenesarecalledsegues.
Beforecreating asegue ,youneed toconfigur eyourscenes.First,you’llwrapyour
XYZToDoListViewController inanavigation controller.Recallfrom“Defining theInteraction” (page  42)
thatnavigation controllers provide anavigation barandkeeptrackofthenavigation stack. You’lladdabutton
tothisnavigation bartotransition totheXYZAddToDoItemViewController scene.
Toaddanavigationcontrollertoyourtableviewcontroller
1.Intheoutline view ,selec tTable ViewController.
2. With theview controller selec ted,chooseEditor>Emb edIn>Navigation Controller.
Xcodeadds anew navigation controller toyourstoryboard,setstheinitial scenetoit,andcreatesarelationship
betweenthenew navigation controller andyourexisting table view controller.Onthecanvas,ifyouselec tthe
iconconnec ting thetwoscenes,you’llseethatit’stherootview controller relationship .Thismeans thatthe
view forthecontentdisplayedbelowthenavigation barwillbeyourtable view .Theinitial sceneissettothe
navigation controller because thenavigation controller holds allofthecontentthatyou’lldisplayinyour
app—it ’sthecontainer forboththeto-do listand theadd-t o-do-it emscenes.Tutorial:Storyboards
AddaSegue toNavigateForward
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
55
Checkpoint:Runyourapp.Aboveyourtable view youshould nowseeextraspace.Thisisthenavigation bar
provided bythenavigation controller.
Now,you’lladd atitle (totheto-do list)and abutton(toadd additional to-do items) tothenavigation bar.
Toconfigurethenavigationbar
1.Intheoutline view oronthecanvas,selec tNavigation Itemunder Table ViewController.
Navigationbars gettheir titlefromtheview controller thatthenavigationcontroller currentlydisplays—the y
don’tthemselv eshaveatitle.Yousetthetitle using thenavigation itemofyourto-do list(the table view
controller) rather than setting itdirectlyonthenavigation bar.
2. IntheAttributesinspector,typeMyTo-DoList intheTitlefield.
3.Ifnecessary,opentheObjectlibrary.
4. Dragabarbuttonitemfromthelisttothefarrightofthenavigation barinthetable view controller.
Abuttoncontaining thetext“Item”appears wher eyoudragged thebarbuttonitem.
5.Intheoutline view oronthecanvas,selec tthebarbuttonitem.
6. IntheAttributesinspector,find theIden tifier option intheBarButtonItemsection. ChooseAddfromthe
Iden tifier pop-up menu .
Thebuttonchange stoanAddbutton(+).Tutorial:Storyboards
AddaSegue toNavigateForward
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
56
Checkpoint:Runyourapp.Thenavigation barshould nowhaveatitle and displayanAddbutton.Thebutton
doesn’tdoanything yet.You’llfixthatnext.
YouwanttheAddbuttontobringuptheadd-t o-do-it emscene.Thesceneisalready configur ed—it wasthe
firstsceneyoucreated—but it’snotconnec tedtotheother scenes.Xcodemakesiteasy toconfigur etheAdd
buttontobringupanother scenewhen tapp ed.
ToconfiguretheAddbutton
1.Onthecanvas,selec ttheAddbutton.Tutorial:Storyboards
AddaSegue toNavigateForward
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
57
2. Control-dr agfromthebuttontotheadd-t o-do-it emview controller.
Tutorial:Storyboards
AddaSegue toNavigateForward
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
58
Ashor tcutmenu titled Action Segue appears inthelocation wher ethedragended .
ThisishowXcodeallowsyoutochoosewhattypeofsegue should beused totransition fromtheto-do
listtotheadd-t o-do-it emview controller when theuser taps theAddbutton.
3.Choose“push ”fromtheshor tcutmenu .
Xcodesets upthesegue and configur estheadd-t o-do-it emview controller tobedisplayedinanavigation
controller—y ou’llseethenavigation barinInterfaceBuilder .Tutorial:Storyboards
AddaSegue toNavigateForward
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
59
Atthispoint,youmigh tnotic eacouple ofwarnings inyourproject.Goahead and opentheIssue navigator
toseewhat’swrong.
Because youadded theadd-t o-do-it emscenetothenavigation stack, itnowdisplaysanavigation bar.This
barcaused theframe ofyourtextfield tomovedown,which means thattheAutoLayoutconstr aintsyou
specified earlierarenolonger satisfied .Fortuna tely,thisiseasy tofix.
ToupdatetheAutoLayoutconstraints
1.Intheoutline view oronthecanvas,selec tthetextfield.
2. Onthecanvas,opentheResolveAutoLayoutIssue spop-up menu
 ,and chooseUpdateConstr aints.
Alternatively,youcanchooseEditor>ResolveAutoLayoutIssue s>UpdateConstr aints.
Theconstr aintsareupdatedand theXcodewarnings disapp ear.Tutorial:Storyboards
AddaSegue toNavigateForward
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
60
Checkpoint:Runyourapp.Youcanclick theAddbuttonand navigatetotheadd-t o-do-it emview controller
fromthetable view .Because you’reusing anavigation controller with apush segue ,theback wardnavigation
ishandled foryou.Thismeans youcanclick theback buttontogetback tothetable view .
Thepush navigation isworkingjustasit’ssupp osed to—but it’snotquitewhatyouwantwhen adding items.
Pushnavigation isdesigned foradrill-do wninterface,wher eyou’reproviding moreinformation aboutwhatever
theuser selec ted.Adding anitem,ontheother hand ,isamodaloperation—the user performssome action
that’scomplet eand self-c ontained ,and then returnsfromthatscenetothemain navigation. Theappr opriate
metho dofpresentation forthistypeofsceneisamodalsegue .
Tochangetheseguestyle
1.Intheoutline view oronthecanvas,selec tthesegue fromthetable view controller totheadd-t o-do-it em
view controller.
2. IntheAttributesinspector,chooseModalfromthepop-up menu nexttotheStyleoption.
Because amodalview controller doesn’tgetadded tothenavigation stack, itdoesn’tgetanavigation bar
fromthetable view controller ’snavigation controller.However,youwanttokeepthenavigation bartoprovide
theuser with visual continuit y.Togivetheadd-t o-do-it emview controller anavigation barwhen presented
modally ,emb editinitsownnavigation controller.
Toaddanavigationcontrollertotheadd-to-do-itemviewcontrollerTutorial:Storyboards
AddaSegue toNavigateForward
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
61
1.Intheoutline view ,selec tViewController.
2. With theview controller selec ted,chooseEditor>Emb edIn>Navigation Controller.
Asbefore,Xcodeadds anavigation controller and showsthenavigation baratthetopoftheview controller.
Next,configur ethisbartoadd atitle tothissceneaswellastwobuttons,Canceland Done.Later,you’lllink
thesebuttonstoactions .
Toconfigurethenavigationbarintheadd-to-do-itemviewcontroller
1.Intheoutline view oronthecanvas,selec tNavigation Itemunder ViewController.Ifnecessary,openthe
Attributesinspector
 .
2. IntheAttributesinspector,typeAddTo-DoItem intheTitlefield.
Xcodechange sthedescription oftheview controller from“ViewController ”to“ViewController –Add
To-DoItem”tomakeiteasier foryoutoiden tifythescene.Thedescription appears intheoutline view .
3.DragabarbuttonitemfromtheObjectlibrarytothefarrightofthenavigation barintheadd-t o-do-it em
view controller.
4. IntheAttributesinspector,chooseDone fromthepop-up menu nexttotheIden tifier option.
Thebuttontextchange sto“Done.”
5.Draganother barbuttonitemfromtheObjectlibrarytothefarleftofthenavigation barinthe
add-t o-do-it emview controller.
6. IntheAttributesinspector,chooseCancelfromthepop-up menu nexttotheIden tifier option.
Thebuttontextchange sto“Cancel.”Tutorial:Storyboards
AddaSegue toNavigateForward
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
62
Checkpoint:Runyourapp.ClicktheAddbutton.Youstillseetheadditemscene,butthere’snolonger abutton
tonavigateback totheto-do list—inst ead,youseethetwobuttonsyouadded ,Done and Cancel.Those
buttonsaren’tlinkedtoanyactions yet,soyoucanclick them, buttheydon’tdoanything .Configur ingthe
buttonstocomplet eorcancelediting ofthenew to-do item—and bringtheuser back totheto-do list—is
thenexttask.
CreateCustomViewControllers
You’veaccomplished allofthisconfigur ation without needing towriteanycode.Configur ingthecompletion
oftheadd-t o-do-it emview controller requir essome code,though, and youneed aplacetoputit.Rightnow
Xcodehasconfigur edboththeadd-t o-do-it emview controller and thetable view controller asgener icview
controllers .Tohaveaplaceforyourcustomcode,youneed tocreatesubclasse sforeach oftheseview controllers
and then configur etheinterfacetousethose subclasse s.
First,you’lladdr esstheadd-t o-do-it emview controller scene.Thecustomview controller class willbecalled
XYZAddToDoItemViewController ,because thisview controller willcontrolthescenethatadds anew item
toyourto-do list.
TocreateasubclassofUIViewController
1.ChooseFile>New>File(orpressCommand-N).Tutorial:Storyboards
CreateCustomViewControllers
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
63
2. Ontheleftofthedialo gthatappears,selec ttheCocoaTouch templa teunder iOS.
3.SelectObjective-CClass,and click Next.
4. IntheClassfield,typeAddToDoItem aftertheXYZ prefix.
5.ChooseUIViewController inthe“Subclass of”pop-up menu .
Theclass title change sto“XYZAddToDoItemV iewC ontroller.”Xcodehelps youbymakingitclear fromthe
naming thatyou’recreating acustomview controller.That’sgreat,soleavethenew name asis.
6. Makesurethe“TargetedforiPad”and “With XIBforuser interface”options areunselec ted.
7.ClickNext.
8. Thesavelocation willdefault toyourprojectdirectory.Leavethatasis.
9.TheGroup option willdefault toyourapp name ,ToDoList. Leavethatasis.
10.TheTargets section willdefault tohaving yourapp selec tedand thetestsforyourapp unselec ted.That’s
perfect,soleavethatasis.
11.ClickCreate.
Nowthatyou’vecreatedacustomview controller subclass ,youneed totellyourstoryboardtouseyourcustom
class insteadofthegener icview controller.Thestoryboardfileisaconfigur ation ofobjec tsthat’sused at
runtime byyourapp.Theapp machiner yissmar tenough tosubstitut eyourcustomview controller forthe
gener icview controller thestoryboardstartswith, butyouneed totellthestoryboardthatthat’swhatyou
want.
Toidentifyyourclassastheviewcontrollerforascene
1.Intheprojectnavigator,selec tMain.storyboard .
2.Ifnecessary,opentheoutline view
 .
3.Intheoutline view ,selec tthe“ViewController –AddTo-DoItem”view controller.
Clickthedisclosur etriangle nexttothe“ViewController –AddTo-DoItem”scenetoshowtheobjec tsin
yourscene.Thefirst one should betheview controller.Clickittoselec tit.Noticethatthescenerowhas
adifferenticonfromtheview controller row.
4. With theview controller selec ted,opentheIden tityinspector
 intheutilit yarea.Tutorial:Storyboards
CreateCustomViewControllers
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
64
TheIdentityinspectorappears atthetopoftheutilit yareawhen youclick thethirdbuttonfromtheleft.
Itletsyouedit propertiesofanobjec tinyourstoryboardrelatedtothatobjec t’siden tity,such aswhat
class itis.
5.IntheIden tityinspector,openthepop-up menu nexttotheClassoption.
You’llseealistofalltheview controller classe sXcodeknowsabout. Thelastoneinthelistshould beyour
customview controller,XYZAddToDoItemViewController .ChooseittotellXcodetouseyourview
controller forthisscene.
Atruntime yourstoryboardwillcreateaninstanc eofXYZAddToDoItemViewController —yourcustomview
controller subclass—inst eadofthegener icUIViewController . Notice that Xcode changed  the description
of your add-t o-do-it em view  controller  scene from “View Controller  – Add To-Do Item” to “Add To Do Item
View Controller  – Add To-Do Item.”  Xcode knows that you’re now using  a custom view  controller  for this scene,
and it interprets the name  of the custom class  to make it easier  to understand  what’s going  on in the storyboard.
Now,dothesame thing forthetable view controller.
TocreateasubclassofUITableViewController
1.ChooseFile>New>File(orpressCommand-N).
2. Ontheleft,selec tCocoaTouch under iOS, then selec tObjective-CClass.Ifyouhaven’tcreatedanyclasse s
sincethelaststepsinthetutorial,it’sprobably already selec tedforyou.
3.ClickNext.
4. IntheClassfield,typeToDoList .NoticethatXcodeputtheinser tion pointinbetweenXYZ,yourclass
prefix, andViewController ,thetypeofthing you’recreating.
5.ChooseUITableViewController inthe“Subclass of”pop-up menu .
6. Makesurethe“TargetedforiPad”and “With XIBforuser interface”options areunselec ted.Tutorial:Storyboards
CreateCustomViewControllers
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
65
7.ClickNext.
Thesavelocation willdefault toyourprojectdirectory.Leavethatasis.
8. TheGroup option willdefault toyourapp name ,ToDoList. Leavethatasis.
9.TheTargets section willdefault tohaving yourapp selec tedand thetestsforyourapp unselec ted.That’s
perfect,soleavethatasis.
10.ClickCreate.
Onceagain, youneed tomakesuretoconfigur eyourcustomtable view controller,
XYZToDoListViewController ,inyourstoryboard.
Toconfigureyourstoryboard
1.Intheprojectnavigator,selec tMain.storyboard .
2. Ifnecessary,opentheoutline view .
3.Intheoutline view ,selec tthetable view controller and opentheIden tityinspector
 intheutilit yarea.
4. IntheIden tityinspector,chooseXYZToDoListViewController fromthepop-up menu nexttothe
Classoption.
Now,you’reready toadd customcodetoyourview controllers .
Unwind aSegue toNavigateBack
Inaddition topush and modalsegue s,Xcodeprovidesanunwindsegue .Thissegue allowsusers togofrom
agivensceneback toaprevious scene,anditprovidesaplaceforyoutoaddyourowncodethatgets executed
when users navigatebetweenthose scenes.Youcanuseanunwind segue tonavigateback from
XYZAddToDoItemViewController toXYZToDoListViewController .
Anunwind segue iscreatedbyadding anaction metho dtothedestina tion view controller (the view controller
youwanttounwind to).Ametho dthatcanbeunw ound tomust returnanaction (IBAction )and takeina
storyboardsegue (UIStoryboardSegue )asaparamet er.Because youwanttounwind back to
XYZToDoListViewController ,youneed toadd anaction metho dwith thisformattothe
XYZToDoListViewController implemen tation.
TounwindbacktoXYZToDoListViewController
1.Intheprojectnavigator,openXYZToDoListViewController.m .
2. Addthefollowing codebelowthe@implementation line:Tutorial:Storyboards
Unwind aSegue toNavigateBack
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
66
-(IBAction)unwindToList:(UIStoryboardSegue *)segue
{
}
Youcanname theunwind action anything youwant.Calling itunwindToList: makesitclear wher ethe
unwind willtakeyou.Forfutur eprojects,adopt asimilar naming convention, onewher ethename oftheaction
makesitclear wher etheunwind willgo.
Fornow,leavethismetho dimplemen tation empt y.Later,you’llusethismetho dtoretrievedatafromthe
XYZAddToDoItemViewController toadd anitemtoyourto-do list.
Tocreatetheunwind segue ,linktheCanceland Done buttonstotheunwindToList: action through the
Exiticoninthedockofthesourceview controller,XYZAddToDoItemViewController .
TolinkbuttonstotheunwindToList:action
1.Intheprojectnavigator,selec tMain.storyboard .
2. Onthecanvas,Control-dr agfromtheCancelbuttontotheExititemintheadd-t o-do-it emscenedock.
Tutorial:Storyboards
Unwind aSegue toNavigateBack
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
67
Ifyoudon’tseetheExititeminthescenedockbutinsteadseethedescription ofthescene,click theZoom
In
 buttononthecanvasuntilyouseeit.
Amenu appears inthelocation wher ethedragended .
3.ChooseunwindToList: fromtheshor tcutmenu .
Thisistheaction youjustadded totheXYZToDoListViewController.m file.Thismeans thatwhen
theCancelbuttonistapp ed,thesegue willunwind and thismetho dwillbecalled .
4. Onthecanvas,Control-dr agfromtheDone buttontotheExititeminthe
XYZAddToDoItemViewController scenedock.
5.ChooseunwindToList: fromtheshor tcutmenu .
Noticethatyouused thesame action forboththeCanceland theDone buttons.Inthenexttutorial,you’ll
distinguish betweenthetwodifferentcaseswhen youwritethecodetohandle theunwind segue .
Checkpoint:Now,runyourapp.Atlaunch, youseeatable view—but there’snodatainit.Youcanclick the
AddbuttonandnavigatetoXYZAddToDoItemViewController fromXYZToDoListViewController .You
canclick theCanceland Done buttonstonavigateback tothetable view .
Sowhydoesn’tyourdatashowup?Table view shavetwowaysofgetting data—sta ticallyordynamic ally.
When atable view ’scontroller implemen tstherequir edUITableViewDataSource metho ds,thetable view
asks itsview controller fordatatodisplay,regar dlessofwhether staticdatahasbeenconfigur edinInterface
Builder .IfyoulookatXYZToDoListViewController.m ,you’llnotic ethatitimplemen tsthree
metho ds—numberOfSectionsInTableView: ,tableView:numberOfRowsInSection: ,and
tableView:cellForRowAtIndexPath: .Youcangetyourstaticdatatodisplayagain bycommen ting out
theimplemen tations ofthesemetho ds.Goahead and trythatoutifyoulike.
Recap
Atthispoint,you’vefinished developing theinterfaceforyourapp.Youhavetwoscenes—one foradding
items toyourto-do listandoneforviewing thelist—and youcannavigatebetweenthem. Next,you’llimplemen t
theabilit ytohaveusers add anew to-do itemand haveitappearinthelist.Thenextmodule coversworking
with datatoimplemen tthisbehavior.Tutorial:Storyboards
Recap
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
68
 ●“Incorporating theData” (page  70)
 ●“Using Design Patterns” (page  72)
 ●“Workingwith Founda tion” (page  75)
 ●“Writing aCustomClass” (page  86)
 ●“Tutorial:AddData” (page  93)
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
69Implemen ting anApp
Yourapp’sdatamodeliscomp osed ofyourdatastructuresand (optionally) custombusine sslogicneeded to
keepthatdatainaconsist entstate.Youneverwanttodesign yourdatamodelintotal isola tion fromyour
app’suser interface.Youdo,however,wanttoimplemen tyourdatamodelobjec tssepar ately,without relying
onthepresenc eofspecific view sorview controllers .Whenyoukeepyourdatasepar atefromyouruser interface,
you’llfind iteasier toimplemen tauniversal app—one thatcanrunonbothiPadand iPhone—and easier to
reuse portions ofyourcodelater.
Designing YourModel
Ifyousimply need tostoreasmall amoun tofdata,Founda tion framew orkclasse smaybeyourbestoption.
Researchexisting Founda tion classe stoseewhatbehaviors areavailable foryoutouseinsteadofattempting
toimplemen tthesame thing onyourown.Forexample ,ifyourapponly needs tokeeptrackofalistofstrings,
youcanrelyonNSArray andNSString todothejobforyou.You’lllearnmoreabouttheseand other
Founda tion classe sin“Workingwith Founda tion” (page  75).
Ifyourdatamodelrequir escustombusine sslogicinaddition tojuststoringdata,youcanwriteacustomclass .
Consider howyoucanincorporateexisting framew orkclasse sintotheimplemen tation ofyourownclasse s.
It’sbeneficial touseexisting framew orkclasse swithin yourcustomclasse sinsteadoftrying toreinventthem.
Forexample ,acustomclass migh tuseNSMutableArray tostoreinformation—but define itsownfeatures
forworkingwith thatinformation.
When youdesign yourdatamodel,herearesome questions tokeepinmind:
Whattypesofdatadoyouneedtostore?Whether you’restoringtext,documen ts,largeimage s,oranother
typeofinformation, design yourdatamodeltohandle thatparticular typeofcontentappr opriately.
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
70Incorporating theData
Whatdatastructurescanyouuse? Determine wher eyoucanuseframew orkclasse sand wher eyouneed to
define classe swith customfunc tionalit y.
Howwillyousupplydatatotheuserinterface?Yourmodelshouldn ’tcommunic atedirectlywith your
interface.Tohandle theinteraction betweenthemodeland theinterface,you’llneed toadd logictoyour
controllers .
Implemen ting YourModel
Towritegood,efficien tcode,youneed tolearnmoreaboutObjective-Cand itscapabilitie s.Although this
guide teache syouhowtobuild asimple app,you’llwanttobecome familiar with thelanguage beforewriting
yourownfully func tional app.
Thereareseveralgoodappr oache stolearning Objective-C. Some people learntheconcepts byreading
ProgrammingwithObjective-Cand then writing anumb erofsmall testapps tosolidify their understanding
ofthelanguage and topracticewriting goodcode.
Others jump rightintoprogramming andlookformoreinformation when theydon’tknowhowtoaccomplish
something .Ifyoupreferthisappr oach, keepProgrammingwithObjective-Casareferenceand makeitan
exercisetolearnconcepts and apply them toyourapp asyoudevelop it.
Themost importantgoal indeveloping yourfirst datamodelistogetsomething thatworks.Think carefully
aboutthestructureofyourdatamodel,butdon’tworryaboutmakingitperfect.Don’tbeafraidtoiterateand
refine yourmodelafteryoubegin implemen ting it.IncorporatingtheData
Implemen ting YourModel
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
71
Adesignpatternsolvesacommon softwareengineer ingproblem. Patternsareabstr actdesigns ,notcode.
When youadopt adesign, youadapt itsgener alpatterntoyourspecific needs .Nomatterwhattypeofapp
you’recreating,it’sgoodtoknowthefundamen taldesign patternsused intheframew orks.Understanding
design patternshelps youuseframew orksmoreeffectivelyandallowsyoutowriteapps thataremorereusable ,
moreextensible ,and easier tochange .
MVC
Model-View-Controller(MVC)iscentraltoagooddesign foranyiOSapp.MVCassigns theobjec tsinanapp
toone ofthreeroles:model,view ,orcontroller.Inthispattern,models keeptrackofyourapp’sdata,view s
displayyouruser interfaceandmakeupthecontentofanapp,andcontrollers manage yourview s.Byresponding
touser actions and popula ting theview swith content,controllers serveasagatewayforcommunic ation
betweenmodels and view s.
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
72Using Design Patterns
Asyou’vebeenbuilding yourToDoList app,you’vefollowedanMVC-centricdesign. Theinterfaceyoubuilt in
storyboardsmakesuptheview layer.XYZAddToDoItemViewController andXYZToDoListViewController
arethecontrollers thatmanage yourview s.In“Tutorial:AddData” (page  93),you’llbeincorporating adata
modeltoworkwith theview sand controllers inyourapp.When youbegin designing yourownapp,it’s
importanttokeepMVCatthecenterofyourdesign.
Target-A ction
Target-action isaconceptually simple design inwhich one objec tsends amessage toanother objec twhen
aspecific eventoccurs .Theactionmessage isaselec tordefined insourcecode,and thetarget—the objec t
thatreceivesthemessage—is anobjec tcapable ofperforming theaction, typicallyaview controller.Theobjec t
thatsends theaction message isusually acontrol—such asabutton,slider ,orswitch—tha tcantrigger an
eventinresponse touser interaction such astap,drag,orvalue change .
Forexample ,imagine thatyouwanttorestoredefault settings inyourapp whene verauser taps theRestore
Defaults button(which youcreateinyouruser interface).First,youimplemen tanaction,restoreDefaults: ,
toperformthelogictorestoredefault settings .Next,youregist erthebutton’sTouch UpInside eventtosend
therestoreDefaults: action metho dtotheview controller thatimplemen tsthatmetho d.
You’vealready used target-ac tion inyourToDoList app.When auser taps theDone buttoninthe
XYZAddToDoItemViewController ,ittriggers theunwindToList: action. Inthiscase,theDone buttonis
theobjec tsending themessage ,thetargetobjec tistheXYZToDoListViewController ,theaction message
isunwindToList: ,and theeventthattriggers theaction message tobesentisauser tapping theDone
button.Target-ac tion isapowerfulmechanism fordefining interaction and sending information between
differentpartsofyourapp.
Delega tion
Delegation isasimple andpowerfulpatterninwhich oneobjec tinanappactsonbehalf of,orincoordina tion
with, another objec t.Thedelega ting objec tkeeps areferencetotheother objec t—the delega te—and atthe
appr opriatetime sends amessage toit.Themessage informsthedelega teofaneventthatthedelega tingUsingDesignPatterns
Target-A ction
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
73
objec tisabouttohandle orhasjusthandled .Thedelega temayrespond tothemessage byupdating the
appearance(orstate)ofitself orofother objec tsintheapp,andinsome casesitwillreturnavalue thataffects
howanimpending eventishandled .
delegation.eps
Streamline Your App with Design Patterns
Apple, Inc.window.tif reduced to 25%
Thedelega tepatternisprevalentinexisting framew orkclasse s,butyoucanalsoimplemen tdelega tion between
twocustomobjec tsinanapp.Acommon design usesdelega tion asameans forallowing achild view controller
tocommunic atesome value (typicallyauser-en teredvalue) toitsparentview controller.
Youhaven’tworkedwith delega tion yet,butin“Tutorial:AddData” (page  93),you’llseeanexample ofitwhen
youadd additional behavior toyourXYZToDoListViewController class .
Theseareafewofthemost common design patternsthatyou’llencounterduringiOSdevelopmen t,butthere
areman ymore.AsyoulearnmoreaboutObjective-C, you’llspotother design patternsthatyoucanapply in
yourapp.UsingDesignPatterns
Delega tion
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
74
Asyoubegin writing codeforyourapp,you’llfind thatthereareman yObjective-Cframew orksthatyoucan
takeadvantage of.Ofparticular importanceistheFoundationframework,which providesbasic servicesfor
allapps .TheFounda tion framew orkinclude svalueclassesrepresenting basic datatypessuch asstrings and
numb ers,aswellascollectionclassesforstoringother objec ts.You’llberelying onvalue andcollec tion classe s
towritemuch ofthecodeforyourToDoList app.
Value Objects
TheFounda tion framew orkprovidesyouwith classe sthatgener atevalue objec tsforstrings,binar ydata,dates
and time s,numb ers,and other values.
Avalueobjectisanobjec tthatencapsula tesaprimitiv evalue (ofaCdatatype)andprovidesservicesrelated
tothatvalue.Youfrequen tlyencountervalue objec tsastheparamet ersand returnvaluesofmetho dsand
func tions thatyourapp calls.Differentpartsofaframew ork—or evendifferentframew orks—c anexchange
databypassing value objec ts.
Some example sofvalue objec tsintheFounda tion framew orkare:
NSString andNSMutableString
NSData andNSMutableData
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
75Workingwith Founda tion
NSDate
NSNumber
NSValue
Because value objec tsrepresentscalarvalues,youcanusethem incollec tions and wher everelse objec tsare
requir ed.Value objec tshaveanadvantage overtheprimitiv etypestheyencapsula te:Theyletyouperform
certain operations ontheencapsula tedvalue simply and efficien tly.TheNSString class ,forexample ,has
metho dsforsearching forand replacing substr ings,forwriting strings tofilesor(preferably) URLs ,and for
constr ucting file-sy stempaths.
Youcreateavalue objec tfromdataoftheprimitiv etype(and then perhaps pass itinametho dparamet er).
Inyourcode,youlateraccesstheencapsula teddatafromtheobjec t.TheNSNumber class providestheclear est
example ofthisappr oach.
intn=5;//Valueassigned toprimitive type
NSNumber *numberObject =[NSNumber numberWithInt:n]; //Valueobjectcreated from
primitive type
inty=[numberObject intValue]; //Encapsulated valueobtained fromvalueobject
(y==n)
Mostvalue classe screatetheir instanc esbydeclar ingbothinitializ ersandclass factorymetho ds.Classfactory
methods—implemen tedbyaclass asaconvenienc eforclien ts—c ombine allocation and initializa tion inone
stepand returnthecreatedobjec t.Forexample ,theNSString class declar esastring class metho dthat
allocatesand initializ esanew instanc eoftheclass and returnsittoyourcode.
NSString *string =[NSString string];
Inaddition tocreating value objec tsand letting youaccesstheir encapsula tedvalues,most value classe s
provide metho dsforsimple operations such asobjec tcompar ison.
Strings
Objective-Csupp ortsthesame conventions forspecifying strings asdoesC:Single charactersareenclosed by
single quot es,andstrings ofcharactersaresurrounded bydouble quot es.ButObjective-Cframew orkstypically
don’tuseCstrings.Instead,theyuseNSString objec ts.WorkingwithFoundation
Value Objects
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
76
TheNSString class providesanobjec twrapperforstrings,offeringadvantage ssuch asbuilt-in memor y
managemen tforstoringarbitr ary-length strings,supp ortfordifferentcharacterencodings (particular lyUnicode),
and utilitie sforstringformatting .Because youcommonly usesuch strings,Objective-Cprovidesashor thand
nota tion forcreatingNSString objec tsfromconstan tvalues.TousethisNSString literal,justprecedea
double-quot edstringwith theatsign (@),asshowninthefollowing example s:
//Createthestring"MyString" pluscarriage return.
NSString *myString =@"MyString\n";
//Createtheformatted string"1String".
NSString *anotherString =[NSString stringWithFormat:@"%d %@",1,@"String"];
//CreateanObjective-C stringfromaCstring.
NSString *fromCString =[NSString stringWithCString:"A Cstring"
encoding:NSUTF8StringEncoding];
Numb ers
Objective-Coffersashor thand nota tion forcreatingNSNumber objec ts,remo ving theneed tocallinitializ ers
orclass factorymetho dstocreatesuch objec ts.Simply precedethenumer icvalue with theatsign (@)and
optionally followitwith avalue typeindic ator.Forexample ,tocreateNSNumber objec tsencapsula ting an
integer value and adouble value,youcould writethefollowing:
NSNumber *myIntValue =@32;
NSNumber *myDoubleValue =@3.22346432;
YoucanevenuseNSNumber literalstocreateencapsula tedBoolean and charactervalues.
NSNumber *myBoolValue =@YES;
NSNumber *myCharValue =@'V';
YoucancreateNSNumber objec tsrepresenting unsigned integers ,long integers ,long long integers ,and float
valuesbyappending thelettersU,L,LL,and F,respectively,tothenota tedvalue.Forexample ,tocreatean
NSNumber objec tencapsula ting afloatvalue,youcanwritethefollowing:
NSNumber *myFloatValue =@3.2FWorkingwithFoundation
Value Objects
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
77
Collec tion Objects
MostcollectionobjectsinObjective-Ccodeareinstanc esofone ofthebasic collec tion classe s—NSArray ,
NSSet ,andNSDictionary .Theseclasse sareused tomanage groups ofobjec ts,soanyitemyouwantto
add toacollec tion must beaninstanc eofanObjective-Cclass .Ifyouneed toadd ascalarvalue,youmust
first createasuitableNSNumber orNSValue instanc etorepresentit.
Anyobjec tyouaddtoacollec tion willbekeptaliveatleast aslong asthecollec tion iskeptalive.That’sbecause
collec tion classe susestrong referencestokeeptrackoftheir contents.Inaddition tokeeping trackoftheir
contents,each ofthecollec tion classe smakesiteasy toperformcertain tasks ,such asenumer ation, accessing
specific items,orfinding outwhether aparticular objec tispartofthecollec tion.
ThecontentsoftheNSArray ,NSSet ,andNSDictionary classe saresetatcreation. Because theycan’tbe
changed overtime ,they’recalledimmutable .Eachonealso hasasubclass that’smutable toallowyoutoadd
orremo veobjec tsatwill. Differenttypesofcollec tions organiz etheir contained objec tsindistinc tiveways:
 ●NSArray andNSMutableArray —Anarrayisanorderedcollec tion ofobjec ts.Youaccessanobjec tby
specifying itsposition (thatis,itsinde x)inthearray.Thefirst elemen tinanarrayisatinde x0(zero).
 ●NSSet andNSMutableSet —A setstoresanunor deredcollec tion ofobjec ts,with each objec toccurring
only once.Yougener allyaccessobjec tsinthesetbyapplying testsorfilterstoobjec tsintheset.
 ●NSDictionary andNSMutableDictionary —A dictionar ystoresitsentriesaskey-value pairs; thekey
isaunique iden tifier ,usually astring,and thevalue istheobjec tyouwanttostore.Youaccessthisobjec t
byspecifying thekey.
Arrays
Anarray(NSArray )isused torepresentanorderedlistofobjec ts.Theonly requir emen tisthateach itembe
anObjective-Cobjec t—ther e’snorequir emen tforeach objec ttobeaninstanc eofthesame class .
Tomain tain orderinthearray,each elemen tisstoredatazero-based inde x.
...NSObject
@"Hello, World!"NSString
@42NSNumber
...NSValue0
12
3WorkingwithFoundation
Collec tion Objects
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
78
Creating Arrays
Aswith thevalue classe sdescribedearlierinthischapt er,youcancreateanarraythrough allocation and
initializa tion, class factorymetho ds,orarrayliterals.
Thereareavarietyofdifferentinitializa tion andfactorymetho dsavailable ,depending onthenumb erofobjec ts.
+(id)arrayWithObject:(id)anObject;
+(id)arrayWithObjects:(id)firstObject, ...;
-(id)initWithObjects:(id)firstObject, ...;
Because thearrayWithObjects: andinitWithObjects: metho dsbothtakeanil-termina ted,variable
numb erofargumen ts,youmust includenil asthelastvalue.
NSArray *someArray =
[NSArray arrayWithObjects:someObject, someString, someNumber, someValue, nil];
Thisexample createsanarrayliketheoneshownearlier.Thefirstobjec t,someObject ,willhaveanarrayinde x
of0;thelastobjec t,someValue ,willhaveaninde xof3.
It’spossible totruncatethelistofitems unin tentionally ifone oftheprovided valuesisnil.
idfirstObject =@"someString";
idsecondObject =nil;
idthirdObject =@"anotherString";
NSArray *someArray =
[NSArray arrayWithObjects:firstObject, secondObject, thirdObject, nil];
Inthiscase,someArray contains onlyfirstObject ,becausesecondObject ,which isnil,isinterpreted
astheend ofthelistofitems.
It’spossible tocreateanarrayliteralusing acompac tsyntax.
NSArray *someArray =@[firstObject, secondObject, thirdObject];
Whenusing thissyntax,don’ttermina tethelistofobjec tswithnil—in fact,nil isaninvalidvalue.Forexample ,
you’llgetanexception atruntime ifyoutrytoexecutethefollowing code:
idfirstObject =@"someString";WorkingwithFoundation
Collec tion Objects
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
79
idsecondObject =nil;
NSArray *someArray =@[firstObject, secondObject];
//exception: "attempt toinsertnilobject"
Querying ArrayObjects
Afteryou’vecreatedanarray,youcanquer yitforinformation—such ashowman yobjec tsithasorwhether
itcontains agivenitem.
NSUInteger numberOfItems =[someArray count];
if([someArray containsObject:someString]) {
...
}
Youcanalso quer ythearrayforanitematagiveninde x.Ifyouattempt toreque staninvalidinde x,you’llget
anout-of-b ounds exception atruntime .Toavoidgetting anexception, alwayscheck thenumb erofitems first.
if([someArray count]>0){
NSLog(@"First itemis:%@",[someArray objectAtIndex:0]);
}
Thisexample checks toseewhether thenumb erofitems isgreaterthan zero.Ifitis,theFounda tion func tion
NSLog logsadescription ofthefirst item,which hasaninde xof0.
AsanalternativetousingobjectAtIndex: ,youcanalso quer ythearrayusing asubscr iptsyntax,which is
justlikeaccessing avalue inastandar dCarray.Theprevious example canberewrittenlikethis:
if([someArray count]>0){
NSLog(@"First itemis:%@",someArray[0]);
}
Sorting ArrayObjects
TheNSArray class offersavarietyofmetho dstosortitscollec tedobjec ts.BecauseNSArray isimmutable ,
each ofthesemetho dsreturnsanew arraycontaining theitems inthesortedorder.
Forexample ,youcansortanarrayofstrings bycallingcompare: oneach string.WorkingwithFoundation
Collec tion Objects
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
80
NSArray *unsortedStrings =@[@"gammaString", @"alphaString", @"betaString"];
NSArray *sortedStrings =
[unsortedStrings sortedArrayUsingSelector:@selector(compare:)];
Mutabilit y
Although theNSArray class itself isimmutable ,itcanneverthele sscontain mutable objec ts.Forexample ,if
youadd amutable stringtoanimmutable array,likethis:
NSMutableString *mutableString =[NSMutableString stringWithString:@"Hello"];
NSArray *immutableArray =@[mutableString];
there’snothing tostopyoufrommuta ting thestring.
if([immutableArray count]>0){
idstring=immutableArray[0];
if([string isKindOfClass:[NSMutableString class]]) {
[string appendString:@" World!"];
}
}
Ifyouwanttoadd orremo veobjec tsfromanarrayafterinitial creation, useNSMutableArray ,which adds a
varietyofmetho dstoadd,remo ve,orreplac eone ormoreobjec ts.
NSMutableArray *mutableArray =[NSMutableArray array];
[mutableArray addObject:@"gamma"];
[mutableArray addObject:@"alpha"];
[mutableArray addObject:@"beta"];
[mutableArray replaceObjectAtIndex:0 withObject:@"epsilon"];
Thisexample createsanarraymade upoftheobjec ts@"epsilon" ,@"alpha" ,and@"beta" .
It’salso possible tosortamutable arrayinplace,without creating asecondar yarray.
[mutableArray sortUsingSelector:@selector(caseInsensitiveCompare:)];WorkingwithFoundation
Collec tion Objects
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
81
Inthiscase,thecontained items aresortedintotheascending ,case-insensitiv eorder@"alpha" ,@"beta" ,
and@"epsilon" .
Sets
Aset(NSSet )objec tissimilar toanarray,butitmain tains anunor deredgroup ofdistinc tobjec ts.
...NSObject@"Hello, World!"NSString
@42NSNumber
...NSValue
Because sets don’tmain tain order,theyofferfasterperformanc ethan arraysdowhen itcome stotesting for
memb ership .
Because thebasicNSSet class isimmutable ,itscontentsmust bespecified atcreation, using either allocation
and initializa tion oraclass factorymetho d.
NSSet*simpleSet =
[NSSetsetWithObjects:@"Hello, World!", @42,aValue, anObject, nil];
AswithNSArray ,theinitWithObjects: andsetWithObjects: metho dsbothtakeanil-termina ted,
variable numb erofargumen ts.Thename ofthemutableNSSet subclass isNSMutableSet .
Setsstoreonly one referencetoanindividual objec t,evenifyoutryadding anobjec tmorethan once.
NSNumber *number =@42;
NSSet*numberSet =
[NSSetsetWithObjects:number, number, number, number, nil];
//numberSet onlycontains oneobjectWorkingwithFoundation
Collec tion Objects
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
82
Dictionar ies
Rather than simply main taining anorderedorunor deredcollec tion ofobjec ts,adictionary(NSDictionary )
storesobjec tsassociatedwith givenkeys,which canthen beused forretrieval.
Thebestpracticeistousestringobjec tsasdictionar ykeys.
Keys
Values
...@"anObject"
NSObject
@"Hello, World!"@"helloString"
NSString
@42@"magicNumber"
NSNumber
...@"aValue"
NSValue
Although youcanuseother objec tsaskeys,keepinmind thateach keyiscopied forusebyadictionar yand
somust supp ortNSCopying .Ifyouwanttousekey-value coding ,however,youmust usestringkeysfor
dictionar yobjec ts(tolearnmore,seeKey-ValueCodingProgrammingGuide ).
Creating Dictionar ies
Youcancreatedictionar iesusing either allocation and initializa tion, orclass factorymetho ds,likethis:
NSDictionary *dictionary =[NSDictionary dictionaryWithObjectsAndKeys:
someObject, @"anObject",
@"Hello, World!", @"helloString",
@42,@"magicNumber",
someValue, @"aValue",
nil];
ForthedictionaryWithObjectsAndKeys: andinitWithObjectsAndKeys: metho ds,each objec tis
specified beforeitskey,and thelistofobjec tsand keysmust benil termina ted.
Objective-Coffersaconcise syntaxfordictionar yliteralcreation.
NSDictionary *dictionary =@{
@"anObject" :someObject,
@"helloString" :@"Hello, World!",
@"magicNumber" :@42,
@"aValue" :someValueWorkingwithFoundation
Collec tion Objects
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
83
};
Fordictionar yliterals,thekeyisspecified beforeitsobjec t,andthelistofobjec tsandkeysisnotnil termina ted.
Querying Dictionar ies
Afteryou’vecreatedadictionar y,youcanaskitfortheobjec tstoredagainst agivenkey.
NSNumber *storedNumber =[dictionary objectForKey:@"magicNumber"];
Iftheobjec tisn’tfound ,theobjectForKey: metho dreturnsnil.
There’salso asubscr iptsyntaxalternativetousingobjectForKey: .
NSNumber *storedNumber =dictionary[@"magicNumber"];
Mutabilit y
Ifyouneed toaddorremo veobjec tsfromadictionar yaftercreation, usetheNSMutableDictionary subclass .
[dictionary setObject:@"another string" forKey:@"secondString"];
[dictionary removeObjectForKey:@"anObject"];
Representnilwith NSNull
It’snotpossible toaddnil tothecollec tion classe sdescribedinthissection becausenil inObjective-Cmeans
“noobjec t.”Ifyouneed torepresent“noobjec t”inacollec tion, usetheNSNull class .
NSArray *array=@[@"string", @42,[NSNull null]];
WithNSNull ,thenull metho dalwaysreturnsthesame instanc e.Classe sthatbehaveinthiswayarecalled
singletonclasses.Youcancheck toseewhether anobjec tinanarrayisequal tothesharedNSNull instanc e
likethis:
for(idobjectinarray){
if(object ==[NSNull null]){
NSLog(@"Found anullobject");
}WorkingwithFoundation
Collec tion Objects
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
84
}
Although theFounda tion framew orkcontains man ymorecapabilitie sthan aredescribedhere,youdon’tneed
toknoweverysingle detail rightaway.IfyoudowanttolearnmoreaboutFounda tion, takealookatFoundation
FrameworkReference.Fornow,youhaveenough information tocontinue implemen ting yourToDoList app,
which you’lldobywriting acustomdataclass .WorkingwithFoundation
Collec tion Objects
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
85
Asyoudevelop iOSapps ,you’llfind man yoccasions when youneed towriteyourowncustomclasse s.Custom
classe sareuseful when youneed topack agecustombehavior together with data.Inacustomclass ,youcan
define yourownbehaviors forstoring,manipula ting,and displaying yourdata.
Forexample ,consider theWorldClocktabintheiOSClockapp.Thecellsinthistable view need todisplay
morecontentthan astandar dtable view cell.Thisisagoodopportunit ytoimplemen tasubclass thatextends
thebehaviorofUITableViewCell toletyoudisplayadditional customdataforagiventable view cell.Ifyou
weredesigning thiscustomclass ,youmigh tadd outlets foralabeltodisplaythehours ahead information
and animage view todisplaythecustomclockontherightofthecell.
Thischapt erteache syouwhatyouneed toknowaboutObjective-Csyntaxand class structuretofinish
implemen ting thebehavior ofyourToDoList app.Itdiscusse sthedesign ofXYZToDoItem ,thecustomclass
thatwillrepresentasingle itemonyourto-do list.Inthethirdtutorial,you’llactually implemen tthisclass and
add ittoyourapp.
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
86Writing aCustomClass
Declar ingand Implemen ting aClass
Thespecific ation ofaclass inObjective-Crequir estwodistinc tpieces:theinterfaceand theimplemen tation.
Theinterfacespecifie sexactlyhowagiventypeofobjec tisintended tobeused byother objec ts.Inother
words,itdefine sthepublic interfacebetweeninstanc esoftheclass andtheoutside world.Theimplemen tation
include stheexecutable codeforeach metho ddeclar edintheinterface.
Anobjec tshould bedesigned tohide thedetails ofitsinternalimplemen tation. InObjective-C, theinterface
andimplemen tation areusually placedinsepar atefilessothatyouneed tomakeonly theinterfacepublic .As
with Ccode,youdefine header filesand sourcefilestosepar atepublic declar ations fromtheimplemen tation
details ofyourcode.Interfacefileshavea.hextension, and implemen tation fileshavea.mextension. (You’ll
actually createthesefilesfortheXYZToDoItem class in“Tutorial:AddData” (page  93)—fornow,justfollow
along asallofthepiecesareintroduced.)
Interface
TheObjective-Csyntaxused todeclar eaclass interfacelookslikethis:
@interface XYZToDoItem :NSObject
@end
Thisexample declar esaclass namedXYZToDoItem ,which inher itsfromNSObject .
Thepublic propertiesand behavior aredefined inside the@interface declar ation. Inthisexample ,nothing
isspecified beyond thesuperclass ,sotheonly behaviorexpectedtobeavailable oninstanc esofXYZToDoItem
isthebehaviorinher itedfromNSObject .Allobjec tsareexpectedtohaveaminimum behavior,sobydefault ,
theymust inher itfromNSObject (orone ofitssubclasse s).
Implemen tation
TheObjective-Csyntaxused todeclar eaclass implemen tation lookslikethis:
#import "XYZToDoItem.h"
@implementation XYZToDoItem
@end
Ifyoudeclar eanymetho dsintheclass interface,you’llneed toimplemen tthem inside thisfile.WritingaCustomClass
Declar ingand Implemen ting aClass
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
87
PropertiesStoreanObject’sData
Consider whatinformation theto-do itemneeds tohold .Youprobably need toknowitsname ,when itwas
created,and whether it’sbeencomplet ed.InyourcustomXYZToDoItem class ,you’llstorethisinformation in
properties.
Declar ations forthesepropertiesreside inside theinterfacefile(XYZToDoItem.h ).Here’swhattheylooklike:
@interface XYZToDoItem :NSObject
@property NSString *itemName;
@property BOOLcompleted;
@property NSDate*creationDate;
@end
Inthisexample ,theXYZToDoItem class declar esthreepublic properties.Thesepropertiesareavailable for
fullpublic access.With public access,other objec tscanbothreadand change thevaluesoftheproperties.
Youmaydecide todeclar ethatapropertyshouldn ’tbechanged (thatis,thatitshould beread-only). Toindic ate
whether apropertyisintended toberead-only—among other things—O bjective-Cpropertydeclar ations
includepropertyattributes.Forexample ,ifyoudon’twantthecreation dateofanXYZToDoItem tobe
changeable ,youmigh tupdatetheXYZToDoItem class interfacetolooklikethis:
@interface XYZToDoItem :NSObject
@property NSString *itemName;
@property BOOLcompleted;
@property (readonly) NSDate*creationDate;
@end
Propertiescanbeprivateorpublic .Sometime sitmakessense tomakeapropertyprivatesothatother classe s
can’tseeoraccessit.Forexample ,ifyouwanttokeeptrackofapropertythatrepresentsthedateanitemwas
markedascomplet edwithout giving other classe saccesstothisinformation, makethepropertyprivateby
putting itinaclassextension atthetopofyourimplemen tation file(XYZToDoItem.m ).
#import "XYZToDoItem.h"WritingaCustomClass
PropertiesStoreanObject’sData
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
88
@interface XYZToDoItem ()
@property NSDate*completionDate;
@end
@implementation XYZToDoItem
@end
Youaccesspropertiesusing gettersandsetters.Agetterreturnsthevalue ofaproperty,andasetterchange s
it.Acommon syntacticalshor thand foraccessing gettersand settersisdotnotation.Forpropertieswith read
andwriteaccess,youcanusedotnota tion forbothgetting andsetting aproperty’svalue.Ifyouhaveanobjec t
toDoItem ofclassXYZToDoItem ,youcandothefollowing:
toDoItem.itemName =@"Buymilk"; //SetsthevalueofitemName
NSString *selectedItemName =toDoItem.itemName; //GetsthevalueofitemName
Metho dsDefine anObject’sBehavior
Metho dsdefine whatanobjec tcando.Amethodisapieceofcodethatyoudefine toperformatask or
subr outine inaclass .Metho dshaveaccesstodatastoredintheclass andcanusethatinformation toperform
some kindofoperation.
Forexample ,togiveato-do item(XYZToDoItem )theabilit ytogetmarkedascomplet e,youcanadd a
markAsCompleted metho dtotheclass interface.Later,you’llimplemen tthismetho d’sbehavior intheclass
implemen tation, asdescribedin“Implemen ting Metho ds” (page  91).
@interface XYZToDoItem :NSObject
@property NSString *itemName;
@property BOOLcompleted;
@property (readonly) NSDate*creationDate;
-(void)markAsCompleted;
@endWritingaCustomClass
Metho dsDefine anObject’sBehavior
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
89
Theminus sign (-)atthefrontofthemetho dname indic atesthatitisaninstancemethod,which canbe
called onanobjec tofthatclass .Thisminus sign differentiatesitfromclass metho ds,which aredenot edwith
aplus sign (+).Classmethodscanbecalled ontheclass itself .Acommon example ofclass metho dsareclass
factorymetho ds,which youlearned aboutin“Workingwith Founda tion” (page  75).Youcanalso useclass
metho dstoaccesssome pieceofsharedinformation associatedwith theclass .
Thevoid keywordisused inside parenthesesatthebeginning ofthedeclar ation toindic atethatthemetho d
doesn’treturnavalue.Inthiscase,themarkAsCompleted metho dtakesinnoparamet ers.Paramet ersare
discussed inmoredetail in“Metho dParamet ers” (page  90).
Metho dParamet ers
Youdeclar emetho dswithparameterstopass along some pieceofinformation when youcallametho d.
Forexample ,youcanrevisethemarkAsCompleted metho dfromtheprevious codesnipp ettotakeinasingle
paramet erthatwilldetermine whether theitemgets markedascomplet edoruncomplet ed.Thisway,youcan
toggle thecompletion stateoftheiteminsteadofsetting itonly ascomplet ed.
@interface XYZToDoItem :NSObject
@property NSString *itemName;
@property BOOLcompleted;
@property (readonly) NSDate*creationDate;
-(void)markAsCompleted:(BOOL)isComplete;
@end
Now,yourmetho dtakesinone paramet er,isComplete ,which isoftypeBOOL .
When yourefertoametho dwith aparamet erbyname ,youinclude thecolon aspartofthemetho dname ,
sothename oftheupdatedmetho disnowmarkAsCompleted: .Ifametho dhasmultiple paramet ers,the
metho dname isbrokenupandinterspersed with theparamet ername s.Ifyouwantedtoaddanother paramet er
tothismetho d,itsdeclar ation would looklikethis:
-(void)markAsCompleted:(BOOL)isComplete onDate:(NSDate *)date;
Here,themetho d’sname iswrittenasmarkAsCompleted:onDate: .Thename sisComplete anddate are
used intheimplemen tation toaccessthevaluessupplied when themetho discalled ,asifthesename swere
variable s.WritingaCustomClass
Metho dsDefine anObject’sBehavior
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
90
Implemen ting Metho ds
Metho dimplemen tations usebracestocontain therelevantcode.Thename ofthemetho dmust beiden tical
toitscounterpartintheinterfacefile,and theparamet erand returntypesmust matchexactly.
Hereisasimple implemen tation ofthemarkAsCompleted: metho dyouadded toyourXYZToDoItem class
interface:
@implementation XYZToDoItem
-(void)markAsCompleted:(BOOL)isComplete {
self.completed =isComplete;
}
@end
Likeproperties,metho dscanbeprivateorpublic .Public metho dsaredeclar edinthepublic interfaceand so
canbeseen and called byother objec ts.Their corresponding implemen tation residesintheimplemen tation
fileand can’tbeseen byother objec ts.Privatemetho dshaveonly animplemen tation and areinternaltothe
class ,meaning they’reonly available tocallinside theclass implemen tation. Thisisapowerfulmechanism for
adding internalbehavior toaclass without allowing other objec tsaccesstoit.
Forexample ,sayyouwanttokeepato-do item’scompletionDate updated.Iftheto-do itemgets marked
ascomplet ed,setcompletionDate tothecurrentdate.Ifitgets markedasuncomplet ed,setcompletionDate
tonil,because ithasn ’tbeencomplet edyet.Because updating theto-do item’scompletionDate isa
self-c ontained task, thebestpracticeistowriteitsownmetho dforit.However,it’simportanttomakesure
thatother objec tscan’tcallthismetho d—other wise,another objec tcould settheto-do item’scompletionDate
toanything atanytime .Forthisreason, youmakethismetho dprivate.
Now,updatetheimplemen tation ofXYZToDoItem toinclude theprivatemetho dsetCompletionDate that
gets called insidemarkAsCompleted: toupdatetheto-do item’scompletionDate whene veritgets marked
ascomplet edoruncomplet ed.Noticethatyou’renotadding anything totheinterfacefile,because youdon’t
wantother objec tstoseethismetho d.
@implementation XYZToDoItem
-(void)markAsCompleted:(BOOL)isComplete {
self.completed =isComplete;
[selfsetCompletionDate];
}
-(void)setCompletionDate {
if(self.completed) {
self.completionDate =[NSDate date];WritingaCustomClass
Metho dsDefine anObject’sBehavior
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
91
}else{
self.completionDate =nil;
}
}
@end
Atthispoint,you’vedefined abasic representation ofato-do listitemusing theXYZToDoItem class .
XYZToDoItem storesinformationaboutitself—name ,creationdate,completion state—in theformofproperties,
and itdefine swhatitcando—get markedascomplet edoruncomplet ed—using ametho d.Thisistheextent
ofthefeaturesyouneed tofinish implemen ting yourToDoList app inthenexttutorial.However,youcan
alwaysexperimen tbyadding yourownpropertiesand metho dstotheclass tointegratenew behavior into
yourapp.WritingaCustomClass
Metho dsDefine anObject’sBehavior
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
92
Thistutorialbuilds ontheprojectyoucreatedinthesecond tutorial(“Tutorial:Storyboards” (page  47)).You’ll
usewhatyoulearned aboutusing design patterns,workingwith Founda tion, and writing acustomclass to
add supp ortfordynamic datatoyourToDoList app.
Thistutorialteache syouhowto:
 ●Workwith common Founda tion classe s
 ●Createcustomdataclasse s
 ●Implemen tadelega teand datasourceprotocol
 ●Passdatabetweenview controllers
Afteryoucomplet eallthestepsinthistutorial,you’llhaveanapp thatlookssomething likethis:
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
93Tutorial:AddData
CreateaDataClass
Togetstarted,openyourexisting projectinXcode.
Atthispoint,youhaveaninterfaceand anavigation scheme foryourToDoList app using storyboards.Now,
it’stime toadd datastorageand behavior with modelobjec ts.
Thegoal ofyourapp istocreatealistofto-do items,sofirst you’llcreateacustomclass ,XYZToDoItem ,to
representanindividual to-do item.Asyourecall,theXYZToDoItem class wasdiscussed in“Writing aCustom
Class” (page  86).
TocreatetheXYZToDoItemclass
1.ChooseFile>New>File(orpressCommand-N).
Adialo gappears thatprompts youtochooseatempla teforyournew file.
2. Ontheleft,selec tCocoaTouch under iOS.
3.SelectObjective-CClass,and click Next.
4. IntheClassfield,typeToDoItem aftertheXYZ prefix.
5.ChooseNSO bjectfromthe“Subclass of”pop-up menu .
Ifyou’vebeenfollowing along with thetutorialsexactly,theClasstitle probably said
XYZToDoItemViewController priortothisstep.WhenyouchooseNSO bjectasthe“Subclass of,”Xcode
knowsyou’remakinganormalcustomclass and remo vestheViewController textthatitwasadding
previously .
6. ClickNext.
7.Thesavelocation defaults toyourprojectdirectory.Leavethatasis.
8. TheGroup option defaults toyourapp name ,ToDoList. Leavethatasis.
9.TheTargets section defaults tohaving yourapp selec tedand thetestsforyourapp unselec ted.That’s
perfect,soleavethatasis.
10.ClickCreate.
TheXYZToDoItem class isstraigh tforwardtoimplemen t.Ithaspropertiesforitsname ,creation date,and
whether theitemhasbeencomplet ed.Goahead andaddthesepropertiestotheXYZToDoItem class interface.
ToconfiguretheXYZToDoItemclass
1.Intheprojectnavigator,selec tXYZToDoItem.h .
2. Addthefollowing propertiestotheinterfacesothatthedeclar ation lookslikethis:Tutorial:AddData
CreateaDataClass
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
94
@interface XYZToDoItem :NSObject
@property NSString *itemName;
@property BOOLcompleted;
@property (readonly) NSDate*creationDate;
@end
Checkpoint:Build yourprojectbychoosing Product>Build (orpressing Command-B). You’renotusing your
new class foranything yet,butbuilding itgivesthecompiler achanc etoverifythatyouhaven’tmade any
typing mistak es.Ifyouhave,fixthem byreading through thewarnings orerrorsthatthecompiler provides,
and then lookback overtheinstr uctions inthistutorialtomakesureeverything looksthewayit’sdescribed
here.
Load theData
Younowhaveaclass fromwhich youcancreateand storethedataforindividual listitems.Youalso need to
keepalistofthose items.ThenaturalplacetotrackthisisintheXYZToDoListViewController class—view
controllers areresponsible forcoordina ting betweenthemodeland theview ,sotheyneed areferencetothe
model.
TheFounda tion framew orkinclude saclass ,NSMutableArray ,thatworkswellfortrackinglists ofitems.It’s
importanttouseamutable arraysothattheuser canadditems tothearray.Theimmutable version,NSArray ,
doesn’tallowyoutoadd items toitafterit’sinitializ ed.
Touseanarrayyouneed tobothdeclar eitand createit.Youdothisbyallocating and initializing thearray.
Toallocateandinitializethearray
1.Intheprojectnavigator,selec tXYZToDoListViewController.m .
Because thearrayofitems isanimplemen tation detail ofyourtable view controller,youdeclar eitinthe
.mfileinsteadofthe.hfile.Thismakesitprivatetoyourcustomclass .
2. Addthefollowing propertytotheinterfacecategor yXcodecreatedinyourcustomtable view controller
class .Thedeclar ation should looklikethis:
@interface XYZToDoListViewController ()Tutorial:AddData
Load theData
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
95
@property NSMutableArray *toDoItems;
@end
3.Allocateand initializ ethetoDoItems arrayintheviewDidLoad metho d:
-(void)viewDidLoad
{
[superviewDidLoad];
self.toDoItems =[[NSMutableArray alloc]init];
}
Theactual codeforviewDidLoad include ssome additional lines—inser tedbyXcodewhen itcreated
XYZListViewController —tha tarecommen tedout. Feelfreetoleavethem in.
Atthispoint,youhaveanarraythatyoucanadd items to.You’lldothisinasepar atemetho d,
loadInitialData ,which you’llcallfromviewDidLoad .Thiscodegoesinitsownmetho dbecause it’sa
modular task, andyoucanimpr ovecodereadabilit ybymakingthismetho dsepar ate.Inarealappthismetho d
would load thedatafromsome sortofpersist entstore,such asafile.Fornow,thegoal istoseehowatable
view workswith customdataitems,soyou’llcreatesome testdatatoexperimen twith.
Createaniteminthewayyoucreatedthearray:Allocateand initializ e.Then, givetheitemaname .Thisisthe
name thatwillbeshowninthetable view .Dothisforacouple ofitems.
Toloadinitialdata
1.Addanew metho d,loadInitialData ,belowthe@implementation line.
-(void)loadInitialData {
}
2. Inthismetho d,createafewlistitems,and add them tothearray.
-(void)loadInitialData {
XYZToDoItem *item1=[[XYZToDoItem alloc]init];
item1.itemName =@"Buymilk";
[self.toDoItems addObject:item1];Tutorial:AddData
Load theData
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
96
XYZToDoItem *item2=[[XYZToDoItem alloc]init];
item2.itemName =@"Buyeggs";
[self.toDoItems addObject:item2];
XYZToDoItem *item3=[[XYZToDoItem alloc]init];
item3.itemName =@"Readabook";
[self.toDoItems addObject:item3];
}
3.CalltheloadInitialData intheviewDidLoad metho d.
-(void)viewDidLoad
{
[superviewDidLoad];
self.toDoItems =[[NSMutableArray alloc]init];
[selfloadInitialData];
}
Checkpoint:Build yourprojectbychoosing Product>Build.Youshould seenumer ouserrorsforthelinesof
yourloadInitialData metho d.Thekeytowhat’sgone wrong isthefirst line,which should say“Useof
undeclar ediden tifier XYZToDoItem.” Thismeans thatthecompiler doesn’tknowaboutyourXYZToDoItem
when it’scompilingXYZToDoListViewController .Compilers areveryparticular and need tobetold
explicitly whattopayattention to.
Totellthecompilertopayattentiontoyourcustomlistitemclass
1.Findthe#import "XYZToDoListViewController.h" linenear thetopofthe
XYZToDoListViewController.m file.
2. Addthefollowing lineimmedia telybelowit:
#import "XYZToDoItem.h"
Checkpoint:Build yourprojectbychoosing Product>Build.Itshould build without errors.Tutorial:AddData
Load theData
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
97
DisplaytheData
Atthispoint,yourtable view hasamutable arraythat’sprepopula tedwith some sample to-do items.Nowyou
need todisplaythedatainthetable view .
You’lldothisbymakingXYZToDoListViewController adatasourceofthetable view .Tomakesomething
adatasourceofthetable view ,itneeds toimplemen ttheUITableViewDataSource protocol.Itturnsout
thatthemetho dsyouneed toimplemen tareexactlytheonesyoucommen tedoutinthesecond tutorial.To
haveafunc tioning table view requir esthreemetho ds.ThefirstoftheseisnumberOfSectionsInTableView: ,
which tellsthetable view howman ysections todisplay.Forthisapp,youwantthetable view todisplaya
single section, sotheimplemen tation isstraigh tforward.
Todisplayasectioninyourtable
1.Intheprojectnavigator,selec tXYZToDoListViewController.m .
2. Ifyoucommen tedoutthetable view datasourcemetho dsinthesecond tutorial,remo vethose commen t
markersnow.
3.Findthesection ofthetempla teimplemen tation thatlookslikethis.
-(NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
#warning Potentially incomplete methodimplementation.
//Returnthenumberofsections.
return0;
}
Youwantasingle section, soyouwanttoremo vethewarning lineand change thereturnvalue from0
to1.
4. Change thenumberOfSectionsInTableView: datasourcemetho dtoreturnasingle section, likethis:
-(NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
//Returnthenumberofsections.
return1;
}Tutorial:AddData
DisplaytheData
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
98
Thenextmetho d,tableView:numberOfRowsInSection: ,tellsthetable view howman yrowstodisplay
inagivensection. Youhaveasingle section inyourtable ,and each to-do itemshould haveitsownrowinthe
table view .Thatmeans thatthenumb erofrowsshould bethenumb erofXYZToDoItem objec tsinyour
toDoItems array.
Toreturnthenumberofrowsinyourtable
1.Intheprojectnavigator,selec tXYZToDoListViewController.m .
2. Findthesection ofthetempla teimplemen tation thatlookslikethis:
-(NSInteger)tableView:(UITableView *)tableView
numberOfRowsInSection:(NSInteger)section
{
#warning Incomplete methodimplementation.
//Returnthenumberofrowsinthesection.
return0;
}
Youwanttoreturnthenumb eroflistitems youhave.Fortuna tely,NSArray hasahandy metho dcalled
count thatreturnsthenumb erofitems inthearray,sothenumb erofrowsis[self.toDoItems count] .
3.Change thetableView:numberOfRowsInSection: datasourcemetho dtoreturntheappr opriate
numb erofrows.
-(NSInteger)tableView:(UITableView *)tableView
numberOfRowsInSection:(NSInteger)section
{
//Returnthenumberofrowsinthesection.
return[self.toDoItems count];
}
Thelastmetho d,tableView:cellForRowAtIndexPath: ,asks foracelltodisplayforagivenrow.Upuntil
now,you’vebeenworkingwith codeonly,butthecelltodisplayforarowisverymuch partofyourinterface.
Fortuna tely,Xcodemakesiteasy todesign customcellsinInterfaceBuilder .Thefirsttask istodesign yourcell
andtotellthetable view thatinsteadofusing staticcontent,it’sgoing tobeusing prototypecellswith dynamic
content.
Toconfigureyourtableview
1.Openyourstoryboard.Tutorial:AddData
DisplaytheData
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
99
2. Selectthetable view intheoutline .
3.With thetable view selec ted,opentheAttributesinspector
 intheutilit yarea.
4. IntheAttributesinspector,change thetable view ’sContentattributefromStaticCellstoDynamic
Prototypes.
InterfaceBuilder takesthestaticcellsyouconfigur edand convertsthem allintoprototypes.Prototypecells,
asthename implie s,arecellsthatareconfigur edwith textstyles,colors ,image s,orother attributesasyou
wantthem tobedisplayedbutthatgettheir datafromthedatasourceatruntime .Thedatasourceloads a
prototypecellforeach rowand then configur esthatcelltodisplaythedatafortherow.
Toload thecorrectcell,thedatasourceneeds toknowwhatit’scalled ,andthatname must also beconfigur ed
inthestoryboard.
Whileyou’resetting theprototypecellname ,you’llalso configur eanother property—the cellselec tion style,
which determine sacell’sappearancewhen auser taps it.Setthecellselec tion styletoNone sothatthecell
won’tbehighligh tedwhen auser taps it.Thisisthebehavioryouwantyourcellstohavewhen auser taps an
itemintheto-do listtomarkitascomplet edoruncomplet ed—a featureyou’llimplemen tlaterinthistutorial.
Toconfiguretheprototypecell
1.Selectthefirst table view cellinyourtable .
2. IntheAttributesinspector,locatetheIden tifier field and typeListPrototypeCell .
3.IntheAttributesinspector,locatetheSelection field and chooseNone.
Youcould also change thefontorother attributesoftheprototypecell.Thebasic configur ation iseasy towork
with, soyou’llkeepthat.
Thenextstepistoteach yourdatasourcehowtoconfigur ethecellforagivenrowbyimplemen ting
tableView:cellForRowAtIndexPath: .Thisdatasourcemetho discalled bythetable view when itwants
todisplayagivenrow.Fortable view swith asmall numb erofrows,allrowsmaybeonscr eenatonce,sothis
metho dgets called foreach rowinyourtable .Buttable view swith alargenumb erofrowsdisplayonly asmall
fraction oftheir total items atagiventime .It’smost efficien tfortable view stoonly askforthecellforrows
thatarebeing displayed,and that’swhattableView:cellForRowAtIndexPath: allowsthetable view to
do.
Foranygivenrowinthetable ,fetchthecorresponding entryinthetoDoItems arrayand then setthecell’s
textlabeltotheitem’sname .
Todisplaycellsinyourtable
1.Intheprojectnavigator,selec tXYZToDoListViewController.m .Tutorial:AddData
DisplaytheData
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
100
2. FindthetableView:cellForRowAtIndexPath: datasourcemetho d.Thetempla teimplemen tation
lookslikethis:
-(UITableViewCell *)tableView:(UITableView *)tableView
cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
staticNSString *CellIdentifier =@"Cell";
UITableViewCell *cell=[tableView
dequeueReusableCellWithIdentifier:CellIdentifier forIndexPath:indexPath];
//Configure thecell...
returncell;
}
Thetempla teperformsseveraltasks .Itcreatesavariable tohold theiden tifier forthecell,asks thetable
view foracellwith thatiden tifier ,adds acommen taboutwher ecodetoconfigur ethecellshould go,and
then returnsthecell.
Tomakethiscodeworkforyourapp,you’llneed tochange theiden tifier totheone yousetinthe
storyboardand then add codetoconfigur ethecell.
3.Change thecelliden tifier totheone yousetinthestoryboard.Toavoidtypos,copyand pastefromthe
storyboardtotheimplemen tation file.Thecelliden tifier lineshould nowlooklikethis:
staticNSString *CellIdentifier =@"ListPrototypeCell";
4. Justbeforethereturnstatemen t,add thefollowing linesofcode:
XYZToDoItem *toDoItem =[self.toDoItems objectAtIndex:indexPath.row];
cell.textLabel.text =toDoItem.itemName;
YourtableView:cellForRowAtIndexPath: metho dshould looklikethis:
-(UITableViewCell *)tableView:(UITableView *)tableView
cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
staticNSString *CellIdentifier =@"ListPrototypeCell";Tutorial:AddData
DisplaytheData
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
101
UITableViewCell *cell=[tableView
dequeueReusableCellWithIdentifier:CellIdentifier forIndexPath:indexPath];
XYZToDoItem *toDoItem =[self.toDoItems objectAtIndex:indexPath.row];
cell.textLabel.text =toDoItem.itemName;
returncell;
}
Checkpoint:Runyourapp.Thelistofitems youadded inloadInitialData should showupascellsinyour
table view .
MarkItems asComplet ed
Ato-do listisn’tmuch goodifyoucannevermarkitems ascomplet ed.Now,you’lladd supp ortforthat.A
simple interfacewould betohavethecompletion statetoggle when theuser taps thecelland todisplay
complet editems with acheck marknexttothem. Fortuna tely,table view scome with some built-in behavior
thatyoucantakeadvantage oftoimplemen tthissimple interface—s pecific ally,table view snotify their delega te
when theuser taps acell.Sothetask istowritethecodethatwillrespond totheuser tapping ato-do itemin
thetable .
Xcodealready madeXYZToDoListViewController thedelega teofthetable view when youconfigur edit
inthestoryboard.Allyouhavetodoisimplemen tthetableView:didSelectRowAtIndexPath: delega te
metho dtorespond touser taps and updateyourto-do listitems appr opriately.
When acellgets selec ted,thetable view callsthetableView:didSelectRowAtIndexPath: delega te
metho dtoseehowitshould handle theselec tion. Inthismetho d,you’llwritecodetoupdatetheto-do item’s
completion state.
Tomarkanitemascompletedoruncompleted
1.Intheprojectnavigator,selec tXYZToDoListViewController.m .
2. Addthefollowing linestotheend ofthefile,justabovethe@end line:
#pragma mark-Tableviewdelegate
-(void)tableView:(UITableView *)tableView
didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{Tutorial:AddData
MarkItems asComplet ed
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
102
}
Trytyping thesecond lineinsteadofjustcopying and pasting .You’llfind thatcodecompletion isone of
thegreattime-sa ving featuresofXcode.When Xcodebrings upthelistofpotentialcompletions ,scroll
through thelistuntilyoufind theone youwantand then pressReturn.Xcodeinser tsthewhole linefor
you.
3.Youwanttorespond totaps butnotactually leavethecellselec ted.Addthefollowing codetodeselec t
thecellimmedia telyafterselec tion:
[tableView deselectRowAtIndexPath:indexPath animated:NO];
4. SearchforthecorrespondingXYZToDoItem inyourtoDoItems array.
XYZToDoItem *tappedItem =[self.toDoItems objectAtIndex:indexPath.row];
5.Toggle thecompletion stateofthetapp editem.
tappedItem.completed =!tappedItem.completed;
6. Tellthetable view toreload therowwhose datayoujustupdated.
[tableView reloadRowsAtIndexPaths:@[indexPath]
withRowAnimation:UITableViewRowAnimationNone];
YourtableView:didSelectRowAtIndexPath: metho dshould looklikethis:
-(void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath
*)indexPath
{
[tableView deselectRowAtIndexPath:indexPath animated:NO];
XYZToDoItem *tappedItem =[self.toDoItems objectAtIndex:indexPath.row];
tappedItem.completed =!tappedItem.completed;
[tableView reloadRowsAtIndexPaths:@[indexPath]
withRowAnimation:UITableViewRowAnimationNone];
}Tutorial:AddData
MarkItems asComplet ed
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
103
Checkpoint:Runyourapp.Thelistofitems youadded inloadInitialData isvisible ascellsinyourtable
view .Butwhen youtapitems,nothing seems tohapp en.Whynot?
Thereason isthatyouhaven’tconfigur edthetable view celltodisplaythecompletion stateofanitem.Todo
so,youneed togoback tothetableView:cellForRowAtIndexPath: metho dand configur ethecellto
displayanindic atorwhen anitemiscomplet ed.
One waytoindic atethatanitemiscomplet edistoputacheck marknexttoit.Luckily,table view cellscan
haveacellaccessoryontherightside.Bydefault ,there’snoaccessory;however,youcanchange thecellto
displayadifferentaccessory,one ofwhich isacheck mark.Allyouhavetodoissetthecellaccessorybased
onthecompletion stateoftheto-do item.
Todisplayanitem’scompletion state
1.GotothetableView:cellForRowAtIndexPath: metho d.
2. Addthefollowing codejustbelowthelinethatsets thetextlabelofthecell:
if(toDoItem.completed) {
cell.accessoryType =UITableViewCellAccessoryCheckmark;
}else{
cell.accessoryType =UITableViewCellAccessoryNone;
}
YourtableView:cellForRowAtIndexPath: metho dshould nowlooklikethis:
-(UITableViewCell *)tableView:(UITableView *)tableView
cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
staticNSString *CellIdentifier =@"ListPrototypeCell";
UITableViewCell *cell=[tableView
dequeueReusableCellWithIdentifier:CellIdentifier forIndexPath:indexPath];
XYZToDoItem *toDoItem =[self.toDoItems objectAtIndex:indexPath.row];
cell.textLabel.text =toDoItem.itemName;
if(toDoItem.completed) {
cell.accessoryType =UITableViewCellAccessoryCheckmark;
}else{
cell.accessoryType =UITableViewCellAccessoryNone;
}Tutorial:AddData
MarkItems asComplet ed
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
104
returncell;
}
Checkpoint:Runyourapp.Thelistofitems youadded inloadInitialData isvisible ascellsinyourtable
view .Whenyoutapanitem,acheck markshould appearnexttoit.Ifyoutapthesame itemagain, thecheck mark
disapp ears.
AddNewItems
Thefinal stepincreating theto-do listapp’sfunc tionalit yisimplemen ting theabilit ytoadd anitem.When a
user entersanitemname inthetextfield ontheXYZAddToDoItemViewController sceneand taps the
Done button,youwanttheview controller tocreateanew listitemand pass itback tothe
XYZToDoListViewController todisplayintheto-do list.
First,youneed tohavealistitemtoconfigur e.Justaswith thetable view ,theview controller isthelogical
placetoconnec ttheinterfacetothemodel.GivetheXYZAddToDoItemViewController apropertytohold
thenew to-do item.
ToaddanXYZToDoItemtotheXYZAddToDoItemViewControllerclass
1.Intheprojectnavigator,selec tXYZAddToDoItemViewController.h .
Because you’llneed toaccessthelistitemfromyourtable view controller lateron,it’simportanttomake
thisapublic property.That’swhyyoudeclar eitintheinterfacefile,XYZAddToDoItemViewController.h ,
insteadofintheimplemen tation file,XYZAddToDoItemViewController.m .
2. Addanimportdeclar ation totheXYZToDoItem class abovethe@interface line.
#import "XYZToDoItem.h"
3.AddatoDoItem propertytotheinterface.
@interface XYZAddToDoItemViewController :UIViewController
@property XYZToDoItem *toDoItem;
@endTutorial:AddData
AddNewItems
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
105
Togetthename ofthenew item,theview controller needs accesstothecontentsofthetextfield wher ethe
user entersthename .Todothis,createaconnec tion fromtheXYZAddToDoItemViewController class that
connec tstothetextfield inyourstoryboard.
Toconnectthetextfieldtoyourviewcontroller
1.Intheoutline view ,selec ttheXYZAddToDoItemViewController objec t.
2. ClicktheAssistan tbuttonintheupperrightofthewindo w’stoolbar toopentheassistan teditor.
Theeditorontherightshould appearwithXYZAddToDoItemViewController.m displayed.Ifitisn’t
displayed,click thefilename intheeditorontherightandchooseXYZAddToDoItemViewController.m .
Theassistan teditorallowsyoutohavetwofilesopenatonce,makingitpossible toperformoperations
betweenthem—f orexample ,tying apropertyinyoursourcefilewith anobjec tinyourinterface.
3.Selectthetextfield inyourstoryboard.Tutorial:AddData
AddNewItems
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
106
4. Control-dr agfromthetextfield onyourcanvastothecodedisplayintheeditorontheright,stopping
thedragatthelinejustbelowthe@interface lineinXYZAddToDoItemViewController.m .
5.Inthedialo gthatappears,forName,typetextField .
Leavetherestoftheoptions astheyare.Yourdialo gshould looklikethis:
6. ClickConnec t.
Xcodeadds thenecessarycodetoXYZAddToDoItemViewController.m tostoreapointertothetext
field and configur esthestoryboardtosetupthatconnec tion.Tutorial:AddData
AddNewItems
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
107
Additionally ,youneed toknowwhen tocreatetheitem.Youwanttocreatetheitemonly iftheDone button
wastapp ed.Todothis,add theDone buttonasanoutlet.
ToconnecttheDonebuttontoyourviewcontroller
1.Inyourstoryboard,opentheassistan teditor,and settherightmost windo wto
XYZAddToDoItemViewController.m .
2. SelecttheDone buttoninyourstoryboard.
3.Control-dr agfromtheDonebuttononyourcanvastothecodedisplayintheeditorontheright,stopping
thedragatthelinejustbelowyourtextField propertyinXYZAddToDoItemViewController.m .
4. Inthedialo gthatappears,forName,typedoneButton .
Leavetherestoftheoptions astheyare.Yourdialo gshould looklikethis:
5.ClickConnec t.
Younowhaveawaytoiden tifytheDone button.Because youwanttocreateanitemwhen theDone button
istapp ed,youneed toknowwhen thathapp ens.
When theuser taps theDone button,itkicksoffanunwind segue back totheto-do list—tha t’stheinterface
youconfigur edinthesecond tutorial.Beforeasegue executes,thesystemgivestheview controller involved
achanc etoprepar ebycallingprepareForSegue: .Thisisexactlythepointatwhich youwanttocheck to
seewhether theuser tapp edtheDone button,and ifso,createanew to-do item.Youcancheck which one
ofthebuttonsgottapp ed,and ifitwastheDone button,createtheitem.
TocreateanitemaftertappingtheDonebutton
1.SelectXYZAddToDoItemViewController.m intheprojectnavigator.
2. AddtheprepareForSegue: metho dbelowthe@implementation line:
-(void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender
{
}Tutorial:AddData
AddNewItems
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
108
3.Inthemetho d,seewhether theDone buttonwastapp ed.
Ifitwasn’t,insteadofsaving theitem,youwantthemetho dtoreturnwithout doing anything else.
if(sender !=self.doneButton) return;
4. Seewhether there’stextinthetextfield.
if(self.textField.text.length >0){
}
5.Ifthere’stext,createanew itemand giveitthename ofthetextinthetextfield.Also,ensur ethatthe
complet edstateissettoNO.
self.toDoItem =[[XYZToDoItem alloc]init];
self.toDoItem.itemName =self.textField.text;
self.toDoItem.completed =NO;
Ifthereisn’ttext,youdon’twanttosavetheitem,soyouwon’tdoanything else.
YourprepareForSegue: metho dshould looklikethis:
-(void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender
{
if(sender !=self.doneButton) return;
if(self.textField.text.length >0){
self.toDoItem =[[XYZToDoItem alloc]init];
self.toDoItem.itemName =self.textField.text;
self.toDoItem.completed =NO;
}
}
Nowthatyou’vecreatedanew item,youneed topass theitemback toXYZToDoListViewController so
thatitcanadd theitemtotheto-do list.Toaccomplish this,youneed torevisit theunwindToList: metho d
thatyouwroteinthesecond tutorial.Thismetho dgets called when theXYZAddToDoItemViewController
sceneclose s,which happ enswhen theuser taps either theCancelortheDone button.Tutorial:AddData
AddNewItems
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
109
TheunwindToList: metho dtakesasegue asaparamet er,likeallmetho dsthatareused astargets foran
unwind segue .Thesegue paramet eristhesegue thatunwinds fromXYZAddToDoItemViewController
back toXYZToDoListViewController .Because asegue isatransition betweentwoview controllers ,itis
awareofitssourceview controller—XYZAddToDoItemViewController .Byaskingthesegue objec tforits
sourceview controller,youcanaccessanydatastoredinthesourceview controller intheunwindToList:
metho d.Inthiscase,youwanttoaccesstoDoItem .Ifit’snil,theitemwasnevercreated—either thetext
field had notextortheuser tapp edtheCancelbutton.Ifthere’savalue fortoDoItem ,youretrievetheitem,
add ittoyourtoDoItems array,and displayitintheto-do listbyreloading thedatainthetable view .
Tostoreanddisplaythenewitem
1.Intheprojectnavigator,selec tXYZToDoListViewController.m .
2. Addanimportdeclar ation totheXYZAddToDoItemViewController class abovethe@interface line.
#import "XYZAddToDoItemViewController.h"
3.FindtheunwindToList: metho dyouadded inthesecond tutorial.
4. Inthismetho d,retrievethesourceview controller—the controller you’reunwinding from,
XYZAddToDoItemViewController .
XYZAddToDoItemViewController *source =[seguesourceViewController];
5.Retrievethecontroller ’sto-do item.
XYZToDoItem *item=source.toDoItem;
Thisistheitemthatwascreatedwhen theDone buttonwastapp ed.
6. Seewhether theitemexists.
if(item!=nil){
}
Ifit’snil,either theCancelbuttonclosed thescreenorthetextfield had notext,soyoudon’twantto
savetheitem.
Ifitdoesexist,add theitemtoyourtoDoItems array.Tutorial:AddData
AddNewItems
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
110
[self.toDoItems addObject:item];
7.Reload thedatainyourtable .
Because thetable view doesn’tkeeptrackofitsdata,it’stheresponsibilit yofthedatasource—in this
case,yourtable view controller—t onotify thetable view when there’snew dataforittodisplay.
[self.tableView reloadData];
YourunwindToList: metho dshould looklikethis:
-(IBAction)unwindToList:(UIStoryboardSegue *)segue
{
XYZAddToDoItemViewController *source =[seguesourceViewController];
XYZToDoItem *item=source.toDoItem;
if(item!=nil){
[self.toDoItems addObject:item];
[self.tableView reloadData];
}
}
Checkpoint:Runyourapp.Nowwhen youclick theAddbutton(+)and createanew item,youshould seeit
inyourto-do list.Congr atulations! You’vecreatedanapp thattakesinput fromtheuser,storesitinanobjec t,
and passe sthatobjec tbetweentwoview controllers .Thisisthefounda tion ofmoving databetweenscenes
inastoryboard-based app.
Recap
You’realmost done with thisintroductorytourofdeveloping apps foriOS. Thefinal section givesyoumore
information abouthowtofind yourwayaround thedocumen tation, and itsugge stssome nextstepsyou
migh ttakeasyoulearnhowtocreatemoreadvancedapps .Tutorial:AddData
Recap
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
111
 ●“iOS Technolo gies” (page  113)
 ●“Finding Information” (page  116)
 ●“WheretoGofromHere” (page  128)
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
112NextSteps
You’vejustlearned howtowriteanapp with asimple user interfaceandbasic behavior.Atthispoint,youmay
bethink ingaboutimplemen ting additional behavior thatwillturnyourprojectintoafull-f eaturedapp.
Asyouconsider which featuresyouwanttoadd,rememb erthatyoudon’thavetoimplemen teverything from
scratch.iOSprovidesframew orksthatdefine particular sets offunc tionalit y—fr omgaming and media to
secur ityanddatamanagemen t—which youcanintegrateintoyourapp.You’vealready used theUIKitframew ork
todesign yourapp’suser interface,and theFounda tion framew orktoincorporatecommon datastructures
and behavior intoyourcode.Thesearetwoofthemost common framew orksused iniOSapp developmen t,
butthereareman ymoreavailable toyou.
Thischapt erisahigh-le veloverview oftechnolo giesand framew orksthatyoumigh tconsider adopting in
yourapp.Usethischapt erasastarting pointforpossible technolo giestoexplor e.Forafulloverview ofthe
technolo giesavailable iniOS, seeiOSTechnologyOverview.
UserInterface
iOShasman yframew orksand technolo giesforcreating and enhancing yourapp’suser interface.
UIKit.TheUIKitframew orkprovidesclasse stocreateatouch-based user interface.Because alliOSapps are
based onUIKit,youcan’tship anapp without thisframew ork.UIKitprovidestheinfrastructurefordrawing to
thescreen, handling events,and creating common user interfaceelemen ts.UIKitalso organiz esacomple x
appbymanaging thecontentthat’sdisplayedonscr een. Formoreinformation, seeUIKitFrameworkReference.
CoreGraphics.CoreGraphics—a low-level,C-based framew ork—is theworkhorse forhandling high-qualit y
vectorgraphics ,path-based drawing ,transformations ,image s,datamanagemen t,and more.Ofcourse ,the
simple standmost efficien twaytocreategraphics iniOSistouseprerender edimage swith thestandar dview s
and controlsoftheUIKitframew ork,letting iOSdothedrawing .Because UIKit,ahigher-le velframew ork,also
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
113iOSTechnolo gies
providesclasse sforcustomdrawing—including paths,colors ,patterns,gradien ts,image s,text,and
transformations—use itinsteadofCoreGraphics whene verpossible .Formoreinformation, seeCoreGraphics
FrameworkReference.
CoreAnimation. CoreAnima tion isatechnolo gythatallowsyoutomakeadvancedanima tions and visual
effects.UIKitprovidesanima tions thatarebuilt ontopoftheCoreAnima tion technolo gy.Ifyouneed advanced
anima tions beyond thecapabilitie sofUIKit,youcanuseCoreAnima tion directly.TheCoreAnima tion interfaces
arecontained intheQuartzCoreframew ork.Using CoreAnima tion, youcreateahierarchyoflayerobjec ts
thatyoumanipula te,rotate,scale,transform,and soforth.Byusing CoreAnima tion’sfamiliar view-lik e
abstr action, youcancreatedynamic user interfaceswithout having touselow-levelgraphics APIssuch as
OpenGL ES.Formoreinformation, seeCoreAnimation ProgrammingGuide .
Games
Youhaveanumb erofdifferenttechnolo giestoexplor ewhen developing game sforiOS.
GameKit.TheGame Kitframew orkprovidesleaderb oards,achie vemen ts,and other featurestoadd toyour
iOSgame .Formoreinformation, seeGameKitFrameworkReference.
SpriteKit.TheSpriteKitframew orkprovidesgraphics supp ortforanima ting arbitr arytexturedimage s,or
sprites.Inaddition tobeing agraphics engine ,italso include sphysicssupp orttobringobjec tstolife.Sprite
Kitisagoodchoic eforgame sand other apps thatrequir ecomple xanima tion chains .(Forother kinds ofuser
interfaceanima tion, useCoreAnima tion instead.)Formoreinformation, seeSpriteKitProgrammingGuide .
OpenGLES.OpenGL ESisalow-levelframew orkthatprovidestoolstosupp orthardware-acc elerated2Dand
3Ddrawing .Apple ’simplemen tation oftheOpenGL ESstandar dworksclosely with thedevicehardwareto
provide high frame ratesforfull-scr een, game-st yleapps .Because OpenGL ESisalow-level,hardware-focused
API, ithasasteeplearning curveand asignific anteffectontheoveralldesign ofyourapp.(Forapps that
requir ehigh-p erformanc egraphics formorespecializ eduses,consider using SpriteKitorCoreAnima tion.) For
moreinformation, seeOpenGLESProgrammingGuideforiOS.
GameController.TheGame Controller framew orkmakesiteasy tofind controllers connec tedtoaMacoriOS
device.When acontroller isdiscoveredonyourdevice,yourgame reads controlinputs aspartofitsnormal
gamepla y.Thesecontrollers provide new waysforplayerstocontrolyourgame .Apple hasdesigned
specific ations forhardwarecontrollers toensur ethatallofthecontrollers haveconsist entsets ofcontrol
elemen tsthatbothplayersand game designers canrelyon.Formoreinformation, seeGameController
FrameworkReference.iOSTechnologies
Games
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
114
Data
When workingwith yourapp’sdata,consider whatcapabilitie sareavailable toyouinexisting framew orks.
CoreData.TheCoreDataframew orkmanage sanapp’sdatamodel.With CoreData,youcreatemodelobjec ts,
knownasmanaged objec ts.Youmanage relationships betweenthose objec tsand makechange stothedata
through theframew ork.CoreDatatakesadvantage ofthebuilt-in SQLit etechnolo gytostoreand manage
dataefficien tly.Formoreinformation, seeCoreDataFrameworkReference.
Foundation. Youworkedwith Founda tion earlierinthisguide .TheFounda tion framew orkdefine sabase layer
ofObjective-Cclasse s.Inaddition toproviding asetofuseful primitiv eobjec tclasse s,thisframew orkintroduces
severalparadigms thatdefine behaviors notcoveredbytheObjective-Clanguage .Among other things ,this
framew orkinclude sclasse srepresenting basic datatypes,such asstrings and numb ers,and collec tion classe s
forstoringother objec ts.Formoreinformation, seeFoundation FrameworkReference.
Media
Media framew orksprovide anumb erofcapabilitie sforworkingwith audio and video inyourapp.
AVFoundation. AVFounda tion isone ofseveralframew orksthatyoucanusetoplayand createtime-based
audio visual media. Forexample ,youcanuseAVFounda tion toexamine ,create,edit,orreenc odemedia files.
Youcanalso useittogetinput streams fromdevicesand manipula tevideo duringreal-time captur eand
playback. Formoreinformation, seeAVFoundation FrameworkReference.iOSTechnologies
Data
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
115
Asyoudevelop yourapp,you’llwanttheinformation you’velearned—and more—a tyourfinger tips.Youcan
getalltheinformation youneed without leaving Xcode.
Xcodecome swith alargedocumen tation suitecontaining anumb erofdifferenttypesofdocumen ts,including
gener aland conceptual guide s,framew orkand class references,and focused help articles.Youcanaccessthis
documen tation inanumb erofways,such asright-click ingonareasofXcodetolearnhowtousethem, opening
theQuick Helppane inthemain projectwindo wforcontext-awarecodehelp,orsearching intheDocumen tation
Windo wtofind guide sand fullAPIreference.
UseContextual HelpArticlesforXcodeGuidanc e
Togethelp when using Xcodeitself ,takealookathelp articles.Helparticlesshowhowtoaccomplish common
tasks ,such ascreating anew class ,setting acustomclass inInterfaceBuilder ,and resolving issue swith Auto
Layout.
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
116Finding Information
Depending onwhatyou’retrying todo,youcanaccesssome help articlesbyControl-click ingonaUIelemen t
inXcode.Lookforthelastentry(inthisimage ,ProjectNavigatorHelp) inthecontextual menu .
Ifyou’relookingforgener alhelp ,orinformation aboutatask relatedtoanelemen tthatdoesn’tsupp ort
Control-click ing,youcanalso searchforcontextual help intheXcodeHelpmenu .
FindingInformation
UseContextual HelpArticlesforXcodeGuidanc e
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
117
UseGuide sforGener aland Conceptual Overview s
Tolearnaboutanew technolo gyortogain adeep erunderstanding ofhowthedifferentclasse sinaframew ork
worktogether ,lookatone oftheconceptualguides.MostCocoaframew orksand technolo gieshave
programming guide sassociatedwith them, such asSpriteKitProgrammingGuide ,ProgrammingwithObjective-C,
andLocationandMapsProgrammingGuide .
Toview thesedocumen tsinXcode,usethedocumentationviewerwindow,which youcanaccessbychoosing
Help>“Documen tation and APIReference”(Option–C ommand–Q uestion Mark).Simply typethename ofa
technolo gy,such asSpriteKit.
Theresults areorderedtobemost helpful when youarewriting code.Thismeans thatyou’llseeAPIreference
entrieslistedfirst,and then SDK and Toolsguide s.FindingInformation
UseGuide sforGener aland Conceptual Overview s
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
118
Ifasuitable resultdoesn’tappearinthepop-up list,chooseShowAllResults todisplayacomplet esetofresults
thatyoucanfilter.
UseAPIReferenceforClassInformation
When you’vereadaguide tolearnaboutthedifferentpartsofatechnolo gyand youstartwriting codethat
usesthetechnolo gy,you’llprobably find thatyouneed toknowmoreaboutwhatanindividual class cando,
orthatyouneed tolearnthecorrectwaytocallaparticular metho d.Thisinformation isprovided byAPI
referencedocumen ts.FindingInformation
UseAPIReferenceforClassInformation
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
119
Forexample ,formoreinformation ontheNSString class thatyouused intheearliertutorials,justtypethe
name oftheclass inthedocumen tation view erwindo w’ssearchfield.
FindingInformation
UseAPIReferenceforClassInformation
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
120
Thetophitisusually theone youwant;pressReturntoselec tit,and youseetheAPIreferenceforthatclass .
FindingInformation
UseAPIReferenceforClassInformation
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
121
APIreferencedocumen tation isdesigned togiveyouquick accesstoinformation aboutindividual classe s,
including thelistofmetho dstheclass provides,andinformation such astheparentclass andadopt edprotocols.
Click“Morerelateditems”toseetoseegener alinformation abouttheclass .
TheRelatedItems popoveralso showsalistofrelatedguide s.ForNSString ,forexample ,youmigh twanta
moreconceptual overview rather than delving intoreferencematerial,soyoushould readStringProgramming
Guide .FindingInformation
UseAPIReferenceforClassInformation
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
122
Inaddition todescribing aspecific metho dorproperty,APIreferencedocumen tsalso provide anoverview of
allthetasks thataclass canperform.
FindingInformation
UseAPIReferenceforClassInformation
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
123
UseQuick HelpforContextual SourceCodeInformation
When you’rewriting codeinthesourceeditor,youhaveeasy accesstoAPIreferencedocumen tation inthe
Quick Helppane (cho oseView>Utilitie s>ShowQuick HelpInspector).TheQuickHelppane updatesasyou
writecode,showing information aboutthesymb olyou’recurrentlytyping .
FindingInformation
UseQuick HelpforContextual SourceCodeInformation
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
124
Alternatively,youcanOption-C lickasymb olinthesourceeditortodisplayapop-up windo wwith theQuick
Helpinformation.
FromtheQuick Helppane orpop-up windo w,youcanopentheAPIReferenceinthesepar atedocumen tation
view erwindo w,oryoucanview theoriginal header filecontaining thedeclar ation forthesymb olyouclick ed.FindingInformation
UseQuick HelpforContextual SourceCodeInformation
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
125
UseSample CodetoSeeReal-W orldUsage
Inaddition towrittendocumen tation, youalso haveaccesstoalibraryofsamplecode.Whene veryoulook
atquick help ,orguide sandreferenceinthedocumen tation view erwindo w,you’llseeentriesshowing relevant
sample codeprojectsforthegiventechnolo gyorclass .
Clickone ofthesample codeentriestodownload and openaprojectinXcodesothatyoucanexamine the
code.FindingInformation
UseSample CodetoSeeReal-W orldUsage
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
126
Inaddition tohaving codecommen tsthroughout theproject,some ofthelargercodesample salso have
accompan ying documen ts.Forexample ,theSpriteKitAdventureprojectisaccompanied bycode:Explained
Adventure.
FindingInformation
UseSample CodetoSeeReal-W orldUsage
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
127
InStartDevelopingiOSAppsToday,youlearned thebasics ofiOSapp developmen t.Atthispoint,you’reready
tostartdeveloping yourfirstfull-f eaturedapp.Although takinganappfromasimple concepttotheAppStore
isn’tasmall task, theprocessandpracticesyou’velearnedinthisdocumen twillguide youintherightdirection.
Hereareafewmorepointersonwher etogofromhere:
 ●Registerasadeveloper.
“Managing Accounts”inAppDistributionGuide walksyouthrough theprocessofregist eringasanApple
develop er.
 ●Learntodesignbeautifulappinterfaces.
iOSHumanInterfaceGuidelinesteache syouhowtomakeyourapp consist entwith theuser interface
conventions foriOS.
 ●Learnthelanguage .
ProgrammingwithObjective-Cdescribeshowtodefine classe s,send message s,encapsula tedata,and
accomplish avarietyofother tasks with theObjective-Cprogramming language .
 ●Learntodevelopgreatapps.
iOSAppProgrammingGuide explains theessen tialthings youmust knowand dowhen developing an
iOSapp.
 ●Learnaboutthetechnologiesavailabletoyou.
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
128WheretoGofromHere
iOSTechnologyOverviewdescribestheframew orksandother technolo giesthatareavailable toyourapp
iniOS.
 ●Accessthedocumentation.
“Finding Information” (page  116)showsyouhowtomakethemost ofthedocumen tation available toyou.
 ●Debugandtestyourapp.
“Debug YourApp”inXcodeOverviewteache syouhowtothoroughly debug and testyourapp inXcode.
 ●Shipyourapp.
AppDistributionGuide walks youthrough theprocessofprovisioning devicesfortesting and submitting
apps totheAppStore.
TakingtheToDoList ApptotheNextLevel
Theto-do listappyoujustcreatedbenefits fromnumer ousbuilt-in behaviors .Youcancontinue toexperimen t
with thisapp toenhanc eyourunderstanding ,oryoucanstartsomething new.Ifyoudocontinue with the
to-do listapp,herearesome areastoinvestiga te:
 ●Yourto-do listdisapp ears when youquit and relaunch theapp.Youmigh twanttoexplor ewaystomake
thelistpersist overtime .
 ●You’reusing thedefault appearanceforallofthecontrolsinyourapp.UIKitinclude sfeaturesforcustomizing
theappearanceofman ycontrols.Explor edifferentuser interfaceoptions using thistechnolo gy.
 ●You’vegiventheuser awaytoadd items tothelistand markthem ascomplet ed,butthere’snofacilit y
fordeleting items.Table view shavebuilt-in behavior forsupp orting editing ,including deletion and
reorderingofrows,which youmigh tconsider incorporating intoyourapp.
Asyoucontinue developing iOSapps ,you’llfind thatthereareavastnumb erofconcepts and technolo gies
lefttoexplor e,including localiza tion, accessibilit y,andappearancecustomiza tion. Startbydefining adirection
thatinterestsyou.Rememb ertoputconcepts intopracticeasyoulearnthem. When youencounteran
interesting new technolo gy,framew ork,ordesign pattern,don’tbeafraidtowriteasmall app totestitout.
Although thebreadth ofwhatyoucandomayseem intimida ting,byadopting thedivide-and-c onquer appr oach
showninthisdocumen t,you’llfind thatyouship yourfirstappquick ly.AfteryouhaveanappintheAppStore,
youcancontinue toincorporateadditional featuresincremen tally.Therearealwaysnew waystokeepyour
customers engaged and lookingforwardtothenextgreatthing .WheretoGofromHere
TakingtheToDoList ApptotheNextLevel
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
129
Thistable describesthechange stoStartDevelopingiOSAppsToday.
Notes Date
Rewrittenasamultipar ttutorialtoprovide thefundamen talskillsneeded
tocreateaniOSapp.2013-10-22
2013-10-22    |   Copyright © 2013 Apple  Inc. All Rights Reserved.
130Documen tRevision History
Apple Inc.
Copyright©2013Apple Inc.
Allrightsreserved.
Nopartofthispublic ation maybereproduced,
storedinaretrievalsystem,ortransmitt ed,inany
formorbyanymeans ,mechanic al,electronic,
phot ocopying,recording ,orother wise ,without
priorwrittenpermission ofApple Inc.,with the
following exceptions: Anyperson ishereby
author izedtostoredocumen tation onasingle
comput erforpersonal useonly and toprint
copie sofdocumen tation forpersonal use
provided thatthedocumen tation contains
Apple ’scopyrightnotic e.
Nolicense s,expressorimplied ,aregrantedwith
respecttoanyofthetechnolo gydescribedinthis
documen t.Apple retains allintellec tualproperty
rightsassociatedwith thetechnolo gydescribed
inthisdocumen t.Thisdocumen tisintended to
assist applic ation develop erstodevelop
applic ations only forApple-lab eled comput ers.
Apple Inc.
1Infinit eLoop
Cupertino,CA95014
408-99 6-1010
Apple ,theApple logo,Cocoa,CocoaTouch, iPad,
iPhone ,iPod,iPodtouch, Mac,Numb ers,
Objective-C, OSX,Quartz,and Xcodeare
trademar ksofApple Inc.,regist eredintheU.S.
and other countries.
Retina isatrademar kofApple Inc.
AppStoreisaservicemarkofApple Inc.
OpenGL isaregist eredtrademar kofSilicon
Graphics ,Inc.
iOSisatrademar korregist eredtrademar kof
CiscointheU.S.and other countriesand isused
under license .
EventhoughApplehasreviewedthisdocument,
APPLEMAKESNOWARRANTYORREPRESENT ATION,
EITHEREXPRESS ORIMPLIED,WITHRESPECT TOTHIS
DOCUMENT ,ITSQUALITY,ACCURACY,
MERCHANTABILITY,ORFITNESSFORAPARTICULAR
PURPOSE .ASARESULT,THISDOCUMENT ISPROVIDED
“ASIS,”ANDYOU,THEREADER, AREASSUMING THE
ENTIRERISKASTOITSQUALITYANDACCURACY.
INNOEVENTWILLAPPLEBELIABLEFORDIRECT,
INDIRECT ,SPECIAL, INCIDENT AL,ORCONSEQUENTIAL
DAMAGESRESULTINGFROMANYDEFECTOR
INACCURACYINTHISDOCUMENT ,evenifadvisedof
thepossibilityofsuchdamages.
THEWARRANTYANDREMEDIES SETFORTHABOVE
AREEXCLUSIVEANDINLIEUOFALLOTHERS,ORAL
ORWRITTEN,EXPRESS ORIMPLIED.NoAppledealer,
agent,oremployeeisauthorizedtomakeany
modification,extension,oraddition tothiswarranty.
Somestatesdonotallowtheexclusionorlimitation
ofimpliedwarrantiesorliabilityforincidentalor
consequen tialdamages,sotheabovelimitationor
exclusionmaynotapplytoyou.Thiswarrantygives
youspecificlegalrights,andyoumayalsohaveother
rightswhichvaryfromstatetostate.
